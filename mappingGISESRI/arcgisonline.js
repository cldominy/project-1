// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See http://js.arcgis.com/3.33/esri/copyright.txt for details.
//>>built
require({
    cache: {
        'dijit/form/VerticalRule': function() {
            define(['dojo/_base/declare', './HorizontalRule'], function(c, g) {
                return c('dijit.form.VerticalRule', g, {
                    templateString: '\x3cdiv class\x3d"dijitRuleContainer dijitRuleContainerV"\x3e\x3c/div\x3e',
                    _positionPrefix: '\x3cdiv class\x3d"dijitRuleMark dijitRuleMarkV" style\x3d"top:',
                    _isHorizontal: !1,
                });
            });
        },
        'dijit/form/VerticalRuleLabels': function() {
            define(['dojo/_base/declare', './HorizontalRuleLabels'], function(
                c,
                g
            ) {
                return c('dijit.form.VerticalRuleLabels', g, {
                    templateString: '\x3cdiv class\x3d"dijitRuleContainer dijitRuleContainerV dijitRuleLabelsContainer dijitRuleLabelsContainerV"\x3e\x3c/div\x3e',
                    _positionPrefix: '\x3cdiv class\x3d"dijitRuleLabelContainer dijitRuleLabelContainerV" style\x3d"top:',
                    _labelPrefix: '"\x3e\x3cspan class\x3d"dijitRuleLabel dijitRuleLabelV"\x3e',
                    _calcPosition: function(c) {
                        return 100 - c;
                    },
                    _isHorizontal: !1,
                });
            });
        },
        'esri/dijit/editing/Editor': function() {
            define(
                'dojo/_base/declare dojo/_base/lang dojo/_base/array dojo/_base/connect dojo/_base/kernel dojo/has dojo/query dojo/DeferredList dojo/dom-class dojo/dom-construct dojo/string dijit/_Widget dijit/_Templated ../../domUtils ../../graphicsUtils ../../geometry/Polyline ../../geometry/Polygon ../../graphic ../../undoManager ../../tasks/query ../../layers/FeatureLayer ../../layers/FeatureTemplate ../../toolbars/draw ../../toolbars/edit ../AttributeInspector ./Util ./Add ./Update ./Delete ./Cut ./Union ./toolbars/Drawing ./SelectionHelper ./TemplatePicker ../../kernel ../../config dojo/i18n!../../nls/jsapi dojo/text!./templates/Editor.html dijit/ProgressBar dojo/NodeList-dom'.split(
                    ' '
                ),
                function(
                    c,
                    g,
                    f,
                    b,
                    e,
                    h,
                    d,
                    a,
                    k,
                    n,
                    l,
                    m,
                    p,
                    r,
                    u,
                    t,
                    q,
                    v,
                    C,
                    z,
                    y,
                    x,
                    w,
                    A,
                    E,
                    B,
                    D,
                    H,
                    G,
                    F,
                    K,
                    L,
                    Q,
                    O,
                    P,
                    J,
                    I,
                    N
                ) {
                    var M = c([m, p], {
                        declaredClass: 'esri.dijit.editing.Editor',
                        widgetsInTemplate: !0,
                        templateString: N,
                        onLoad: function() {},
                        constructor: function(a, b) {
                            a = a || {};
                            this._settings = a.settings;
                            this._eConnects = [];
                        },
                        startup: function() {
                            this.inherited(arguments);
                            this._setDefaultOptions();
                            this._settings.map.setInfoWindowOnClick(!1);
                            var a = this._settings.layerInfos;
                            this.featureReductionEnabledLayers = [];
                            f.forEach(
                                a,
                                function(a) {
                                    a = a.featureLayer;
                                    a.isFeatureReductionEnabled() &&
                                        (a.disableFeatureReduction(), this.featureReductionEnabledLayers.push(
                                            a
                                        ));
                                },
                                this
                            );
                            if (
                                f.every(a, function(a) {
                                    return a.featureLayer.loaded;
                                })
                            )
                                this._initLayers(), this._connectEvents(), this._createWidgets(), this.onLoad(), (this.loaded = !0);
                            else {
                                var d = a.length;
                                f.forEach(
                                    a,
                                    function(a) {
                                        a = a.featureLayer;
                                        if (a.loaded) d--;
                                        else
                                            var k = b.connect(a, 'onLoad', this, function(a) {
                                                b.disconnect(k);
                                                k = null;
                                                d--;
                                                d ||
                                                    (this._initLayers(), this._connectEvents(), this._createWidgets(), this.onLoad(), (this.loaded = !0));
                                            });
                                    },
                                    this
                                );
                            }
                            this._reset();
                            this._enableMapClickHandler();
                        },
                        stopEditing: function(a) {
                            this._updateCurrentFeature(
                                g.hitch(this, function() {
                                    this._clearSelection(!1);
                                    a && a();
                                })
                            );
                        },
                        destroy: function() {
                            this._settings.map.setInfoWindowOnClick(!0);
                            this.drawingToolbar && this.drawingToolbar.destroy();
                            this.attributeInspector && this.attributeInspector.destroy();
                            this.templatePicker && this.templatePicker.destroy();
                            this._selectionHelper && this._selectionHelper.destroy();
                            this._drawToolbar && this._drawToolbar.deactivate();
                            this._reset();
                            this._disableMapClickHandler();
                            f.forEach(this._eConnects, b.disconnect);
                            b.disconnect(this._dtConnect);
                            b.disconnect(this._templatePickerOnSelectionChangeEvent);
                            this._layer = this._currentGraphic = this._activeType = this._activeTemplate = this._drawingTool = this._drawToolbar = this.editToolbar = this.drawingToolbar = this.attributeInspector = this.templatePicker = this.undoManager = null;
                            this._settings.map.infoWindow &&
                                this._settings.map.infoWindow.clearFeatures &&
                                this._settings.map.infoWindow.clearFeatures();
                            f.forEach(this.featureReductionEnabledLayers, function(a) {
                                a.enableFeatureReduction();
                            });
                            this.inherited(arguments);
                        },
                        _setDefaultOptions: function() {
                            this._drawToolbar =
                                this._settings.drawToolbar || new w(this._settings.map);
                            this._settings.drawToolbar = this._drawToolbar;
                            this.editToolbar =
                                this._settings.editToolbar ||
                                new A(this._settings.map, {
                                    textSymbolEditorHolder: this.domNode,
                                });
                            this._settings.editToolbar = this.editToolbar;
                            this._settings.toolbarVisible =
                                this._settings.toolbarVisible || !1;
                            this._settings.toolbarOptions = g.mixin({
                                    reshapeVisible: !1,
                                    cutVisible: !1,
                                    mergeVisible: !1,
                                },
                                this._settings.toolbarOptions
                            );
                            this._settings.createOptions = g.mixin({
                                    polylineDrawTools: [M.CREATE_TOOL_POLYLINE],
                                    polygonDrawTools: [M.CREATE_TOOL_POLYGON],
                                    editAttributesImmediately: !0,
                                },
                                this._settings.createOptions
                            );
                            this._settings.singleSelectionTolerance =
                                this._settings.singleSelectionTolerance || 3;
                            this._settings.maxUndoRedoOperations =
                                this._settings.maxUndoRedoOperations || 10;
                            this._settings.editor = this;
                            this._usePopup = this._settings.usePopup = this._settings.map
                                .infoWindow._setPagerCallbacks ?
                                !0 :
                                !1;
                            this._datePackage = this._settings.datePackage;
                            var a = J.defaults;
                            this._settings.geometryService =
                                this._settings.geometryService || a.geometryService;
                            a.geometryService =
                                a.geometryService || this._settings.geometryService;
                        },
                        _initLayers: function() {
                            this._settings.layers = [];
                            this._settings.userIds = {};
                            this._settings.createOnlyLayer = {};
                            f.forEach(
                                this._settings.layerInfos,
                                function(a) {
                                    if (a.featureLayer && a.featureLayer.loaded) {
                                        this._settings.layers.push(a.featureLayer);
                                        var b = a.featureLayer.id;
                                        a.featureLayer.credential &&
                                            (this._settings.userIds[b] =
                                                a.featureLayer.credential.userId);
                                        a.userId && (this._settings.userIds[b] = a.userId);
                                        var d = a.featureLayer.getEditCapabilities();
                                        this._settings.createOnlyLayer[b] = d.canCreate &&
                                            !d.canUpdate ?
                                            !0 :
                                            !1;
                                        this._isTextSymbolPointLayer(a.featureLayer) &&
                                            (a.disableAttributeUpdate = !0);
                                    }
                                },
                                this
                            );
                        },
                        _reset: function() {
                            this._hideAttributeInspector();
                            this.editToolbar.deactivate();
                            this._editVertices = !0;
                            this._drawingTool = this._activeTemplate = this._activeType = this._currentGraphic = this._layer = null;
                            this._attributeChanged = !1;
                        },
                        _saveFeatureOnClient: function(a) {
                            var d = this.templatePicker.getSelected(),
                                k;
                            k = d.template ?
                                d.featureLayer.renderer.getSymbol(d.template.prototype) :
                                d.symbolInfo.symbol;
                            this._tempGraphic = new v(a, k, null, null);
                            this._tempGraphic.setAttributes(
                                g.mixin({}, d.template.prototype.attributes)
                            );
                            k = this._settings.map;
                            k.graphics.add(this._tempGraphic);
                            a = this._findCenterPoint(a);
                            this._createAttributeInspector();
                            k.infoWindow.setTitle(
                                d.featureLayer ?
                                d.featureLayer.name :
                                I.widgets.attributeInspector.NLS_title
                            );
                            this.attributeInspector.showFeature(
                                this._tempGraphic,
                                d.featureLayer
                            );
                            this._showInfoWindow(a, k.getInfoWindowAnchor(a));
                            if (
                                this._settings.createOnlyLayer[d.featureLayer.id] ||
                                this._settings.invalidTemplate
                            )
                                this._infoWindowHideEvent = b.connect(
                                    k.infoWindow,
                                    'onHide',
                                    this,
                                    '_infoWindowHide'
                                );
                            b.disconnect(this._templatePickerOnSelectionChangeEvent);
                            this.templatePicker.clearSelection();
                            this._drawToolbar.deactivate();
                            this._enableMapClickHandler();
                            this.drawingToolbar && this.drawingToolbar.deactivate();
                            this._templatePickerOnSelectionChangeEvent = b.connect(
                                this.templatePicker,
                                'onSelectionChange',
                                g.hitch(this, '_onCreateFeature')
                            );
                        },
                        _saveAttributesOnClient: function(a, b, d) {
                            this._tempGraphic.attributes[b] = 'number' === typeof d &&
                                isNaN(d) ?
                                null :
                                d;
                        },
                        _infoWindowHide: function() {
                            this._createFeature(
                                this._tempGraphic.geometry,
                                this._tempGraphic.attributes
                            );
                            b.disconnect(this._infoWindowHideEvent);
                        },
                        _createFeature: function(a, b) {
                            this._editClickPoint = this._findCenterPoint(a);
                            a.rings ?
                                this._simplify(
                                    a,
                                    g.hitch(this, function(a) {
                                        this._drawingTool !== x.TOOL_AUTO_COMPLETE_POLYGON ?
                                            this._applyEdits(
                                                [{
                                                    layer: this._layer,
                                                    adds: [this._createGraphic(a, b)],
                                                }, ],
                                                g.hitch(this, function() {
                                                    this._chainAttachment(
                                                        this._oEdits[0].adds[0].attributes[
                                                            this._oEdits[0].layer.objectIdField
                                                        ],
                                                        this._oEdits[0].layer
                                                    );
                                                })
                                            ) :
                                            this._autoComplete(
                                                a,
                                                g.hitch(this, function(a) {
                                                    a &&
                                                        a.length &&
                                                        this._applyEdits(
                                                            [{
                                                                layer: this._layer,
                                                                adds: f.map(
                                                                    a,
                                                                    g.hitch(this, function(a) {
                                                                        return this._createGraphic(a, b);
                                                                    })
                                                                ),
                                                            }, ],
                                                            function() {
                                                                this._chainAttachment(
                                                                    this._oEdits[0].adds[0].attributes[
                                                                        this._oEdits[0].layer.objectIdField
                                                                    ],
                                                                    this._oEdits[0].layer
                                                                );
                                                            }
                                                        );
                                                })
                                            );
                                    })
                                ) :
                                this._applyEdits(
                                    [{
                                        layer: this._layer,
                                        adds: [this._createGraphic(a, b)],
                                    }, ],
                                    g.hitch(this, function() {
                                        this._chainAttachment(
                                            this._oEdits[0].adds[0].attributes[
                                                this._oEdits[0].layer.objectIdField
                                            ],
                                            this._oEdits[0].layer
                                        );
                                        this._layer &&
                                            this._layer.renderer &&
                                            'heatmap' === this._layer.renderer.type &&
                                            this._layer.refresh();
                                    })
                                );
                        },
                        _chainAttachment: function(a, b) {
                            this.attributeInspector &&
                                this.attributeInspector._attachmentEditor &&
                                this.attributeInspector._attachmentEditor._tempUpload &&
                                this.attributeInspector._attachmentEditor._chainAttachment(
                                    a,
                                    b
                                );
                        },
                        _updateCurrentFeature: function(a) {
                            var b = this._isModified();
                            b ? this._updateFeature(b, a) : a && a(!1);
                        },
                        _updateFeature: function(a, b, d) {
                            var k = a.geometry,
                                e = a.getLayer();
                            (e.hasZ && !e.enableZDefaults) ||
                            (e.hasM && !e.allowUpdateWithoutMValues) ||
                            (d && !this._isModified()) ?
                            ((d = new v()), d.setAttributes(
                                a.attributes
                            ), this._applyEdits(
                                [{ layer: a.getLayer(), updates: [d] }],
                                b
                            )) :
                            k.rings ?
                                this._simplify(
                                    k,
                                    g.hitch(this, function(d) {
                                        this._applyEdits(
                                            [{
                                                layer: a.getLayer(),
                                                updates: [g.mixin(a, { geometry: d })],
                                            }, ],
                                            b
                                        );
                                    })
                                ) :
                                this._applyEdits(
                                    [{ layer: a.getLayer(), updates: [a] }],
                                    b
                                );
                        },
                        _deleteFeature: function(a, b) {
                            if (this._settings.invalidTemplate && a === this._tempGraphic)
                                this._settings.map.graphics.remove(
                                    this._tempGraphic
                                ), this._hideAttributeInspector();
                            else {
                                var d = [];
                                a
                                    ?
                                    d.push({ layer: a.getLayer(), deletes: [a] }) :
                                    ((d = f.map(
                                            f.filter(this._settings.layers, function(a) {
                                                return 0 < a.getSelectedFeatures().length;
                                            }),
                                            function(a) {
                                                return { layer: a, deletes: a.getSelectedFeatures() };
                                            }
                                        )) &&
                                        d.length) ||
                                    !this._currentGraphic ||
                                    d.push({
                                        layer: this._layer,
                                        deletes: [this._currentGraphic],
                                    });
                                this._applyEdits(d, b);
                            }
                        },
                        _stopEditing: function(a, b, d, k) {
                            r.hide(this.progressBar.domNode);
                            this._settings.createOnlyLayer[a.id] || this._undoRedoAdd();
                            var e;
                            !0 === a._isSelOnly || 1 === a.mode || 6 === a.mode ?
                                b &&
                                b.length &&
                                (this.templatePicker.clearSelection(), (e = new z()), (e.objectIds = [
                                        b[0].objectId,
                                    ]), this._settings.createOnlyLayer[a.id] ||
                                    this._settings.invalidTemplate ?
                                    this._settings.map.graphics.remove(this._tempGraphic) :
                                    this._selectFeatures(
                                        [a],
                                        e,
                                        g.hitch(this, '_onEditFeature')
                                    )) :
                                ((e = this._selectionHelper.findMapService(
                                        this._settings.map,
                                        a
                                    )) && e.refresh(), b &&
                                    b.length &&
                                    (this.templatePicker.clearSelection(), this._settings
                                        .createOnlyLayer[a.id] || this._settings.invalidTemplate ?
                                        this._settings.map.graphics.remove(this._tempGraphic) :
                                        B.findFeatures(
                                            b,
                                            a,
                                            g.hitch(this, '_onEditFeature')
                                        )));
                            k &&
                                k.length &&
                                (this._clearSelection(!0), this._undoRedo &&
                                    (e = this._selectionHelper.findMapService(
                                        a,
                                        this._settings.map
                                    )) &&
                                    e.refresh());
                            this._undoRedo &&
                                d &&
                                d.length &&
                                ((e = this._selectionHelper.findMapService(
                                        a,
                                        this._settings.map
                                    )) &&
                                    e.refresh(), this.attributeInspector.refresh(), (this._undoRedo = !1));
                            this.drawingToolbar && this.drawingToolbar._updateUI();
                            this._undoRedo = !1;
                            this._settings.invalidTemplate = !1;
                        },
                        _undoRedoAdd: function() {
                            this._settings._isApplyEditsCall = !1;
                            if (this._settings.undoManager) {
                                var a = this._edits && this._edits.length ?
                                    this._edits[0] :
                                    null;
                                if (a) {
                                    var b = a.adds || [],
                                        d = a.updates || [],
                                        k = a.deletes || [],
                                        e = a.preUpdates || [],
                                        a = { featureLayer: a.layer };
                                    'CUT' === this._activeTool ?
                                        b.length &&
                                        d.length &&
                                        e.length &&
                                        this.undoManager.add(
                                            new F(
                                                g.mixin(a, {
                                                    preUpdatedGraphics: e,
                                                    addedGraphics: b,
                                                    postUpdatedGraphics: d,
                                                })
                                            )
                                        ) :
                                        'UNION' === this._activeTool ?
                                        k.length &&
                                        d.length &&
                                        e.length &&
                                        this.undoManager.add(
                                            new K(
                                                g.mixin(a, {
                                                    preUpdatedGraphics: e,
                                                    deletedGraphics: k,
                                                    postUpdatedGraphics: d,
                                                })
                                            )
                                        ) :
                                        b.length ?
                                        this.undoManager.add(
                                            new D(g.mixin(a, { addedGraphics: b }))
                                        ) :
                                        k.length ?
                                        this.undoManager.add(
                                            new G(g.mixin(a, { deletedGraphics: k }))
                                        ) :
                                        d.length &&
                                        (this._rollbackGraphic || e.length) &&
                                        this.undoManager.add(
                                            new H(
                                                g.mixin(a, {
                                                    preUpdatedGraphics: e.length ?
                                                        e :
                                                        [this._rollbackGraphic],
                                                    postUpdatedGraphics: d,
                                                })
                                            )
                                        );
                                    this._rollbackGraphic = this._edits = null;
                                }
                            }
                        },
                        _activateDrawToolbar: function(a) {
                            this._layer = a.featureLayer;
                            this._activeType = a.type;
                            this._drawingTool = (this._activeTemplate = a.template) ?
                                this._activeTemplate.drawingTool :
                                null;
                            this._drawTool = this._toDrawTool(
                                this._drawingTool,
                                a.featureLayer
                            );
                            b.disconnect(this._dtConnect);
                            var d = this._layer.fields;
                            this._settings.invalidTemplate = !1;
                            if (this._activeTemplate && this._activeTemplate.prototype) {
                                var k = g.mixin({}, this._activeTemplate.prototype.attributes),
                                    d = d.filter(function(a) {
                                        return !1 === a.nullable && !0 === a.editable;
                                    });
                                this._settings.invalidTemplate = d.some(function(a) {
                                    a = k[a.name];
                                    return null === a || void 0 === a;
                                });
                            }
                            this._dtConnect = this._settings.createOnlyLayer[
                                    a.featureLayer.id
                                ] || this._settings.invalidTemplate ?
                                b.connect(
                                    this._drawToolbar,
                                    'onDrawEnd',
                                    this,
                                    '_saveFeatureOnClient'
                                ) :
                                b.connect(
                                    this._drawToolbar,
                                    'onDrawEnd',
                                    this,
                                    '_createFeature'
                                );
                            this.editToolbar.deactivate();
                            this._disableMapClickHandler();
                            this.drawingToolbar ?
                                this.drawingToolbar.activateEditing(
                                    this._drawTool,
                                    this._layer
                                ) :
                                this._drawToolbar.activate(this._drawTool);
                        },
                        _activateEditToolbar: function(a, b) {
                            var d = a.getLayer(),
                                k = d ? d.geometryType : null,
                                e = this._isTextSymbolPoint(a),
                                c = A.MOVE;
                            'esriGeometryPoint' !== k && !0 === this._isNotesFeature(a) ?
                                ((c = c | A.ROTATE | A.SCALE), (this._editVertices = !1)) :
                                'esriGeometryPoint' !== k && !0 === this._editVertices ?
                                ((c = c | A.ROTATE | A.SCALE), (this._editVertices = !1)) :
                                e ?
                                ((c =
                                    c |
                                    A.ROTATE |
                                    A.SCALE |
                                    A.EDIT_TEXT), (this._editVertices = !1)) :
                                ((c |= A.EDIT_VERTICES), (this._editVertices = !0));
                            this._attributeChanged = this._isModified();
                            this._rollbackGraphic = new v(a.toJson());
                            var k = d.getEditCapabilities({
                                    feature: a,
                                    userId: this._settings.userIds[d.id],
                                }),
                                h = f.filter(this._settings.layerInfos, function(a) {
                                    return a.featureLayer.layerId === d.layerId;
                                })[0];
                            k.canUpdate &&
                                !h.disableGeometryUpdate &&
                                k.canUpdateGeometry &&
                                (this.editToolbar.activate(c, a), e &&
                                    (this.editToolbar._textEditor._addTextBox(a), this
                                        .editToolbar._textSymbolEditor &&
                                        this.editToolbar._textSymbolEditor.hide()));
                            this._settings.map.infoWindow.isShowing ||
                                this._updateAttributeDisabled(a) ||
                                ((a =
                                    (b && b.screenPoint) ||
                                    this._findCenterPoint(a)), this._showInfoWindow(
                                    a,
                                    this._settings.map.getInfoWindowAnchor(a)
                                ));
                        },
                        _createGraphic: function(a, b) {
                            var d = new v(
                                a,
                                (this._activeType && this._activeType.symbol) ||
                                this._layer.defaultSymbol,
                                b
                            );
                            this._activeTemplate || b ?
                                (d.attributes =
                                    b ||
                                    g.mixin({}, this._activeTemplate.prototype.attributes)) :
                                ((d.attributes = d.attributes || []), f.forEach(
                                    this._layer.fields,
                                    function(a) {
                                        d.attributes[a.name] = null;
                                    },
                                    this
                                ));
                            return d;
                        },
                        _connectEvents: function() {
                            var a = this._settings.layers;
                            f.forEach(
                                a,
                                function(a) {
                                    this._connect(
                                        a,
                                        'onEditsComplete',
                                        g.hitch(this, '_stopEditing', a)
                                    );
                                },
                                this
                            );
                            f.forEach(
                                a,
                                function(a) {
                                    this._connect(
                                        a,
                                        'onBeforeApplyEdits',
                                        g.hitch(this, function() {
                                            r.show(this.progressBar.domNode);
                                            this._settings._isApplyEditsCall = !0;
                                        })
                                    );
                                },
                                this
                            );
                            this._connect(
                                this.editToolbar,
                                'onGraphicClick',
                                g.hitch(this, '_activateEditToolbar')
                            );
                            this._connect(
                                this.editToolbar,
                                'onGraphicFirstMove',
                                g.hitch(this, '_hideAttributeInspector')
                            );
                            this._connect(
                                this.editToolbar,
                                'onVertexFirstMove',
                                g.hitch(this, '_hideAttributeInspector')
                            );
                            this._connect(
                                this.editToolbar,
                                'onScaleStart',
                                g.hitch(this, '_hideAttributeInspector')
                            );
                            this._connect(
                                this.editToolbar,
                                'onRotateStart',
                                g.hitch(this, '_hideAttributeInspector')
                            );
                        },
                        _connect: function(a, d, k) {
                            this._eConnects.push(b.connect(a, d, k));
                        },
                        _createWidgets: function() {
                            this._selectionHelper = new Q(this._settings);
                            this._createTemplatePicker();
                            this._createAttributeInspector();
                            this._createDrawingToolbar();
                            this._createUndoRedoManager();
                        },
                        _createTemplatePicker: function() {
                            if (this._settings.templatePicker)
                                (this.templatePicker = this._settings.templatePicker), r.hide(
                                    this.templatePickerDiv
                                );
                            else {
                                var a = f.filter(this._settings.layers, function(a) {
                                    return a.getEditCapabilities().canCreate;
                                });
                                this.templatePicker = new O({
                                        class: 'esriTemplatePicker',
                                        featureLayers: a,
                                        showTooltip: !0,
                                        maxLabelLength: this._settings.typesCharacterLimit,
                                        columns: 'auto',
                                        rows: 'auto',
                                    },
                                    this.templatePickerDiv
                                );
                                this.templatePicker.startup();
                                this._settings.templatePicker = this.templatePicker;
                            }
                            this._templatePickerOnSelectionChangeEvent = b.connect(
                                this.templatePicker,
                                'onSelectionChange',
                                g.hitch(this, '_onCreateFeature')
                            );
                        },
                        _createAttributeInspector: function() {
                            var a = this._settings.map;
                            this._settings.attributeInspector ?
                                ((this._customAttributeInspector = !0), (this.attributeInspector = this._settings.attributeInspector)) :
                                ((this._customAttributeInspector = !1), (this.attributeInspector = new E({
                                            layerInfos: this._settings.layerInfos,
                                            hideNavButtons: this._usePopup,
                                            datePackage: this._datePackage,
                                        },
                                        n.create('div')
                                    )), this.attributeInspector.startup(), a.infoWindow.setContent(
                                        this.attributeInspector.domNode
                                    ), a.infoWindow.setTitle(
                                        I.widgets.attributeInspector.NLS_title
                                    ), a.infoWindow.resize(350, 375), e
                                    .query('.esriAttributeInspector .atiLayerName')
                                    .style({ display: 'none' }));
                            this._connect(
                                this.attributeInspector,
                                'onDelete',
                                g.hitch(this, '_deleteFeature')
                            );
                            this._connect(
                                this.attributeInspector,
                                'onNext',
                                g.hitch(this, function(a) {
                                    this._updateCurrentFeature(
                                        g.hitch(this, function() {
                                            this._attributeChanged = !1;
                                            this._onEditFeature(a);
                                        })
                                    );
                                })
                            );
                            this._usePopup &&
                                a.infoWindow._setPagerCallbacks(
                                    this.attributeInspector,
                                    g.hitch(this.attributeInspector, 'previous'),
                                    g.hitch(this.attributeInspector, 'next')
                                );
                            this._connect(
                                this.attributeInspector,
                                'onAttributeChange',
                                g.hitch(this, function(a, b, d) {
                                    if (
                                        this._settings.createOnlyLayer[this._layer.id] ||
                                        this._settings.invalidTemplate
                                    )
                                        this._saveAttributesOnClient(a, b, d);
                                    else {
                                        var k = a.getLayer();
                                        (k = f.filter(k.fields, function(a) {
                                            return a.name === b;
                                        })[0]) &&
                                        '' === d &&
                                            (d = null);
                                        this._rollbackGraphic = new v(g.clone(a.toJson()));
                                        this.attributeInspector._rollbackInfo = {
                                            field: k,
                                            graphic: this._rollbackGraphic,
                                        };
                                        this._currentGraphic.attributes[b] = 'number' ===
                                            typeof d && isNaN(d) ?
                                            null :
                                            d;
                                        this._currentGraphic.setAttributes(
                                            this._currentGraphic.attributes
                                        );
                                        this._updateFeature(this._currentGraphic, null, !0);
                                        this._attributeChanged = !1;
                                    }
                                })
                            );
                        },
                        _createDrawingToolbar: function() {
                            !0 === this._settings.toolbarVisible &&
                                (this.drawingToolbar = new L({
                                        class: 'esriDrawingToolbar',
                                        drawToolbar: this._drawToolbar,
                                        editToolbar: this.editToolbar,
                                        settings: this._settings,
                                        onDelete: g.hitch(this, '_deleteFeature'),
                                        onApplyEdits: g.hitch(this, '_applyEdits'),
                                        onShowAttributeInspector: g.hitch(this, '_onEditFeature'),
                                    },
                                    this.drawingToolbarDiv
                                ));
                        },
                        _createUndoRedoManager: function() {
                            if (this._settings.enableUndoRedo || this._settings.undoManager)
                                (this._settings.enableUndoRedo = !0), (this.undoManager = this._settings.undoManager), this
                                .undoManager ||
                                (this.undoManager = this._settings.undoManager = new C({
                                    maxOperations: this._settings.maxUndoRedoOperations,
                                })), this._connect(
                                    this.undoManager,
                                    'onUndoComplete',
                                    g.hitch(this, this._updateUndoRedoOperations)
                                ), this._connect(
                                    this.undoManager,
                                    'onRedoComplete',
                                    g.hitch(this, this._updateUndoRedoOperations)
                                ), this._connect(
                                    document,
                                    'onkeypress',
                                    g.hitch(this, function(a) {
                                        if (a.metaKey || a.ctrlKey)
                                            'z' === a.charOrCode && this._undo(), 'y' ===
                                            a.charOrCode && this._redo();
                                    })
                                );
                        },
                        _updateUndoRedoOperations: function(a) {
                            if (a && a.addedIds) {
                                var b;
                                for (b = 0; b < this.undoManager.length; b++) {
                                    var d = this.undoManager.get(b);
                                    d &&
                                        a.layer === d._featureLayer &&
                                        d.updateObjectIds(a.oldIds, a.addedIds);
                                }
                            }
                            a &&
                                'Update Features' === a.operation.label &&
                                this.attributeInspector.refresh();
                        },
                        _enableMapClickHandler: function() {
                            this._mapClickHandler = b.connect(
                                this._settings.map,
                                'onClick',
                                g.hitch(this, function(a) {
                                    this._drawToolbar._geometryType ||
                                        ('SELECT' === this._activeTool ?
                                            (this._activeTool = '') :
                                            this._updateCurrentFeature(
                                                g.hitch(this, function() {
                                                    this._reset();
                                                    this._updateSelection(a);
                                                })
                                            ));
                                })
                            );
                        },
                        _disableMapClickHandler: function() {
                            b.disconnect(this._mapClickHandler);
                        },
                        _onCreateFeature: function() {
                            var a = this.templatePicker.getSelected();
                            a
                                ?
                                this._updateCurrentFeature(
                                    g.hitch(this, function() {
                                        this._currentGraphic && this._clearSelection(!1);
                                        this._reset();
                                        this._activateDrawToolbar(a);
                                    })
                                ) :
                                (this._reset(), b.disconnect(
                                        this._dtConnect
                                    ), this._drawToolbar.deactivate(), this._enableMapClickHandler(), this
                                    .drawingToolbar && this.drawingToolbar.deactivate());
                        },
                        _isTextSymbolPoint: function(a) {
                            if (
                                'point' === a.geometry.type ||
                                'multipoint' === a.geometry.type
                            ) {
                                var b = a.getLayer(),
                                    d = b.renderer;
                                a = a.symbol || b._getSymbol(a);
                                !a &&
                                    (d.hasVisualVariables('sizeInfo', !1) ||
                                        d.hasVisualVariables('colorInfo', !1) ||
                                        d.hasVisualVariables('opacityInfo', !1)) &&
                                    d.addBreak &&
                                    d.infos &&
                                    1 === d.infos.length &&
                                    (a = d.infos[0].symbol || d.defaultSymbol);
                                if (a && 'textsymbol' === a.type) return !0;
                            }
                            return !1;
                        },
                        _isTextSymbolPointLayer: function(a) {
                            return 'esriGeometryPoint' === a.geometryType &&
                                a.renderer &&
                                a.renderer._symbols &&
                                a.renderer._symbols[0] &&
                                a.renderer._symbols[0].symbol &&
                                'textsymbol' === a.renderer._symbols[0].symbol.type ?
                                !0 :
                                !1;
                        },
                        _updateAttributeDisabled: function(a) {
                            a = a.getLayer();
                            if (!a) return !1;
                            var b, d, k = !1;
                            for (b = 0; b < this._settings.layerInfos.length; b++)
                                if (((d = this._settings.layerInfos[b]), d.featureLayer == a)) {
                                    k = d.disableAttributeUpdate;
                                    break;
                                }
                            return k;
                        },
                        _onEditFeature: function(a, b) {
                            if ((a = (g.isArray(a) ? a[0] : a) || null)) {
                                var d;
                                this._layer = a.getLayer();
                                if (!this._customAttributeInspector &&
                                    !this._updateAttributeDisabled(a)
                                ) {
                                    b = b || this._editClickPoint || this._findCenterPoint(a);
                                    1 < this._currentFeatureCount ?
                                        ((d = this._popupFeatures.indexOf(
                                            a
                                        )), (d = l.substitute(I.widgets.popup.NLS_pagingInfo, {
                                            index: d + 1,
                                            total: this._currentFeatureCount,
                                        }))) :
                                        (d = this._layer ?
                                            this._layer.name :
                                            I.widgets.attributeInspector.NLS_title);
                                    this._settings.map.infoWindow.setTitle(d);
                                    if (
                                        this.drawingToolbar ||
                                        !this._settings.map.infoWindow.isShowing
                                    )
                                        this.attributeInspector.refresh(), this._showInfoWindow(
                                            b,
                                            this._settings.map.getInfoWindowAnchor(b)
                                        );
                                    this._editClickPoint = null;
                                }
                                a !== this._currentGraphic &&
                                    ((this._editVertices = !0), (this._currentGraphic = a), a.getDojoShape() &&
                                        a.getDojoShape().moveToFront(), (b = this._layer
                                            .hasM), (this._layer.hasZ &&
                                            !this._layer.enableZDefaults) ||
                                        (b && !this._layer.allowUpdateWithoutMValues) ||
                                        this._activateEditToolbar(a));
                            }
                        },
                        _applyEdits: function(b, d) {
                            b = b || [];
                            if (!(0 >= b.length)) {
                                this._edits = this._oEdits = b;
                                var k = [];
                                f.forEach(b, function(a) {
                                    a.layer &&
                                        k.push(a.layer.applyEdits(a.adds, a.updates, a.deletes));
                                });
                                0 < k.length &&
                                    (this._deferredsList = new a(k).addCallback(
                                        g.hitch(this, function() {
                                            r.hide(this.progressBar.domNode);
                                            d && d();
                                            var a = this._settings.map;
                                            a &&
                                                a.infoWindow.reposition &&
                                                a.infoWindow.isShowing &&
                                                a.infoWindow.reposition();
                                        })
                                    ));
                            }
                        },
                        _undo: function() {
                            this._settings.undoManager &&
                                !this._settings._isApplyEditsCall &&
                                (this.editToolbar.deactivate(), (this._undoRedo = !0), this._settings.undoManager.undo());
                        },
                        _redo: function() {
                            this._settings.undoManager &&
                                !this._settings._isApplyEditsCall &&
                                (this.editToolbar.deactivate(), (this._undoRedo = !0), this._settings.undoManager.redo());
                        },
                        _simplify: function(a, b) {
                            q.prototype.isSelfIntersecting(a) ?
                                this._settings.geometryService.simplify([a], function(a) {
                                    var d = a && a.length ? a[0] : d;
                                    b && b(d);
                                }) :
                                b && b(a);
                        },
                        _autoComplete: function(a, b) {
                            var d = this._getLayers('esriGeometryPolygon'),
                                k = new z();
                            k.geometry = a;
                            k.returnGeometry = !0;
                            this._selectFeatures(
                                d,
                                k,
                                g.hitch(this, function(d) {
                                    !d || 0 >= d.length ?
                                        b && b([a]) :
                                        this._settings.geometryService.autoComplete(
                                            u.getGeometries(d),
                                            this._toPolylines([k.geometry]),
                                            function(a) {
                                                b && b(a);
                                            }
                                        );
                                })
                            );
                        },
                        _getLayers: function(a) {
                            return f.filter(this._settings.layers, function(b) {
                                return b.geometryType === a;
                            });
                        },
                        _selectFeatures: function(a, b, d, k) {
                            this._selectionHelper.selectFeatures(
                                a,
                                b,
                                k || y.SELECTION_NEW,
                                d
                            );
                        },
                        _updateSelection: function(a) {
                            var b = a.mapPoint,
                                d = a.graphic,
                                k = this._settings.layerInfos,
                                e;
                            this._selectionHelper.selectFeaturesByGeometry(
                                this._settings.layers,
                                b,
                                y.SELECTION_NEW,
                                g.hitch(this, function(a) {
                                    var c = f.some(
                                        a,
                                        g.hitch(this, function(a) {
                                            return a == d;
                                        })
                                    );
                                    if (d && !c)
                                        if (((c = d.getLayer()), this._isValidLayer(c))) {
                                            var h = new z();
                                            h.objectIds = [d.attributes[c.objectIdField]];
                                            this._selectionHelper.selectFeatures(
                                                [c],
                                                h,
                                                y.SELECTION_ADD,
                                                g.hitch(this, function(d) {
                                                    d &&
                                                        d.length &&
                                                        ((d = d.concat(a)), (e = B.sortFeaturesById(
                                                            k,
                                                            d
                                                        )), this._updatePopupButtons(
                                                            e
                                                        ), this._onEditFeature(e, b));
                                                })
                                            );
                                        } else
                                            a && a.length ?
                                            ((e = B.sortFeaturesById(
                                                k,
                                                a
                                            )), this._updatePopupButtons(
                                                e
                                            ), this._onEditFeature(e, b)) :
                                            this._clearSelection();
                                    else
                                        a && a.length ?
                                        ((e = B.sortFeaturesById(
                                            k,
                                            a
                                        )), this._updatePopupButtons(e), this._onEditFeature(
                                            e,
                                            b
                                        )) :
                                        this._clearSelection();
                                })
                            );
                            d &&
                                this._isTextSymbolPoint(d) &&
                                this._isValidLayer(d.getLayer()) &&
                                this.editToolbar.activate(
                                    0 | A.MOVE | A.ROTATE | A.SCALE | A.EDIT_TEXT,
                                    d
                                );
                        },
                        _updatePopupButtons: function(a) {
                            if (this._usePopup && a) {
                                var b = a.length;
                                f.forEach(
                                    [
                                        this._settings.map.infoWindow._prevFeatureButton,
                                        this._settings.map.infoWindow._nextFeatureButton,
                                    ],
                                    g.hitch(this, function(a) {
                                        1 < b ? k.remove(a, 'hidden') : k.add(a, 'hidden');
                                    })
                                );
                                var d = 1 < b ? 'block' : 'none';
                                e
                                    .query('.esriAttributeInspector .atiLayerName')
                                    .style({ display: d });
                                this._currentFeatureCount = b;
                                this._popupFeatures = a;
                            } else this._currentFeatureCount = this._popupFeatures = null;
                        },
                        _clearSelection: function(a) {
                            this._currentFeatureCount = 0;
                            this._popupFeatures = null;
                            this._selectionHelper.clearSelection(a || !1);
                            this._reset();
                        },
                        _findCenterPoint: function(a) {
                            a = a.geometry || a;
                            var b;
                            switch (a.type) {
                                case 'point':
                                    b = a;
                                    break;
                                case 'polyline':
                                    b = a.getPoint(0, Math.ceil(a.paths[0].length / 2));
                                    break;
                                case 'polygon':
                                    (b = a.rings.length - 1), (b = a.getPoint(
                                        b,
                                        a.rings[b].length - 1
                                    ));
                            }
                            return this._settings.map.toScreen(b);
                        },
                        _hideAttributeInspector: function() {
                            !this._customAttributeInspector &&
                                this._settings.map.infoWindow &&
                                this._settings.map.infoWindow.hide();
                        },
                        _toPolylines: function(a) {
                            return f.map(a, function(a) {
                                var b = new t(a.spatialReference);
                                f.forEach(a.rings, function(a) {
                                    b.addPath(a);
                                });
                                return b;
                            });
                        },
                        _isNotesFeature: function(a) {
                            var b = a.getLayer(),
                                d = b ? b.types || null : null;
                            if (!d) return !1;
                            var k = a.attributes[b.typeIdField],
                                e;
                            f.some(d, function(a) {
                                return a.id === k ? ((e = a.templates), !0) : !1;
                            });
                            return e ?
                                (a = e[0] || null) ?
                                this._isShapeTool(a.drawingTool) ? !0 : !1 :
                                !1 :
                                !1;
                        },
                        _isValidLayer: function(a) {
                            var b, d = this._settings.layerInfos;
                            for (b = 0; b < d.length; b++) {
                                var k = d[b];
                                if (a.id == (k.featureLayer ? k.featureLayer.id : k.layerId))
                                    return !0;
                            }
                            return !1;
                        },
                        _isShapeTool: function(a) {
                            switch (a) {
                                case x.TOOL_ARROW:
                                    return w.ARROW;
                                case x.TOOL_LEFT_ARROW:
                                    return w.LEFT_ARROW;
                                case x.TOOL_RIGHT_ARROW:
                                    return w.RIGHT_ARROW;
                                case x.TOOL_UP_ARROW:
                                    return w.UP_ARROW;
                                case x.TOOL_DOWN_ARROW:
                                    return w.DOWN_ARROW;
                                case x.TOOL_CIRCLE:
                                    return w.CIRCLE;
                                case x.TOOL_ELLIPSE:
                                    return w.ELLIPSE;
                                case x.TOOL_TRIANGLE:
                                    return w.TRIANGLE;
                                case x.TOOL_RECTANGLE:
                                    return w.RECTANGLE;
                                default:
                                    return null;
                            }
                        },
                        _toDrawTool: function(a, b) {
                            b = b.geometryType;
                            switch (a) {
                                case x.TOOL_POINT:
                                    return w.POINT;
                                case x.TOOL_ARROW:
                                    return w.ARROW;
                                case x.TOOL_LEFT_ARROW:
                                    return w.LEFT_ARROW;
                                case x.TOOL_RIGHT_ARROW:
                                    return w.RIGHT_ARROW;
                                case x.TOOL_UP_ARROW:
                                    return w.UP_ARROW;
                                case x.TOOL_DOWN_ARROW:
                                    return w.DOWN_ARROW;
                                case x.TOOL_CIRCLE:
                                    return w.CIRCLE;
                                case x.TOOL_ELLIPSE:
                                    return w.ELLIPSE;
                                case x.TOOL_TRIANGLE:
                                    return w.TRIANGLE;
                                case x.TOOL_RECTANGLE:
                                    return w.RECTANGLE;
                                case x.TOOL_LINE:
                                    return w.POLYLINE;
                                case x.TOOL_POLYGON:
                                    return w.POLYGON;
                                case x.TOOL_FREEHAND:
                                    return 'esriGeometryPolyline' === b ?
                                        w.FREEHAND_POLYLINE :
                                        w.FREEHAND_POLYGON;
                                default:
                                    return (a = w.POINT), 'esriGeometryPolyline' === b ?
                                        ((a = w.POLYLINE), this._settings.createOptions
                                            .polylineDrawTools[0] ===
                                            M.CREATE_TOOL_FREEHAND_POLYLINE &&
                                            (a = w.FREEHAND_POLYLINE)) :
                                        'esriGeometryPolygon' === b &&
                                        ((a = w.POLYGON), this._settings.createOptions
                                            .polygonDrawTools[0] ===
                                            M.CREATE_TOOL_FREEHAND_POLYGON &&
                                            (a = w.FREEHAND_POLYGON)), a;
                            }
                        },
                        _isModified: function() {
                            var a = this.editToolbar.getCurrentState();
                            return (a.isModified || this._attributeChanged) && a.graphic ?
                                a.graphic :
                                null;
                        },
                        _showInfoWindow: function(a, b) {
                            this._customAttributeInspector ||
                                this._settings.map.infoWindow.show(a, b);
                        },
                    });
                    g.mixin(M, {
                        CREATE_TOOL_POLYLINE: 'polyline',
                        CREATE_TOOL_FREEHAND_POLYLINE: 'freehandpolyline',
                        CREATE_TOOL_POLYGON: 'polygon',
                        CREATE_TOOL_FREEHAND_POLYGON: 'freehandpolygon',
                        CREATE_TOOL_AUTOCOMPLETE: 'autocomplete',
                        CREATE_TOOL_RECTANGLE: 'rectangle',
                        CREATE_TOOL_TRIANGLE: 'triangle',
                        CREATE_TOOL_CIRCLE: 'circle',
                        CREATE_TOOL_ELLIPSE: 'ellipse',
                        CREATE_TOOL_ARROW: 'arrow',
                        CREATE_TOOL_UP_ARROW: 'uparrow',
                        CREATE_TOOL_DOWN_ARROW: 'downarrow',
                        CREATE_TOOL_RIGHT_ARROW: 'rightarrow',
                        CREATE_TOOL_LEFT_ARROW: 'leftarrow',
                    });
                    g.setObject('dijit.editing.Editor', M, P);
                    return M;
                }
            );
        },
        'esri/undoManager': function() {
            define(
                'dojo/_base/declare dojo/_base/lang dojo/has dojo/when ./kernel ./Evented ./OperationBase'.split(
                    ' '
                ),
                function(c, g, f, b, e, h) {
                    c = c([h], {
                        declaredClass: 'esri.UndoManager',
                        maxOperations: 10,
                        canUndo: !1,
                        canRedo: !1,
                        position: 0,
                        length: 0,
                        onUndo: function() {},
                        onRedo: function() {},
                        onUndoComplete: function() {},
                        onRedoComplete: function() {},
                        onAdd: function() {},
                        onChange: function() {},
                        constructor: function(b) {
                            b = b || {};
                            b.maxOperations && (this.maxOperations = b.maxOperations);
                            this._historyStack = [];
                        },
                        add: function(b) {
                            if (0 < this.maxOperations)
                                for (; this._historyStack.length >= this.maxOperations;)
                                    this._historyStack.shift();
                            this._historyStack.splice(this.position, 0, b);
                            this.position++;
                            this.clearRedo();
                            this.onAdd();
                            this._checkAvailability();
                        },
                        undo: function() {
                            if (0 === this.position) return null;
                            var d = this.peekUndo();
                            this.position--;
                            d
                                ?
                                ((d = d.performUndo()), this.onUndo(), this._checkAvailability(), b(
                                    d
                                ).then(g.hitch(this, this.onUndoComplete))) :
                                (this.onUndo(), this._checkAvailability());
                        },
                        redo: function() {
                            if (this.position === this._historyStack.length) return null;
                            var d = this.peekRedo();
                            this.position++;
                            d
                                ?
                                ((d = d.performRedo()), this.onRedo(), this._checkAvailability(), b(
                                    d
                                ).then(g.hitch(this, this.onRedoComplete))) :
                                (this.onRedo(), this._checkAvailability());
                        },
                        _checkAvailability: function() {
                            this.length = this._historyStack.length;
                            0 === this.length ?
                                (this.canUndo = this.canRedo = !1) :
                                0 === this.position ?
                                ((this.canRedo = !0), (this.canUndo = !1)) :
                                this.position === this.length ?
                                ((this.canUndo = !0), (this.canRedo = !1)) :
                                (this.canRedo = this.canUndo = !0);
                            this.onChange();
                        },
                        clearUndo: function() {
                            this._historyStack.splice(0, this.position);
                            this.position = 0;
                            this._checkAvailability();
                        },
                        clearRedo: function() {
                            this._historyStack.splice(
                                this.position,
                                this._historyStack.length - this.position
                            );
                            this.position = this._historyStack.length;
                            this._checkAvailability();
                        },
                        peekUndo: function() {
                            if (0 < this._historyStack.length && 0 < this.position)
                                return this.get(this.position - 1);
                        },
                        peekRedo: function() {
                            if (
                                0 < this._historyStack.length &&
                                this.position < this._historyStack.length
                            )
                                return this.get(this.position);
                        },
                        get: function(b) {
                            return this._historyStack[b];
                        },
                        remove: function(b) {
                            0 < this._historyStack.length &&
                                (this._historyStack.splice(b, 1), 0 < this.position &&
                                    b < this.position &&
                                    this.position--, this._checkAvailability());
                        },
                        destroy: function() {
                            this._historyStack = null;
                        },
                    });
                    return (e.UndoManager = c);
                }
            );
        },
        'esri/OperationBase': function() {
            define(['dojo/_base/declare', 'dojo/has', './kernel'], function(
                c,
                g,
                f
            ) {
                c = c(null, {
                    declaredClass: 'esri.OperationBase',
                    type: 'not implemented',
                    label: 'not implemented',
                    constructor: function(b) {
                        b = b || {};
                        b.label && (this.label = b.label);
                    },
                    performUndo: function() {},
                    performRedo: function() {},
                });
                return (f.OperationBase = c);
            });
        },
        'esri/toolbars/edit': function() {
            define(
                'require dojo/_base/declare dojo/_base/lang dojo/_base/connect dojo/_base/array dojo/_base/Color dojo/has dojo/dom-construct dojo/dom-style ../kernel ../lang ../sniff ./_toolbar ./_Box ./_GraphicMover ./_VertexEditor ./TextEditor ../symbols/SimpleMarkerSymbol ../symbols/SimpleLineSymbol ../symbols/TextSymbol ../graphic'.split(
                    ' '
                ),
                function(
                    c,
                    g,
                    f,
                    b,
                    e,
                    h,
                    d,
                    a,
                    k,
                    n,
                    l,
                    m,
                    p,
                    r,
                    u,
                    t,
                    q,
                    v,
                    C,
                    z,
                    y
                ) {
                    var x = g(p, {
                        declaredClass: 'esri.toolbars.Edit',
                        constructor: function(a, k) {
                            this._map = a;
                            this._tool = 0;
                            if (this._map.loaded) this._scratchGL = a.graphics;
                            else
                                var e = b.connect(this._map, 'onLoad', this, function() {
                                    b.disconnect(e);
                                    e = null;
                                    this._scratchGL = this._map.graphics;
                                });
                            a = d('esri-mobile');
                            this._defaultOptions = f.mixin({
                                    vertexSymbol: new v(
                                        v.STYLE_CIRCLE,
                                        a ? 20 : 12,
                                        new C(C.STYLE_SOLID, new h([0, 0, 0, 0.5]), 1),
                                        new h([128, 128, 128])
                                    ),
                                    ghostVertexSymbol: new v(
                                        v.STYLE_CIRCLE,
                                        a ? 18 : 10,
                                        new C(C.STYLE_SOLID, new h([0, 0, 0, 0.5]), 1),
                                        new h([255, 255, 255, 0.75])
                                    ),
                                    ghostLineSymbol: new C(
                                        C.STYLE_DOT,
                                        new h([128, 128, 128]),
                                        2
                                    ),
                                    allowDeleteVertices: !0,
                                    allowAddVertices: !0,
                                    rotateHandleOffset: a ? 24 : 16,
                                    boxLineSymbol: new C(C.STYLE_DASH, new h([64, 64, 64]), 1),
                                    boxHandleSymbol: new v(
                                        v.STYLE_SQUARE,
                                        a ? 16 : 9,
                                        new C(C.STYLE_SOLID, new h([0, 0, 0, 0.5]), 1),
                                        new h([255, 255, 255, 0.75])
                                    ),
                                    textAnchorSymbol: new v(
                                        v.STYLE_CIRCLE,
                                        10,
                                        null,
                                        new h([255, 0, 0])
                                    ),
                                },
                                k || {}
                            );
                        },
                        activate: function(a, d, k) {
                            this.deactivate();
                            this._graphic = d;
                            this._options = f.mixin(
                                f.mixin({}, this._defaultOptions),
                                k || {}
                            );
                            var e = x.MOVE;
                            k = x.EDIT_VERTICES;
                            var c = x.SCALE,
                                h = x.ROTATE,
                                l = x.EDIT_TEXT,
                                r = !1,
                                m = !1,
                                n = !1,
                                g = this._map,
                                p = g.spatialReference,
                                q = d.geometry.spatialReference;
                            this._geo = !(!p ||
                                !q ||
                                p.equals(q) ||
                                !p.isWebMercator() ||
                                4326 !== q.wkid);
                            this._isTextPoint = this._prepareTextSymbolEditing(d, a);
                            (a & e) === e && (r = this._enableMove(d));
                            e = (a & c) === c;
                            h = (a & h) === h;
                            if (e || h) n = this._enableBoxEditing(d, e, h);
                            (a & k) === k && (m = this._enableVertexEditing(d));
                            (a & l) === l && this._enableTextEditing(d);
                            if (!(r || m || n))
                                throw Error(
                                    '[esri.toolbars.Edit::activate] Unable to activate the tool. Check if the tool is valid for the given geometry type.'
                                );
                            if ((this._tool = a))
                                (this._mapPanEndHandle = b.connect(
                                    g,
                                    'onPanEnd',
                                    this,
                                    this._mapPanEndHandler
                                )), (this._mapExtChgHandle = b.connect(
                                    g,
                                    'onExtentChange',
                                    this,
                                    this._mapExtentChangeHandler
                                )), this.onActivate(this._tool, d);
                            g.snappingManager &&
                                (r || m) &&
                                g.snappingManager._startSelectionLayerQuery();
                        },
                        deactivate: function() {
                            this._isTextPoint = null;
                            var a = this._tool,
                                d = this._graphic;
                            if (a) {
                                var k = !!this._modified;
                                this._clear();
                                b.disconnect(this._mapPanEndHandle);
                                b.disconnect(this._mapExtChgHandle);
                                this._graphic = this._geo = this._mapPanEndHandle = this._mapExtChgHandle = null;
                                this.onDeactivate(a, d, { isModified: k });
                                this._map.snappingManager &&
                                    this._map.snappingManager._stopSelectionLayerQuery();
                            }
                        },
                        refresh: function() {
                            this._refreshMoveables(!0);
                        },
                        getCurrentState: function() {
                            return {
                                tool: this._tool,
                                graphic: this._graphic,
                                isModified: !!this._modified,
                            };
                        },
                        onActivate: function(a, b) {},
                        onDeactivate: function(a, b, d) {},
                        onGraphicMoveStart: function(a) {},
                        onGraphicFirstMove: function(a) {
                            this._modified = !0;
                        },
                        onGraphicMove: function(a, b) {},
                        onGraphicMoveStop: function(a, b) {},
                        onGraphicClick: function(a, b) {},
                        onVertexMoveStart: function(a, b) {},
                        onVertexFirstMove: function(a, b) {
                            this._modified = !0;
                        },
                        onVertexMove: function(a, b, d) {},
                        onVertexMoveStop: function(a, b, d) {},
                        onVertexAdd: function(a, b) {
                            this._modified = !0;
                        },
                        onVertexClick: function(a, b) {},
                        onVertexMouseOver: function(a, b) {},
                        onVertexMouseOut: function(a, b) {},
                        onVertexDelete: function(a, b) {
                            this._modified = !0;
                        },
                        onTextEditStart: function(a, b) {},
                        onTextEditEnd: function(a) {},
                        onScaleStart: function(a) {},
                        onScaleFirstMove: function(a) {
                            this._modified = !0;
                        },
                        onScale: function(a, b) {},
                        onScaleStop: function(a, b) {},
                        onRotateStart: function(a) {},
                        onRotateFirstMove: function(a) {
                            this._modified = !0;
                        },
                        onRotate: function(a, b) {},
                        onRotateStop: function(a, b) {},
                        _eventMap: {
                            activate: ['tool', 'graphic'],
                            deactivate: ['tool', 'graphic', 'info'],
                            'graphic-move-start': ['graphic'],
                            'graphic-first-move': ['graphic'],
                            'graphic-move': ['graphic', 'transform'],
                            'graphic-move-stop': ['graphic', 'transform'],
                            'graphic-click': ['graphic', 'info'],
                            'vertex-move-start': ['graphic', 'vertexinfo'],
                            'vertex-first-move': ['graphic', 'vertexinfo'],
                            'vertex-move': ['graphic', 'vertexinfo', 'transform'],
                            'vertex-move-stop': ['graphic', 'vertexinfo', 'transform'],
                            'vertex-add': ['graphic', 'vertexinfo'],
                            'vertex-click': ['graphic', 'vertexinfo'],
                            'vertex-mouse-over': ['graphic', 'vertexinfo'],
                            'vertex-mouse-out': ['graphic', 'vertexinfo'],
                            'vertex-delete': ['graphic', 'vertexinfo'],
                            'scale-start': ['graphic'],
                            'scale-first-move': ['graphic'],
                            scale: ['graphic', 'info'],
                            'scale-stop': ['graphic', 'info'],
                            'rotate-start': ['graphic'],
                            'rotate-first-move': ['graphic'],
                            rotate: ['graphic', 'info'],
                            'rotate-stop': ['graphic', 'info'],
                        },
                        _prepareTextSymbolEditing: function(b, d) {
                            if (
                                'point' === b.geometry.type ||
                                'multipoint' === b.geometry.type
                            ) {
                                var e = b.getLayer(),
                                    h = e.renderer,
                                    e = b.symbol || e._getSymbol(b);
                                !e &&
                                    (h.hasVisualVariables('sizeInfo', !1) ||
                                        h.hasVisualVariables('colorInfo', !1) ||
                                        h.hasVisualVariables('opacityInfo', !1)) &&
                                    h.addBreak &&
                                    h.infos &&
                                    1 === h.infos.length &&
                                    (e = h.infos[0].symbol || h.defaultSymbol);
                                if (e && 'textsymbol' === e.type) {
                                    if (
                                        (d & x.SCALE) === x.SCALE ||
                                        (d & x.ROTATE) === x.ROTATE ||
                                        (d & x.EDIT_TEXT) === x.EDIT_TEXT
                                    ) {
                                        b.setSymbol(new z(e.toJson()));
                                        var l = this;
                                        this._textSymbolEditor ?
                                            (this._textSymbolEditor.createForm(
                                                b
                                            ), this._textSymbolEditor.show()) :
                                            this._options && this._options.textSymbolEditor ?
                                            ((this._textSymbolEditor = this._options.textSymbolEditor), this._textSymbolEditor.on(
                                                'symbol-change',
                                                function() {
                                                    l._boxEditor && l._boxEditor.refresh();
                                                }
                                            )) :
                                            c(['../dijit/SymbolEditor'], function(d) {
                                                if (!l._textSymbolEditor) {
                                                    var e;
                                                    e = l._options.textSymbolEditorHolder ?
                                                        a.create(
                                                            'div',
                                                            null,
                                                            l._options.textSymbolEditorHolder
                                                        ) :
                                                        a.create('div', null, l._map.root);
                                                    l._textSymbolEditor = new d({ graphic: b }, e);
                                                    d = l._textSymbolEditor.domNode.parentNode.id;
                                                    k.set(l._textSymbolEditor.domNode, {
                                                        position: 'map_root' === d ?
                                                            'absolute' :
                                                            'relative',
                                                        left: 'map_root' === d ?
                                                            l._map.width / 2 - 100 + 'px' :
                                                            '5px',
                                                        top: '20px',
                                                        'z-index': 50,
                                                    });
                                                    l._textSymbolEditor.startup();
                                                    l._textSymbolEditor.createForm(b);
                                                    l._textSymbolEditor.show();
                                                    l._textSymbolEditor.on(
                                                        'symbol-change',
                                                        function() {
                                                            l._boxEditor && l._boxEditor.refresh();
                                                        }
                                                    );
                                                }
                                            });
                                    }
                                    if (
                                        (d & x.MOVE) === x.MOVE ||
                                        (d & x.ROTATE) === x.ROTATE ||
                                        (d & x.SCALE) === x.SCALE
                                    )
                                        (this._textAnchor = new y(
                                            b.geometry,
                                            this._options.textAnchorSymbol
                                        )), this._scratchGL.add(this._textAnchor);
                                    return !0;
                                }
                            }
                            return !1;
                        },
                        _enableMove: function(a) {
                            var b = this._map;
                            switch (a.geometry.type) {
                                case 'point':
                                case 'polyline':
                                case 'polygon':
                                    return (this._graphicMover = new u(
                                        a,
                                        b,
                                        this,
                                        this._textAnchor
                                    )), !0;
                            }
                            return !1;
                        },
                        _enableVertexEditing: function(a) {
                            var b = this._map;
                            switch (a.geometry.type) {
                                case 'multipoint':
                                case 'polyline':
                                case 'polygon':
                                    return (this._vertexEditor = t.create(a, b, this)), !0;
                            }
                            return !1;
                        },
                        _enableBoxEditing: function(a, b, d) {
                            var k = this._map,
                                e = a.geometry.type;
                            return 'polyline' === e || 'polygon' === e || this._isTextPoint ?
                                ((this._boxEditor = new r(
                                    a,
                                    k,
                                    this,
                                    b,
                                    d,
                                    this._options.uniformScaling,
                                    this._isTextPoint
                                )), !0) :
                                !1;
                        },
                        _enableTextEditing: function(a) {
                            return this._isTextPoint ?
                                ((this._textEditor = new q(a, this._map, this)), b.connect(
                                    this._textEditor,
                                    'onEditStart',
                                    f.hitch(this, function() {
                                        this._textAnchor &&
                                            (this._textAnchor
                                                .getLayer()
                                                .remove(
                                                    this._textAnchor
                                                ), (this._textAnchor = null));
                                        this._map.disableKeyboardNavigation();
                                        this._disableMove();
                                        this._disableBoxEditing();
                                    })
                                ), !0) :
                                !1;
                        },
                        _disableMove: function() {
                            var a = this._graphicMover;
                            a && (a.destroy(), (this._graphicMover = null));
                        },
                        _disableVertexEditing: function() {
                            var a = this._vertexEditor;
                            a && (a.destroy(), (this._vertexEditor = null));
                        },
                        _disableBoxEditing: function() {
                            var a = this._boxEditor;
                            a && (a.destroy(), (this._boxEditor = null));
                        },
                        _disableTextEditing: function() {
                            this._textEditor &&
                                (this._textEditor.destroy(), (this._textEditor = null));
                            this._map.enableKeyboardNavigation();
                        },
                        _disableSymbolEditing: function() {
                            this._textSymbolEditor && this._textSymbolEditor.hide();
                        },
                        _clear: function() {
                            this._disableMove();
                            this._disableVertexEditing();
                            this._disableBoxEditing();
                            this._disableTextEditing();
                            this._disableSymbolEditing();
                            this._textAnchor &&
                                (this._textAnchor
                                    .getLayer()
                                    .remove(this._textAnchor), (this._textAnchor = null));
                            this._tool = 0;
                            this._modified = !1;
                        },
                        _mapPanEndHandler: function() {
                            this._refreshMoveables();
                        },
                        _mapExtentChangeHandler: function(a, b, d) {
                            d && this._refreshMoveables();
                        },
                        _refreshMoveables: function(a) {
                            var b = e.filter(
                                [this._graphicMover, this._vertexEditor, this._boxEditor],
                                l.isDefined
                            );
                            e.forEach(b, function(b) {
                                b.refresh(a);
                            });
                        },
                        _beginOperation: function(a) {
                            e.forEach(this._getAffectedTools(a), function(a) {
                                a.suspend();
                            });
                        },
                        _endOperation: function(a) {
                            e.forEach(this._getAffectedTools(a), function(a) {
                                a.resume();
                            });
                        },
                        _getAffectedTools: function(a) {
                            var b = [];
                            switch (a) {
                                case 'MOVE':
                                    b = [this._vertexEditor, this._boxEditor];
                                    break;
                                case 'VERTICES':
                                    b = [this._boxEditor];
                                    break;
                                case 'BOX':
                                    b = [this._vertexEditor];
                            }
                            return (b = e.filter(b, l.isDefined));
                        },
                    });
                    f.mixin(x, {
                        MOVE: 1,
                        EDIT_VERTICES: 2,
                        SCALE: 4,
                        ROTATE: 8,
                        EDIT_TEXT: 16,
                    });
                    f.setObject('toolbars.Edit', x, n);
                    return x;
                }
            );
        },
        'esri/toolbars/_Box': function() {
            define(
                'dojo/_base/declare dojo/_base/lang dojo/_base/array dojo/_base/connect dojo/_base/Color dojo/has dojo/dom-style dojox/gfx/Moveable dojox/gfx/matrix ../kernel ../lang ../geometry/Point ../geometry/Polyline ../symbols/SimpleMarkerSymbol ../geometry/webMercatorUtils ../geometry/jsonUtils ../graphic'.split(
                    ' '
                ),
                function(c, g, f, b, e, h, d, a, k, n, l, m, p, r, u, t, q) {
                    c = c(null, {
                        declaredClass: 'esri.toolbars._Box',
                        constructor: function(a, b, d, k, e, c, h) {
                            this._graphic = a;
                            this._map = b;
                            this._toolbar = d;
                            this._scale = k;
                            this._rotate = e;
                            this._defaultEventArgs = {};
                            this._scaleEvent = 'Scale';
                            this._rotateEvent = 'Rotate';
                            this._uniformScaling = c;
                            a = d._options;
                            this._markerSymbol = a.boxHandleSymbol;
                            this._lineSymbol = a.boxLineSymbol;
                            this._moveStartHandler = g.hitch(this, this._moveStartHandler);
                            this._firstMoveHandler = g.hitch(this, this._firstMoveHandler);
                            this._moveStopHandler = g.hitch(this, this._moveStopHandler);
                            this._moveHandler = g.hitch(this, this._moveHandler);
                            this._isTextPoint = h;
                            this._init();
                        },
                        destroy: function() {
                            this._cleanUp();
                            this._graphic = this._map = this._toolbar = this._markerSymbol = this._lineSymbol = null;
                        },
                        refresh: function() {
                            this._draw();
                        },
                        suspend: function() {
                            f.forEach(this._getAllGraphics(), function(a) {
                                a.hide();
                            });
                        },
                        resume: function() {
                            f.forEach(this._getAllGraphics(), function(a) {
                                a.show();
                            });
                            this._draw();
                        },
                        _init: function() {
                            this._draw();
                        },
                        _cleanUp: function() {
                            this._connects && f.forEach(this._connects, b.disconnect);
                            var a = this._toolbar._scratchGL;
                            this._anchors &&
                                f.forEach(this._anchors, function(b) {
                                    a.remove(b.graphic);
                                    (b = b.moveable) && b.destroy();
                                });
                            this._box && a.remove(this._box);
                            this._box = this._anchors = this._connects = null;
                        },
                        _draw: function() {
                            if (this._graphic.getDojoShape()) {
                                var a = this._map,
                                    b = this._toolbar._scratchGL,
                                    d = this._getBoxCoords(),
                                    k = new p(a.spatialReference),
                                    e = g.clone(
                                        f.filter(d, function(a, b) {
                                            return 8 !== b && 0 === b % 2;
                                        })
                                    );
                                e[0] && e.push([e[0][0], e[0][1]]);
                                k.addPath(e);
                                this._rotate && k.addPath([d[1], d[8]]);
                                this._box ?
                                    this._box.setGeometry(k) :
                                    ((this._box = new q(k, this._lineSymbol)), b.add(
                                        this._box
                                    ));
                                this._anchors ?
                                    f.forEach(
                                        this._anchors,
                                        function(b, k) {
                                            this._scale || (k = 8);
                                            var e = new m(d[k], a.spatialReference);
                                            b.graphic.setGeometry(e);
                                            var e = b.moveable,
                                                c = b.graphic.getDojoShape();
                                            c &&
                                                (e ?
                                                    c !== e.shape &&
                                                    (e.destroy(), (b.moveable = this._getMoveable(
                                                        b.graphic,
                                                        k
                                                    ))) :
                                                    (b.moveable = this._getMoveable(b.graphic, k)));
                                        },
                                        this
                                    ) :
                                    ((this._anchors = []), (this._connects = []), f.forEach(
                                        d,
                                        function(d, k) {
                                            (!this._scale && 8 > k) ||
                                            ((d = new m(d, a.spatialReference)), (d = new q(
                                                    d,
                                                    this._markerSymbol
                                                )), this._isTextPoint &&
                                                1 === k % 2 &&
                                                d.hide(), b.add(d), this._anchors.push({
                                                    graphic: d,
                                                    moveable: this._getMoveable(d, k),
                                                }));
                                        },
                                        this
                                    ));
                            } else this._cleanUp();
                        },
                        _getBoxCoords: function(a) {
                            var b = this._map,
                                d, k = [],
                                e, c, h;
                            if (this._isTextPoint) {
                                d = this._graphic.getNode().getBoundingClientRect();
                                var l = b.__container.getBoundingClientRect();
                                d = [
                                    { x: d.left - l.left, y: d.top - l.top },
                                    { x: d.right - l.left, y: d.top - l.top },
                                    { x: d.right - l.left, y: d.bottom - l.top },
                                    { x: d.left - l.left, y: d.bottom - l.top },
                                ];
                            } else d = this._getTransformedBoundingBox(this._graphic);
                            f.forEach(d, function(d, l, r) {
                                e = d;
                                (c = r[l + 1]) || (c = r[0]);
                                h = { x: (e.x + c.x) / 2, y: (e.y + c.y) / 2 };
                                a || ((e = b.toMap(e)), (h = b.toMap(h)));
                                k.push([e.x, e.y]);
                                k.push([h.x, h.y]);
                            });
                            this._rotate &&
                                ((d = g.clone(k[1])), (d = a ?
                                        { x: d[0], y: d[1] } :
                                        b.toScreen({
                                            x: d[0],
                                            y: d[1],
                                            spatialReference: b.spatialReference,
                                        })), (d.y -= this._toolbar._options.rotateHandleOffset), a ||
                                    (d = b.toMap(d)), k.push([d.x, d.y]));
                            return k;
                        },
                        _getTransformedBoundingBox: function(a) {
                            var b = this._map,
                                d = a.geometry.getExtent(),
                                k = a.geometry.spatialReference;
                            a = new m(d.xmin, d.ymax, k);
                            d = new m(d.xmax, d.ymin, k);
                            a = b.toScreen(a);
                            d = b.toScreen(d);
                            return [
                                { x: a.x, y: a.y },
                                { x: d.x, y: a.y },
                                { x: d.x, y: d.y },
                                { x: a.x, y: d.y },
                            ];
                        },
                        _getAllGraphics: function() {
                            var a = [this._box];
                            this._anchors &&
                                f.forEach(this._anchors, function(b) {
                                    a.push(b.graphic);
                                });
                            return (a = f.filter(a, l.isDefined));
                        },
                        _getMoveable: function(k, e) {
                            var c = k.getDojoShape();
                            if (c)
                                return (k = new a(c)), (k._index = e), this._connects.push(
                                        b.connect(k, 'onMoveStart', this._moveStartHandler)
                                    ), this._connects.push(
                                        b.connect(k, 'onFirstMove', this._firstMoveHandler)
                                    ), this._connects.push(
                                        b.connect(k, 'onMoveStop', this._moveStopHandler)
                                    ), (k.onMove = this._moveHandler), (c = c.getEventSource()) &&
                                    d.set(c, 'cursor', this._toolbar._cursors['box' + e]), k;
                        },
                        _moveStartHandler: function(a) {
                            this._toolbar[
                                'on' +
                                (8 === a.host._index ? this._rotateEvent : this._scaleEvent) +
                                'Start'
                            ](this._graphic);
                        },
                        _firstMoveHandler: function(a) {
                            this._toolbar._deactivateScrollWheel();
                            var b = a.host._index,
                                d = (this._wrapOffset = a.host.shape._wrapOffsets[0] || 0),
                                e = this._graphic.getLayer().getNavigationTransform(),
                                c;
                            a = f.map(this._getBoxCoords(!0), function(a) {
                                return { x: a[0] + d, y: a[1] };
                            });
                            c = this._isTextPoint ?
                                this._map.toScreen(this._graphic.geometry) :
                                { x: a[1].x, y: a[3].y };
                            this._centerCoord = k.multiplyPoint(k.invert(e), c);
                            if (8 === b)
                                (c = k.multiplyPoint(k.invert(e), a[1])), this._isTextPoint &&
                                (this._centerCoord = this._deNormalizePoint(
                                    this._centerCoord,
                                    c
                                )), (this._startLine = [
                                    this._centerCoord,
                                    c,
                                ]), (this._moveLine = g.clone(this._startLine));
                            else if (
                                ((c = k.multiplyPoint(
                                        k.invert(e),
                                        a[b]
                                    )), (e = k.multiplyPoint(k.invert(e), a[(b + 4) % 8])), this
                                    ._isTextPoint &&
                                    (this._centerCoord = this._deNormalizePoint(
                                        this._centerCoord,
                                        c
                                    )), (this._firstMoverToAnchor = Math.sqrt(
                                        (c.x - this._centerCoord.x) * (c.x - this._centerCoord.x) +
                                        (c.y - this._centerCoord.y) * (c.y - this._centerCoord.y)
                                    )), (this._startBox = e), (this._startBox.width =
                                        a[4].x - a[0].x), (this._startBox.height =
                                        a[4].y - a[0].y), (this._moveBox = g.clone(
                                        this._startBox
                                    )), (this._xfactor = c.x > e.x ? 1 : -1), (this._yfactor = c.y >
                                        e.y ?
                                        1 :
                                        -1), 1 === b || 5 === b)
                            )
                                this._xfactor = 0;
                            else if (3 === b || 7 === b) this._yfactor = 0;
                            this._toolbar._beginOperation('BOX');
                            this._toolbar[
                                'on' +
                                (8 === b ? this._rotateEvent : this._scaleEvent) +
                                'FirstMove'
                            ](this._graphic);
                        },
                        _moveHandler: function(a, b) {
                            a = a.host._index;
                            var d = this._defaultEventArgs,
                                e, c, h;
                            d.angle = 0;
                            d.scaleX = 1;
                            d.scaleY = 1;
                            if (8 === a)
                                (e = this._startLine), (c = this._moveLine), (h = c[1]), (h.x +=
                                    b.dx), (h.y += b.dy), (b = this._getAngle(e, c)), this
                                ._isTextPoint &&
                                (b += this._graphic.symbol.angle), (c = k.rotategAt(
                                    b,
                                    e[0]
                                )), this._graphic
                                .getDojoShape()
                                .setTransform(
                                    c
                                ), (d.transform = c), (d.angle = b), (d.around = e[0]);
                            else {
                                e = this._startBox;
                                c = this._moveBox;
                                c.width += b.dx * this._xfactor;
                                c.height += b.dy * this._yfactor;
                                this._uniformScaling || this._isTextPoint ?
                                    ((e = c.x + this._xfactor * c.width), (c =
                                        c.y + this._yfactor * c.height), (e = Math.sqrt(
                                        (e - this._centerCoord.x) * (e - this._centerCoord.x) +
                                        (c - this._centerCoord.y) * (c - this._centerCoord.y)
                                    )), (this._scaleRatio = b = h =
                                        e / this._firstMoverToAnchor), (e = this._centerCoord)) :
                                    ((b = c.width / e.width), (h = c.height / e.height), (e = {
                                        x: e.x,
                                        y: e.y,
                                    }));
                                if (isNaN(b) || Infinity === b || -Infinity === b) b = 1;
                                if (isNaN(h) || Infinity === h || -Infinity === h) h = 1;
                                c = k.scaleAt(b, h, e);
                                if (this._isTextPoint) {
                                    var l = k.rotategAt(this._graphic.symbol.angle, e);
                                    this._graphic.getDojoShape().setTransform([l, c]);
                                } else this._graphic.getDojoShape().setTransform(c);
                                d.transform = c;
                                d.scaleX = b;
                                d.scaleY = h;
                                d.around = e;
                            }
                            this._toolbar[
                                'on' + (8 === a ? this._rotateEvent : this._scaleEvent)
                            ](this._graphic, d);
                        },
                        _moveStopHandler: function(a) {
                            this._toolbar._activateScrollWheel();
                            var b = this._graphic,
                                d = this._toolbar,
                                k = d._geo ?
                                u.geographicToWebMercator(b.geometry) :
                                b.geometry,
                                e = k.spatialReference,
                                c = b.getDojoShape(),
                                h = c.getTransform(),
                                l = b.getLayer().getNavigationTransform();
                            this._isTextPoint ?
                                ((b = this._graphic.symbol), 8 === a.host._index ?
                                    (b.angle += this._getAngle(
                                        this._startLine,
                                        this._moveLine
                                    )) :
                                    b.font.setSize(
                                        Math.round(b.font.size * this._scaleRatio * 100) / 100
                                    ), this._graphic.setSymbol(b)) :
                                ((k = k.toJson()), this._updateSegments(
                                    k.paths || k.rings,
                                    h,
                                    l,
                                    e
                                ), c.setTransform(null), (k = t.fromJson(
                                    k
                                )), b.setGeometry(
                                    d._geo ? u.webMercatorToGeographic(k, !0) : k
                                ));
                            this._draw();
                            this._startLine = this._moveLine = this._startBox = this._moveBox = this._xfactor = this._yfactor = null;
                            d._endOperation('BOX');
                            this._defaultEventArgs.transform = h;
                            d[
                                'on' +
                                (8 === a.host._index ? this._rotateEvent : this._scaleEvent) +
                                'Stop'
                            ](this._graphic, this._defaultEventArgs);
                        },
                        _updateSegments: function(a, b, d, e) {
                            var c = this._map,
                                h = this._wrapOffset || 0;
                            f.forEach(
                                a,
                                function(a) {
                                    f.forEach(
                                        a,
                                        function(a) {
                                            this._updatePoint(a, e, h, k, c, d, b);
                                        },
                                        this
                                    );
                                },
                                this
                            );
                        },
                        _updatePoint: function(a, b, d, k, e, c, h) {
                            b = e.toScreen({ x: a[0], y: a[1], spatialReference: b }, !0);
                            b.x += d;
                            b = k.multiplyPoint([c, h, k.invert(c)], b);
                            b.x -= d;
                            d = e.toMap(b);
                            a[0] = d.x;
                            a[1] = d.y;
                        },
                        _getAngle: function(a, b) {
                            return (
                                180 * Math.atan2(b[0].y - b[1].y, b[0].x - b[1].x) / Math.PI -
                                180 * Math.atan2(a[0].y - a[1].y, a[0].x - a[1].x) / Math.PI
                            );
                        },
                        _deNormalizePoint: function(a, b) {
                            var d = this._map._getFrameWidth();
                            if (-1 === d) return a;
                            for (a = { x: a.x, y: a.y }; Math.abs(a.x - b.x) >= d;)
                                a.x = a.x < b.x ? a.x + d : a.x - d;
                            var k = Math.abs(a.x - b.x);
                            Math.abs(a.x - b.x + d) < k ?
                                (a.x += d) :
                                Math.abs(a.x - b.x - d) < k && (a.x -= d);
                            return a;
                        },
                    });
                    g.setObject('toolbars._Box', c, n);
                    return c;
                }
            );
        },
        'dojox/gfx/Moveable': function() {
            define(
                'dojo/_base/lang dojo/_base/declare dojo/_base/array dojo/_base/event dojo/topic dojo/touch dojo/dom-class dojo/_base/window ./Mover dojo/mouse'.split(
                    ' '
                ),
                function(c, g, f, b, e, h, d, a, k, n) {
                    return g('dojox.gfx.Moveable', null, {
                        constructor: function(a, b) {
                            this.shape = a;
                            this.delay = b && 0 < b.delay ? b.delay : 0;
                            this.mover = b && b.mover ? b.mover : k;
                            this.leftButtonOnly = b && b.leftButtonOnly;
                            this.events = [
                                this.shape.on(h.press, c.hitch(this, 'onMouseDown')),
                            ];
                        },
                        destroy: function() {
                            f.forEach(this.events, function(a) {
                                a.remove();
                            });
                            this.events = this.shape = null;
                        },
                        onMouseDown: function(a) {
                            this.delay ?
                                (this.events.push(
                                    this.shape.on(h.move, c.hitch(this, 'onMouseMove')),
                                    this.shape.on(h.release, c.hitch(this, 'onMouseUp'))
                                ), (this._lastX = a.clientX), (this._lastY = a.clientY)) :
                                (this.leftButtonOnly && !n.isLeft(a)) ||
                                new this.mover(this.shape, a, this);
                            b.stop(a);
                        },
                        onMouseMove: function(a) {
                            var d = a.clientY;
                            if (
                                Math.abs(a.clientX - this._lastX) > this.delay ||
                                Math.abs(d - this._lastY) > this.delay
                            )
                                this.onMouseUp(a), new this.mover(this.shape, a, this);
                            b.stop(a);
                        },
                        onMouseUp: function(a) {
                            this.events.pop().remove();
                        },
                        onMoveStart: function(b) {
                            e.publish('/gfx/move/start', b);
                            d.add(a.body(), 'dojoMove');
                        },
                        onMoveStop: function(b) {
                            e.publish('/gfx/move/stop', b);
                            d.remove(a.body(), 'dojoMove');
                        },
                        onFirstMove: function(a) {},
                        onMove: function(a, b, d) {
                            this.onMoving(a, b, d);
                            this.shape.applyLeftTransform(b);
                            this.onMoved(a, b);
                        },
                        onMoving: function(a, b) {},
                        onMoved: function(a, b) {},
                    });
                }
            );
        },
        'dojox/gfx/Mover': function() {
            define(
                'dojo/_base/lang dojo/_base/array dojo/_base/declare dojo/on dojo/touch dojo/_base/event'.split(
                    ' '
                ),
                function(c, g, f, b, e, h) {
                    return f('dojox.gfx.Mover', null, {
                        constructor: function(d, a, k) {
                            this.shape = d;
                            this.lastX = a.clientX;
                            this.lastY = a.clientY;
                            d = this.host = k;
                            a = document;
                            k = b(a, e.move, c.hitch(this, 'onFirstMove'));
                            this.events = [
                                b(a, e.move, c.hitch(this, 'onMouseMove')),
                                b(a, e.release, c.hitch(this, 'destroy')),
                                b(a, 'dragstart', c.hitch(h, 'stop')),
                                b(a, 'selectstart', c.hitch(h, 'stop')),
                                k,
                            ];
                            if (d && d.onMoveStart) d.onMoveStart(this);
                        },
                        onMouseMove: function(b) {
                            var a = b.clientX,
                                d = b.clientY;
                            this.host.onMove(
                                this, { dx: a - this.lastX, dy: d - this.lastY },
                                b
                            );
                            this.lastX = a;
                            this.lastY = d;
                            h.stop(b);
                        },
                        onFirstMove: function() {
                            this.host.onFirstMove(this);
                            this.events.pop().remove();
                        },
                        destroy: function() {
                            g.forEach(this.events, function(a) {
                                a.remove();
                            });
                            var b = this.host;
                            if (b && b.onMoveStop) b.onMoveStop(this);
                            this.events = this.shape = null;
                        },
                    });
                }
            );
        },
        'esri/toolbars/_GraphicMover': function() {
            define(
                'dojo/_base/declare dojo/_base/lang dojo/_base/connect dojo/_base/json dojo/dom-style dojox/gfx/Moveable dojox/gfx/Mover dojox/gfx/matrix ../kernel ../PointerEvents ../sniff ../geometry/webMercatorUtils ../geometry/ScreenPoint ../geometry/Point'.split(
                    ' '
                ),
                function(c, g, f, b, e, h, d, a, k, n, l, m, p, r) {
                    var u = c(null, {
                        declaredClass: 'esri.toolbars._GraphicMover',
                        constructor: function(a, b, d, k) {
                            this.graphic = a;
                            this.map = b;
                            this.toolbar = d;
                            this.tempPt = k;
                            this._enableGraphicMover();
                            this._moved = !1;
                        },
                        refresh: function(a) {
                            var b = this.graphic.getDojoShape();
                            !b ||
                                (!a && b._hostGraphic) ||
                                (this._disableGraphicMover(), this._enableGraphicMover());
                        },
                        destroy: function() {
                            this._disableGraphicMover();
                        },
                        hasMoved: function() {
                            return this._moved;
                        },
                        _enableGraphicMover: function() {
                            var a = this.graphic,
                                b = a.getDojoShape();
                            b &&
                                ((b._hostGraphic = a), (this._moveable = new h(b, {
                                        mover: u.Mover,
                                    })), (this._moveStartHandle = f.connect(
                                        this._moveable,
                                        'onMoveStart',
                                        this,
                                        this._moveStartHandler
                                    )), (this._firstMoveHandle = f.connect(
                                        this._moveable,
                                        'onFirstMove',
                                        this,
                                        this._firstMoveHandler
                                    )), (this._movingHandle = f.connect(
                                        this._moveable,
                                        'onMoving',
                                        this,
                                        this._movingHandler
                                    )), (this._moveStopHandle = f.connect(
                                        this._moveable,
                                        'onMoveStop',
                                        this,
                                        this._moveStopHandler
                                    )), (a = b.getEventSource()) &&
                                    e.set(a, 'cursor', this.toolbar._cursors.move));
                        },
                        _disableGraphicMover: function() {
                            var a = this._moveable;
                            if (a) {
                                f.disconnect(this._moveStartHandle);
                                f.disconnect(this._firstMoveHandle);
                                f.disconnect(this._movingHandle);
                                f.disconnect(this._moveStopHandle);
                                var b = a.shape;
                                b &&
                                    ((b._hostGraphic = null), (b = b.getEventSource()) &&
                                        e.set(b, 'cursor', 'inherit'));
                                a.destroy();
                            }
                            this._moveable = null;
                        },
                        _moveStartHandler: function() {
                            var a = this.graphic,
                                b = this.map;
                            this._startTx = a.getDojoShape().getTransform();
                            'point' === this.graphic.geometry.type &&
                                b.snappingManager &&
                                b.snappingManager._setUpSnapping();
                            this.toolbar.onGraphicMoveStart(a);
                        },
                        _firstMoveHandler: function() {
                            this.toolbar._beginOperation('MOVE');
                            this.toolbar.onGraphicFirstMove(this.graphic);
                        },
                        _movingHandler: function(a, b, d) {
                            a = a.shape.getTransform();
                            b = this.map;
                            var k;
                            l('esri-pointer') ?
                                (k = b.navigationManager.pointerEvents._processTouchEvent(
                                    d,
                                    d
                                )) :
                                d &&
                                'pointermove' === d.type &&
                                (k = n.prototype._processTouchEvent.call({ map: b }, d, d));
                            k &&
                                b.snappingManager &&
                                b.snappingManager._onSnappingMouseMoveHandler(k);
                            this.tempPt && this.tempPt.getDojoShape().setTransform(a);
                            this.toolbar.onGraphicMove(this.graphic, a);
                        },
                        _moveStopHandler: function(d) {
                            var k = this.graphic,
                                e = this.toolbar,
                                c = this.map,
                                h = e._geo ?
                                m.geographicToWebMercator(k.geometry) :
                                k.geometry,
                                l = h.type,
                                f = k.getDojoShape(),
                                n = f.getTransform();
                            if (b.toJson(n) !== b.toJson(this._startTx)) {
                                this._moved = !0;
                                switch (l) {
                                    case 'point':
                                        var l = [n, a.invert(this._startTx)],
                                            g;
                                        c.snappingManager && (g = c.snappingManager._snappingPoint);
                                        h = g || c.toMap(a.multiplyPoint(l, c.toScreen(h, !0)));
                                        c.snappingManager && c.snappingManager._killOffSnapping();
                                        break;
                                    case 'polyline':
                                        h = this._updatePolyGeometry(h, h.paths, n);
                                        break;
                                    case 'polygon':
                                        h = this._updatePolyGeometry(h, h.rings, n);
                                }
                                f.setTransform(null);
                                k.setGeometry(e._geo ? m.webMercatorToGeographic(h, !0) : h);
                                this.tempPt &&
                                    this.tempPt.setGeometry(new r(k.geometry.toJson()));
                            } else this._moved = !1;
                            e._endOperation('MOVE');
                            e.onGraphicMoveStop(k, n);
                            this._moved ||
                                ((d = d.__e), (c = this.map.position), (d = new p(
                                    d.pageX - c.x,
                                    d.pageY - c.y
                                )), e.onGraphicClick(k, {
                                    screenPoint: d,
                                    mapPoint: this.map.toMap(d),
                                }));
                        },
                        _updatePolyGeometry: function(a, b, d) {
                            var k = this.map,
                                e = a.getPoint(0, 0),
                                k = k.toMap(k.toScreen(e).offset(d.dx, d.dy));
                            d = k.x - e.x;
                            for (var e = k.y - e.y, c, h, l, k = 0; k < b.length; k++)
                                for ((h = b[k]), (c = 0); c < h.length; c++)
                                    (l = a.getPoint(k, c)), a.setPoint(k, c, l.offset(d, e));
                            return a;
                        },
                    });
                    u.Mover = c(d, {
                        declaredClass: 'esri.toolbars._Mover',
                        constructor: function(a, b, d) {
                            this.__e = b;
                        },
                    });
                    g.setObject('toolbars._GraphicMover', u, k);
                    g.setObject('toolbars._Mover', u.Mover, k);
                    return u;
                }
            );
        },
        'esri/toolbars/_VertexEditor': function() {
            define(
                'dojo/_base/declare dojo/_base/lang dojo/_base/connect dojo/_base/array dojo/has dijit/Menu dijit/MenuItem ../kernel ./_VertexMover ../geometry/Point ../geometry/jsonUtils dojo/i18n!../nls/jsapi'.split(
                    ' '
                ),
                function(c, g, f, b, e, h, d, a, k, n, l, m) {
                    var p = c(null, {
                        declaredClass: 'esri.toolbars._GraphicVertexEditor',
                        constructor: function(a, b, d) {
                            this.graphic = a;
                            this.map = b;
                            this.toolbar = d;
                            a = d._options;
                            this._symbol1 = a.vertexSymbol;
                            this._symbol2 = a.ghostVertexSymbol;
                            b = a.ghostLineSymbol;
                            this._lineStroke = {
                                style: b.style,
                                width: b.width,
                                color: b.color,
                            };
                            this._canDel = a.allowDeleteVertices;
                            this._canAdd = a.allowAddVertices;
                            this._addControllers();
                        },
                        destroy: function() {
                            this._removeControllers();
                        },
                        refresh: function(a) {
                            a
                                ?
                                (this._removeControllers(), this._addControllers()) :
                                (this._refresh(this._vertexMovers), this._refresh(
                                    this._mpVertexMovers
                                ));
                        },
                        suspend: function() {
                            this._suspended || this._removeControllers();
                            this._suspended = !0;
                        },
                        resume: function() {
                            this._suspended && this._addControllers();
                            this._suspended = !1;
                        },
                        _addControllers: function() {
                            this._firstMoveHandle = f.connect(
                                k,
                                'onFirstMove',
                                this,
                                this._firstMoveHandler
                            );
                            this._moveStopHandle = f.connect(
                                k,
                                'onMoveStop',
                                this,
                                this._moveStopHandler
                            );
                            this._vertexMovers = this._add(
                                this._getSegments(this.graphic.geometry),
                                this._symbol1
                            );
                            this._canAdd &&
                                (this._mpVertexMovers = this._add(
                                    this._getMidpointSegments(this.graphic.geometry),
                                    this._symbol2, !0
                                ));
                            var a = this._getGraphicsLayer();
                            this._mouseOverHandle = f.connect(
                                a,
                                'onMouseOver',
                                this,
                                this._mouseOverHandler
                            );
                            this._mouseOutHandle = f.connect(
                                a,
                                'onMouseOut',
                                this,
                                this._mouseOutHandler
                            );
                            this._canDel &&
                                ((this._ctxMenu = new h({
                                    style: 'font-size: 12px; margin-left: 5px; margin-top: 5px;',
                                })), (a = this._ctxDelete = new d({
                                    label: m.toolbars.edit.deleteLabel,
                                    iconClass: 'vertexDeleteIcon',
                                    style: 'outline: none;',
                                })), (this._deleteHandle = f.connect(
                                    a,
                                    'onClick',
                                    this,
                                    this._deleteHandler
                                )), this._ctxMenu.addChild(a), this._ctxMenu.startup());
                        },
                        _removeControllers: function() {
                            f.disconnect(this._firstMoveHandle);
                            f.disconnect(this._moveStopHandle);
                            f.disconnect(this._mouseOverHandle);
                            f.disconnect(this._mouseOutHandle);
                            f.disconnect(this._deleteHandle);
                            this._ctxMenu &&
                                ((this._ctxDelete = null), this._unbindCtxNode(), this._ctxMenu.destroyRecursive());
                            this._remove(this._vertexMovers);
                            this._remove(this._mpVertexMovers);
                            this._vertexMovers = this._mpVertexMovers = null;
                        },
                        _add: function(a, b, d) {
                            var e, c, h = this.graphic,
                                l = [];
                            for (e = 0; e < a.length; e++) {
                                var r = a[e],
                                    f = [];
                                for (c = 0; c < r.length; c++)
                                    f.push(new k(r[c], b, h, e, c, r.length, this, d));
                                l.push(f);
                            }
                            return l;
                        },
                        _remove: function(a) {
                            a &&
                                b.forEach(a, function(a) {
                                    b.forEach(a, function(a) {
                                        a.destroy();
                                    });
                                });
                        },
                        _refresh: function(a) {
                            a &&
                                b.forEach(a, function(a) {
                                    b.forEach(a, function(a) {
                                        a.refresh();
                                    });
                                });
                        },
                        _isNew: function(a) {
                            return -1 === b.indexOf(this._vertexMovers[a.segIndex], a) ?
                                !0 :
                                !1;
                        },
                        _getGraphicsLayer: function() {
                            return this.toolbar._scratchGL;
                        },
                        _deleteHandler: function(a) {
                            a = this._selectedMover;
                            this._updateRelatedGraphic(
                                a,
                                a.relatedGraphic,
                                a.graphic.geometry,
                                a.segIndex,
                                a.ptIndex,
                                a.segLength, !1, !0
                            );
                            this._canAdd && this._deleteMidpoints(a);
                            this._deleteVertex(a);
                            this.toolbar._endOperation('VERTICES');
                        },
                        _mouseOverHandler: function(a) {
                            a = a.graphic;
                            var b = this._findMover(a);
                            b &&
                                (this.toolbar.onVertexMouseOver(
                                        this.graphic,
                                        b._getInfo()
                                    ), b._placeholder ||
                                    ((this._selectedMover = b), this._canDel &&
                                        this._bindCtxNode(a.getDojoShape().getNode())));
                        },
                        _mouseOutHandler: function(a) {
                            if ((a = this._findMover(a.graphic)))
                                this.toolbar.onVertexMouseOut(this.graphic, a._getInfo());
                        },
                        _bindCtxNode: function(a) {
                            this._unbindCtxNode();
                            this._ctxDelete.set(
                                'disabled',
                                this._selectedMover.segLength <= this.minLength ? !0 : !1
                            );
                            this._ctxMenu.bindDomNode(a);
                            this._bindNode = a;
                        },
                        _unbindCtxNode: function() {
                            var a = this._bindNode;
                            a && this._ctxMenu.unBindDomNode(a);
                        },
                        _findMover: function(a) {
                            var d, k = [];
                            d = this._mpVertexMovers;
                            b.forEach(this._vertexMovers, function(a) {
                                k = k.concat(a);
                            });
                            d &&
                                b.forEach(d, function(a) {
                                    k = k.concat(a);
                                });
                            for (d = 0; d < k.length; d++) {
                                var e = k[d];
                                if (e.graphic === a) return e;
                            }
                        },
                        _firstMoveHandler: function(a) {
                            !this._isNew(a) &&
                                this._canAdd &&
                                this._hideRelatedMidpoints(a);
                            this.toolbar._beginOperation('VERTICES');
                        },
                        _moveStopHandler: function(a, b) {
                            var d = this._isNew(a);
                            b && (b.dx || b.dy) ?
                                (this._updateRelatedGraphic(
                                        a,
                                        a.relatedGraphic,
                                        a.graphic.geometry,
                                        a.segIndex,
                                        a.ptIndex,
                                        a.segLength,
                                        d
                                    ), this._canAdd &&
                                    (d ?
                                        this._addMidpoints(a) :
                                        (this._repositionRelatedMidpoints(
                                            a
                                        ), this._showRelatedMidpoints(
                                            a
                                        ))), this.toolbar._endOperation('VERTICES')) :
                                !d && this._canAdd && this._showRelatedMidpoints(a);
                        },
                        _showRelatedMidpoints: function(a) {
                            var b = this._getAdjacentMidpoints(a.ptIndex, a.segLength),
                                d = this._mpVertexMovers[a.segIndex];
                            for (a = 0; a < b.length; a++) {
                                var k = d[b[a]];
                                k.graphic.show();
                                k.refresh();
                            }
                        },
                        _hideRelatedMidpoints: function(a) {
                            var b = this._getAdjacentMidpoints(a.ptIndex, a.segLength),
                                d = this._mpVertexMovers[a.segIndex];
                            for (a = 0; a < b.length; a++)
                                d[b[a]].graphic.hide();
                        },
                        _repositionRelatedMidpoints: function(a) {
                            var b,
                                d = this._getAdjacentMidpoints(a.ptIndex, a.segLength),
                                k = this._mpVertexMovers[a.segIndex];
                            for (b = 0; b < d.length; b++) {
                                var e = this._getAdjacentVertices(d[b], a.segLength),
                                    c = a.relatedGraphic.geometry.getPoint(a.segIndex, e[0]),
                                    e = a.relatedGraphic.geometry.getPoint(a.segIndex, e[1]),
                                    c = new n({
                                        x: (c.x + e.x) / 2,
                                        y: (c.y + e.y) / 2,
                                        spatialReference: c.spatialReference.toJson(),
                                    });
                                k[d[b]].graphic.setGeometry(c);
                            }
                        },
                        _addMidpoints: function(a) {
                            var b = a.segIndex,
                                d = a.ptIndex,
                                e = a.segLength,
                                c = d + 1,
                                h,
                                l = e + 1;
                            this._mpVertexMovers[b].splice(d, 1);
                            var f = this._vertexMovers[b];
                            for (h = 0; h < c; h++)
                                f[h].segLength += 1;
                            for (h = c; h < f.length; h++)
                                (f[h].ptIndex += 1), (f[h].segLength += 1);
                            a.ptIndex = c;
                            a.segLength = f.length + 1;
                            f.splice(c, 0, a);
                            a.graphic.setSymbol(this._symbol1);
                            f = this._mpVertexMovers[b];
                            for (h = 0; h < d; h++)
                                f[h].segLength += 1;
                            for (h = d; h < e - 1; h++)
                                (f[h].ptIndex += 1), (f[h].segLength += 1);
                            c = this._getAdjacentVertices(d, l);
                            b = this._getAdjacentVertices(d + 1, l);
                            e = a.relatedGraphic.geometry.getPoint(a.segIndex, c[0]);
                            h = a.relatedGraphic.geometry.getPoint(a.segIndex, c[1]);
                            c = new n({
                                x: (e.x + h.x) / 2,
                                y: (e.y + h.y) / 2,
                                spatialReference: e.spatialReference.toJson(),
                            });
                            e = a.relatedGraphic.geometry.getPoint(a.segIndex, b[0]);
                            h = a.relatedGraphic.geometry.getPoint(a.segIndex, b[1]);
                            b = new n({
                                x: (e.x + h.x) / 2,
                                y: (e.y + h.y) / 2,
                                spatialReference: e.spatialReference.toJson(),
                            });
                            e = new k(
                                c,
                                this._symbol2,
                                this.graphic,
                                a.segIndex,
                                d,
                                l,
                                this, !0
                            );
                            a = new k(
                                b,
                                this._symbol2,
                                this.graphic,
                                a.segIndex,
                                d + 1,
                                l,
                                this, !0
                            );
                            f.splice(d, 0, e, a);
                        },
                        _deleteVertex: function(a) {
                            var b, d = a.ptIndex,
                                k = this._vertexMovers[a.segIndex];
                            for (b = 0; b < d; b++)
                                --k[b].segLength;
                            for (b = d + 1; b < k.length; b++) {
                                var e = k[b];
                                --e.ptIndex;
                                --e.segLength;
                            }
                            k.splice(d, 1);
                            b = a._getInfo();
                            a.destroy();
                            this.toolbar.onVertexDelete(this.graphic, b);
                        },
                    });
                    g.mixin(p, {
                        create: function(a, b, d) {
                            switch (a.geometry.type) {
                                case 'multipoint':
                                    return new p.MultipointVertexEditor(a, b, d);
                                case 'polyline':
                                    return new p.PolylineVertexEditor(a, b, d);
                                case 'polygon':
                                    return new p.PolygonVertexEditor(a, b, d);
                            }
                        },
                    });
                    p.MultipointVertexEditor = c(p, {
                        declaredClass: 'esri.toolbars._MultipointVertexEditor',
                        minLength: 1,
                        constructor: function() {
                            this._moveStartHandle = f.connect(
                                k,
                                'onMoveStart',
                                this,
                                this._moveStartHandler
                            );
                            f.disconnect(this._firstMoveHandle);
                        },
                        destroy: function() {
                            this.inherited(arguments);
                            f.disconnect(this._moveStartHandle);
                        },
                        _getSegments: function(a) {
                            var b = a.points,
                                d = [],
                                k = a.spatialReference;
                            for (a = 0; a < b.length; a++) {
                                var e = b[a];
                                d.push(
                                    new n({ x: e[0], y: e[1], spatialReference: k.toJson() })
                                );
                            }
                            return [d];
                        },
                        _getMidpointSegments: function(a) {
                            return [];
                        },
                        _getControlPoints: function(a, b, d, k, e) {
                            return [];
                        },
                        _getGraphicsLayer: function() {
                            return this.graphic._graphicsLayer;
                        },
                        _mouseOverHandler: function(a) {
                            var b = a.graphic;
                            if ((a = this._findMover(a)))
                                this.toolbar.onVertexMouseOver(
                                    b,
                                    a._getInfo()
                                ), (this._selectedMover = a), this._canDel &&
                                this._bindCtxNode(a.graphic.getDojoShape().getNode());
                        },
                        _mouseOutHandler: function(a) {
                            var b = a.graphic;
                            if ((a = this._findMover(a)))
                                this.toolbar.onVertexMouseOut(b, a._getInfo());
                        },
                        _findMover: function(a) {
                            var b = [].concat(this._vertexMovers[0]),
                                d = a.target;
                            for (a = 0; a < b.length; a++) {
                                var k = b[a];
                                if (k.graphic.getDojoShape().getNode() === d) return k;
                            }
                        },
                        _moveStartHandler: function(a) {
                            var b = a.ptIndex,
                                d = a.segLength - 1,
                                k = a.relatedGraphic.geometry.points;
                            a = k.splice(b, 1);
                            k.push(a[0]);
                            k = this._vertexMovers[0];
                            for (a = d; a > b; a--)
                                --k[a].ptIndex;
                            a = k.splice(b, 1);
                            k.push(a[0]);
                            a[0].ptIndex = d;
                        },
                        _moveStopHandler: function(a) {
                            this._updateRelatedGraphic(
                                a,
                                a.relatedGraphic,
                                a.graphic.geometry,
                                a.segIndex,
                                a.ptIndex,
                                a.segLength
                            );
                            this.toolbar._endOperation('VERTICES');
                        },
                        _updateRelatedGraphic: function(a, b, d, k, e, c, h, l) {
                            a = b.geometry;
                            l ? a.removePoint(e) : a.setPoint(e, d);
                            b.setGeometry(a);
                        },
                        _deleteMidpoints: function(a) {},
                    });
                    p.PolylineVertexEditor = c(p, {
                        declaredClass: 'esri.toolbars._PolylineVertexEditor',
                        minLength: 2,
                        _getSegments: function(a) {
                            var b, d, k = a.paths,
                                e = [];
                            for (b = 0; b < k.length; b++) {
                                var c = k[b],
                                    h = [];
                                for (d = 0; d < c.length; d++)
                                    h.push(a.getPoint(b, d));
                                e.push(h);
                            }
                            return e;
                        },
                        _getMidpointSegments: function(a) {
                            var b, d, k = a.paths,
                                e = [],
                                c = a.spatialReference;
                            for (b = 0; b < k.length; b++) {
                                var h = k[b],
                                    l = [];
                                for (d = 0; d < h.length - 1; d++) {
                                    var f = a.getPoint(b, d),
                                        m = a.getPoint(b, d + 1),
                                        f = new n({
                                            x: (f.x + m.x) / 2,
                                            y: (f.y + m.y) / 2,
                                            spatialReference: c.toJson(),
                                        });
                                    l.push(f);
                                }
                                e.push(l);
                            }
                            return e;
                        },
                        _getControlPoints: function(a, b, d, k, e) {
                            var c = this.map,
                                h, l;
                            this._isNew(a) ?
                                ((a = k), (k += 1), 0 <= a &&
                                    (h = c.toScreen(b.getPoint(d, a))), k <= e &&
                                    (l = c.toScreen(b.getPoint(d, k)))) :
                                ((a = k - 1), (k += 1), 0 <= a &&
                                    (h = c.toScreen(b.getPoint(d, a))), k < e &&
                                    (l = c.toScreen(b.getPoint(d, k))));
                            return [h, l];
                        },
                        _getAdjacentMidpoints: function(a, b) {
                            var d = [],
                                k = a - 1;
                            0 <= k && d.push(k);
                            a < b - 1 && d.push(a);
                            return d;
                        },
                        _getAdjacentVertices: function(a, b) {
                            return [a, a + 1];
                        },
                        _deleteMidpoints: function(a) {
                            var b = this._mpVertexMovers[a.segIndex],
                                d = b.length - 1,
                                e = this._getAdjacentMidpoints(a.ptIndex, a.segLength).sort(),
                                c,
                                h = e[0];
                            for (c = 0; c < h; c++)
                                --b[c].segLength;
                            for (c = h + 1; c < b.length; c++) {
                                var l = b[c];
                                --l.ptIndex;
                                --l.segLength;
                            }
                            if (1 === e.length) b.splice(h, 1)[0].destroy();
                            else
                                for (
                                    (l = this._getAdjacentVertices(
                                        h,
                                        d
                                    )), (c = a.relatedGraphic.geometry.getPoint(
                                        a.segIndex,
                                        l[0]
                                    )), (l = a.relatedGraphic.geometry.getPoint(
                                        a.segIndex,
                                        l[1]
                                    )), (c = new n({
                                        x: (c.x + l.x) / 2,
                                        y: (c.y + l.y) / 2,
                                        spatialReference: c.spatialReference.toJson(),
                                    })), (a = new k(
                                        c,
                                        this._symbol2,
                                        this.graphic,
                                        a.segIndex,
                                        h,
                                        d,
                                        this, !0
                                    )), (b = b.splice(h, e.length, a)), (c = 0); c < b.length; c++
                                )
                                    b[c].destroy();
                        },
                        _updateRelatedGraphic: function(a, b, d, k, e, c, h, f) {
                            a = b.geometry;
                            h
                                ?
                                a.insertPoint(k, e + 1, l.fromJson(d.toJson())) :
                                f ?
                                a.removePoint(k, e) :
                                a.setPoint(k, e, l.fromJson(d.toJson()));
                            b.setGeometry(a);
                        },
                    });
                    p.PolygonVertexEditor = c(p, {
                        declaredClass: 'esri.toolbars._PolygonVertexEditor',
                        minLength: 3,
                        _getSegments: function(a) {
                            var b, d, k = a.rings,
                                e = [];
                            for (b = 0; b < k.length; b++) {
                                var c = k[b],
                                    h = [];
                                for (d = 0; d < c.length - 1; d++)
                                    h.push(a.getPoint(b, d));
                                e.push(h);
                            }
                            return e;
                        },
                        _getMidpointSegments: function(a) {
                            var b, d, k = a.rings,
                                e = [],
                                c = a.spatialReference;
                            for (b = 0; b < k.length; b++) {
                                var h = k[b],
                                    l = [];
                                for (d = 0; d < h.length - 1; d++) {
                                    var f = a.getPoint(b, d),
                                        m = a.getPoint(b, d + 1),
                                        f = new n({
                                            x: (f.x + m.x) / 2,
                                            y: (f.y + m.y) / 2,
                                            spatialReference: c.toJson(),
                                        });
                                    l.push(f);
                                }
                                e.push(l);
                            }
                            return e;
                        },
                        _getControlPoints: function(a, b, d, k, e) {
                            var c = this.map;
                            this._isNew(a) ?
                                (a = k) :
                                ((a = k - 1), (a = 0 > a ? (e + a) % e : a));
                            k = (k + 1) % e;
                            e = c.toScreen(b.getPoint(d, a));
                            b = c.toScreen(b.getPoint(d, k));
                            return [e, b];
                        },
                        _getAdjacentMidpoints: function(a, b) {
                            var d = a - 1;
                            return [0 > d ? (b + d) % b : d, a];
                        },
                        _getAdjacentVertices: function(a, b) {
                            return [a, (a + 1) % b];
                        },
                        _deleteMidpoints: function(a) {
                            var b = a.ptIndex,
                                d = this._mpVertexMovers[a.segIndex],
                                e = d.length - 1,
                                c = this._getAdjacentMidpoints(b, a.segLength).sort(),
                                h,
                                l;
                            l = c[0];
                            var f = c[c.length - 1];
                            if (0 === b)
                                for (
                                    (h = this._getAdjacentVertices(
                                        e - 1,
                                        e
                                    )), (b = a.relatedGraphic.geometry.getPoint(
                                        a.segIndex,
                                        h[0]
                                    )), (h = a.relatedGraphic.geometry.getPoint(
                                        a.segIndex,
                                        h[1]
                                    )), (b = new n({
                                        x: (b.x + h.x) / 2,
                                        y: (b.y + h.y) / 2,
                                        spatialReference: b.spatialReference.toJson(),
                                    })), (a = new k(
                                        b,
                                        this._symbol2,
                                        this.graphic,
                                        a.segIndex,
                                        e - 1,
                                        e,
                                        this, !0
                                    )), d.splice(f, 1, a)[0].destroy(), d
                                    .splice(l, 1)[0]
                                    .destroy(), (c = 0); c < d.length - 1; c++
                                )
                                    (l = d[c]), --l.ptIndex, --l.segLength;
                            else {
                                h = this._getAdjacentVertices(l, e);
                                b = a.relatedGraphic.geometry.getPoint(a.segIndex, h[0]);
                                h = a.relatedGraphic.geometry.getPoint(a.segIndex, h[1]);
                                b = new n({
                                    x: (b.x + h.x) / 2,
                                    y: (b.y + h.y) / 2,
                                    spatialReference: b.spatialReference.toJson(),
                                });
                                a = new k(
                                    b,
                                    this._symbol2,
                                    this.graphic,
                                    a.segIndex,
                                    l,
                                    e,
                                    this, !0
                                );
                                f = d.splice(l, c.length, a);
                                for (c = 0; c < f.length; c++)
                                    f[c].destroy();
                                for (c = 0; c < l; c++)
                                    --d[c].segLength;
                                for (c = l + 1; c < d.length; c++)
                                    (l = d[c]), --l.ptIndex, --l.segLength;
                            }
                        },
                        _updateRelatedGraphic: function(a, b, d, k, e, c, h, f) {
                            a = b.geometry;
                            h
                                ?
                                a.insertPoint(k, e + 1, l.fromJson(d.toJson())) :
                                f ?
                                (a.removePoint(k, e), 0 === e &&
                                    a.setPoint(
                                        k,
                                        c - 1,
                                        l.fromJson(a.getPoint(k, 0).toJson())
                                    )) :
                                (a.setPoint(k, e, l.fromJson(d.toJson())), 0 === e &&
                                    a.setPoint(k, c, l.fromJson(d.toJson())));
                            b.setGeometry(a);
                        },
                    });
                    g.setObject('toolbars._GraphicVertexEditor', p, a);
                    g.setObject(
                        'toolbars._MultipointVertexEditor',
                        p.MultipointVertexEditor,
                        a
                    );
                    g.setObject(
                        'toolbars._PolylineVertexEditor',
                        p.PolylineVertexEditor,
                        a
                    );
                    g.setObject(
                        'toolbars._PolygonVertexEditor',
                        p.PolygonVertexEditor,
                        a
                    );
                    return p;
                }
            );
        },
        'esri/toolbars/_VertexMover': function() {
            define(
                'dojo/_base/declare dojo/_base/lang dojo/_base/connect dojo/sniff dojo/dom-style dojox/gfx/Moveable dojox/gfx/matrix ../kernel ../PointerEvents ../sniff ../geometry/Point ../graphic ../geometry/webMercatorUtils'.split(
                    ' '
                ),
                function(c, g, f, b, e, h, d, a, k, n, l, m, p) {
                    c = c(null, {
                        declaredClass: 'esri.toolbars.VertexMover',
                        constructor: function(a, b, d, k, e, c, h, l) {
                            this.point = a;
                            this.symbol = b;
                            this.relatedGraphic = d;
                            this.segIndex = k;
                            this.ptIndex = e;
                            this.segLength = c;
                            this.editor = h;
                            this.map = h.map;
                            this._scratchGL = h.toolbar._scratchGL;
                            this._placeholder = l || !1;
                            this._type = d.geometry.type;
                            this._init();
                            this._enable();
                        },
                        refresh: function(a) {
                            if (a || this._needRefresh()) this._disable(), this._enable();
                        },
                        destroy: function() {
                            this._disable();
                            this.graphic && this._scratchGL.remove(this.graphic);
                            this.point = this.symbol = this.graphic = this.relatedGraphic = this.segIndex = this.ptIndex = this.segLength = this.editor = this.map = this._scratchGL = null;
                        },
                        _init: function() {
                            var a = new l(this.point.toJson()),
                                a = new m(a, this.symbol);
                            switch (this._type) {
                                case 'multipoint':
                                    a._shape = this.relatedGraphic.getDojoShape().children[
                                        this.ptIndex
                                    ];
                                    break;
                                case 'polyline':
                                case 'polygon':
                                    this._scratchGL.add(a);
                            }
                            this.graphic = a;
                        },
                        _enable: function() {
                            var a = this.graphic.getDojoShape();
                            a &&
                                ((a._hasMover = !0), (this._moveable = this._getMoveable(
                                        a
                                    )), (a = a.getEventSource()) &&
                                    e.set(
                                        a,
                                        'cursor',
                                        this.editor.toolbar._cursors[
                                            this._placeholder ? 'move-gv' : 'move-v'
                                        ]
                                    ));
                        },
                        _disable: function() {
                            var a = this._moveable;
                            if (a) {
                                f.disconnect(this._startHandle);
                                f.disconnect(this._firstHandle);
                                f.disconnect(this._movingHandle);
                                f.disconnect(this._stopHandle);
                                var b = a.shape;
                                b &&
                                    (b = b.getEventSource()) &&
                                    e.set(b, 'cursor', 'inherit');
                                a.destroy();
                                this._moveable = null;
                            }
                        },
                        _needRefresh: function() {
                            var a = this.graphic.getDojoShape(),
                                b = !1;
                            if (a)
                                switch (this._type) {
                                    case 'multipoint':
                                        var d = this.relatedGraphic.getDojoShape();
                                        d &&
                                            ((d = d.children[this.ptIndex]), a !== d &&
                                                ((this.graphic._shape = d), (b = !0)));
                                        break;
                                    case 'polyline':
                                    case 'polygon':
                                        b = !a._hasMover;
                                }
                            return b;
                        },
                        _getMoveable: function(a) {
                            a = new h(
                                a,
                                b('mac') &&
                                b('ff') &&
                                !n('esri-touch') && { leftButtonOnly: !0 }
                            );
                            this._startHandle = f.connect(
                                a,
                                'onMoveStart',
                                this,
                                this._moveStartHandler
                            );
                            this._firstHandle = f.connect(
                                a,
                                'onFirstMove',
                                this,
                                this._firstMoveHandler
                            );
                            this._movingHandle = f.connect(
                                a,
                                'onMoving',
                                this,
                                this._movingHandler
                            );
                            this._stopHandle = f.connect(
                                a,
                                'onMoveStop',
                                this,
                                this._moveStopHandler
                            );
                            return a;
                        },
                        _getPtIndex: function() {
                            return this.ptIndex + (this._placeholder ? 1 : 0);
                        },
                        _getInfo: function() {
                            return {
                                graphic: this.graphic,
                                isGhost: this._placeholder,
                                segmentIndex: this.segIndex,
                                pointIndex: this._getPtIndex(),
                            };
                        },
                        _moveStartHandler: function(a) {
                            var b = this.map;
                            b.snappingManager && b.snappingManager._setUpSnapping();
                            this.editor.toolbar._deactivateScrollWheel();
                            this._startTx = this.graphic.getDojoShape().getTransform();
                            a.shape.moveToFront();
                            this.constructor.onMoveStart(this);
                            this.editor.toolbar.onVertexMoveStart(
                                this.relatedGraphic,
                                this._getInfo()
                            );
                        },
                        _firstMoveHandler: function(a) {
                            var b = a.shape,
                                d = this._getControlEdges(),
                                k = this._scratchGL._div,
                                e,
                                c = [],
                                h = a.host.shape._wrapOffsets[0] || 0;
                            for (e = 0; e < d.length; e++) {
                                var l = d[e];
                                l.x1 += h;
                                l.x2 += h;
                                c.push([
                                    k
                                    .createLine({ x1: l.x1, y1: l.y1, x2: l.x2, y2: l.y2 })
                                    .setStroke(this.editor._lineStroke),
                                    l.x1,
                                    l.y1,
                                    l.x2,
                                    l.y2,
                                ]);
                            }
                            b._lines = c;
                            a.shape.moveToFront();
                            this.constructor.onFirstMove(this);
                            this.editor.toolbar.onVertexFirstMove(
                                this.relatedGraphic,
                                this._getInfo()
                            );
                        },
                        _movingHandler: function(a, b, d) {
                            b = this.map;
                            var e;
                            n('esri-pointer') ?
                                (e = b.navigationManager.pointerEvents._processTouchEvent(
                                    d,
                                    d
                                )) :
                                d &&
                                'pointermove' === d.type &&
                                (e = k.prototype._processTouchEvent.call({ map: b }, d, d));
                            e &&
                                b.snappingManager &&
                                b.snappingManager._onSnappingMouseMoveHandler(e);
                            d = a.shape;
                            a = d.getTransform();
                            d = d._lines;
                            for (e = 0; e < d.length; e++)
                                (b = d[e]), b[0].setShape({
                                    x1: b[1] + a.dx,
                                    y1: b[2] + a.dy,
                                    x2: b[3],
                                    y2: b[4],
                                });
                            this.editor.toolbar.onVertexMove(
                                this.relatedGraphic,
                                this._getInfo(),
                                a
                            );
                        },
                        _moveStopHandler: function(a) {
                            a = a.shape;
                            var b = this.editor.toolbar,
                                k = a.getTransform(),
                                e = this.map,
                                c = this.graphic,
                                h = b._geo ?
                                p.geographicToWebMercator(c.geometry) :
                                c.geometry;
                            b._activateScrollWheel();
                            var l, f = a._lines;
                            if (f) {
                                for (l = 0; l < f.length; l++)
                                    f[l][0].removeShape();
                                a._lines = null;
                            }
                            l = !1;
                            var f = !0,
                                n = this._getInfo();
                            k && (k.dx || k.dy) ?
                                this._placeholder && ((this._placeholder = !1), (l = !0)) :
                                (f = !1);
                            var m;
                            e.snappingManager && (m = e.snappingManager._snappingPoint);
                            var g = [k, d.invert(this._startTx)];
                            m = m || e.toMap(d.multiplyPoint(g, e.toScreen(h, !0)));
                            e.snappingManager && e.snappingManager._killOffSnapping();
                            a.setTransform(null);
                            c.setGeometry(b._geo ? p.webMercatorToGeographic(m, !0) : m);
                            this.constructor.onMoveStop(this, k);
                            b.onVertexMoveStop(this.relatedGraphic, n, k);
                            if (!f) b.onVertexClick(this.relatedGraphic, n);
                            if (l) b.onVertexAdd(this.relatedGraphic, this._getInfo());
                        },
                        _getControlEdges: function() {
                            var a = this.map,
                                b = this.relatedGraphic.geometry,
                                d = this.segIndex,
                                k = this.ptIndex,
                                e = this.segLength,
                                c = this._scratchGL.getNavigationTransform(),
                                h = c.dx,
                                c = c.dy,
                                l = a.toScreen(this.graphic.geometry),
                                a = l.x - h,
                                l = l.y - c,
                                f = [],
                                b = this.editor._getControlPoints(this, b, d, k, e);
                            b[0] && f.push({ x1: a, y1: l, x2: b[0].x - h, y2: b[0].y - c });
                            b[1] && f.push({ x1: a, y1: l, x2: b[1].x - h, y2: b[1].y - c });
                            return f;
                        },
                    });
                    g.setObject('toolbars.VertexMover', c, a);
                    g.mixin(c, {
                        onMoveStart: function() {},
                        onFirstMove: function() {},
                        onMoveStop: function() {},
                    });
                    return c;
                }
            );
        },
        'esri/toolbars/TextEditor': function() {
            define(
                'dojo/_base/declare dojo/_base/lang dojo/_base/connect dojo/_base/event dojo/has dojo/dom-construct dojo/dom-class dojo/dom-style dojo/keys ../kernel'.split(
                    ' '
                ),
                function(c, g, f, b, e, h, d, a, k, n) {
                    c = c(null, {
                        declaredClass: 'esri.toolbars.TextEditor',
                        constructor: function(a, b, d) {
                            this._graphic = a;
                            this._map = b;
                            this._toolbar = d;
                            this._enable(this._graphic);
                        },
                        destroy: function() {
                            this._disable();
                        },
                        onEditStart: function() {},
                        onEditEnd: function() {},
                        _enable: function(a) {
                            this._editBox ?
                                (f.disconnect(
                                    this._addEditBoxHandler
                                ), (this._addEditBoxHandler = null)) :
                                (this._map.navigationManager.setImmediateClick(!0), (this._addEditBoxHandler = f.connect(
                                    a.getLayer(),
                                    'onDblClick',
                                    this,
                                    function(d) {
                                        this._map.navigationManager.setImmediateClick(!1);
                                        d.graphic == a &&
                                            (b.stop(d), f.disconnect(
                                                this._addEditBoxHandler
                                            ), (this._addEditBoxHandler = null), this._addTextBox(
                                                a
                                            ));
                                    }
                                )));
                        },
                        _disable: function() {
                            this._applyEdit();
                            this._addEditBoxHandler &&
                                (f.disconnect(
                                    this._addEditBoxHandler
                                ), (this._addEditBoxHandler = null));
                            this._removeTextBox();
                            this.onEditEnd(this._graphic);
                            this._toolbar.onTextEditEnd(this._graphic);
                        },
                        _addTextBox: function(b, e) {
                            if (!this._editBox) {
                                var c;
                                b.symbol.text ||
                                    ((b.symbol.text = 'Tempt text'), b.setSymbol(b.symbol), (c =
                                        ''));
                                var l = this._createInputTextStyle(b, this._map);
                                '' !== c && (c = e || b.symbol.text);
                                this._editBox = h.create('input', { type: 'text', value: c });
                                a.set(this._editBox, l);
                                d.add(this._editBox, 'esriTextEditorInput');
                                this._map.container.appendChild(this._editBox);
                                this._editBox.focus();
                                this._editBoxKeyHandler = f.connect(
                                    this._editBox,
                                    'onkeyup',
                                    g.hitch(this, function(a) {
                                        (a.keyCode != k.ENTER && a.keyCode !== k.TAB) ||
                                        this._disable();
                                    })
                                );
                                this._editBoxBlurHandler = f.connect(
                                    this._editBox,
                                    'onblur',
                                    g.hitch(this, function(a) {
                                        this._disable();
                                    })
                                );
                                b.symbol.text = '';
                                b.setSymbol(b.symbol);
                                b.hide();
                                var n = this._editBox;
                                this._disableBoxHandler ||
                                    (this._disableBoxHandler = this._map.on(
                                        'zoom-start',
                                        g.hitch(this, function() {
                                            this._disable();
                                        })
                                    ));
                                this._moveBoxHandler = this._map.on('pan', function(b) {
                                    a.set(n, {
                                        left: this._editBoxLeft + b.delta.x + 'px',
                                        top: this._editBoxTop + b.delta.y + 'px',
                                    });
                                });
                                this._moveBoxStartHandler = this._map.on(
                                    'pan-start',
                                    function() {
                                        this._editBoxLeft = parseFloat(a.get(n, 'left'));
                                        this._editBoxTop = parseFloat(a.get(n, 'top'));
                                    }
                                );
                                this.onEditStart(b, this._editBox);
                                this._toolbar.onTextEditStart(b, this._editBox);
                            }
                        },
                        _removeTextBox: function() {
                            this._editBoxBlurHandler &&
                                (f.disconnect(
                                    this._editBoxBlurHandler
                                ), (this._editBoxBlurHandler = null));
                            this._editBox &&
                                (this._editBox.parentNode.removeChild(
                                    this._editBox
                                ), (this._editBox = null));
                            this._disableBoxHandler &&
                                (this._disableBoxHandler.remove(), (this._disableBoxHandler = null));
                            this._moveBoxHandler &&
                                (this._moveBoxHandler.remove(), (this._moveBoxHandler = null));
                            this._moveBoxStartHandler &&
                                (this._moveBoxStartHandler.remove(), (this._moveBoxStartHandler = null));
                            this._editBoxKeyHandler &&
                                (f.disconnect(
                                    this._editBoxKeyHandler
                                ), (this._editBoxKeyHandler = null));
                        },
                        _createInputTextStyle: function(a, b) {
                            b = a.getDojoShape().getTransformedBoundingBox();
                            var d = a.getLayer(),
                                d = d.hasLocalNavigationTransform() ?
                                { dx: 0, dy: 0 } :
                                d.getNavigationTransform(),
                                k = a.symbol.font;
                            return {
                                'font-family': k.family,
                                'font-size': k.size + 'px',
                                'font-style': k.style,
                                'font-variant': k.variant,
                                'font-weight': k.weight,
                                left: b[0].x + d.dx + 'px',
                                top: b[0].y + d.dy + 'px',
                                width: Math.abs(b[0].x - b[1].x) /
                                    Math.cos(a.symbol.angle / 180 * Math.PI) +
                                    'px',
                            };
                        },
                        _applyEdit: function() {
                            if (this._editBox)
                                if (this._editBox.value) {
                                    this._graphic.show();
                                    var a = this._graphic.symbol;
                                    a.text = this._editBox.value;
                                    this._graphic.setSymbol(a);
                                } else this._graphic.getLayer().remove(this._graphic);
                        },
                    });
                    g.setObject('toolbars.TextEditor', c, n);
                    return c;
                }
            );
        },
        'esri/dijit/editing/Add': function() {
            define(
                'dojo/_base/array dojo/_base/declare dojo/_base/lang dojo/has ../../kernel ./EditOperationBase'.split(
                    ' '
                ),
                function(c, g, f, b, e, h) {
                    g = g(h, {
                        declaredClass: 'esri.dijit.editing.Add',
                        type: 'edit',
                        label: 'Add Features',
                        constructor: function(b) {
                            b = b || {};
                            b.featureLayer &&
                                ((this._featureLayer = b.featureLayer), b.addedGraphics &&
                                    (this._addedGraphics = b.addedGraphics));
                        },
                        updateObjectIds: function(b, a) {
                            this.updateIds(this._featureLayer, this._addedGraphics, b, a);
                        },
                        performUndo: function() {
                            return this._featureLayer
                                .applyEdits(null, null, this._addedGraphics)
                                .then(
                                    f.hitch(this, function() {
                                        return { layer: this._featureLayer, operation: this };
                                    })
                                );
                        },
                        performRedo: function() {
                            var b = c.map(
                                this._addedGraphics,
                                function(a) {
                                    return a.attributes[this._featureLayer.objectIdField];
                                },
                                this
                            );
                            return this._featureLayer
                                .applyEdits(this._addedGraphics, null, null)
                                .then(
                                    f.hitch(this, function(a, d, e) {
                                        a = c.map(a, function(a) {
                                            return a.objectId;
                                        });
                                        return {
                                            oldIds: b,
                                            addedIds: a,
                                            layer: this._featureLayer,
                                            operation: this,
                                        };
                                    })
                                );
                        },
                    });
                    f.setObject('dijit.editing.Add', g, e);
                    return g;
                }
            );
        },
        'esri/dijit/editing/EditOperationBase': function() {
            define(
                [
                    'dojo/_base/array',
                    'dojo/_base/declare',
                    'dojo/has',
                    '../../kernel',
                    '../../OperationBase',
                ],
                function(c, g, f, b, e) {
                    g = g(e, {
                        declaredClass: 'esri.EditOperationBase',
                        updateIds: function(b, d, a, k) {
                            c.forEach(d, function(d, e) {
                                var h = d[b.objectIdField];
                                c.forEach(a, function(a, e) {
                                    h === a && (d[b.objectIdField] = k[e]);
                                });
                            });
                        },
                    });
                    return (b.EditOperationBase = g);
                }
            );
        },
        'esri/dijit/editing/Update': function() {
            define(
                'dojo/_base/array dojo/_base/declare dojo/_base/lang dojo/has ../../kernel ../../geometry/jsonUtils ./EditOperationBase'.split(
                    ' '
                ),
                function(c, g, f, b, e, h, d) {
                    c = g(d, {
                        declaredClass: 'esri.dijit.editing.Update',
                        type: 'edit',
                        label: 'Update Features',
                        constructor: function(a) {
                            var b;
                            a = a || {};
                            if (
                                a.featureLayer &&
                                ((this._featureLayer = a.featureLayer), a.preUpdatedGraphics)
                            ) {
                                this._preUpdatedGraphicsGeometries = [];
                                this._preUpdatedGraphicsAttributes = [];
                                for (b = 0; b < a.preUpdatedGraphics.length; b++)
                                    this._preUpdatedGraphicsGeometries.push(
                                        a.preUpdatedGraphics[b].geometry.toJson()
                                    ), this._preUpdatedGraphicsAttributes.push(
                                        a.preUpdatedGraphics[b].attributes
                                    );
                                if (a.postUpdatedGraphics)
                                    for (
                                        (this._postUpdatedGraphics =
                                            a.postUpdatedGraphics), (this._postUpdatedGraphicsGeometries = []), (this._postUpdatedGraphicsAttributes = []), (b = 0); b < a.postUpdatedGraphics.length; b++
                                    )
                                        a.postUpdatedGraphics[b].geometry ?
                                        this._postUpdatedGraphicsGeometries.push(
                                            a.postUpdatedGraphics[b].geometry.toJson()
                                        ) :
                                        this._postUpdatedGraphicsGeometries.push(
                                            a.postUpdatedGraphics[b].geometry
                                        ), this._postUpdatedGraphicsAttributes.push(
                                            f.clone(a.postUpdatedGraphics[b].attributes)
                                        );
                            }
                        },
                        updateObjectIds: function(a, b) {
                            this.updateIds(
                                this._featureLayer,
                                this._preUpdatedGraphicsAttributes,
                                a,
                                b
                            );
                            this.updateIds(
                                this._featureLayer,
                                this._postUpdatedGraphicsAttributes,
                                a,
                                b
                            );
                        },
                        performUndo: function() {
                            var a;
                            for (a = 0; a < this._postUpdatedGraphics.length; a++)
                                this._preUpdatedGraphicsGeometries[a] ?
                                this._postUpdatedGraphics[a].setGeometry(
                                    h.fromJson(this._preUpdatedGraphicsGeometries[a])
                                ) :
                                this._postUpdatedGraphics[a].setGeometry(
                                    this._preUpdatedGraphicsGeometries[a]
                                ), this._postUpdatedGraphics[a].setAttributes(
                                    this._preUpdatedGraphicsAttributes[a]
                                );
                            return this._featureLayer
                                .applyEdits(null, this._postUpdatedGraphics, null)
                                .then(
                                    f.hitch(this, function() {
                                        return { layer: this._featureLayer, operation: this };
                                    })
                                );
                        },
                        performRedo: function() {
                            var a;
                            for (a = 0; a < this._postUpdatedGraphics.length; a++)
                                this._postUpdatedGraphicsGeometries[a] ?
                                this._postUpdatedGraphics[a].setGeometry(
                                    h.fromJson(this._postUpdatedGraphicsGeometries[a])
                                ) :
                                this._postUpdatedGraphics[a].setGeometry(
                                    this._postUpdatedGraphicsGeometries[a]
                                ), this._postUpdatedGraphics[a].setAttributes(
                                    this._postUpdatedGraphicsAttributes[a]
                                );
                            return this._featureLayer
                                .applyEdits(null, this._postUpdatedGraphics, null)
                                .then(
                                    f.hitch(this, function() {
                                        return { layer: this._featureLayer, operation: this };
                                    })
                                );
                        },
                    });
                    f.setObject('dijit.editing.Update', c, e);
                    return c;
                }
            );
        },
        'esri/dijit/editing/Delete': function() {
            define(
                'dojo/_base/array dojo/_base/declare dojo/_base/lang dojo/has ../../kernel ./EditOperationBase'.split(
                    ' '
                ),
                function(c, g, f, b, e, h) {
                    g = g(h, {
                        declaredClass: 'esri.dijit.editing.Delete',
                        type: 'edit',
                        label: 'Delete Features',
                        constructor: function(b) {
                            b = b || {};
                            b.featureLayer &&
                                ((this._featureLayer = b.featureLayer), b.deletedGraphics &&
                                    (this._deletedGraphics = b.deletedGraphics));
                        },
                        updateObjectIds: function(b, a) {
                            this.updateIds(this._featureLayer, this._deletedGraphics, b, a);
                        },
                        performUndo: function() {
                            var b = c.map(
                                this._deletedGraphics,
                                function(a) {
                                    return a.attributes[this._featureLayer.objectIdField];
                                },
                                this
                            );
                            return this._featureLayer
                                .applyEdits(this._deletedGraphics, null, null)
                                .then(
                                    f.hitch(this, function(a, d, e) {
                                        a = c.map(a, function(a) {
                                            return a.objectId;
                                        });
                                        return {
                                            oldIds: b,
                                            addedIds: a,
                                            layer: this._featureLayer,
                                            operation: this,
                                        };
                                    })
                                );
                        },
                        performRedo: function() {
                            return this._featureLayer
                                .applyEdits(null, null, this._deletedGraphics)
                                .then(
                                    f.hitch(this, function() {
                                        return { layer: this._featureLayer, operation: this };
                                    })
                                );
                        },
                    });
                    f.setObject('dijit.editing.Delete', g, e);
                    return g;
                }
            );
        },
        'esri/dijit/editing/Cut': function() {
            define(
                'dojo/_base/array dojo/_base/declare dojo/_base/lang dojo/has ../../kernel ../../geometry/jsonUtils ./EditOperationBase'.split(
                    ' '
                ),
                function(c, g, f, b, e, h, d) {
                    g = g(d, {
                        declaredClass: 'esri.dijit.editing.Cut',
                        type: 'edit',
                        label: 'Cut Features',
                        constructor: function(a) {
                            var b;
                            a = a || {};
                            if (
                                a.featureLayer &&
                                ((this._featureLayer = a.featureLayer), a.addedGraphics &&
                                    ((this._addedGraphics =
                                        a.addedGraphics), a.preUpdatedGraphics))
                            ) {
                                this._preUpdatedGraphicsGeometries = [];
                                this._preUpdatedGraphicsAttributes = [];
                                for (b = 0; b < a.preUpdatedGraphics.length; b++)
                                    this._preUpdatedGraphicsGeometries.push(
                                        a.preUpdatedGraphics[b].geometry.toJson()
                                    ), this._preUpdatedGraphicsAttributes.push(
                                        a.preUpdatedGraphics[b].attributes
                                    );
                                if (a.postUpdatedGraphics)
                                    for (
                                        (this._postUpdatedGraphics =
                                            a.postUpdatedGraphics), (this._postUpdatedGraphicsGeometries = []), (this._postUpdatedGraphicsAttributes = []), (b = 0); b < a.postUpdatedGraphics.length; b++
                                    )
                                        this._postUpdatedGraphicsGeometries.push(
                                            a.postUpdatedGraphics[b].geometry.toJson()
                                        ), this._postUpdatedGraphicsAttributes.push(
                                            f.clone(a.postUpdatedGraphics[b].attributes)
                                        );
                            }
                        },
                        updateObjectIds: function(a, b) {
                            this.updateIds(
                                this._featureLayer,
                                this._preUpdatedGraphicsAttributes,
                                a,
                                b
                            );
                            this.updateIds(
                                this._featureLayer,
                                this._postUpdatedGraphicsAttributes,
                                a,
                                b
                            );
                            this.updateIds(this._featureLayer, this._addedGraphics, a, b);
                        },
                        performUndo: function() {
                            var a;
                            for (a = 0; a < this._postUpdatedGraphics.length; a++)
                                this._postUpdatedGraphics[a].setGeometry(
                                    h.fromJson(this._preUpdatedGraphicsGeometries[a])
                                ), this._postUpdatedGraphics[a].setAttributes(
                                    this._preUpdatedGraphicsAttributes[a]
                                );
                            return this._featureLayer
                                .applyEdits(
                                    null,
                                    this._postUpdatedGraphics,
                                    this._addedGraphics
                                )
                                .then(
                                    f.hitch(this, function() {
                                        return { layer: this._featureLayer, operation: this };
                                    })
                                );
                        },
                        performRedo: function() {
                            var a;
                            for (a = 0; a < this._postUpdatedGraphics.length; a++)
                                this._postUpdatedGraphics[a].setGeometry(
                                    h.fromJson(this._postUpdatedGraphicsGeometries[a])
                                ), this._postUpdatedGraphics[a].setAttributes(
                                    this._postUpdatedGraphicsAttributes[a]
                                );
                            var b = c.map(
                                this._addedGraphics,
                                function(a) {
                                    return a.attributes[this._featureLayer.objectIdField];
                                },
                                this
                            );
                            return this._featureLayer
                                .applyEdits(
                                    this._addedGraphics,
                                    this._postUpdatedGraphics,
                                    null
                                )
                                .then(
                                    f.hitch(this, function(a, d, k) {
                                        a = c.map(a, function(a) {
                                            return a.objectId;
                                        });
                                        return {
                                            oldIds: b,
                                            addedIds: a,
                                            layer: this._featureLayer,
                                            operation: this,
                                        };
                                    })
                                );
                        },
                    });
                    f.setObject('dijit.editing.Cut', g, e);
                    return g;
                }
            );
        },
        'esri/dijit/editing/Union': function() {
            define(
                'dojo/_base/array dojo/_base/declare dojo/_base/lang dojo/has ../../kernel ../../geometry/jsonUtils ./EditOperationBase'.split(
                    ' '
                ),
                function(c, g, f, b, e, h, d) {
                    g = g(d, {
                        declaredClass: 'esri.dijit.editing.Union',
                        type: 'edit',
                        label: 'Union Features',
                        constructor: function(a) {
                            a = a || {};
                            this._featureLayer = a.featureLayer;
                            this._deletedGraphics = a.deletedGraphics;
                            this._preUpdatedGraphics = a.preUpdatedGraphics;
                            this._postUpdatedGraphics = a.postUpdatedGraphics;
                            this._preUpdatedGraphicsGeometries = [];
                            this._preUpdatedGraphicsAttributes = [];
                            this._postUpdatedGraphicsGeometries = [];
                            this._postUpdatedGraphicsAttributes = [];
                            var b;
                            for (b = 0; b < a.preUpdatedGraphics.length; b++)
                                this._preUpdatedGraphicsGeometries.push(
                                    a.preUpdatedGraphics[b].geometry.toJson()
                                ), this._preUpdatedGraphicsAttributes.push(
                                    a.preUpdatedGraphics[b].attributes
                                );
                            for (b = 0; b < a.postUpdatedGraphics.length; b++)
                                this._postUpdatedGraphicsGeometries.push(
                                    a.postUpdatedGraphics[b].geometry.toJson()
                                ), this._postUpdatedGraphicsAttributes.push(
                                    f.clone(a.postUpdatedGraphics[b].attributes)
                                );
                        },
                        updateObjectIds: function(a, b) {
                            this.updateIds(
                                this._featureLayer,
                                this._preUpdatedGraphicsAttributes,
                                a,
                                b
                            );
                            this.updateIds(
                                this._featureLayer,
                                this._postUpdatedGraphicsAttributes,
                                a,
                                b
                            );
                            this.updateIds(this._featureLayer, this._deletedGraphics, a, b);
                        },
                        performUndo: function() {
                            var a;
                            for (a = 0; a < this._postUpdatedGraphics.length; a++)
                                this._postUpdatedGraphics[a].setGeometry(
                                    h.fromJson(this._preUpdatedGraphicsGeometries[a])
                                ), this._postUpdatedGraphics[a].setAttributes(
                                    this._preUpdatedGraphicsAttributes[a]
                                );
                            var b = c.map(
                                this._deletedGraphics,
                                function(a) {
                                    return a.attributes[this._featureLayer.objectIdField];
                                },
                                this
                            );
                            return this._featureLayer
                                .applyEdits(
                                    this._deletedGraphics,
                                    this._postUpdatedGraphics,
                                    null
                                )
                                .then(
                                    f.hitch(this, function(a, d, k) {
                                        a = c.map(a, function(a) {
                                            return a.objectId;
                                        });
                                        return {
                                            oldIds: b,
                                            addedIds: a,
                                            layer: this._featureLayer,
                                            operation: this,
                                        };
                                    })
                                );
                        },
                        performRedo: function() {
                            var a;
                            for (a = 0; a < this._postUpdatedGraphics.length; a++)
                                this._postUpdatedGraphics[a].setGeometry(
                                    h.fromJson(this._postUpdatedGraphicsGeometries[a])
                                ), this._postUpdatedGraphics[a].setAttributes(
                                    this._postUpdatedGraphicsAttributes[a]
                                );
                            return this._featureLayer
                                .applyEdits(
                                    null,
                                    this._postUpdatedGraphics,
                                    this._deletedGraphics
                                )
                                .then(
                                    f.hitch(this, function() {
                                        return {
                                            layer: this._featureLayer,
                                            operation: this,
                                        };
                                    })
                                );
                        },
                    });
                    f.setObject('dijit.editing.Union', g, e);
                    return g;
                }
            );
        },
        'esri/dijit/editing/toolbars/Drawing': function() {
            define(
                'dojo/_base/declare dojo/_base/lang dojo/_base/array dojo/_base/connect dojo/has dijit/_CssStateMixin ../Util ./ToolbarBase ../tools/ButtonToolBase ../tools/Cut ../tools/Union ../tools/Reshape ../tools/Editing ../tools/EditingTools ../tools/Selection ../tools/SelectionTools ../../../kernel'.split(
                    ' '
                ),
                function(c, g, f, b, e, h, d, a, k, n, l, m, p, r, u, t, q) {
                    c = c([a, h], {
                        declaredClass: 'esri.dijit.editing.toolbars.Drawing',
                        onShowAttributeInspector: function() {},
                        _activateTool: function(a, b) {
                            this._settings.editor._activeTool = a;
                            'EDITING' !== a &&
                                this._settings.templatePicker.clearSelection();
                            'ATTRIBUTES' !== a &&
                                this._settings.editor._hideAttributeInspector();
                            'CLEAR' !== a && this.inherited(arguments);
                        },
                        _initializeToolbar: function() {
                            f.forEach(
                                this._settings.layers,
                                function(a) {
                                    this._tbConnects.push(
                                        b.connect(a, 'onSelectionComplete', this, '_updateUI')
                                    );
                                },
                                this
                            );
                        },
                        activateEditing: function(a, b) {
                            this._tools.EDITING._activateTool(a, b.geometryType);
                            this._activeTool = this._tools.EDITING;
                            this._activeTool.setChecked(!0);
                        },
                        _updateUI: function() {
                            this._settings.undoManager &&
                                (this._tools.UNDO.set(
                                    'disabled', !1 === this._settings.undoManager.canUndo
                                ), this._tools.REDO.set(
                                    'disabled', !1 === this._settings.undoManager.canRedo
                                ));
                            this._selectedFeatures = d.getSelection(this._settings.layers);
                            var a = this._selectedFeatures.length;
                            this._tools.DELETE && this._tools.DELETE.set('disabled', 0 >= a);
                            this._tools.CLEAR && this._tools.CLEAR.set('disabled', 0 >= a);
                            this._tools.ATTRIBUTES &&
                                this._tools.ATTRIBUTES.set('disabled', 0 >= a);
                            this._tools.UNION && this._tools.UNION.set('disabled', 2 > a);
                        },
                        _toolFinished: function(a) {
                            if (
                                'ATTRIBUTES' === a &&
                                this._selectedFeatures &&
                                this._selectedFeatures.length
                            )
                                this.onShowAttributeInspector(this._selectedFeatures[0]);
                            if (
                                'SELECT' === a ||
                                'CUT' === a ||
                                'RESHAPING' === a ||
                                'EDITING' === a
                            )
                                this._activeTool.deactivate(), this._activeTool.setChecked(!1), (this._activeTool = null);
                            if ('DELETE' === a) this.onDelete();
                            this._settings.editor._activeTool = null;
                            this._updateUI();
                        },
                        _createTools: function() {
                            this._tools.SELECT = new u({
                                settings: this._settings,
                                onClick: g.hitch(this, '_activateTool', 'SELECT', !0),
                                onFinished: g.hitch(this, '_toolFinished', 'SELECT'),
                            });
                            this.addChild(this._tools.SELECT);
                            this._tools.CLEAR = new k(
                                g.mixin(t.selectClear, {
                                    settings: this._settings,
                                    onClick: g.hitch(
                                        this._settings.editor,
                                        '_clearSelection', !1
                                    ),
                                })
                            );
                            this.addChild(this._tools.CLEAR);
                            this._createSeparator();
                            this._tools.ATTRIBUTES = new k(
                                g.mixin(r.attributes, {
                                    settings: this._settings,
                                    onClick: g.hitch(this, '_toolFinished', 'ATTRIBUTES'),
                                })
                            );
                            this.addChild(this._tools.ATTRIBUTES);
                            this._createSeparator();
                            this._tools.EDITING = new p({
                                settings: this._settings,
                                onClick: g.hitch(this, '_activateTool', 'EDITING', !0),
                                onApplyEdits: g.hitch(this, 'onApplyEdits'),
                                onFinished: g.hitch(this, '_toolFinished', 'EDITING'),
                            });
                            this.addChild(this._tools.EDITING);
                            this._tools.DELETE = new k(
                                g.mixin(r.del, {
                                    settings: this._settings,
                                    onClick: g.hitch(this, '_toolFinished', 'DELETE'),
                                })
                            );
                            this.addChild(this._tools.DELETE);
                            this._settings.toolbarOptions &&
                                ((this._settings.toolbarOptions.cutVisible ||
                                        this._settings.toolbarOptions.mergeVisible ||
                                        this._settings.toolbarOptions.reshapeVisible) &&
                                    this._createSeparator(), this._settings.toolbarOptions
                                    .cutVisible &&
                                    ((this._tools.CUT = new n({
                                        settings: this._settings,
                                        onFinished: g.hitch(this, '_toolFinished', 'CUT'),
                                        onClick: g.hitch(this, '_activateTool', 'CUT', !0),
                                        onApplyEdits: g.hitch(this, 'onApplyEdits'),
                                    })), this.addChild(this._tools.CUT)), this._settings
                                    .toolbarOptions.mergeVisible &&
                                    ((this._tools.UNION = new l({
                                        settings: this._settings,
                                        onFinished: g.hitch(this, '_toolFinished', 'UNION'),
                                        onApplyEdits: g.hitch(this, 'onApplyEdits'),
                                    })), this.addChild(this._tools.UNION)), this._settings
                                    .toolbarOptions.reshapeVisible &&
                                    ((this._tools.RESHAPING = new m({
                                        settings: this._settings,
                                        onClick: g.hitch(this, '_activateTool', 'RESHAPING', !0),
                                        onFinished: g.hitch(this, '_toolFinished', 'RESHAPING'),
                                        onApplyEdits: g.hitch(this, 'onApplyEdits'),
                                    })), this.addChild(this._tools.RESHAPING)));
                            this._settings.enableUndoRedo &&
                                (this._createSeparator(), (this._tools.UNDO = new k(
                                    g.mixin(r.undo, {
                                        settings: this._settings,
                                        disabled: !0,
                                        onClick: g.hitch(this, function() {
                                            this._tools.UNDO.set('disabled', !0);
                                            this._tools.REDO.set('disabled', !0);
                                            this._settings.editor._undo();
                                        }),
                                    })
                                )), this.addChild(
                                    this._tools.UNDO
                                ), (this._tools.REDO = new k(
                                    g.mixin(r.redo, {
                                        settings: this._settings,
                                        disabled: !0,
                                        onClick: g.hitch(this, function() {
                                            this._tools.UNDO.set('disabled', !0);
                                            this._tools.REDO.set('disabled', !0);
                                            this._settings.editor._redo();
                                        }),
                                    })
                                )), this.addChild(this._tools.REDO));
                        },
                    });
                    g.setObject('dijit.editing.toolbars.Drawing', c, q);
                    return c;
                }
            );
        },
        'esri/dijit/editing/toolbars/ToolbarBase': function() {
            define(
                'dojo/_base/declare dojo/_base/lang dojo/_base/array dojo/_base/connect dojo/has dijit/Toolbar dijit/ToolbarSeparator ../../../kernel ../../../lang'.split(
                    ' '
                ),
                function(c, g, f, b, e, h, d, a, k) {
                    c = c([h], {
                        declaredClass: 'esri.dijit.editing.toolbars.ToolbarBase',
                        _enabled: !0,
                        graphicsAdded: function() {},
                        drawEnd: function() {},
                        onApplyEdits: function() {},
                        onDelete: function() {},
                        constructor: function(a, b) {
                            a &&
                                a.settings &&
                                ((this._tools = []), (this._tbConnects = []), this._initialize(
                                    a.settings
                                ));
                        },
                        postCreate: function() {
                            this._createTools();
                            this.deactivate();
                        },
                        destroy: function() {
                            var a, d = this._tools;
                            for (a in d)
                                d.hasOwnProperty(a) &&
                                k.isDefined(this._tools[a]) &&
                                this._tools[a].destroy();
                            f.forEach(this._tbConnects, b.disconnect);
                            this.inherited(arguments);
                        },
                        activate: function(a) {
                            this._enabled = !0;
                        },
                        deactivate: function() {
                            var a;
                            this._enabled = !1;
                            this._geometryType = this._layer = null;
                            var b = this._tools;
                            for (a in b)
                                b.hasOwnProperty(a) &&
                                (this._tools[a].deactivate(), this._tools[a].setChecked(!1));
                        },
                        isEnabled: function() {
                            return this._enabled;
                        },
                        setActiveSymbol: function(a) {
                            this._activeSymbol = a;
                        },
                        _getSymbol: function() {},
                        _createTools: function() {},
                        _initialize: function(a) {
                            this._settings = a;
                            this._toolbar = a.drawToolbar;
                            this._editToolbar = a.editToolbar;
                            this._initializeToolbar();
                        },
                        _activateTool: function(a, b) {
                            this._activeTool && this._activeTool.deactivate();
                            !0 === b && this._activeTool == this._tools[a] ?
                                (this._activeTool.setChecked(!1), (this._activeTool = null)) :
                                ((this._activeTool = this._tools[
                                    a
                                ]), this._activeTool.setChecked(!0), this._activeTool.activate(null));
                        },
                        _createSeparator: function() {
                            this.addChild(new d());
                        },
                    });
                    g.setObject('dijit.editing.toolbars.ToolbarBase', c, a);
                    return c;
                }
            );
        },
        'esri/dijit/editing/tools/ButtonToolBase': function() {
            define(
                'dojo/_base/declare dojo/_base/lang dojo/has dijit/form/Button ./ToolBase ../../../kernel'.split(
                    ' '
                ),
                function(c, g, f, b, e, h) {
                    c = c([b, e], {
                        declaredClass: 'esri.dijit.editing.tools.ButtonToolBase',
                        postCreate: function() {
                            this.inherited(arguments);
                            this._setShowLabelAttr && this._setShowLabelAttr(!1);
                        },
                        destroy: function() {
                            b.prototype.destroy.apply(this, arguments);
                            e.prototype.destroy.apply(this, arguments);
                        },
                    });
                    g.setObject('dijit.editing.tools.ButtonToolBase', c, h);
                    return c;
                }
            );
        },
        'esri/dijit/editing/tools/ToolBase': function() {
            define(
                [
                    'dojo/_base/declare',
                    'dojo/_base/lang',
                    'dojo/has',
                    '../../../kernel',
                    'dojo/i18n!../../../nls/jsapi',
                ],
                function(c, g, f, b, e) {
                    c = c(null, {
                        declaredClass: 'esri.dijit.editing.tools.ToolBase',
                        _enabled: !0,
                        showLabel: !1,
                        constructor: function(b, d) {
                            b = b || {};
                            g.mixin(this, b);
                            this.label = this._label ?
                                e.widgets.editor.tools[this._label] :
                                '';
                            this._settings = b.settings;
                            this._toolbar = b.settings.drawToolbar;
                            this._editToolbar = b.settings.editToolbar;
                            this._initializeTool();
                        },
                        onFinished: function() {},
                        onDrawEnd: function() {},
                        onApplyEdits: function() {},
                        postCreate: function() {
                            this.deactivate();
                            this.inherited(arguments);
                        },
                        destroy: function() {},
                        activate: function(b) {
                            this._toolbar && this._toolbar.deactivate();
                            this._editToolbar && this._editToolbar.deactivate();
                            this._enabled &&
                                ((this._checked = !0), (this._layer = b), this._toolbar &&
                                    this._drawType &&
                                    this._toolbar.activate(this._drawType));
                        },
                        deactivate: function() {
                            this._toolbar && this._toolbar.deactivate();
                            this._editToolbar && this._editToolbar.deactivate();
                            this.setChecked(!1);
                            this._updateUI();
                        },
                        setEnabled: function(b) {
                            this._enabled = b;
                            this._updateUI();
                        },
                        setChecked: function(b) {
                            this._checked = b;
                        },
                        enable: function(b) {
                            this._updateUI();
                        },
                        isEnabled: function() {
                            return this._enabled;
                        },
                        getToolName: function() {
                            return this._toolName;
                        },
                        _initializeTool: function() {},
                        _updateUI: function() {
                            this.disabled = !this._enabled;
                            this.attr(
                                'iconClass',
                                this._enabled ? this._enabledIcon : this._disabledIcon
                            );
                        },
                    });
                    g.setObject('dijit.editing.tools.ToolBase', c, b);
                    return c;
                }
            );
        },
        'esri/dijit/editing/tools/Cut': function() {
            define(
                'dojo/_base/declare dojo/_base/lang dojo/_base/array dojo/_base/connect dojo/has dojo/DeferredList ../../../graphicsUtils ../../../graphic ../../../tasks/query ../../../layers/FeatureLayer ../../../toolbars/draw ../Cut ./ToggleToolBase ../../../kernel'.split(
                    ' '
                ),
                function(c, g, f, b, e, h, d, a, k, n, l, m, p, r) {
                    c = c([p], {
                        declaredClass: 'esri.dijit.editing.tools.Cut',
                        id: 'btnFeatureCut',
                        _enabledIcon: 'toolbarIcon cutIcon',
                        _disabledIcon: 'toolbarIcon cutIcon',
                        _drawType: l.POLYLINE,
                        _enabled: !0,
                        _label: 'NLS_cutLbl',
                        _cutConnects: [],
                        activate: function() {
                            this._cutConnects.push(
                                b.connect(this._toolbar, 'onDrawEnd', this, '_onDrawEnd')
                            );
                            this.inherited(arguments);
                        },
                        deactivate: function() {
                            this.inherited(arguments);
                            f.forEach(this._cutConnects, b.disconnect);
                            this._cutConnects = [];
                            this._edits = [];
                        },
                        _onDrawEnd: function(a) {
                            var d = (this._cutLayers = f.filter(
                                this._settings.layers,
                                function(a) {
                                    return (
                                        'esriGeometryPolygon' === a.geometryType ||
                                        ('esriGeometryPolyline' === a.geometryType &&
                                            a.visible &&
                                            a._isMapAtVisibleScale())
                                    );
                                }
                            ));
                            this._cutConnects = this._cutConnects.concat(
                                f.map(
                                    d,
                                    g.hitch(this, function(a) {
                                        return b.connect(
                                            a,
                                            'onEditsComplete',
                                            g.hitch(this, function(a, b, d) {
                                                if (this._settings.undoRedoManager) {
                                                    var k = this._settings.undoRedoManager;
                                                    f.forEach(
                                                        this._edits,
                                                        g.hitch(this, function(a) {
                                                            k.add(
                                                                new m({
                                                                    featureLayer: a.layer,
                                                                    addedGraphics: a.adds,
                                                                    preUpdatedGraphics: a.preUpdates,
                                                                    postUpdatedGraphics: a.updates,
                                                                })
                                                            );
                                                        }),
                                                        this
                                                    );
                                                }
                                                this.onFinished();
                                            })
                                        );
                                    })
                                )
                            );
                            var e = new k();
                            e.geometry = a;
                            f.forEach(
                                d,
                                function(a, b) {
                                    this._settings.editor._selectionHelper.selectFeatures(
                                        [a],
                                        e,
                                        n.SELECTION_NEW,
                                        g.hitch(this, '_cutFeatures', a, e)
                                    );
                                },
                                this
                            );
                        },
                        _cutFeatures: function(a, b, k) {
                            if (k && k.length) {
                                this._edits = [];
                                var e = [];
                                e.push(
                                    this._settings.geometryService.cut(
                                        d.getGeometries(k),
                                        b.geometry,
                                        g.hitch(this, '_cutHandler', a, k)
                                    )
                                );
                                new h(e).addCallback(
                                    g.hitch(this, function() {
                                        this.onApplyEdits(this._edits);
                                    })
                                );
                            }
                        },
                        _cutHandler: function(b, d, k) {
                            var e = [],
                                c = [],
                                h = f.map(d, function(b) {
                                    return new a(g.clone(b.toJson()));
                                }),
                                l,
                                m;
                            f.forEach(
                                k.cutIndexes,
                                function(b, h) {
                                    l != b ?
                                        ((l = b), c.push(d[b].setGeometry(k.geometries[h]))) :
                                        ((m = new a(
                                            k.geometries[h],
                                            null,
                                            g.mixin({}, d[b].attributes),
                                            null
                                        )), (m.attributes[
                                            d[0].getLayer().objectIdField
                                        ] = null), e.push(m));
                                },
                                this
                            );
                            this._edits.push({ layer: b, adds: e, updates: c, preUpdates: h });
                        },
                    });
                    g.setObject('dijit.editing.tools.Cut', c, r);
                    return c;
                }
            );
        },
        'esri/dijit/editing/tools/ToggleToolBase': function() {
            define(
                'dojo/_base/declare dojo/_base/lang dojo/has dijit/form/ToggleButton ./ToolBase ../../../kernel'.split(
                    ' '
                ),
                function(c, g, f, b, e, h) {
                    c = c([b, e], {
                        declaredClass: 'esri.dijit.editing.tools.ToggleToolBase',
                        postCreate: function() {
                            this.inherited(arguments);
                            this._setShowLabelAttr && this._setShowLabelAttr(!1);
                        },
                        destroy: function() {
                            b.prototype.destroy.apply(this, arguments);
                            e.prototype.destroy.apply(this, arguments);
                        },
                        setChecked: function(d) {
                            b.prototype.setChecked.apply(this, arguments);
                        },
                    });
                    g.setObject('dijit.editing.tools.ToggleToolBase', c, h);
                    return c;
                }
            );
        },
        'esri/dijit/editing/tools/Union': function() {
            define(
                'dojo/_base/declare dojo/_base/lang dojo/_base/array dojo/has ../../../graphicsUtils ../../../graphic ../../../toolbars/draw ../Union ./ButtonToolBase ../../../kernel'.split(
                    ' '
                ),
                function(c, g, f, b, e, h, d, a, k, n) {
                    c = c([k], {
                        declaredClass: 'esri.dijit.editing.tools.Union',
                        id: 'btnFeatureUnion',
                        _enabledIcon: 'toolbarIcon unionIcon',
                        _disabledIcon: 'toolbarIcon unionIcon',
                        _drawType: d.POLYLINE,
                        _enabled: !0,
                        _label: 'NLS_unionLbl',
                        _onClick: function(b) {
                            this._settings.editor._activeTool = 'UNION';
                            b = f.filter(this._settings.layers, function(a) {
                                return (
                                    'esriGeometryPolygon' === a.geometryType &&
                                    a.visible &&
                                    a._isMapAtVisibleScale()
                                );
                            });
                            var d = [],
                                k = 0;
                            f.forEach(
                                b,
                                function(b, c) {
                                    var l = b.getSelectedFeatures();
                                    2 <= l.length &&
                                        (k++, this._settings.geometryService.union(
                                            e.getGeometries(l),
                                            g.hitch(this, function(e) {
                                                var c = l.shift(),
                                                    m = [],
                                                    n = [];
                                                m.push(new h(c.toJson()));
                                                n.push(c.setGeometry(e));
                                                d.push({
                                                    layer: b,
                                                    updates: n,
                                                    deletes: l,
                                                    preUpdates: m,
                                                });
                                                k--;
                                                if (0 >= k)
                                                    this.onApplyEdits(
                                                        d,
                                                        g.hitch(this, function() {
                                                            if (this._settings.undoRedoManager) {
                                                                var b = this._settings.undoRedoManager;
                                                                f.forEach(
                                                                    this._edits,
                                                                    g.hitch(this, function(d) {
                                                                        b.add(
                                                                            new a({
                                                                                featureLayer: d.layer,
                                                                                deletedGraphics: d.deletes,
                                                                                preUpdatedGraphics: d.preUpdates,
                                                                                postUpdatedGraphics: d.updates,
                                                                            })
                                                                        );
                                                                    }),
                                                                    this
                                                                );
                                                            }
                                                            this._settings.editor._selectionHelper.clearSelection(!1);
                                                            this.onFinished();
                                                        })
                                                    );
                                            })
                                        ));
                                },
                                this
                            );
                        },
                    });
                    g.setObject('dijit.editing.tools.Union', c, n);
                    return c;
                }
            );
        },
        'esri/dijit/editing/tools/Reshape': function() {
            define(
                'dojo/_base/declare dojo/_base/lang dojo/_base/array dojo/_base/connect dojo/has ../../../graphic ../../../layers/FeatureLayer ../../../tasks/query ../../../toolbars/draw ./ToggleToolBase ../../../kernel'.split(
                    ' '
                ),
                function(c, g, f, b, e, h, d, a, k, n, l) {
                    c = c([n], {
                        declaredClass: 'esri.dijit.editing.tools.Reshape',
                        id: 'btnFeatureReshape',
                        _enabledIcon: 'toolbarIcon reshapeIcon',
                        _disabledIcon: 'toolbarIcon reshapeIcon',
                        _drawType: k.POLYLINE,
                        _enabled: !0,
                        _label: 'NLS_reshapeLbl',
                        activate: function() {
                            b.disconnect(this._rConnect);
                            this._rConnect = b.connect(
                                this._toolbar,
                                'onDrawEnd',
                                this,
                                '_onDrawEnd'
                            );
                            this.inherited(arguments);
                        },
                        deactivate: function() {
                            this.inherited(arguments);
                            b.disconnect(this._rConnect);
                            delete this._rConnect;
                        },
                        _onDrawEnd: function(b) {
                            var k = this._settings.layers,
                                e = new a();
                            e.geometry = b;
                            b = this._reshapeLayers = f.filter(k, function(a) {
                                return (
                                    'esriGeometryPolygon' === a.geometryType ||
                                    'esriGeometryPolyline'
                                );
                            });
                            this._settings.editor._selectionHelper.selectFeatures(
                                b,
                                e,
                                d.SELECTION_NEW,
                                g.hitch(this, '_reshape', e)
                            );
                        },
                        _reshape: function(a, b) {
                            if (1 === b.length) {
                                var d = [],
                                    k = [],
                                    e = [],
                                    c = b[0],
                                    l = c.getLayer();
                                this._settings.geometryService.reshape(
                                    c.geometry,
                                    a.geometry,
                                    g.hitch(this, function(a) {
                                        'polyline' === a.type && a.paths && 0 === a.paths.length ?
                                            (this._settings.editor._selectionHelper.clearSelection(!1), this.onFinished()) :
                                            'polygon' === a.type && a.rings && 0 === a.rings.length ?
                                            (this._settings.editor._selectionHelper.clearSelection(!1), this.onFinished()) :
                                            (e.push(new h(c.toJson())), k.push(
                                                c.setGeometry(a)
                                            ), d.push({
                                                layer: l,
                                                updates: k,
                                                preUpdates: e,
                                            }), this.onApplyEdits(
                                                d,
                                                g.hitch(this, function() {
                                                    this._settings.editor._selectionHelper.clearSelection(!1);
                                                    this.onFinished();
                                                })
                                            ));
                                    })
                                );
                            }
                        },
                    });
                    g.setObject('dijit.editing.tools.Reshape', c, l);
                    return c;
                }
            );
        },
        'esri/dijit/editing/tools/Editing': function() {
            define(
                'dojo/_base/declare dojo/_base/lang dojo/_base/array dojo/has ../../../layers/FeatureTemplate ./Edit ./EditingTools ./DropDownToolBase ../../../kernel ../../../lang'.split(
                    ' '
                ),
                function(c, g, f, b, e, h, d, a, k, n) {
                    c = c([a], {
                        declaredClass: 'esri.dijit.editing.tools.Editing',
                        _enabled: !1,
                        deactivate: function() {
                            this._enabled &&
                                ((this._enabled = !1), this.inherited(
                                    arguments
                                ), this._settings.templatePicker.clearSelection());
                        },
                        onItemClicked: function(a, b) {
                            this.inherited(arguments);
                            this._activeTool === this._tools.AUTOCOMPLETE &&
                                (this._settings.editor._drawingTool =
                                    e.TOOL_AUTO_COMPLETE_POLYGON);
                        },
                        _activateTool: function(a, b) {
                            var d;
                            this.enable(b);
                            for (d in this._tools)
                                this._tools.hasOwnProperty(d) &&
                                (this.dropDown.removeChild(this._tools[d]), !0 ===
                                    this._tools[d]._enabled &&
                                    this.dropDown.addChild(this._tools[d]));
                            if (this._geometryType !== b || !1 === this._activeTool._enabled)
                                this._activeTool = this._tools[a.toUpperCase()];
                            this._geometryType = b;
                            this._activeTool.activate();
                            this._activeTool.setChecked(!0);
                            this._updateUI();
                        },
                        _initializeTool: function(a) {
                            this.inherited(arguments);
                            this._initializeTools();
                        },
                        _initializeTools: function() {
                            var a = this._settings.layers,
                                b = this._settings.editor,
                                d = !1,
                                k = !1,
                                e = !1,
                                c = (this._toolTypes = []),
                                h;
                            f.forEach(
                                a,
                                function(a) {
                                    h = a.geometryType;
                                    d = d || 'esriGeometryPoint' === h;
                                    k = k || 'esriGeometryPolyline' === h;
                                    e = e || 'esriGeometryPolygon' === h;
                                    c = c.concat(
                                        f.map(
                                            this._getTemplatesFromLayer(a),
                                            g.hitch(this, function(d) {
                                                return b._toDrawTool(d.drawingTool, a);
                                            })
                                        )
                                    );
                                },
                                this
                            );
                            a = this._settings.createOptions;
                            d && this._toolTypes.push('point');
                            k &&
                                (this._toolTypes = this._toolTypes.concat(
                                    a.polylineDrawTools
                                ));
                            e &&
                                (this._toolTypes = this._toolTypes.concat(a.polygonDrawTools));
                            this._toolTypes = this._toUnique(this._toolTypes.concat(c));
                        },
                        _toUnique: function(a) {
                            var b = {};
                            return f.filter(a, function(a) {
                                return b[a] ? !1 : (b[a] = !0);
                            });
                        },
                        _getTemplatesFromLayer: function(a) {
                            var b = a.templates || [];
                            f.forEach(a.types, function(a) {
                                b = b.concat(a.templates);
                            });
                            return f.filter(b, n.isDefined);
                        },
                        _createTools: function() {
                            f.forEach(this._toolTypes, this._createTool, this);
                            this.inherited(arguments);
                        },
                        _createTool: function(a) {
                            var b = g.mixin(d[a], {
                                settings: this._settings,
                                onClick: g.hitch(this, 'onItemClicked', d[a].id),
                            });
                            this._tools[a.toUpperCase()] = new h(b);
                        },
                    });
                    g.setObject('dijit.editing.tools.Editing', c, k);
                    return c;
                }
            );
        },
        'esri/dijit/editing/tools/Edit': function() {
            define(
                [
                    'dojo/_base/declare',
                    'dojo/_base/lang',
                    'dojo/has',
                    './MenuItemBase',
                    '../../../kernel',
                ],
                function(c, g, f, b, e) {
                    c = c([b], {
                        declaredClass: 'esri.dijit.editing.tools.Edit',
                        enable: function(b) {
                            this._enabled = b === this._geomType;
                            this.inherited(arguments);
                        },
                    });
                    g.setObject('dijit.editing.tools.Edit', c, e);
                    return c;
                }
            );
        },
        'esri/dijit/editing/tools/MenuItemBase': function() {
            define(
                'dojo/_base/declare dojo/_base/lang dojo/has dijit/MenuItem ./ToolBase ../../../kernel'.split(
                    ' '
                ),
                function(c, g, f, b, e, h) {
                    c = c([b, e], {
                        declaredClass: 'esri.dijit.editing.tools.MenuItemBase',
                        destroy: function() {
                            b.prototype.destroy.apply(this, arguments);
                            e.prototype.destroy.apply(this, arguments);
                        },
                    });
                    g.setObject('dijit.editing.tools.MenuItemBase', c, h);
                    return c;
                }
            );
        },
        'esri/dijit/editing/tools/EditingTools': function() {
            define(
                [
                    'dojo/_base/lang',
                    'dojo/has',
                    '../../../toolbars/draw',
                    '../../../kernel',
                ],
                function(c, g, f, b) {
                    g = {
                        point: {
                            id: 'esriPointTool',
                            _enabledIcon: 'toolbarIcon pointIcon',
                            _disabledIcon: 'toolbarIcon pointIconDisabled',
                            _drawType: f.POINT,
                            _geomType: 'esriGeometryPoint',
                            _label: 'NLS_pointLbl',
                        },
                        polyline: {
                            id: 'toolDrawFreehandPolyline',
                            _enabledIcon: 'toolbarIcon polylineIcon',
                            _disabledIcon: 'toolbarIcon polylineIconDisabled',
                            _drawType: f.POLYLINE,
                            _geomType: 'esriGeometryPolyline',
                            _label: 'NLS_polylineLbl',
                        },
                        freehandpolyline: {
                            id: 'toolDrawPolyline',
                            _enabledIcon: 'toolbarIcon freehandPolylineIcon',
                            _disabledIcon: 'toolbarIcon freehandPolylineIcon',
                            _drawType: f.FREEHAND_POLYLINE,
                            _geomType: 'esriGeometryPolyline',
                            _label: 'NLS_freehandPolylineLbl',
                        },
                        polygon: {
                            id: 'toolDrawPolygon',
                            _enabledIcon: 'toolbarIcon polygonIcon',
                            _disabledIcon: 'toolbarIcon polygonIconDisabled',
                            _drawType: f.POLYGON,
                            _geomType: 'esriGeometryPolygon',
                            _label: 'NLS_polygonLbl',
                        },
                        freehandpolygon: {
                            id: 'toolDrawFreehandPolygon',
                            _enabledIcon: 'toolbarIcon freehandPolygonIcon',
                            _disabledIcon: 'toolbarIcon freehandPolygonIconDisabled',
                            _drawType: f.FREEHAND_POLYGON,
                            _label: 'NLS_freehandPolygonLbl',
                            _geomType: 'esriGeometryPolygon',
                        },
                        autocomplete: {
                            id: 'btnFeatureAutoComplete',
                            _enabledIcon: 'toolbarIcon autoCompleteIcon',
                            _disabledIcon: 'toolbarIcon autoCompleteIcon',
                            _drawType: f.POLYGON,
                            _label: 'NLS_autoCompleteLbl',
                            _geomType: 'esriGeometryPolygon',
                        },
                        rectangle: {
                            id: 'toolDrawRect',
                            _enabledIcon: 'toolbarIcon rectangleIcon',
                            _disabledIcon: 'toolbarIcon rectangleIcon',
                            _drawType: f.RECTANGLE,
                            _geomType: 'esriGeometryPolygon',
                            _label: 'NLS_rectangleLbl',
                        },
                        arrow: {
                            id: 'toolDrawArrow',
                            _enabledIcon: 'toolbarIcon arrowIcon',
                            _disabledIcon: 'toolbarIcon arrowIcon',
                            _drawType: f.ARROW,
                            _geomType: 'esriGeometryPolygon',
                            _label: 'NLS_arrowLbl',
                        },
                        uparrow: {
                            id: 'toolDrawArrowUp',
                            _enabledIcon: 'toolbarIcon arrowUpIcon',
                            _disabledIcon: 'toolbarIcon arrowUpIcon',
                            _drawType: f.UP_ARROW,
                            _geomType: 'esriGeometryPolygon',
                            _label: 'NLS_arrowUpLbl',
                        },
                        downarrow: {
                            id: 'toolDrawDownArrow',
                            _enabledIcon: 'toolbarIcon arrowDownIcon',
                            _disabledIcon: 'toolbarIcon arrowDownIcon',
                            _drawType: f.DOWN_ARROW,
                            _geomType: 'esriGeometryPolygon',
                            _label: 'NLS_arrowDownLbl',
                        },
                        leftarrow: {
                            id: 'toolDrawLeftArrow',
                            _enabledIcon: 'toolbarIcon arrowLeftIcon',
                            _disabledIcon: 'toolbarIcon arrowLeftIcon',
                            _drawType: f.LEFT_ARROW,
                            _geomType: 'esriGeometryPolygon',
                            _label: 'NLS_arrowLeftLbl',
                        },
                        rightarrow: {
                            id: 'toolDrawRightArrow',
                            _enabledIcon: 'toolbarIcon arrowIcon',
                            _disabledIcon: 'toolbarIcon arrowIcon',
                            _drawType: f.RIGHT_ARROW,
                            _geomType: 'esriGeometryPolygon',
                            _label: 'NLS_arrowRightLbl',
                        },
                        circle: {
                            id: 'toolDrawCircle',
                            _enabledIcon: 'toolbarIcon circleIcon',
                            _disabledIcon: 'toolbarIcon circleIcon',
                            _drawType: f.CIRCLE,
                            _geomType: 'esriGeometryPolygon',
                            _label: 'NLS_circleLbl',
                        },
                        ellipse: {
                            id: 'toolDrawEllipse',
                            _enabledIcon: 'toolbarIcon ellipseIcon',
                            _disabledIcon: 'toolbarIcon ellipseIcon',
                            _drawType: f.ELLIPSE,
                            _geomType: 'esriGeometryPolygon',
                            _label: 'NLS_ellipseLbl',
                        },
                        triangle: {
                            id: 'toolDrawTriangle',
                            _enabledIcon: 'toolbarIcon triangleIcon',
                            _disabledIcon: 'toolbarIcon triangleIcon',
                            _drawType: f.TRIANGLE,
                            _geomType: 'esriGeometryPolygon',
                            _label: 'NLS_triangleLbl',
                        },
                        attributes: {
                            id: 'btnAttributes',
                            _enabledIcon: 'toolbarIcon attributesIcon',
                            _disabledIcon: 'toolbarIcon attributesIcon',
                            _enabled: !1,
                            _label: 'NLS_attributesLbl',
                        },
                        del: {
                            id: 'btnDelete2',
                            _enabledIcon: 'toolbarIcon deleteFeatureIcon',
                            _disabledIcon: 'toolbarIcon deleteFeatureIcon',
                            _enabled: !1,
                            _label: 'NLS_deleteLbl',
                        },
                        undo: {
                            id: 'btnUndo',
                            _enabledIcon: 'dijitEditorIcon dijitEditorIconUndo',
                            _disabledIcon: 'dijitEditorIcon dijitEditorIconUndo',
                            _enabled: !1,
                            _label: 'NLS_undoLbl',
                        },
                        redo: {
                            id: 'btnRedo',
                            _enabledIcon: 'dijitEditorIcon dijitEditorIconRedo',
                            _disabledIcon: 'dijitEditorIcon dijitEditorIconRedo',
                            _enabled: !1,
                            _label: 'NLS_redoLbl',
                        },
                    };
                    c.setObject('dijit.editing.tools.EditingTools', g, b);
                    return g;
                }
            );
        },
        'esri/dijit/editing/tools/DropDownToolBase': function() {
            define(
                'dojo/_base/declare dojo/_base/lang dojo/has dojo/dom-style dijit/registry dijit/Menu dijit/form/ComboButton ./ToolBase ../../../kernel ../../../lang'.split(
                    ' '
                ),
                function(c, g, f, b, e, h, d, a, k, n) {
                    c = c([d, a], {
                        declaredClass: 'esri.dijit.editing.tools.DropDownToolBase',
                        _enabled: !1,
                        _checked: !1,
                        postCreate: function() {
                            this._tools = [];
                            this._createTools();
                            this.inherited(arguments);
                            this._setShowLabelAttr && this._setShowLabelAttr(!1);
                        },
                        destroy: function() {
                            var a, b = this._tools;
                            for (a in b)
                                b.hasOwnProperty(a) && n.isDefined(b[a]) && b[a].destroy();
                            this.inherited(arguments);
                        },
                        _createTools: function() {
                            var a, b = new h();
                            this.dropDown = b;
                            for (a in this._tools)
                                this._tools.hasOwnProperty(a) && b.addChild(this._tools[a]);
                            this._activeTool = b.getChildren()[0];
                            this._updateUI();
                        },
                        activate: function(a) {
                            this.inherited(arguments);
                            this._activeTool ?
                                this._activeTool.activate() :
                                this._activateDefaultTool();
                        },
                        deactivate: function() {
                            this.inherited(arguments);
                            this._activeTool && this._activeTool.deactivate();
                        },
                        enable: function(a) {
                            for (var b in this._tools)
                                this._tools.hasOwnProperty(b) && this._tools[b].enable(a);
                            this.setEnabled(!0);
                            this.inherited(arguments);
                        },
                        setChecked: function(a) {
                            this._checked = a;
                            this._updateUI();
                        },
                        _onDrawEnd: function(a) {},
                        onLayerChange: function(a, b, d) {
                            this._activeTool = null;
                            this._activeType = b;
                            this._activeTemplate = d;
                            this._activeLayer = a;
                        },
                        onItemClicked: function(a, b) {
                            this._activeTool && this._activeTool.deactivate();
                            this._activeTool = e.byId(a);
                            !1 === this._checked ?
                                this._onClick() :
                                (this._updateUI(), this._activeTool &&
                                    (this._activeTool.activate(), this._activeTool.setChecked(!0)));
                        },
                        _onClick: function(a) {
                            !1 !== this._enabled &&
                                ((this._checked = !this._checked), this.inherited(arguments));
                        },
                        _updateUI: function() {
                            this.attr('disabled', !this._enabled);
                            b.set(this.focusNode, { outline: 'none' });
                            b.set(this.titleNode, { padding: '0px', border: 'none' });
                            this._checked ?
                                b.set(this.titleNode, {
                                    backgroundColor: '#D4DFF2',
                                    border: '1px solid #316AC5',
                                }) :
                                b.set(this.titleNode, { backgroundColor: '', border: '' });
                            this._activeTool &&
                                (this.attr(
                                    'iconClass',
                                    this._checked ?
                                    this._activeTool._enabledIcon :
                                    this._activeTool._disabledIcon
                                ), this.attr('label', this._activeTool.label));
                        },
                    });
                    g.setObject('dijit.editing.tools.DropDownToolBase', c, k);
                    return c;
                }
            );
        },
        'esri/dijit/editing/tools/Selection': function() {
            define(
                'dojo/_base/declare dojo/_base/lang dojo/_base/array dojo/_base/connect dojo/_base/Color dojo/has ../../../symbols/SimpleMarkerSymbol ../../../symbols/SimpleLineSymbol ../../../symbols/SimpleFillSymbol ./Edit ./SelectionTools ./DropDownToolBase ../../../kernel'.split(
                    ' '
                ),
                function(c, g, f, b, e, h, d, a, k, n, l, m, p) {
                    c = c([m], {
                        declaredClass: 'esri.dijit.editing.tools.Selection',
                        _enabled: !0,
                        activate: function() {
                            this.inherited(arguments);
                            this._sConnect = b.connect(
                                this._toolbar,
                                'onDrawEnd',
                                this,
                                '_onDrawEnd'
                            );
                        },
                        deactivate: function() {
                            this.inherited(arguments);
                            b.disconnect(this._sConnect);
                            delete this._sConnect;
                        },
                        _initializeTool: function() {
                            this._createSymbols();
                            this._initializeLayers();
                            this._toolTypes = ['select', 'selectadd', 'selectremove'];
                        },
                        _onDrawEnd: function(a) {
                            this.inherited(arguments);
                            this._settings.editor._hideAttributeInspector();
                            var b = this._settings.layers;
                            this._selectMethod = this._activeTool._selectMethod;
                            this._settings.editor._selectionHelper.selectFeaturesByGeometry(
                                b,
                                a,
                                this._selectMethod,
                                g.hitch(this, 'onFinished')
                            );
                        },
                        _createSymbols: function() {
                            this._pointSelectionSymbol = new d(
                                d.STYLE_CIRCLE,
                                10,
                                new a(a.STYLE_SOLID, new e([0, 0, 0]), 1),
                                new e([255, 0, 0, 0.5])
                            );
                            this._polylineSelectionSymbol = new a(
                                a.STYLE_SOLID,
                                new e([0, 200, 255]),
                                2
                            );
                            this._polygonSelectionSymbol = new k(
                                k.STYLE_SOLID,
                                new a(a.STYLE_SOLID, new e([0, 0, 0]), 1),
                                new e([0, 200, 255, 0.5])
                            );
                        },
                        _initializeLayers: function() {
                            f.forEach(this._settings.layers, this._setSelectionSymbol, this);
                        },
                        _setSelectionSymbol: function(a) {
                            var b = null;
                            switch (a.geometryType) {
                                case 'esriGeometryPoint':
                                    b = this._pointSelectionSymbol;
                                    break;
                                case 'esriGeometryPolyline':
                                    b = this._polylineSelectionSymbol;
                                    break;
                                case 'esriGeometryPolygon':
                                    b = this._polygonSelectionSymbol;
                            }
                            a.setSelectionSymbol(a._selectionSymbol || b);
                        },
                        _createTools: function() {
                            f.forEach(this._toolTypes, this._createTool, this);
                            this.inherited(arguments);
                        },
                        _createTool: function(a) {
                            var b = g.mixin(l[a], {
                                settings: this._settings,
                                onClick: g.hitch(this, 'onItemClicked', l[a].id),
                            });
                            this._tools[a.toUpperCase()] = new n(b);
                        },
                    });
                    g.setObject('dijit.editing.tools.Selection', c, p);
                    return c;
                }
            );
        },
        'esri/dijit/editing/tools/SelectionTools': function() {
            define(
                [
                    'dojo/_base/lang',
                    'dojo/has',
                    '../../../layers/FeatureLayer',
                    '../../../toolbars/draw',
                    '../../../kernel',
                ],
                function(c, g, f, b, e) {
                    g = {
                        select: {
                            id: 'btnNewSelection',
                            _enabledIcon: 'toolbarIcon newSelectionIcon',
                            _disabledIcon: 'toolbarIcon newSelectionIcon',
                            _drawType: b.EXTENT,
                            _selectMethod: f.SELECTION_NEW,
                            _label: 'NLS_selectionNewLbl',
                        },
                        selectadd: {
                            id: 'btnAddToSelection',
                            _enabledIcon: 'toolbarIcon addToSelectionIcon',
                            _disabledIcon: 'toolbarIcon addToSelectionIcon',
                            _drawType: b.EXTENT,
                            _selectMethod: f.SELECTION_ADD,
                            _label: 'NLS_selectionAddLbl',
                        },
                        selectremove: {
                            id: 'btnSubtractFromSelection',
                            _enabledIcon: 'toolbarIcon removeFromSelectionIcon',
                            _disabledIcon: 'toolbarIcon removeFromSelectionIcon',
                            _drawType: b.EXTENT,
                            _selectMethod: f.SELECTION_SUBTRACT,
                            _label: 'NLS_selectionRemoveLbl',
                        },
                        selectClear: {
                            id: 'btnClearSelection',
                            _enabledIcon: 'toolbarIcon clearSelectionIcon',
                            _disabledIcon: 'toolbarIcon clearSelectionIcon',
                            _enabled: !1,
                            _label: 'NLS_selectionClearLbl',
                        },
                    };
                    c.setObject('dijit.editing.tools.SelectionTools', g, e);
                    return g;
                }
            );
        },
        'esri/dijit/editing/SelectionHelper': function() {
            define(
                'dojo/_base/declare dojo/_base/lang dojo/_base/connect dojo/_base/array dojo/has dojo/DeferredList ../../geometry/Extent ../../geometry/Point ../../geometry/ScreenPoint ../../layers/FeatureLayer ../../tasks/query ../../kernel'.split(
                    ' '
                ),
                function(c, g, f, b, e, h, d, a, k, n, l, m) {
                    c = c(null, {
                        declaredClass: 'esri.dijit.editing.SelectionHelper',
                        constructor: function(a) {
                            this._settings = a || {};
                            this._sConnects = [];
                            this._mapServiceCount = 0;
                            this._map = this._settings.map;
                            this._tolerance = this._settings.singleSelectionTolerance;
                            this._initMapServiceInfos(this._settings.layers);
                        },
                        destroy: function() {
                            for (var a in this._sConnects)
                                this._sConnects.hasOwnProperty(a) &&
                                f.disconnect(this._sConnects[a]);
                        },
                        selectFeatures: function(a, d, k, e) {
                            k === n.SELECTION_NEW &&
                                (this._resetMapServiceInfos(), this.getSelection(a));
                            var c = [];
                            b.forEach(a, function(a) {
                                if (!0 === a.visible && !0 === a._isMapAtVisibleScale()) {
                                    var b = k;
                                    a._isSelOnly &&
                                        b === n.SELECTION_NEW &&
                                        (b = n.SELECTION_ADD);
                                    c.push(a.selectFeatures(d, b));
                                }
                            });
                            new h(c).addCallback(
                                g.hitch(this, function(d) {
                                    var c = [];
                                    b.forEach(
                                        d,
                                        function(d, k) {
                                            b.forEach(
                                                d[1],
                                                function(b) {
                                                    (b =
                                                        a[k]._mode._getFeature(
                                                            b.attributes[a[k].objectIdField]
                                                        ) || null) && c.push(b);
                                                },
                                                this
                                            );
                                        },
                                        this
                                    );
                                    this._mapServiceCount ?
                                        ((d = k === n.SELECTION_SUBTRACT) ?
                                            (this._resetMapServiceInfos(), this._createLayerDefs(
                                                this._getLayerInfosFromSelection(a)
                                            )) :
                                            this._createLayerDefs(
                                                this._getLayerInfosFromFeatures(c)
                                            ), this._updateLayerDefs(
                                                this._mapServiceInfos, !1, !((c && c.length) || d),
                                                g.hitch(this, e, c)
                                            )) :
                                        e(c);
                                })
                            );
                        },
                        selectFeaturesByGeometry: function(b, d, k, e) {
                            var c = d; -
                            1 !== d.declaredClass.indexOf('Extent') &&
                                d.xmax === d.xmin &&
                                d.ymax === d.ymin &&
                                (c = new a(d.xmax, d.ymax, d.spatialReference));
                            c = -1 !== c.declaredClass.indexOf('Point') ?
                                this._extentFromPoint(c) :
                                c;
                            d = new l();
                            d.geometry = c;
                            this.selectFeatures(b, d, k, e);
                        },
                        clearSelection: function(a) {
                            b.forEach(this._nonSelOnlyLayers, function(a) {
                                a.clearSelection && a.clearSelection();
                            });
                            if (this._mapServiceCount) {
                                this._resetMapServiceInfos();
                                var d = this._getLayerInfosFromSelection(
                                    this._settings.layers
                                );
                                b.some(d, function(a) {
                                        return a.oids && a.oids.length;
                                    }) &&
                                    (this._createLayerDefs(d), this._updateLayerDefs(
                                        this._mapServiceInfos, !0,
                                        a || !1
                                    ));
                            }
                        },
                        findMapService: function(a) {
                            var b = this._map,
                                d = b.layerIds;
                            a = a && a._url && a._url.path ? a._url.path.toLowerCase() : '';
                            var k, e, c;
                            for (e in d)
                                if (
                                    d.hasOwnProperty(e) &&
                                    ((k = b.getLayer(d[e])), (c = k._url ?
                                            k._url.path ?
                                            k._url.path
                                            .toLowerCase()
                                            .replace('mapserver', 'featureserver') :
                                            k._url
                                            .toLowerCase()
                                            .replace('mapserver', 'featureserver') :
                                            ''), a.substr(0, c.length) === c &&
                                        'esri.layers.ArcGISDynamicMapServiceLayer' ===
                                        k.declaredClass)
                                )
                                    return k;
                        },
                        getSelection: function(a) {
                            var d = [];
                            b.forEach(
                                a,
                                function(a) {
                                    a._isSelOnly && d.push(this._createLayerInfo(a));
                                },
                                this
                            );
                            b.forEach(
                                d,
                                function(a) {
                                    var b = this._createMapServiceInfo(
                                        this.findMapService(a.layer)
                                    );
                                    b && (b.layerInfos[a.layer.layerId] = a);
                                },
                                this
                            );
                        },
                        _initMapServiceInfos: function(a) {
                            this._nonSelOnlyLayers = [];
                            this._mapServiceInfos = [];
                            b.forEach(
                                a,
                                function(a) {
                                    var b = this.findMapService(a);
                                    b
                                        ?
                                        (this._mapServiceCount++, this._createMapServiceInfo(
                                            b
                                        ), b && b.setDisableClientCaching(!0)) :
                                        this._nonSelOnlyLayers.push(a);
                                },
                                this
                            );
                        },
                        _createMapServiceInfo: function(a) {
                            if (!a) return null;
                            var b = this._mapServiceInfos,
                                d = b[a.id];
                            d ||
                                (d = b[a.id] = {
                                    mapService: a,
                                    layerInfos: [],
                                    layerDefs: g.mixin([], a.layerDefinitions || []),
                                    origLayerDefs: g.mixin([], a.layerDefinitions || []),
                                });
                            return d;
                        },
                        _resetMapServiceInfo: function(a) {
                            b.forEach(a.layerInfos, this._resetLayerInfo);
                            a.layerDefs = g.mixin([], a.origLayerDefs || []);
                        },
                        _resetMapServiceInfos: function() {
                            var a = this._mapServiceInfos,
                                b;
                            for (b in a)
                                a.hasOwnProperty(b) && this._resetMapServiceInfo(a[b]);
                        },
                        _createLayerInfo: function(a, d) {
                            var k = a.objectIdField;
                            d = d ? [] : a.getSelectedFeatures();
                            return {
                                layer: a,
                                selectedFeatures: d || [],
                                oids: b.map(d, function(a) {
                                    return a.attributes[k];
                                }),
                            };
                        },
                        _resetLayerInfo: function(a) {
                            a && ((a.selectedFeatures = []), (a.oids = []));
                        },
                        _updateLayerDefs: function(a, b, d, k) {
                            for (var e in a)
                                if (a.hasOwnProperty(e)) {
                                    var c = a[e],
                                        h = c.mapService,
                                        l = (c.layerDefs = b ?
                                            g.mixin([], c.origLayerDefs || []) :
                                            c.layerDefs);
                                    l
                                        ?
                                        (d ?
                                            k && k() :
                                            (this._sConnects[h.id] = f.connect(
                                                h,
                                                'onUpdateEnd',
                                                g.hitch(this, '_onMapServiceUpdate', c, b, k)
                                            )), h.setLayerDefinitions(l, d || !1)) :
                                        k && k();
                                }
                        },
                        _onMapServiceUpdate: function(a, d, k) {
                            f.disconnect(this._sConnects[a.mapService.id]);
                            b.forEach(
                                a.layerInfos,
                                function(a) {
                                    if (d) a && a.layer.clearSelection();
                                    else {
                                        var b = new l();
                                        b.objectIds = a ? a.oids : [];
                                        b.objectIds.length &&
                                            a.layer.selectFeatures(b, n.SELECTION_SUBTRACT);
                                    }
                                },
                                this
                            );
                            d && this._resetMapServiceInfo(a);
                            k && k();
                        },
                        _createLayerDefs: function(a) {
                            b.forEach(
                                a,
                                function(a) {
                                    var d = a.layer,
                                        k = this._createMapServiceInfo(
                                            this.findMapService(a.layer)
                                        );
                                    if (k) {
                                        var k = k.layerDefs,
                                            e = d.layerId,
                                            c = '("' + d.objectIdField + '" NOT IN (',
                                            h = a.oids;
                                        h &&
                                            h.length &&
                                            (b.forEach(a.oids, function(a, b) {
                                                h = !0;
                                                b && (c += ',');
                                                c += "'" + a + "'";
                                            }), (c += '))'), (k[e] = k.length && k[e] && k[e].length ?
                                                k[e] + (' AND' + c) :
                                                c));
                                    }
                                },
                                this
                            );
                        },
                        _getLayerInfosFromFeatures: function(a) {
                            var d = [];
                            b.forEach(
                                a,
                                function(a) {
                                    var b = a.getLayer();
                                    b &&
                                        b._isSelOnly &&
                                        (d[b.id] || (d[b.id] = this._createLayerInfo(b, !0)), d[
                                            b.id
                                        ].selectedFeatures.push(a), d[b.id].oids.push(
                                            a.attributes[b.objectIdField]
                                        ));
                                },
                                this
                            );
                            a = [];
                            for (var k in d)
                                d.hasOwnProperty(k) && a.push(d[k]);
                            return a;
                        },
                        _getLayerInfosFromSelection: function(a) {
                            var d = [];
                            b.forEach(
                                a,
                                function(a) {
                                    a._isSelOnly && d.push(this._createLayerInfo(a, !1));
                                },
                                this
                            );
                            return d;
                        },
                        _extentFromPoint: function(a) {
                            var b = this._tolerance,
                                e = this._map,
                                c = e.toScreen(a);
                            a = new k(c.x - b, c.y + b);
                            b = new k(c.x + b, c.y - b);
                            a = e.toMap(a);
                            b = e.toMap(b);
                            return new d(a.x, a.y, b.x, b.y, e.spatialReference);
                        },
                    });
                    g.setObject('dijit.editing.SelectionHelper', c, m);
                    return c;
                }
            );
        },
        'esri/dijit/InfoWindow': function() {
            define(
                'dojo/_base/declare dojo/_base/lang dojo/_base/array dojo/_base/window dojo/_base/kernel dojo/has dojo/query dojo/sniff dojo/dom-class dojo/dom-construct dojo/dom-style dijit/_Widget dijit/_Templated dijit/_Container ../kernel ../domUtils ../InfoWindowBase ./_EventedWidget dojo/text!./templates/InfoWindow.html'.split(
                    ' '
                ),
                function(c, g, f, b, e, h, d, a, k, n, l, m, p, r, u, t, q, v, C) {
                    var z = c([v, m, p, r, q], {
                        declaredClass: 'esri.dijit.InfoWindow',
                        isContainer: !0,
                        templateString: C,
                        anchor: 'upperright',
                        fixedAnchor: null,
                        coords: null,
                        isShowing: !0,
                        isContentShowing: !0,
                        isTitleBarShowing: !0,
                        width: 250,
                        height: 150,
                        title: 'Info Window',
                        setMap: function(a) {
                            this.inherited(arguments);
                            n.place(this.domNode, a.root);
                        },
                        startup: function() {
                            if (!this._started) {
                                this.inherited(arguments);
                                this._ANCHORS = [
                                    z.ANCHOR_UPPERRIGHT,
                                    z.ANCHOR_LOWERRIGHT,
                                    z.ANCHOR_LOWERLEFT,
                                    z.ANCHOR_UPPERLEFT,
                                ];
                                if (7 > h('ie')) {
                                    var a =
                                        "progid:DXImageTransform.Microsoft.AlphaImageLoader(enabled\x3d'true', sizingMethod\x3d'crop', src\x3d'" +
                                        l
                                        .getComputedStyle(this._sprite)
                                        .backgroundImage.replace(/url\(\"/i, '')
                                        .replace(/\"\)/, '') +
                                        "')",
                                        d = n.create('div', null, b.body());
                                    l.set(d, {
                                        width: '1px',
                                        height: '1px',
                                        display: 'none',
                                        backgroundImage: 'none',
                                        filter: a,
                                    });
                                    var k = setTimeout(function() {
                                        n.destroy(d);
                                        clearTimeout(k);
                                        k = d = null;
                                    }, 100);
                                    e.query('.sprite', this.domNode).forEach(function(b) {
                                        b.style.backgroundImage = 'none';
                                        b.style.filter = a;
                                    });
                                }
                                this.resize(this.width, this.height);
                                this.hide();
                            }
                        },
                        destroy: function() {
                            this._destroyed ||
                                (this.__unregisterMapListeners(), this.destroyDijits(
                                    this._title
                                ), this.destroyDijits(
                                    this._content
                                ), (this._title.innerHTML = this._content.innerHTML =
                                    ''), this.inherited(arguments));
                        },
                        resize: function(a, b) {
                            if (a && b) {
                                var d = l.set;
                                d(this._topleft, { height: b + 'px', marginLeft: a + 'px' });
                                d(this._topright, { width: a + 'px', height: b + 'px' });
                                d(this._user, 'width', a - 8 + 'px');
                                d(this._hide, 'marginLeft', a - 22 + 'px');
                                d(this._title, 'width', a - 25 + 'px');
                                d(this._content, 'height', b - 37 + 'px');
                                d(this._bottomleft, {
                                    marginLeft: a + 'px',
                                    marginTop: b + 'px',
                                });
                                d(this._bottomright, {
                                    width: a - 5 + 'px',
                                    marginTop: b + 'px',
                                });
                                this.width = a;
                                this.height = b;
                                this.coords && this._adjustPosition(this.coords, this.anchor);
                                this.onResize(a, b);
                            }
                        },
                        _adjustPosition: function(a, b) {
                            var d = l.set;
                            d(this._infowindow, {
                                left: Math.round(a.x) + 'px',
                                top: Math.round(a.y) + 'px',
                            });
                            b === z.ANCHOR_UPPERLEFT ?
                                d(this._window, {
                                    left: null,
                                    right: this.width + 18 + 'px',
                                    top: null,
                                    bottom: this.height + 50 + 'px',
                                }) :
                                b === z.ANCHOR_UPPERRIGHT ?
                                d(this._window, {
                                    left: '6px',
                                    right: null,
                                    top: null,
                                    bottom: this.height + 50 + 'px',
                                }) :
                                b === z.ANCHOR_LOWERRIGHT ?
                                d(this._window, {
                                    left: '6px',
                                    right: null,
                                    top: '43px',
                                    bottom: null,
                                }) :
                                b === z.ANCHOR_LOWERLEFT &&
                                d(this._window, {
                                    left: null,
                                    right: this.width + 18 + 'px',
                                    top: '43px',
                                    bottom: null,
                                });
                        },
                        _getAnchor: function(a) {
                            var b = this.map;
                            return b && a ?
                                (a.y < b.height / 2 ? 'lower' : 'upper') +
                                (a.x < b.width / 2 ? 'right' : 'left') :
                                'upperright';
                        },
                        show: function(a, b, d) {
                            if (a) {
                                a.spatialReference ?
                                    ((this.mapCoords = a), (a = this.coords = this.map.toScreen(
                                        a, !0
                                    ))) :
                                    ((this.mapCoords = null), (this.coords = a));
                                var e = this.map._getFrameWidth();
                                if (-1 !== e &&
                                    ((a.x %= e), 0 > a.x && (a.x += e), this.map.width > e)
                                )
                                    for (var c = (this.map.width - e) / 2; a.x < c;)
                                        a.x += e;
                                (b && -1 !== f.indexOf(this._ANCHORS, b)) ||
                                (b = this._getAnchor(a));
                                k.remove(this._pointer, this.anchor);
                                b = this.anchor = this.fixedAnchor || b;
                                this._adjustPosition(a, b);
                                k.add(this._pointer, b);
                                t.show(this.domNode);
                                this.isShowing = !0;
                                if (!d) this.onShow();
                            }
                        },
                        hide: function(a, b) {
                            t.hide(this.domNode);
                            this.isShowing = !1;
                            if (!b) this.onHide();
                        },
                        showTitleBar: function() {
                            t.show(this._titlebar);
                            t.show(this._border);
                            this.isTitleBarShowing = !0;
                        },
                        hideTitleBar: function() {
                            t.hide(this._titlebar);
                            t.hide(this._border);
                            this.isTitleBarShowing = !1;
                        },
                        showContent: function() {
                            t.show(this._content);
                            t.show(this._border);
                            this.isContentShowing = !0;
                        },
                        hideContent: function() {
                            t.hide(this._content);
                            t.hide(this._border);
                            this.isContentShowing = !1;
                        },
                        move: function(a, b) {
                            b
                                ?
                                (a = this.coords.offset(a.x, a.y)) :
                                ((this.coords = a), this.mapCoords &&
                                    (this.mapCoords = this.map.toMap(a)));
                            l.set(this._infowindow, {
                                left: Math.round(a.x) + 'px',
                                top: Math.round(a.y) + 'px',
                            });
                        },
                        setFixedAnchor: function(a) {
                            (a && -1 === f.indexOf(this._ANCHORS, a)) ||
                            ((this.fixedAnchor = a), this.isShowing &&
                                this.show(
                                    this.mapCoords || this.coords,
                                    a
                                ), this.onAnchorChange(a));
                        },
                        setTitle: function(a) {
                            this.destroyDijits(this._title);
                            this.__setValue('_title', a);
                            return this;
                        },
                        setContent: function(a) {
                            this.destroyDijits(this._content);
                            this.__setValue('_content', a);
                            return this;
                        },
                        onShow: function() {
                            this.__registerMapListeners();
                            this.startupDijits(this._title);
                            this.startupDijits(this._content);
                        },
                        onHide: function() {
                            this.__unregisterMapListeners();
                        },
                        onResize: function() {},
                        onAnchorChange: function() {},
                    });
                    g.mixin(z, {
                        ANCHOR_UPPERRIGHT: 'upperright',
                        ANCHOR_LOWERRIGHT: 'lowerright',
                        ANCHOR_LOWERLEFT: 'lowerleft',
                        ANCHOR_UPPERLEFT: 'upperleft',
                    });
                    g.setObject('dijit.InfoWindow', z, u);
                    return z;
                }
            );
        },
        'esri/dijit/OverviewMap': function() {
            define(
                'dojo/_base/declare dojo/_base/lang dojo/_base/connect dojo/_base/html dojo/has dojo/dom-class dojo/dom-style dojo/dnd/Moveable dijit/_Widget dijit/_Templated ../map ../geometry/Point ../geometry/ScreenPoint ../layers/TiledMapServiceLayer ../layers/DynamicMapServiceLayer ../layers/VectorTileLayer ../layers/ArcGISTiledMapServiceLayer ../layers/ArcGISDynamicMapServiceLayer ../layers/ArcGISImageServiceLayer ../layers/RasterXLayer ../layers/OpenStreetMapLayer ../virtualearth/VETiledLayer ../kernel ../config ../domUtils dojo/text!./templates/OverviewMap.html dojo/i18n!../nls/jsapi'.split(
                    ' '
                ),
                function(
                    c,
                    g,
                    f,
                    b,
                    e,
                    h,
                    d,
                    a,
                    k,
                    n,
                    l,
                    m,
                    p,
                    r,
                    u,
                    t,
                    q,
                    v,
                    C,
                    z,
                    y,
                    x,
                    w,
                    A,
                    E,
                    B,
                    D
                ) {
                    c = c([k, n], {
                        declaredClass: 'esri.dijit.OverviewMap',
                        widgetsInTemplate: !0,
                        templateString: B,
                        constructor: function(a, d) {
                            g.mixin(this, D.widgets.overviewMap);
                            a = a || {};
                            if (a.map) {
                                var k = {};
                                d && ((this._detached = !0), (k = b.coords(d, !0)));
                                this.map = a.map;
                                this.baseLayer = a.baseLayer;
                                this.width = a.width || k.w || this.map.width / 4;
                                this.height = a.height || k.h || this.map.height / 4;
                                this.attachTo = a.attachTo || 'top-right';
                                this.expandFactor = a.expandFactor || 2;
                                this.color = a.color || '#000000';
                                this.opacity = a.opacity || 0.5;
                                this.maximizeButton = !!a.maximizeButton;
                                this.visible = !!a.visible;
                                if (this.map.loaded) this._initialSetup();
                                else
                                    var e = f.connect(this.map, 'onLoad', this, function() {
                                        f.disconnect(e);
                                        e = null;
                                        this._initialSetup();
                                    });
                                this._detached && (this.visible = !0);
                                this._maximized = !1;
                            }
                        },
                        startup: function() {
                            this.inherited(arguments);
                            (!this.domNode.parentNode ||
                                (9 > e('ie') && 'DIV' !== this.domNode.parentNode.nodeName)) &&
                            this.map.container.appendChild(this.domNode);
                            this._detached ?
                                (d.set(this._body, 'display', 'block'), d.set(
                                        this._controllerDiv,
                                        'display',
                                        'none'
                                    ), d.set(this._maximizerDiv, 'display', 'none'), this.map
                                    .loaded ?
                                    this._initialize() :
                                    f.connect(this.map, 'onLoad', this, this._initialize)) :
                                ('bottom' === this.attachTo.split('-')[0] &&
                                    this.domNode.insertBefore(
                                        this._maximizerDiv,
                                        this._controllerDiv
                                    ), this.maximizeButton ||
                                    h.add(this._maximizerDiv, 'ovwDisabledButton'), h.add(
                                        this.domNode, {
                                            'top-left': 'ovwTL',
                                            'top-right': 'ovwTR',
                                            'bottom-left': 'ovwBL',
                                            'bottom-right': 'ovwBR',
                                        }[this.attachTo]
                                    ), h.add(this._controllerDiv, 'ovwShow'), h.add(
                                        this._maximizerDiv,
                                        'ovwMaximize'
                                    ), this.visible &&
                                    this.map.loaded &&
                                    ((this.visible = !1), this.show()));
                            d.set(this._focusDiv, 'opacity', this.opacity);
                        },
                        destroy: function() {
                            this._deactivate();
                            this.overviewMap && this.overviewMap.destroy();
                            this.overviewMap = this.baseLayer = null;
                            this.inherited(arguments);
                        },
                        resize: function(a) {
                            !a || 0 >= a.w || 0 >= a.h || this._resize(a.w, a.h);
                        },
                        show: function() {
                            if (!this.visible) {
                                var a = this._controllerDiv;
                                a.title = this.NLS_hide;
                                h.remove(a, 'ovwShow');
                                h.add(a, 'ovwHide');
                                E.show(this._body);
                                E.show(this._maximizerDiv);
                                this._initialize();
                                this.visible = !0;
                            }
                        },
                        hide: function() {
                            if (this.visible) {
                                var a = this._controllerDiv;
                                a.title = this.NLS_show;
                                h.remove(a, 'ovwHide');
                                h.add(a, 'ovwShow');
                                this._maximized && this._maximizeHandler();
                                E.hide(this._body);
                                E.hide(this._maximizerDiv);
                                this._deactivate();
                                this.visible = !1;
                            }
                        },
                        _initialSetup: function() {
                            if (
                                (this._mainMapLayer = this.map.getLayer(this.map.layerIds[0]))
                            ) {
                                var a = this.baseLayer || this._mainMapLayer,
                                    b = this.map.spatialReference,
                                    d = a.spatialReference;
                                if (d.wkid === b.wkid || d.wkt === b.wkt) {
                                    b = a.declaredClass;
                                    if (a instanceof r)
                                        if (-1 !== b.indexOf('VETiledLayer'))
                                            this.baseLayer = new x({
                                                resourceInfo: a.getResourceInfo(),
                                                culture: a.culture,
                                                mapStyle: a.mapStyle,
                                                bingMapsKey: a.bingMapsKey,
                                            });
                                        else if (-1 !== b.indexOf('OpenStreetMapLayer'))
                                        this.baseLayer = new y({ tileServers: a.tileServers });
                                    else if (-1 !== b.indexOf('WebTiledLayer')) {
                                        var b = a.initialExtent,
                                            d = a.fullExtent,
                                            k = a.tileInfo;
                                        this.baseLayer = new a.constructor(a.urlTemplate, {
                                            initialExtent: b && new b.constructor(b.toJson()),
                                            fullExtent: d && new d.constructor(d.toJson()),
                                            tileInfo: k && new k.constructor(k.toJson()),
                                            tileServers: a.tileServers && a.tileServers.slice(0),
                                        });
                                    } else
                                        this.baseLayer = new q(a.url, {
                                            resourceInfo: a.getResourceInfo(),
                                        });
                                    else if (a instanceof u)
                                        -
                                        1 !== b.indexOf('ArcGISImageServiceLayer') ?
                                        (this.baseLayer = new C(a.url)) :
                                        ((this.baseLayer = new v(
                                            a.url
                                        )), this.baseLayer.setImageFormat('png24'));
                                    else if (a instanceof z) this.baseLayer = new z(a.url);
                                    else if (a instanceof t)
                                        this.baseLayer = new q(
                                            'https://services.arcgisonline.com/arcgis/rest/services/World_Street_Map/MapServer', {}
                                        );
                                    else return;
                                    !this._detached &&
                                        this.visible &&
                                        this._controllerDiv &&
                                        ((a = function() {
                                                this.visible = !1;
                                                this.show();
                                            }), this.baseLayer.loaded ?
                                            a.call(this) :
                                            f.connect(this.baseLayer, 'onLoad', this, a));
                                }
                            }
                        },
                        _visibilityHandler: function() {
                            this.visible ? this.hide() : this.show();
                        },
                        _maximizeHandler: function() {
                            var a = this._maximizerDiv;
                            this._maximized ?
                                ((a.title = this.NLS_maximize), h.remove(
                                    a,
                                    'ovwRestore'
                                ), h.add(a, 'ovwMaximize'), this._resize(
                                    this.width,
                                    this.height
                                )) :
                                ((a.title = this.NLS_restore), h.remove(
                                    a,
                                    'ovwMaximize'
                                ), h.add(a, 'ovwRestore'), this._resize(
                                    this.map.width,
                                    this.map.height
                                ));
                            this._maximized = !this._maximized;
                        },
                        _resize: function(a, b) {
                            d.set(this._body, { width: a + 'px', height: b + 'px' });
                            a = A.defaults.map.panDuration;
                            b = this.overviewMap;
                            A.defaults.map.panDuration = 0;
                            b && (b.resize(!0), b.centerAt(this._focusExtent.getCenter()));
                            A.defaults.map.panDuration = a;
                        },
                        _initialize: function() {
                            if (this.overviewMap) this._activate();
                            else {
                                var a, b;
                                b = 9 > e('ie') ?
                                    this._body.firstChild :
                                    this._body.firstElementChild;
                                this.overviewMap = a = new l(b, {
                                    slider: !1,
                                    showAttribution: !1,
                                    logo: !1,
                                    lods: this._overviewLods,
                                    wrapAround180: this.map.wrapAround180,
                                });
                                f.connect(a, 'onLoad', this, function() {
                                    this._map_resize_override = g.hitch(
                                        a,
                                        this._map_resize_override
                                    );
                                    a.disableMapNavigation();
                                    this._activate();
                                });
                                a.addLayer(this.baseLayer);
                            }
                        },
                        _activate: function() {
                            var b = this.map,
                                d = this.overviewMap;
                            this._moveableHandle = new a(this._focusDiv);
                            this._soeConnect = f.connect(
                                b,
                                'onExtentChange',
                                this,
                                this._syncOverviewMap
                            );
                            this._ufoConnect = f.connect(
                                b,
                                'onPan',
                                this,
                                this._updateFocus
                            );
                            this._oecConnect = f.connect(
                                d,
                                'onExtentChange',
                                this,
                                this._ovwExtentChangeHandler
                            );
                            this._opaConnect = f.connect(
                                d,
                                'onPan',
                                this,
                                this._ovwPanHandler
                            );
                            this._ozsConnect = f.connect(
                                d,
                                'onZoomStart',
                                this,
                                function() {
                                    E.hide(this._focusDiv);
                                }
                            );
                            this._ozeConnect = f.connect(d, 'onZoomEnd', this, function() {
                                E.show(this._focusDiv);
                            });
                            this._omsConnect = f.connect(
                                this._moveableHandle,
                                'onMoveStop',
                                this,
                                this._moveStopHandler
                            );
                            this._syncOverviewMap(b.extent, null, null, null);
                        },
                        _deactivate: function() {
                            f.disconnect(this._soeConnect);
                            f.disconnect(this._ufoConnect);
                            f.disconnect(this._oecConnect);
                            f.disconnect(this._opaConnect);
                            f.disconnect(this._ozsConnect);
                            f.disconnect(this._ozeConnect);
                            f.disconnect(this._omsConnect);
                            this._moveableHandle &&
                                (this._moveableHandle.destroy(), (this._moveableHandle = null));
                        },
                        _syncOverviewMap: function(a, b, d, k) {
                            this._suspendPanHandling ?
                                (this._suspendPanHandling = !1) :
                                ((this._focusExtent = a), this.overviewMap.setExtent(
                                    a.expand(this.expandFactor), !0
                                ));
                        },
                        _updateFocus: function(a) {
                            this._suspendPanHandling ||
                                ((this._focusExtent = a), this._drawFocusDiv(a));
                        },
                        _drawFocusDiv: function(a, b) {
                            var k = this.overviewMap,
                                e = k.toScreen(new m(a.xmin, a.ymax, k.spatialReference)),
                                k = k.toScreen(new m(a.xmax, a.ymin, k.spatialReference));
                            a = k.x - e.x;
                            var k = k.y - e.y,
                                c = !0;
                            a > this.overviewMap.width &&
                                k > this.overviewMap.height &&
                                (c = !1);
                            d.set(this._focusDiv, {
                                left: e.x + (b ? b.x : 0) + 'px',
                                top: e.y + (b ? b.y : 0) + 'px',
                                width: a + 'px',
                                height: k + 'px',
                                display: c ? 'block' : 'none',
                            });
                        },
                        _moveStopHandler: function(a) {
                            var b = this._moveableHandle.node.style;
                            a = this._focusExtent;
                            var d = this.overviewMap,
                                b = d.toMap(
                                    new p(parseInt(b.left, 10), parseInt(b.top, 10))
                                ),
                                k = new m(a.xmin, a.ymax, d.spatialReference);
                            this._focusExtent = a.offset(b.x - k.x, b.y - k.y);
                            this._maximized ?
                                this._maximizeHandler() :
                                d.centerAt(this._focusExtent.getCenter());
                            this._suspendPanHandling = !0;
                            this.map.setExtent(this._focusExtent);
                        },
                        _ovwExtentChangeHandler: function() {
                            this._drawFocusDiv(this._focusExtent);
                        },
                        _ovwPanHandler: function(a, b) {
                            this._drawFocusDiv(this._focusExtent, b);
                        },
                    });
                    g.setObject('dijit.OverviewMap', c, w);
                    return c;
                }
            );
        },
        'esri/layers/VectorTileLayer': function() {
            (function() {
                var c = (function() {
                        var c;
                        try {
                            c = window.WebGLRenderingContext;
                        } catch (k) {
                            c = !1;
                        }
                        var b;
                        try {
                            for (
                                var e = document.createElement('canvas'),
                                    h = ['webgl', 'experimental-webgl', 'webkit-3d', 'moz-webgl'],
                                    d = null,
                                    a = 0; a < h.length;
                                ++a
                            ) {
                                try {
                                    d = e.getContext(h[a]);
                                } catch (k) {}
                                if (d) break;
                            }
                            b = d;
                        } catch (k) {
                            b = !1;
                        }
                        return c && b ? !0 : !1;
                    })(),
                    g = [
                        'dojo/_base/lang',
                        'dojo/has',
                        'dojo/Deferred',
                        '../sniff',
                        './layer',
                    ];
                c && g.push('./VectorTileLayerImpl');
                define(g, function(f, b, e, h, d, a) {
                    b = a ?
                        a :
                        d.createSubclass({
                            declaredClass: 'esri.layers.VectorTileLayer',
                            constructor: function() {
                                var a = new e();
                                a.reject(
                                    Error('esri.layers.VectorTileLayer is not supported')
                                );
                                a.promise.otherwise(
                                    f.hitch(this, function(a) {
                                        this._errorHandler(a);
                                    })
                                );
                            },
                        });
                    b.ACCESS_TOKEN = null;
                    b.supported = function() {
                        return c;
                    };
                    f.setObject('layers.VectorTileLayer', b, h);
                    return b;
                });
            })();
        },
        'esri/layers/rasterLib/raster/rasterFactory': function() {
            define(
                'require dojo/_base/declare dojo/_base/lang dojo/_base/Deferred dojo/_base/array dojo/_base/config dojo/sniff dojo/when ../../../kernel ../../../Evented ../../../request ../../../deferredUtils ../../../urlUtils ./ImageServiceRaster ./TileServiceRaster ./TileRaster ./FunctionRaster'.split(
                    ' '
                ),
                function(c, g, f, b, e, h, d, a, k, n, l, m, p, r, u, t, q) {
                    c = {
                        customDrivers: [],
                        create: function(d) {
                            if (d) {
                                var k, e, c;
                                d.url &&
                                    ((c = p.urlToObject(d.url)), (e = c.path), (k = c.query));
                                c = d.serviceInfo;
                                var h = d.rasterFxArgs || {},
                                    l = new b(),
                                    g,
                                    n,
                                    m = f.hitch(this, function(a) {
                                        this._trycustomDrivers(f.mixin({ url: e }, d), 0, l);
                                    });
                                if (e)
                                    if (-1 === e.toLowerCase().indexOf('imageserver') &&
                                        -1 === e.toLowerCase().indexOf('mapserver')
                                    )
                                        (g = new t(f.mixin({}, d, { url: e }))), d.rasterFx &&
                                        (g = new q({
                                            rasterFx: d.rasterFx,
                                            rasterFxArgs: f.mixin({}, h, { raster: g }),
                                        })), (n = g);
                                    else {
                                        n = new b();
                                        c = c || this._getServiceInfo(e, k);
                                        var v = f.hitch(this, function(a) {
                                            a.bandCount ?
                                                (g = a.capabilities &&
                                                    -1 <
                                                    a.capabilities.toLowerCase().indexOf('tileonly') ?
                                                    new u(
                                                        f.mixin({}, { serviceInfo: a }, k, d, { url: e })
                                                    ) :
                                                    new r(
                                                        f.mixin({}, { serviceInfo: a }, k, d, { url: e })
                                                    )) :
                                                a.tileInfo &&
                                                (g = new u(
                                                    f.mixin({}, { serviceInfo: a }, k, this._options, {
                                                        url: e,
                                                    })
                                                ));
                                            d.rasterFx &&
                                                (g = new q({
                                                    rasterFx: d.rasterFx,
                                                    rasterFxArgs: f.mixin({}, h, { raster: g }),
                                                }));
                                            n.resolve(g);
                                        });
                                        a(c, v, m);
                                    }
                                else
                                    n = g = new q({
                                        rasterFx: d.rasterFx,
                                        rasterFxArgs: f.mixin({}, h, { raster: g }),
                                    });
                                a(
                                    n,
                                    f.hitch(this, function(a) {
                                        a
                                            ?
                                            a.open().then(
                                                f.hitch(this, function(b) {
                                                    l.resolve(a);
                                                }),
                                                m
                                            ) :
                                            m(Error('There is no raster to open'));
                                    }),
                                    m
                                );
                                return l.promise;
                            }
                        },
                        register: function(a) {
                            this.customDrivers = this.customDrivers || [];
                            0 <
                                this.customDrivers.filter(function(b) {
                                    return b.sourceType === a.prototype.sourceType;
                                }).length || this.customDrivers.push(a);
                        },
                        _trycustomDrivers: function(a, d, k) {
                            k = k || new b();
                            var e = this.customDrivers[d];
                            if (e) {
                                var c = new e(a);
                                c.open().then(
                                    f.hitch(this, function(a) {
                                        k.resolve(c);
                                    }),
                                    f.hitch(this, function(b) {
                                        this._trycustomDrivers(a, d + 1, k);
                                    })
                                );
                            } else k.reject('cannot load layer ' + ((a && a.url) || ''));
                            return k.promise;
                        },
                        _getServiceInfo: function(a, d) {
                            d = d || {};
                            var k = d.bandIds;
                            d = d.renderingRule;
                            var e = new b(m._dfdCanceller),
                                c = { f: 'json' };
                            k && (c.bandIds = k);
                            d &&
                                (c.renderingRule = d.toJson ?
                                    JSON.stringify(d.toJson()) :
                                    JSON.stringify(d));
                            e._pendingDfd = l({
                                url: a,
                                content: c,
                                handleAs: 'json',
                                callbackParamName: 'callback',
                            });
                            e._pendingDfd.then(
                                function(a) {
                                    e.callback(a);
                                },
                                function(a) {
                                    e.errback(a);
                                }
                            );
                            return e.promise;
                        },
                    };
                    f.setObject('layers.rasterLib.raster.rasterFactory', c, k);
                    return c;
                }
            );
        },
        'esri/layers/rasterLib/raster/ImageServiceRaster': function() {
            define(
                'require dojo/_base/declare dojo/_base/lang dojo/_base/Deferred dojo/_base/array dojo/_base/config dojo/_base/json dojo/sniff dojo/DeferredList dojo/when ../../../kernel ../../../Evented ../../../request ../../../geometry/Extent ../../../geometry/Point ../../../SpatialReference ../../../deferredUtils ../../../urlUtils ../../MosaicRule ../../ImageServiceParameters ../../PixelBlock ./RasterInfo ./BasicRaster ../../rasterFormats/rasterCodec ../tile/RasterTileInfo'.split(
                    ' '
                ),
                function(
                    c,
                    g,
                    f,
                    b,
                    e,
                    h,
                    d,
                    a,
                    k,
                    n,
                    l,
                    m,
                    p,
                    r,
                    u,
                    t,
                    q,
                    v,
                    C,
                    z,
                    y,
                    x,
                    w,
                    A,
                    E
                ) {
                    c = g([w], {
                        declaredClass: 'esri.layers.rasterLib.raster.ImageServiceRaster',
                        sourceType: 'ImageService',
                        constructor: function(a) {
                            a &&
                                ((this._imageServiceParams =
                                        a.imageServiceParameters), (this._commonReqParams =
                                        a._commonReqParams), this._imageServiceParams ||
                                    (this._imageServiceParams = {
                                        interpolation: a.interpolation,
                                        pixelType: a.pixelType,
                                        format: a.format || 'lerc',
                                        compressionQuality: a.compressionQuality,
                                        bandIds: a.bandIds,
                                        noDataInterpretation: a.noDataInterpretation,
                                        adjustAspectRatio: a.adjustAspectRatio,
                                        mosaicRule: a.mosaicRule,
                                        renderingRule: a.interpolation,
                                    }));
                        },
                        open: function() {
                            var a = new b();
                            if (this.serviceInfo && this.rasterInfo)
                                return (this.loaded = !0), this._findCredential(), this.setFetchParameters(
                                    this._imageServiceParams
                                ), a.resolve(this), a.promise;
                            var d =
                                this.serviceInfo ||
                                this._generateServiceInfo(
                                    this._imageServiceParams &&
                                    this._imageServiceParams.renderingRule
                                ),
                                e = f.hitch(this, function(b) {
                                    this.serviceInfo = b;
                                    this._findCredential();
                                    var d = this._parseRasterInfo(b),
                                        e = {};
                                    b.defaultMosaicMethod ?
                                        ((e.method = b.defaultMosaicMethod), (e.operation =
                                            b.mosaicOperator), (e.sortField =
                                            b.sortField), (e.sortValue = b.sortValue)) :
                                        (e.method = C.METHOD_NONE);
                                    this.serviceInfo.defaultMosaicRule = new C(e);
                                    this.serviceInfo.defaultMosaicRule.ascending = !0;
                                    b = this._getColormap(this);
                                    var e = this._getHistograms(this),
                                        c = this._getRasterAttributeTable(this),
                                        h = this._getKeyProperties(this),
                                        l = this._getMultidimensionalInfo();
                                    new k([b, e, c, h, l]).then(
                                        f.hitch(this, function(b) {
                                            b[0][0] && (d.colormap = b[0][1]);
                                            b[1][0] && (d.histograms = b[1][1]);
                                            b[2][0] && (d.vat = b[2][1]);
                                            b[3][0] && (d.keyProperties = b[3][1]);
                                            b[4][0] && (d.multidimensionalInfo = b[4][1]);
                                            d.keyProperties &&
                                                d.keyProperties.DataType &&
                                                (this.dataType = d.keyProperties.DataType);
                                            this.loaded = !0;
                                            this.rasterInfo = d;
                                            this.setFetchParameters(this._imageServiceParams);
                                            a.resolve(this);
                                        })
                                    );
                                }),
                                c = f.hitch(this, function(b) {
                                    this.loaded = !0;
                                    a.reject(b);
                                });
                            n(d, e, c);
                            return a.promise;
                        },
                        setFetchParameters: function(a, b) {
                            if (b) this.imageServiceParams = a;
                            else {
                                var d = this.imageServiceParameters;
                                d && a ?
                                    Object.keys(a).forEach(function(b) {
                                        d[b] = a[b];
                                    }) :
                                    (this.imageServiceParams = a);
                            }
                            this._constructGetImageParams();
                            this._getRasterIdentifier(!0);
                        },
                        read: function(a) {
                            if (a.pixelBlock || a.texture) {
                                var k = new b();
                                k.resolve(a);
                                return k.promise;
                            }
                            if (!1 === a.virtual && this.tileInfo && !this.tileInfo.virtual)
                                return this.readTile(a);
                            var e = a.extent,
                                c =
                                e.spatialReference.wkid ||
                                d.toJson(e.spatialReference.toJson(!1)),
                                h = a.timeExtent ? a.timeExtent.toJson().join(',') : null,
                                k = this.url + '/exportImage',
                                e = f.mixin({},
                                    this._commonReqParams, {
                                        bbox: e.xmin + ',' + e.ymin + ',' + e.xmax + ',' + e.ymax,
                                        imageSR: c,
                                        bboxSR: c,
                                        size: a.width + ',' + a.height,
                                        time: h,
                                    },
                                    this.disableClientCaching ? { _ts: new Date().getTime() } : {}
                                );
                            return this._requestPixels({
                                url: k,
                                payload: e,
                                decodeParams: {
                                    width: a.width,
                                    height: a.height,
                                    planes: null,
                                    pixelType: null,
                                    format: null,
                                    decodeFunc: null,
                                    isPoint: !1,
                                },
                                tileOptions: a,
                            });
                        },
                        readTile: function(a) {
                            var d = this.tileBoundary && this.tileBoundary[a.level];
                            if (
                                d &&
                                (d.minRow > a.row ||
                                    d.maxRow < a.row ||
                                    d.minCol > a.col ||
                                    d.maxCol < a.col)
                            )
                                return (d = new b()), d.resolve(a), d.promise;
                            var d = this.url + '/tile/' + a.level + '/' + a.row + '/' + a.col,
                                k = {
                                    width: this.tileInfo.cols,
                                    height: this.tileInfo.rows,
                                    planes: null,
                                    pixelType: null,
                                    format: null,
                                    decodeFunc: null,
                                    isPoint: 'elevation' === a.tileType.toLowerCase() ? !0 : !1,
                                };
                            return this._requestPixels({
                                url: d +
                                    (this.disableClientCaching ?
                                        '?_ts\x3d ' + new Date().getTime() :
                                        ''),
                                payload: {},
                                decodeParams: k,
                                tileOptions: a,
                            });
                        },
                        toJson: function() {
                            return {
                                url: this.url,
                                tileInfo: this.tileInfo,
                                rasterInfo: this.rasterInfo,
                                serviceInfo: this.serviceInfo,
                                sourceType: this.sourceType,
                                _commonReqParams: this._commonReqParams,
                                _rasterId: this._rasterId,
                            };
                        },
                        _generateServiceInfo: function(a) {
                            var k = this.url,
                                e = new b(q._dfdCanceller);
                            e._pendingDfd = p({
                                url: k,
                                content: {
                                    f: 'json',
                                    renderingRule: a ? d.toJson(a.toJson()) : null,
                                },
                                handleAs: 'json',
                                callbackParamName: 'callback',
                            });
                            e._pendingDfd.then(
                                function(a) {
                                    e.callback(a);
                                },
                                function(a) {
                                    e.errback(a);
                                }
                            );
                            return e;
                        },
                        _parseRasterInfo: function(a) {
                            var b = new x();
                            b.bandCount = a.bandCount;
                            b.extent = new r(a.fullExtent);
                            b.spatialReference = a.spatialReference;
                            b.pixelType = a.pixelType;
                            b.width = Math.floor(
                                (a.fullExtent.xmax - a.fullExtent.xmin) / a.pixelSizeX + 0.5
                            );
                            b.height = Math.floor(
                                (a.fullExtent.ymax - a.fullExtent.ymin) / a.pixelSizeY + 0.5
                            );
                            b.cellSize = new u({
                                x: a.pixelSizeX,
                                y: a.pixelSizeY,
                                spatialReference: a.spatialReference,
                            });
                            var d, k;
                            if (
                                a.minValues &&
                                0 < a.minValues.length &&
                                a.maxValues &&
                                a.stdvValues &&
                                a.meanValues
                            ) {
                                d = [];
                                for (k = 0; k < a.minValues.length; k++)
                                    d.push({
                                        min: a.minValues[k],
                                        max: a.maxValues[k],
                                        mean: a.meanValues[k],
                                        stddev: a.stdvValues[k],
                                    });
                                a.bandCount !== d.length && (d = null);
                            }
                            this.dataType = a.serviceDataType ?
                                a.serviceDataType.replace('esriImageServiceDataType', '') :
                                'Generic';
                            b.statistics = d;
                            a.objectIdField &&
                                a.fields &&
                                (b.catalogInfo = {
                                    objectIdField: a.objectIdField,
                                    fields: a.fields,
                                });
                            b.timeInfo = a.timeInfo;
                            if (a.tileInfo) {
                                this.tileInfo = new E(a.tileInfo);
                                this.tileInfo.tileType = a.cacheType || 'Map';
                                b.tileInfo = this.tileInfo;
                                var e = b.extent,
                                    c = this.tileInfo.origin,
                                    h = this.tileInfo.cols,
                                    l = this.tileInfo.rows;
                                this.tileBoundary = this.tileInfo.lods.map(function(a) {
                                    return {
                                        minCol: Math.floor(
                                            (e.xmin - c.x + 0.1 * a.resolution) / h / a.resolution
                                        ),
                                        maxCol: Math.floor(
                                            (e.xmax - c.x - 0.1 * a.resolution) / h / a.resolution
                                        ),
                                        minRow: Math.floor(
                                            (c.y - e.ymax + 0.1 * a.resolution) / l / a.resolution
                                        ),
                                        maxRow: Math.floor(
                                            (c.y - e.ymin - 0.1 * a.resolution) / l / a.resolution
                                        ),
                                    };
                                });
                            }
                            return b;
                        },
                        _getColormap: function(a) {
                            a = this.url + '/colormap';
                            var d = new b(q._dfdCanceller),
                                k = { f: 'json' },
                                e =
                                this.serviceInfo.hasColormap ||
                                (this.rasterInfo && this.rasterInfo.hasColormap);
                            10 < this.serviceInfo.currentVersion && e ?
                                ((d._pendingDfd = p({
                                    url: a,
                                    content: k,
                                    handleAs: 'json',
                                    callbackParamName: 'callback',
                                })), d._pendingDfd.then(
                                    function(a) {
                                        d.callback(a.colormap);
                                    },
                                    function(a) {
                                        d.errback(a);
                                    }
                                )) :
                                d.callback(null);
                            return d;
                        },
                        _getHistograms: function(a) {
                            var k = this.url + '/histograms',
                                e = new b(q._dfdCanceller),
                                c = { f: 'json' },
                                h =
                                this.serviceInfo.hasHistograms ||
                                (this.rasterInfo && this.rasterInfo.hasHistograms);
                            a &&
                                a.renderingRule &&
                                ((c.renderingRule = d.toJson(
                                    a.renderingRule.toJson()
                                )), (h = !0));
                            10 < this.serviceInfo.currentVersion && h ?
                                ((e._pendingDfd = p({
                                    url: k,
                                    content: c,
                                    handleAs: 'json',
                                    callbackParamName: 'callback',
                                })), e._pendingDfd.then(
                                    function(a) {
                                        e.callback(a.histograms);
                                    },
                                    function(a) {
                                        e.errback(a);
                                    }
                                )) :
                                e.callback(null);
                            return e;
                        },
                        _getRasterAttributeTable: function(a) {
                            var k = this.url + '/rasterAttributeTable',
                                e = new b(q._dfdCanceller),
                                c = { f: 'json' },
                                h = this.serviceInfo.hasRasterAttributeTable;
                            a &&
                                a.renderingRule &&
                                ((c.renderingRule = d.toJson(
                                    a.renderingRule.toJson()
                                )), (h = !0));
                            10 < this.serviceInfo.currentVersion && h ?
                                ((e._pendingDfd = p({
                                    url: k,
                                    content: c,
                                    handleAs: 'json',
                                    callbackParamName: 'callback',
                                })), e._pendingDfd.then(
                                    function(a) {
                                        e.callback(a);
                                    },
                                    function(a) {
                                        e.errback(a);
                                    }
                                )) :
                                e.callback(null);
                            return e;
                        },
                        _getKeyProperties: function(a) {
                            var k = this.url + '/keyProperties',
                                e = new b(q._dfdCanceller),
                                c = { f: 'json' };
                            a &&
                                a.renderingRule &&
                                (c.renderingRule = d.toJson(a.renderingRule.toJson()));
                            10 < this.serviceInfo.currentVersion ?
                                ((e._pendingDfd = p({
                                    url: k,
                                    content: c,
                                    handleAs: 'json',
                                    callbackParamName: 'callback',
                                })), e._pendingDfd.then(
                                    function(a) {
                                        e.callback(a);
                                    },
                                    function(a) {
                                        e.errback(a);
                                    }
                                )) :
                                e.callback(null);
                            return e;
                        },
                        _getMultidimensionalInfo: function() {
                            var a = this.url + '/multidimensionalInfo',
                                d = new b(q._dfdCanceller);
                            10.3 <= this.serviceInfo.currentVersion &&
                                this.serviceInfo.hasMultidimensions ?
                                ((d._pendingDfd = p({
                                    url: a,
                                    content: { f: 'json' },
                                    handleAs: 'json',
                                    callbackParamName: 'callback',
                                })), d._pendingDfd.then(
                                    f.hitch(this, function(a) {
                                        d.callback(a.multidimensionalInfo);
                                    }),
                                    function(a) {
                                        d.errback(a);
                                    }
                                )) :
                                d.callback(null);
                            return d;
                        },
                        _initializationFailed: function() {},
                        _constructGetImageParams: function() {
                            var a = this.imageServiceParams || {},
                                b = f.mixin({}, this._query, {
                                    f: 'image',
                                    interpolation: a.interpolation,
                                    pixelType: a.pixelType,
                                    format: a.format || 'lerc',
                                    compressionQuality: a.compressionQuality,
                                    bandIds: a.bandIds ? a.bandIds.join(',') : null,
                                    noData: null != a.noData ? a.noData.join(',') : null,
                                    noDataInterpretation: a.noDataInterpretation,
                                    adjustAspectRatio: null == a.adjustAspectRatio ?
                                        null :
                                        a.adjustAspectRatio,
                                    mosaicRule: a.mosaicRule ?
                                        d.toJson(a.mosaicRule.toJson()) :
                                        null,
                                    renderingRule: a.renderingRule ?
                                        d.toJson(a.renderingRule.toJson()) :
                                        null,
                                    token: (this.credential && this.credential.token) || null,
                                });
                            'lerc' === b.format.toLowerCase() ?
                                ((b.compressionTolerance = a.compressionTolerance), 10.5 <=
                                    this.serviceInfo.currentVersion &&
                                    (b.lercVersion = a.lercVersion || 2)) :
                                'tiff' === b.format.toLowerCase() ?
                                (b.compression = a.compression) :
                                -1 < ['jpg', 'jpeg', 'jpg', 'jpgpng'].indexOf(
                                    b.format.toLowerCase()
                                ) && (b.compression = a.compression);
                            this._commonReqParams = b;
                        },
                        _getRasterIdentifier: function(a) {
                            if (this._rasterId) return this._rasterId;
                            a = this.url.replace('http:', '').replace('https:', '');
                            var b = [],
                                k = this.imageServiceParams || {};
                            b.push(a);
                            b.push(k.interpolation);
                            b.push(k.pixelType);
                            b.push(k.compressionQuality);
                            b.push(k.bandIds ? k.bandIds.join(',') : '');
                            b.push(k.mosaicRule ? d.toJson(k.mosaicRule.toJson()) : '');
                            b.push(
                                k.renderingRule ? d.toJson(k.renderingRule.toJson()) : ''
                            );
                            a = b.join('|');
                            return (this._rasterId = this._computeSignature(a));
                        },
                        _wrapExtent: function(a) {
                            var b = a.spatialReference._getInfo(),
                                d;
                            if (b) {
                                var k = b.valid[0],
                                    b = b.valid[1];
                                if (
                                    a.xmin < k - this.resolution.x ||
                                    a.xmax > b + this.resolution.y
                                )
                                    (d = new r(
                                        (a.xmin - k) % (b - k),
                                        a.ymin,
                                        (a.xmax - b) % (b - k),
                                        a.ymax,
                                        a.spatialReference
                                    )), d.xmax < d.xmin && (d = null);
                            }
                            return d || a;
                        },
                    });
                    f.setObject('layers.rasterLib.raster.ImageServiceRaster', c, l);
                    return c;
                }
            );
        },
        'esri/layers/rasterLib/raster/RasterInfo': function() {
            define(
                [
                    'dojo/_base/declare',
                    'dojo/_base/lang',
                    '../../../geometry/Extent',
                    '../../../SpatialReference',
                    '../tile/RasterTileInfo',
                ],
                function(c, g, f, b, e) {
                    return c(null, {
                        declaredClass: 'esri.layers.rasterLib.raster.RasterInfo',
                        bandCount: null,
                        pixelType: null,
                        extent: null,
                        spatialReference: null,
                        width: null,
                        height: null,
                        colormap: null,
                        attributeTable: null,
                        multiDimensionalInfo: null,
                        statistics: null,
                        histograms: null,
                        catalogInfo: null,
                        keyProperties: null,
                        cellSize: null,
                        format: null,
                        compression: null,
                        compressionQuality: null,
                        packetSize: null,
                        geodataXform: null,
                        constructor: function(c) {
                            g.mixin(this, c);
                            this.extent = this.extent ?
                                this.extent.toJson ? this.extent : new f(this.extent) :
                                null;
                            this.spatialReference = this.spatialReference ?
                                this.spatialReference.toJson ?
                                this.spatialReference :
                                new b(this.spatialReference) :
                                null;
                            this.tileInfo = this.tileInfo ?
                                this.tileInfo.toJson ? this.tileInfo : new e(this.tileInfo) :
                                null;
                        },
                        toJson: function() {
                            return {
                                bandCount: this.bandCount,
                                pixelType: this.pixelType,
                                extent: this.extent && this.extent.toJson ?
                                    this.extent.toJson() :
                                    this.extent,
                                spatialReference: this.spatialReference &&
                                    this.spatialReference.toJson ?
                                    this.spatialReference.toJson() :
                                    this.spatialReference,
                                width: this.width,
                                height: this.height,
                                colormap: this.colormap ? g.clone(this.colormap) : null,
                                attributeTable: this.attributeTable ?
                                    g.clone(this.attributeTable) :
                                    null,
                                multiDimensionalInfo: this.multiDimensionalInfo ?
                                    g.clone(this.multiDimensionalInfo) :
                                    null,
                                statistics: this.statistics ? g.clone(this.statistics) : null,
                                histograms: this.histograms ? g.clone(this.histograms) : null,
                                catalogInfo: this.catalogInfo ?
                                    g.clone(this.catalogInfo) :
                                    null,
                                keyProperties: this.keyProperties ?
                                    g.clone(this.keyProperties) :
                                    null,
                                cellSize: this.cellSize && this.cellSize.toJson ?
                                    this.cellSize.toJson() :
                                    this.cellSize,
                                tileInfo: this.tileInfo && this.tileInfo.toJson ?
                                    this.tileInfo.toJson() :
                                    this.tileInfo,
                                format: this.format,
                                compression: this.compression,
                                compressionQuality: this.compressionQuality,
                                packetSize: this.packetSize,
                                geodataXform: this.geodataXform ?
                                    g.clone(this.geodataXform) :
                                    null,
                            };
                        },
                        clone: function() {
                            return new this.constructor(this.toJson());
                        },
                    });
                }
            );
        },
        'esri/layers/rasterLib/tile/RasterTileInfo': function() {
            define(
                'dojo/_base/declare dojo/_base/lang ../../../geometry/Extent ../../../SpatialReference ../../../geometry/Point ../../../lang ../../TileInfo'.split(
                    ' '
                ),
                function(c, g, f, b, e, h, d) {
                    return c([d], {
                        declaredClass: 'esri.layers.rasterLib.tile.RasterTileInfo',
                        rows: 512,
                        cols: 512,
                        compressionQuality: 95,
                        lercError: 0.01,
                        spatialReference: null,
                        origin: null,
                        virtual: !0,
                        tileType: 'Raster',
                        constructor: function(a, b) {
                            if (a || b) {
                                var d = b && b.refTileInfo;
                                a
                                    ?
                                    (this.virtual = !1) :
                                    ((this.virtual = !0), g.mixin(this, {
                                            rows: b.rows || this.rows,
                                            cols: b.cols || this.cols,
                                            compressionQuality: b.compressionQuality || 95,
                                            lercError: b.compressionTolerance || 0.01,
                                            spatialReference: b.spatialReference,
                                            origin: b.origin,
                                        }), (this.width = this.cols), (this.height = this.rows), this
                                        .origin ||
                                        (d ?
                                            (this.origin = d.origin) :
                                            b.spatialReference.isWebMercator() ||
                                            (b.extent &&
                                                360 <=
                                                Math.max(
                                                    Math.abs(b.extent.xmin),
                                                    Math.abs(b.extent.xmax)
                                                )) ?
                                            (this.origin = {
                                                x: -2.0037508342787e7,
                                                y: 2.0037508342787e7,
                                            }) :
                                            -1 < [4326, 4269].indexOf(
                                                b.spatialReference.wkid
                                            ) ||
                                            360 >
                                            Math.max(
                                                Math.abs(b.extent.xmin),
                                                Math.abs(b.extent.xmax)
                                            ) ?
                                            (this.origin = { x: -180, y: 90 }) :
                                            (this.origin = {
                                                x: b.extent.xmin,
                                                y: b.extent.ymax,
                                            })));
                            }
                        },
                        toJson: function() {
                            var a = d.prototype.toJson.apply(this);
                            a.tileType = this.tileType;
                            a.virtual = this.virtual;
                            a.lercError = this.lercError;
                            return a;
                        },
                        clone: function() {
                            return new this.prototype(this.toJson());
                        },
                    });
                }
            );
        },
        'esri/layers/rasterLib/raster/BasicRaster': function() {
            define(
                'require dojo/_base/declare dojo/_base/lang dojo/_base/Deferred dojo/_base/array dojo/_base/config dojo/_base/json dojo/sniff dojo/DeferredList dojo/when ../../../kernel ../../../Evented ../../../request ../../../geometry/Extent ../../../geometry/Point ../../../SpatialReference ../../../deferredUtils ../../../urlUtils ../../MosaicRule ../../ImageServiceParameters ../../PixelBlock ../../rasterFormats/rasterCodec ../tile/RasterHandler ./rasterProjectionHelper ./RasterInfo'.split(
                    ' '
                ),
                function(
                    c,
                    g,
                    f,
                    b,
                    e,
                    h,
                    d,
                    a,
                    k,
                    n,
                    l,
                    m,
                    p,
                    r,
                    u,
                    t,
                    q,
                    v,
                    C,
                    z,
                    y,
                    x,
                    w,
                    A,
                    E
                ) {
                    return g([m], {
                        url: null,
                        dataType: null,
                        rasterInfo: null,
                        tileInfo: null,
                        serviceInfo: null,
                        loaded: null,
                        constructor: function(a) {
                            if (a) {
                                var b = a.url;
                                b &&
                                    ((b = v.urlToObject(b)), (this.url = b.path), (this._query =
                                        b.query));
                                this.dataType = a.dataType;
                                this.serviceInfo = a.serviceInfo;
                                this.rasterInfo = a.rasterInfo;
                                this.tileInfo = a.tileInfo;
                                this.serviceInfo = a.serviceInfo;
                            }
                        },
                        open: function() {},
                        read: function(a) {},
                        identify: function(a) {
                            var d = new b(),
                                k = this.rasterInfo.extent,
                                e;
                            A.requirePE(k.spatialReference, a.spatialReference) ?
                                A.load().then(
                                    f.hitch(this, function() {
                                        e = A.project(a, k.spatialReference);
                                        d.resolve(e);
                                    }),
                                    function() {
                                        d.reject(
                                            Error('cannot project into this spatial reference')
                                        );
                                    }
                                ) :
                                ((e = A.project(a, k.spatialReference)), d.resolve(e));
                            return d.then(
                                f.hitch(this, function(a) {
                                    var b = this.tileInfo,
                                        d = b.origin,
                                        e = b.lods[b.lods.length - 1],
                                        c = (a.x - d.x) / b.cols / e.resolution;
                                    a = (d.y - a.y) / b.rows / e.resolution;
                                    var h =
                                        Math.round((a - Math.floor(a)) * b.rows) * b.cols +
                                        Math.round((c - Math.floor(c)) * b.cols),
                                        d = new r(
                                            d.x + e.resolution * b.cols * c,
                                            d.y - e.resolution * b.rows * (a + 1),
                                            d.x + e.resolution * b.cols * (c + 1),
                                            d.y - e.resolution * b.rows * a,
                                            k.spatialReference
                                        ),
                                        l = this.getMemberRasters ?
                                        this.getMemberRasters()[0] :
                                        this;
                                    return l
                                        .read({
                                            level: e.level,
                                            row: Math.floor(a),
                                            col: Math.floor(c),
                                            extent: d,
                                            width: b.cols,
                                            height: b.rows,
                                            virtual: l.tileInfo.virtual,
                                            tileType: l.tileInfo.tileType,
                                        })
                                        .then(function(a) {
                                            return (a = a && a.pixelBlock) &&
                                                a.pixels &&
                                                0 < a.pixels.length &&
                                                (!a.mask || a.mask[h]) ?
                                                {
                                                    pixelValue: a.pixels.map(function(a) {
                                                        return a[h];
                                                    }),
                                                } :
                                                { pixelValue: null };
                                        });
                                })
                            );
                        },
                        getProjectedFullExtent: function(a, d) {
                            var k = new b();
                            if (this.projectedFullExtent && !d)
                                return k.resolve(this.projectedFullExtent), k.promise;
                            var e = this.rasterInfo.extent,
                                c;
                            A.requirePE(this.rasterInfo.extent.spatialReference, a) ?
                                A.load().then(
                                    f.hitch(this, function() {
                                        c = A.project(e, a);
                                        this.projectedFullExtent = c = new r(c.toJson());
                                        k.resolve(c);
                                    }),
                                    function() {
                                        k.reject(
                                            Error('cannot project into this spatial reference')
                                        );
                                    }
                                ) :
                                ((c = A.project(
                                    e,
                                    a
                                )), (this.projectedFullExtent = c = new r(
                                    c.toJson()
                                )), k.resolve(c));
                            return k.promise;
                        },
                        setFetchParameters: function(a, b) {},
                        _setRasterHandler: function(a) {
                            this._rasterHandler = a;
                            this.getMemberRasters &&
                                this.getMemberRasters().forEach(
                                    f.hitch(this, function(b) {
                                        b._rasterHandler = a;
                                    })
                                );
                        },
                        _findCredential: function() {
                            this.url &&
                                (((this._credential = l.id && l.id.findCredential(this.url)) &&
                                        this._credential.ssl) ||
                                    (this.serviceInfo && this.serviceInfo._ssl)) &&
                                (this.url = this.url.replace(/^http:/i, 'https:'));
                        },
                        _initWorker: function() {
                            this._rasterHandler = new w();
                            this._rasterHandler.start().then(
                                function() {
                                    this._rasterHandlerInitialized = !0;
                                }.bind(this)
                            );
                        },
                        _requestPixels: function(a) {
                            var d = a.url,
                                k = a.payload,
                                e = a.decodeParams,
                                c = a.tileOptions,
                                h = new b(q._dfdCanceller);
                            this._rasterHandler || this._initWorker();
                            var l = this._rasterHandler,
                                g = {},
                                d = { url: d, handleAs: 'arraybuffer', content: k };
                            a.headers && (d.headers = a.headers);
                            h._pendingDfd = p(d).then(
                                f.hitch(this, function(a) {
                                    (l && this._rasterHandlerInitialized ?
                                        l.decode({ encodedData: a, decodeParams: e }) :
                                        x.decode(a, e)).then(
                                        function(a) {
                                            g.pixelBlock = new y(a);
                                            g.extent = c.extent;
                                            g.level = c.level;
                                            g.row = c.row;
                                            g.col = c.col;
                                            g.width = c.width;
                                            g.height = c.height;
                                            q._resDfd(h, [g]);
                                        },
                                        function(a) {
                                            q._resDfd(h, [a], !0);
                                        }
                                    );
                                }),
                                function(a) {
                                    q._resDfd(h, [a], !0);
                                }
                            );
                            return h;
                        },
                        _computeSignature: function(a) {
                            if ('string' === typeof a) {
                                for (
                                    var b = new Uint8Array(a.length), d = 0; d < a.length; d++
                                )
                                    b[d] = a.charCodeAt(d);
                                a = b;
                            }
                            for (
                                var d = (b = 65535),
                                    k = a.length,
                                    e = Math.floor(k / 2),
                                    c = 0; e;

                            ) {
                                var h = 359 <= e ? 359 : e,
                                    e = e - h;
                                do
                                    (b += a[c++] << 8), (d += b += a[c++]);
                                while (--h);
                                b = (b & 65535) + (b >>> 16);
                                d = (d & 65535) + (d >>> 16);
                            }
                            k & 1 && (d += b += a[c] << 8);
                            return (
                                ((((d & 65535) + (d >>> 16)) << 16) |
                                    ((b & 65535) + (b >>> 16))) >>>
                                0
                            );
                        },
                    });
                }
            );
        },
        'esri/layers/rasterFormats/rasterCodec': function() {
            define(
                'require dojo/_base/declare dojo/_base/lang dojo/_base/Deferred ../PixelBlock ./LercCodec ./Lerc2Codec ./JpgPlus ./Png ./Raw ./TiffDecoder'.split(
                    ' '
                ),
                function(c, g, f, b, e, h, d, a, k, n, l) {
                    return {
                        validPixelTypes: 'U1 U2 U4 U8 U16 U32 S8 S16 S32 F32'.split(' '),
                        supportedFormats: 'lerc jpeg jpg jpgpng png png8 png24 png32 bip bsq tiff'.split(
                            ' '
                        ),
                        _isPlatformLittleEndian: (function() {
                            var a = new ArrayBuffer(4),
                                b = new Uint8Array(a);
                            new Uint32Array(a)[0] = 1;
                            return 1 === b[0];
                        })(),
                        decode: function(a, b) {
                            if (void 0 === b || null === b) throw 'missing decode options';
                            var d, k;
                            b.format && (d = b.format.toUpperCase());
                            'BSQ' !== d && 'BIP' !== d && (d = this._getFormat(a));
                            k = b.decodeFunc;
                            if (void 0 === k || null === k) k = this._getFormatDecoderDfd(d);
                            return k(a, b);
                        },
                        _getFormatDecoderDfd: function(a) {
                            var d = null;
                            switch (a) {
                                case 'LERC':
                                    d = this._decodeLerc;
                                    break;
                                case 'LERC2':
                                    d = this._decodeLerc2;
                                    break;
                                case 'JPEG':
                                    d = this._decodeJpeg;
                                    break;
                                case 'PNG':
                                    d = this._decodePng;
                                    break;
                                case 'BSQ':
                                    d = this._decodeBsq;
                                    break;
                                case 'BIP':
                                    d = this._decodeBip;
                                    break;
                                case 'TIFF':
                                    d = this._decodeTiff;
                                    break;
                                default:
                                    d = function(a, b) {
                                        throw 'The raster format is not supported';
                                    };
                            }
                            d = f.hitch(this, d);
                            return function(a, k) {
                                var e = new b();
                                k.isPoint && k.width && (k.width++, k.height++);
                                a = d(a, k);
                                k.isPoint &&
                                    k.width &&
                                    (this._interpolatePointGrid(a), k.width--, k.height--);
                                e.resolve(a);
                                return e;
                            }.bind(this);
                        },
                        _getFormat: function(a) {
                            a = new Uint8Array(a, 0, 10);
                            var b = '';
                            if (255 === a[0] && 216 === a[1]) b = 'JPEG';
                            else if (
                                137 === a[0] &&
                                80 === a[1] &&
                                78 === a[2] &&
                                71 === a[3]
                            )
                                b = 'PNG';
                            else if (
                                67 === a[0] &&
                                110 === a[1] &&
                                116 === a[2] &&
                                90 === a[3] &&
                                73 === a[4] &&
                                109 === a[5] &&
                                97 === a[6] &&
                                103 === a[7] &&
                                101 === a[8] &&
                                32 === a[9]
                            )
                                b = 'LERC';
                            else if (
                                76 === a[0] &&
                                101 === a[1] &&
                                114 === a[2] &&
                                99 === a[3] &&
                                50 === a[4] &&
                                32 === a[5]
                            )
                                b = 'LERC2';
                            else if (-1 <
                                String.fromCharCode
                                .apply(null, a)
                                .toLowerCase()
                                .indexOf('error')
                            )
                                b = 'ERROR';
                            else if (
                                (73 === a[0] && 73 === a[1] && 42 === a[2] && 0 === a[3]) ||
                                (77 === a[0] && 77 === a[1] && 0 === a[2] && 42 === a[3])
                            )
                                b = 'TIFF';
                            return b;
                        },
                        _validateDecodeParams: function(a) {
                            if (!a.height || Math.floor(a.height) !== a.height)
                                throw 'Height not provided.';
                            if (!a.width || Math.floor(a.width) !== a.width)
                                throw 'Width not provided.';
                        },
                        _decodeJpeg: function(b, d) {
                            if (!a) throw 'The jpeg decoder module is not loaded.';
                            this._validateDecodeParams(d);
                            b = new a().decode(b);
                            if (!this._verifyResult(b, d))
                                throw 'The decoded image dimensions are incorrect.';
                            d = new e({
                                width: b.width,
                                height: b.height,
                                pixels: b.pixels,
                                pixelType: 'U8',
                                mask: b.mask,
                                statistics: null,
                            });
                            d.calculateStatistics();
                            return d;
                        },
                        _decodePng: function(a, b) {
                            if (!k) throw 'The png decoder module is not loaded.';
                            this._validateDecodeParams(b);
                            a = new Uint8Array(a);
                            var d = new k(a);
                            a = new Uint8Array(b.width * b.height * 4);
                            d.copyToImageData(a, d.decodePixels());
                            for (
                                var c = (d = 0),
                                    h,
                                    c = new Uint8Array(b.width * b.height),
                                    d = 0; d < b.width * b.height; d++
                            )
                                c[d] = a[4 * d + 3];
                            for (
                                var l = new e({
                                        width: b.width,
                                        height: b.height,
                                        pixels: [],
                                        pixelType: 'U8',
                                        mask: c,
                                        statistics: [],
                                    }),
                                    d = 0; 3 > d; d++
                            ) {
                                h = new Uint8Array(b.width * b.height);
                                for (c = 0; c < b.width * b.height; c++)
                                    h[c] = a[4 * c + d];
                                l.addData({ pixels: h });
                            }
                            l.calculateStatistics();
                            return l;
                        },
                        _decodeBsq: function(a, b) {
                            if (!n) throw 'The bsq decoder module is not loaded.';
                            this._validateDecodeParams(b);
                            var d = b.noDataValue;
                            b.pixelType = this._getpixelTypeAndNoData(b.pixelType);
                            a = n.decodeBSQ(a, {
                                bandCount: b.planes,
                                width: b.width,
                                height: b.height,
                                pixelType: b.pixelType,
                                noDataValue: d,
                            });
                            b = new e({
                                width: b.width,
                                height: b.height,
                                pixels: a.pixels,
                                pixelType: b.pixelType,
                                mask: a.maskData,
                                statistics: null,
                            });
                            b.calculateStatistics();
                            return b;
                        },
                        _decodeBip: function(a, b) {
                            this._validateDecodeParams(b);
                            var d = b.noDataValue;
                            b.pixelType = this._getpixelTypeAndNoData(b.pixelType);
                            a = n.decodeBIP(a, {
                                bandCount: b.planes,
                                width: b.width,
                                height: b.height,
                                pixelType: b.pixelType,
                                noDataValue: d,
                            });
                            b = new e({
                                width: b.width,
                                height: b.height,
                                pixels: a.pixels,
                                pixelType: b.pixelType,
                                mask: a.maskData,
                                statistics: null,
                            });
                            b.calculateStatistics();
                            return b;
                        },
                        _decodeTiff: function(a, b) {
                            this._validateDecodeParams(b);
                            b.pixelType = this._getpixelTypeAndNoData(b.pixelType);
                            a = l.decode(a);
                            a = new e({
                                width: a.width,
                                height: a.height,
                                pixels: a.pixels,
                                pixelType: a.pixelType,
                                mask: a.maskData,
                                statistics: null,
                            });
                            a.calculateStatistics();
                            return a;
                        },
                        _decodeLerc: function(a, b) {
                            if (!this._isPlatformLittleEndian)
                                throw 'lerc decoder is not supported on big endian platform';
                            this._validateDecodeParams(b);
                            var d = b.noDataValue;
                            b.pixelType = this._getpixelTypeAndNoData(b.pixelType);
                            for (var k = 0, c, l = 0, f, g = a.byteLength - 10; l < g;) {
                                var n = h.decode(a, {
                                        inputOffset: l,
                                        encodedMaskData: c,
                                        returnMask: 0 === k ? !0 : !1,
                                        returnEncodedMask: 0 === k ? !0 : !1,
                                        returnFileInfo: !0,
                                        pixelType: b.pixelType,
                                        noDataValue: d,
                                    }),
                                    l = n.fileInfo.eofOffset;
                                0 === k &&
                                    ((c = n.encodedMaskData), (f = new e({
                                        width: b.width,
                                        height: b.height,
                                        pixels: [],
                                        pixelType: b.pixelType,
                                        mask: n.maskData,
                                        statistics: [],
                                    })));
                                k++;
                                if (!this._verifyResult(n, b))
                                    throw 'The decoded image dimensions are incorrect';
                                f.addData({
                                    pixels: n.pixelData,
                                    statistics: {
                                        minValue: n.minValue,
                                        maxValue: n.maxValue,
                                        noDataValue: n.noDataValue,
                                    },
                                });
                            }
                            return f;
                        },
                        _decodeLerc2: function(a, b) {
                            if (!this._isPlatformLittleEndian)
                                throw 'lerc2 decoder is not supported on big endian platform';
                            this._validateDecodeParams(b);
                            b.pixelType = this._getpixelTypeAndNoData(b.pixelType);
                            for (
                                var k = 0, c, h, l, f = 0, g, n = a.byteLength - 10, m = [], p; f < n;

                            ) {
                                h = d.decode(a, {
                                    inputOffset: f,
                                    maskData: c,
                                    returnFileInfo: !0,
                                });
                                f = h.fileInfo.eofOffset;
                                0 === k &&
                                    ((l = h.fileInfo.numValidPixel), (c =
                                        h.maskData), (g = new e({
                                        width: b.width,
                                        height: b.height,
                                        pixels: [],
                                        dimCount: h.dimCount || 1,
                                        pixelType: h.fileInfo.pixelType,
                                        mask: h.maskData,
                                        statistics: [],
                                    })));
                                h.fileInfo.mask &&
                                    0 < h.fileInfo.mask.numBytes &&
                                    m.push(h.maskData);
                                k++;
                                if (!this._verifyResult(h, b))
                                    throw 'The decoded image dimensions are incorrect';
                                g.addData({
                                    pixels: h.pixelData,
                                    statistics: {
                                        minValue: h.minValue,
                                        maxValue: h.maxValue,
                                        noDataValue: h.noDataValue,
                                        dimStats: h.dimStats,
                                    },
                                });
                            }
                            if (1 < m.length) {
                                b = g.width * g.height;
                                g.bandMasks = m;
                                c = new Uint8Array(b);
                                c.set(m[0]);
                                for (l = 1; l < m.length; l++)
                                    for ((p = m[l]), (a = 0); a < b; a++)
                                        c[a] &= p[a];
                                for (a = l = 0; a < b; a++)
                                    l += p[a];
                                g.mask = c;
                            }
                            g.validPixelCount = l;
                            return g;
                        },
                        _interpolatePointGrid: function(a, b) {
                            var d = a.pixels;
                            if (d && 0 !== d.length) {
                                var k = d.length,
                                    e = a.width,
                                    c = a.mask,
                                    h = e - 1,
                                    l = a.height - 1,
                                    f = [],
                                    g,
                                    n,
                                    m,
                                    p,
                                    E,
                                    B;
                                if (0 === (null == b ? 1 : b)) {
                                    for (b = 0; b < k; b++) {
                                        m = d[b];
                                        p = new m.constructor(h * l);
                                        for (g = 0; g < l; g++)
                                            for ((B = g * e), (n = 0); n < h; n++)
                                                p[g * h + n] = m[B + n];
                                        f.push(p);
                                    }
                                    if (c)
                                        for ((E = new Uint8Array(h * l)), (g = 0); g < l; g++)
                                            for ((B = g * e), (n = 0); n < h; n++)
                                                E[g * h + n] = c[B + n];
                                } else {
                                    for (b = 0; b < k; b++) {
                                        m = d[b];
                                        p = new m.constructor(h * l);
                                        for (g = 0; g < l; g++)
                                            for ((B = g * e), (n = 0); n < h; n++)
                                                p[g * h + n] =
                                                (m[B + n] +
                                                    m[B + n + 1] +
                                                    m[B + e + n] +
                                                    m[B + e + n + 1]) /
                                                4;
                                        f.push(p);
                                    }
                                    if (c)
                                        for ((E = new Uint8Array(h * l)), (g = 0); g < l; g++)
                                            for ((B = g * e), (n = 0); n < h; n++)
                                                E[g * h + n] = Math.min.apply(null, [
                                                    c[B + n],
                                                    c[B + n + 1],
                                                    c[B + e + n],
                                                    c[B + e + n + 1],
                                                ]);
                                }
                                a.width = h;
                                a.height = l;
                                a.mask = E;
                                a.pixels = f;
                                return a;
                            }
                        },
                        _getpixelTypeAndNoData: function(a) {
                            return 'U1' === a || 'U2' === a || 'U4' === a || 'U8' === a ?
                                'U8' :
                                a;
                        },
                        _verifyResult: function(a, b) {
                            return a.height !== b.height || a.width !== b.width ? !1 : !0;
                        },
                    };
                }
            );
        },
        'esri/layers/rasterFormats/JpgPlus': function() {
            define(['dojo/_base/declare', './Zlib', './Jpg'], function(c, g, f) {
                return c(null, {
                    constructor: function() {},
                    decode: function(b) {
                        var e = new Uint8Array(b);
                        b = new f();
                        b.parse(e);
                        var c = b.numComponents,
                            d = b.getData(b.width, b.height, !0),
                            a,
                            k = b.width * b.height,
                            n = b.eof,
                            l = 0,
                            m = 0,
                            p = 0;
                        if (n < e.length - 1)
                            for (
                                (m = new g(e.subarray(n)).getBytes()), (a = new Uint8Array(
                                    k
                                )), (l = e = 0); l < m.length; l++
                            )
                                for (p = 7; 0 <= p; p--)
                                    a[e++] = (m[l] >> p) & 1;
                        e = [];
                        if (1 === c) e = [d, d, d];
                        else {
                            for (l = 0; 3 > l; l++)
                                (c = new Uint8Array(k)), e.push(c);
                            for (m = p = 0; m < k; m++)
                                for (l = 0; 3 > l; l++)
                                    e[l][m] = d[p++];
                        }
                        return {
                            width: b.width,
                            height: b.height,
                            pixels: e,
                            mask: a,
                        };
                    },
                });
            });
        },
        'esri/layers/rasterFormats/Zlib': function() {
            define([], function() {
                var c = (function() {
                    function c() {
                        this.bufferLength = this.pos = 0;
                        this.eof = !1;
                        this.buffer = null;
                    }
                    c.prototype = {
                        ensureBuffer: function(c) {
                            var b = this.buffer,
                                e = b ? b.byteLength : 0;
                            if (c < e) return b;
                            for (var h = 512; h < c;)
                                h <<= 1;
                            c = new Uint8Array(h);
                            for (h = 0; h < e; ++h)
                                c[h] = b[h];
                            return (this.buffer = c);
                        },
                        getByte: function() {
                            for (var c = this.pos; this.bufferLength <= c;) {
                                if (this.eof) return null;
                                this.readBlock();
                            }
                            return this.buffer[this.pos++];
                        },
                        getBytes: function(c) {
                            var b = this.pos;
                            if (c) {
                                this.ensureBuffer(b + c);
                                for (c = b + c; !this.eof && this.bufferLength < c;)
                                    this.readBlock();
                                var e = this.bufferLength;
                                c > e && (c = e);
                            } else {
                                for (; !this.eof;)
                                    this.readBlock();
                                c = this.bufferLength;
                            }
                            this.pos = c;
                            return this.buffer.subarray(b, c);
                        },
                        lookChar: function() {
                            for (var c = this.pos; this.bufferLength <= c;) {
                                if (this.eof) return null;
                                this.readBlock();
                            }
                            return String.fromCharCode(this.buffer[this.pos]);
                        },
                        getChar: function() {
                            for (var c = this.pos; this.bufferLength <= c;) {
                                if (this.eof) return null;
                                this.readBlock();
                            }
                            return String.fromCharCode(this.buffer[this.pos++]);
                        },
                        makeSubStream: function(c, b, e) {
                            for (var h = c + b; this.bufferLength <= h && !this.eof;)
                                this.readBlock();
                            return new Stream(this.buffer, c, b, e);
                        },
                        skip: function(c) {
                            c || (c = 1);
                            this.pos += c;
                        },
                        reset: function() {
                            this.pos = 0;
                        },
                    };
                    return c;
                })();
                return (function() {
                    function g(a) {
                        throw Error(a);
                    }

                    function f(a) {
                        var b = 0,
                            d = a[b++],
                            k = a[b++];
                        (-1 != d && -1 != k) || g('Invalid header in flate stream');
                        8 != (d & 15) && g('Unknown compression method in flate stream');
                        0 != ((d << 8) + k) % 31 && g('Bad FCHECK in flate stream');
                        k & 32 && g('FDICT bit set in flate stream');
                        this.bytes = a;
                        this.bytesPos = b;
                        this.codeBuf = this.codeSize = 0;
                        c.call(this);
                    }
                    if (!self || !self.Uint32Array) return null;
                    var b = new Uint32Array([
                            16,
                            17,
                            18,
                            0,
                            8,
                            7,
                            9,
                            6,
                            10,
                            5,
                            11,
                            4,
                            12,
                            3,
                            13,
                            2,
                            14,
                            1,
                            15,
                        ]),
                        e = new Uint32Array([
                            3,
                            4,
                            5,
                            6,
                            7,
                            8,
                            9,
                            10,
                            65547,
                            65549,
                            65551,
                            65553,
                            131091,
                            131095,
                            131099,
                            131103,
                            196643,
                            196651,
                            196659,
                            196667,
                            262211,
                            262227,
                            262243,
                            262259,
                            327811,
                            327843,
                            327875,
                            327907,
                            258,
                            258,
                            258,
                        ]),
                        h = new Uint32Array([
                            1,
                            2,
                            3,
                            4,
                            65541,
                            65543,
                            131081,
                            131085,
                            196625,
                            196633,
                            262177,
                            262193,
                            327745,
                            327777,
                            393345,
                            393409,
                            459009,
                            459137,
                            524801,
                            525057,
                            590849,
                            591361,
                            657409,
                            658433,
                            724993,
                            727041,
                            794625,
                            798721,
                            868353,
                            876545,
                        ]),
                        d = [
                            new Uint32Array([
                                459008,
                                524368,
                                524304,
                                524568,
                                459024,
                                524400,
                                524336,
                                590016,
                                459016,
                                524384,
                                524320,
                                589984,
                                524288,
                                524416,
                                524352,
                                590048,
                                459012,
                                524376,
                                524312,
                                589968,
                                459028,
                                524408,
                                524344,
                                590032,
                                459020,
                                524392,
                                524328,
                                59e4,
                                524296,
                                524424,
                                524360,
                                590064,
                                459010,
                                524372,
                                524308,
                                524572,
                                459026,
                                524404,
                                524340,
                                590024,
                                459018,
                                524388,
                                524324,
                                589992,
                                524292,
                                524420,
                                524356,
                                590056,
                                459014,
                                524380,
                                524316,
                                589976,
                                459030,
                                524412,
                                524348,
                                590040,
                                459022,
                                524396,
                                524332,
                                590008,
                                524300,
                                524428,
                                524364,
                                590072,
                                459009,
                                524370,
                                524306,
                                524570,
                                459025,
                                524402,
                                524338,
                                590020,
                                459017,
                                524386,
                                524322,
                                589988,
                                524290,
                                524418,
                                524354,
                                590052,
                                459013,
                                524378,
                                524314,
                                589972,
                                459029,
                                524410,
                                524346,
                                590036,
                                459021,
                                524394,
                                524330,
                                590004,
                                524298,
                                524426,
                                524362,
                                590068,
                                459011,
                                524374,
                                524310,
                                524574,
                                459027,
                                524406,
                                524342,
                                590028,
                                459019,
                                524390,
                                524326,
                                589996,
                                524294,
                                524422,
                                524358,
                                590060,
                                459015,
                                524382,
                                524318,
                                589980,
                                459031,
                                524414,
                                524350,
                                590044,
                                459023,
                                524398,
                                524334,
                                590012,
                                524302,
                                524430,
                                524366,
                                590076,
                                459008,
                                524369,
                                524305,
                                524569,
                                459024,
                                524401,
                                524337,
                                590018,
                                459016,
                                524385,
                                524321,
                                589986,
                                524289,
                                524417,
                                524353,
                                590050,
                                459012,
                                524377,
                                524313,
                                589970,
                                459028,
                                524409,
                                524345,
                                590034,
                                459020,
                                524393,
                                524329,
                                590002,
                                524297,
                                524425,
                                524361,
                                590066,
                                459010,
                                524373,
                                524309,
                                524573,
                                459026,
                                524405,
                                524341,
                                590026,
                                459018,
                                524389,
                                524325,
                                589994,
                                524293,
                                524421,
                                524357,
                                590058,
                                459014,
                                524381,
                                524317,
                                589978,
                                459030,
                                524413,
                                524349,
                                590042,
                                459022,
                                524397,
                                524333,
                                590010,
                                524301,
                                524429,
                                524365,
                                590074,
                                459009,
                                524371,
                                524307,
                                524571,
                                459025,
                                524403,
                                524339,
                                590022,
                                459017,
                                524387,
                                524323,
                                589990,
                                524291,
                                524419,
                                524355,
                                590054,
                                459013,
                                524379,
                                524315,
                                589974,
                                459029,
                                524411,
                                524347,
                                590038,
                                459021,
                                524395,
                                524331,
                                590006,
                                524299,
                                524427,
                                524363,
                                590070,
                                459011,
                                524375,
                                524311,
                                524575,
                                459027,
                                524407,
                                524343,
                                590030,
                                459019,
                                524391,
                                524327,
                                589998,
                                524295,
                                524423,
                                524359,
                                590062,
                                459015,
                                524383,
                                524319,
                                589982,
                                459031,
                                524415,
                                524351,
                                590046,
                                459023,
                                524399,
                                524335,
                                590014,
                                524303,
                                524431,
                                524367,
                                590078,
                                459008,
                                524368,
                                524304,
                                524568,
                                459024,
                                524400,
                                524336,
                                590017,
                                459016,
                                524384,
                                524320,
                                589985,
                                524288,
                                524416,
                                524352,
                                590049,
                                459012,
                                524376,
                                524312,
                                589969,
                                459028,
                                524408,
                                524344,
                                590033,
                                459020,
                                524392,
                                524328,
                                590001,
                                524296,
                                524424,
                                524360,
                                590065,
                                459010,
                                524372,
                                524308,
                                524572,
                                459026,
                                524404,
                                524340,
                                590025,
                                459018,
                                524388,
                                524324,
                                589993,
                                524292,
                                524420,
                                524356,
                                590057,
                                459014,
                                524380,
                                524316,
                                589977,
                                459030,
                                524412,
                                524348,
                                590041,
                                459022,
                                524396,
                                524332,
                                590009,
                                524300,
                                524428,
                                524364,
                                590073,
                                459009,
                                524370,
                                524306,
                                524570,
                                459025,
                                524402,
                                524338,
                                590021,
                                459017,
                                524386,
                                524322,
                                589989,
                                524290,
                                524418,
                                524354,
                                590053,
                                459013,
                                524378,
                                524314,
                                589973,
                                459029,
                                524410,
                                524346,
                                590037,
                                459021,
                                524394,
                                524330,
                                590005,
                                524298,
                                524426,
                                524362,
                                590069,
                                459011,
                                524374,
                                524310,
                                524574,
                                459027,
                                524406,
                                524342,
                                590029,
                                459019,
                                524390,
                                524326,
                                589997,
                                524294,
                                524422,
                                524358,
                                590061,
                                459015,
                                524382,
                                524318,
                                589981,
                                459031,
                                524414,
                                524350,
                                590045,
                                459023,
                                524398,
                                524334,
                                590013,
                                524302,
                                524430,
                                524366,
                                590077,
                                459008,
                                524369,
                                524305,
                                524569,
                                459024,
                                524401,
                                524337,
                                590019,
                                459016,
                                524385,
                                524321,
                                589987,
                                524289,
                                524417,
                                524353,
                                590051,
                                459012,
                                524377,
                                524313,
                                589971,
                                459028,
                                524409,
                                524345,
                                590035,
                                459020,
                                524393,
                                524329,
                                590003,
                                524297,
                                524425,
                                524361,
                                590067,
                                459010,
                                524373,
                                524309,
                                524573,
                                459026,
                                524405,
                                524341,
                                590027,
                                459018,
                                524389,
                                524325,
                                589995,
                                524293,
                                524421,
                                524357,
                                590059,
                                459014,
                                524381,
                                524317,
                                589979,
                                459030,
                                524413,
                                524349,
                                590043,
                                459022,
                                524397,
                                524333,
                                590011,
                                524301,
                                524429,
                                524365,
                                590075,
                                459009,
                                524371,
                                524307,
                                524571,
                                459025,
                                524403,
                                524339,
                                590023,
                                459017,
                                524387,
                                524323,
                                589991,
                                524291,
                                524419,
                                524355,
                                590055,
                                459013,
                                524379,
                                524315,
                                589975,
                                459029,
                                524411,
                                524347,
                                590039,
                                459021,
                                524395,
                                524331,
                                590007,
                                524299,
                                524427,
                                524363,
                                590071,
                                459011,
                                524375,
                                524311,
                                524575,
                                459027,
                                524407,
                                524343,
                                590031,
                                459019,
                                524391,
                                524327,
                                589999,
                                524295,
                                524423,
                                524359,
                                590063,
                                459015,
                                524383,
                                524319,
                                589983,
                                459031,
                                524415,
                                524351,
                                590047,
                                459023,
                                524399,
                                524335,
                                590015,
                                524303,
                                524431,
                                524367,
                                590079,
                            ]),
                            9,
                        ],
                        a = [
                            new Uint32Array([
                                327680,
                                327696,
                                327688,
                                327704,
                                327684,
                                327700,
                                327692,
                                327708,
                                327682,
                                327698,
                                327690,
                                327706,
                                327686,
                                327702,
                                327694,
                                0,
                                327681,
                                327697,
                                327689,
                                327705,
                                327685,
                                327701,
                                327693,
                                327709,
                                327683,
                                327699,
                                327691,
                                327707,
                                327687,
                                327703,
                                327695,
                                0,
                            ]),
                            5,
                        ];
                    f.prototype = Object.create(c.prototype);
                    f.prototype.getBits = function(a) {
                        for (
                            var b = this.codeSize,
                                d = this.codeBuf,
                                k = this.bytes,
                                e = this.bytesPos,
                                c; b < a;

                        )
                            'undefined' == typeof(c = k[e++]) &&
                            g('Bad encoding in flate stream'), (d |= c << b), (b += 8);
                        this.codeBuf = d >> a;
                        this.codeSize = b -= a;
                        this.bytesPos = e;
                        return d & ((1 << a) - 1);
                    };
                    f.prototype.getCode = function(a) {
                        var b = a[0],
                            d = a[1];
                        a = this.codeSize;
                        for (
                            var e = this.codeBuf, k = this.bytes, c = this.bytesPos; a < d;

                        ) {
                            var h;
                            'undefined' == typeof(h = k[c++]) &&
                            g('Bad encoding in flate stream');
                            e |= h << a;
                            a += 8;
                        }
                        d = b[e & ((1 << d) - 1)];
                        b = d >> 16;
                        d &= 65535;
                        (0 == a || a < b || 0 == b) && g('Bad encoding in flate stream');
                        this.codeBuf = e >> b;
                        this.codeSize = a - b;
                        this.bytesPos = c;
                        return d;
                    };
                    f.prototype.generateHuffmanTable = function(a) {
                        for (var b = a.length, d = 0, e = 0; e < b; ++e)
                            a[e] > d && (d = a[e]);
                        for (
                            var k = 1 << d, c = new Uint32Array(k), h = 1, f = 0, g = 2; h <= d;
                            ++h, (f <<= 1), (g <<= 1)
                        )
                            for (var v = 0; v < b; ++v)
                                if (a[v] == h) {
                                    for (var C = 0, z = f, e = 0; e < h; ++e)
                                        (C = (C << 1) | (z & 1)), (z >>= 1);
                                    for (e = C; e < k; e += g)
                                        c[e] = (h << 16) | v;
                                    ++f;
                                }
                        return [c, d];
                    };
                    f.prototype.readBlock = function() {
                        function k(a, b, d, e, k) {
                            for (a = a.getBits(d) + e; 0 < a--;)
                                b[t++] = k;
                        }
                        var c = this.getBits(3);
                        c & 1 && (this.eof = !0);
                        c >>= 1;
                        if (0 == c) {
                            var l = this.bytes,
                                f = this.bytesPos,
                                p;
                            'undefined' == typeof(p = l[f++]) &&
                            g('Bad block header in flate stream');
                            var r = p;
                            'undefined' == typeof(p = l[f++]) &&
                            g('Bad block header in flate stream');
                            r |= p << 8;
                            'undefined' == typeof(p = l[f++]) &&
                            g('Bad block header in flate stream');
                            c = p;
                            'undefined' == typeof(p = l[f++]) &&
                            g('Bad block header in flate stream');
                            (c | (p << 8)) != (~r & 65535) &&
                            g('Bad uncompressed block length in flate stream');
                            this.codeSize = this.codeBuf = 0;
                            p = this.bufferLength;
                            c = this.ensureBuffer(p + r);
                            this.bufferLength = r = p + r;
                            for (var u = p; u < r; ++u) {
                                if ('undefined' == typeof(p = l[f++])) {
                                    this.eof = !0;
                                    break;
                                }
                                c[u] = p;
                            }
                            this.bytesPos = f;
                        } else {
                            if (1 == c)(f = d), (p = a);
                            else if (2 == c) {
                                c = this.getBits(5) + 257;
                                p = this.getBits(5) + 1;
                                for (
                                    var l = this.getBits(4) + 4, f = Array(b.length), t = 0; t < l;

                                )
                                    f[b[t++]] = this.getBits(3);
                                f = this.generateHuffmanTable(f);
                                t = l = 0;
                                p = c + p;
                                for (r = Array(p); t < p;)
                                    (u = this.getCode(f)), 16 == u ?
                                    k(this, r, 2, 3, l) :
                                    17 == u ?
                                    k(this, r, 3, 3, (l = 0)) :
                                    18 == u ?
                                    k(this, r, 7, 11, (l = 0)) :
                                    (r[t++] = l = u);
                                f = this.generateHuffmanTable(r.slice(0, c));
                                p = this.generateHuffmanTable(r.slice(c, p));
                            } else g('Unknown block type in flate stream');
                            r = (c = this.buffer) ? c.length : 0;
                            for (u = this.bufferLength;;) {
                                var q = this.getCode(f);
                                if (256 > q)
                                    u + 1 >= r &&
                                    ((c = this.ensureBuffer(u + 1)), (r = c.length)), (c[
                                        u++
                                    ] = q);
                                else {
                                    if (256 == q) {
                                        this.bufferLength = u;
                                        break;
                                    }
                                    var q = q - 257,
                                        q = e[q],
                                        v = q >> 16;
                                    0 < v && (v = this.getBits(v));
                                    l = (q & 65535) + v;
                                    q = this.getCode(p);
                                    q = h[q];
                                    v = q >> 16;
                                    0 < v && (v = this.getBits(v));
                                    q = (q & 65535) + v;
                                    u + l >= r &&
                                        ((c = this.ensureBuffer(u + l)), (r = c.length));
                                    for (v = 0; v < l; ++v, ++u)
                                        c[u] = c[u - q];
                                }
                            }
                        }
                    };
                    return f;
                })();
            });
        },
        'esri/layers/rasterFormats/Jpg': function() {
            define([], function() {
                var c = (function() {
                    function c(c) {
                        this.message = 'JPEG error: ' + c;
                    }
                    c.prototype = Error();
                    c.prototype.name = 'JpegError';
                    return (c.constructor = c);
                })();
                return (function() {
                    function g() {
                        this.decodeTransform = null;
                        this.colorTransform = -1;
                    }

                    function f(a, b) {
                        for (var d = 0, e = [], k, c, h = 16; 0 < h && !a[h - 1];) h--;
                        e.push({ children: [], index: 0 });
                        var f = e[0],
                            g;
                        for (k = 0; k < h; k++) {
                            for (c = 0; c < a[k]; c++) {
                                f = e.pop();
                                for (f.children[f.index] = b[d]; 0 < f.index;) f = e.pop();
                                f.index++;
                                for (
                                    e.push(f); e.length <= k;

                                ) e.push((g = { children: [], index: 0 })), (f.children[f.index] = g.children), (f = g);
                                d++;
                            }
                            k + 1 < h &&
                                (e.push(
                                    (g = {
                                        children: [],
                                        index: 0,
                                    })
                                ), (f.children[f.index] = g.children), (f = g));
                        }
                        return e[0].children;
                    }

                    function b(a, b, e, l, f, g, r, u, t) {
                        function k() {
                            if (0 < G) return G--, (H >> G) & 1;
                            H = a[b++];
                            if (255 === H) {
                                var d = a[b++];
                                if (d)
                                    throw new c(
                                        'unexpected marker ' + ((H << 8) | d).toString(16)
                                    );
                            }
                            G = 7;
                            return H >>> 7;
                        }

                        function n(a) {
                            for (;;) {
                                a = a[k()];
                                if ('number' === typeof a) return a;
                                if ('object' !== typeof a)
                                    throw new c('invalid huffman sequence');
                            }
                        }

                        function m(a) {
                            for (var b = 0; 0 < a;)(b = (b << 1) | k()), a--;
                            return b;
                        }

                        function p(a) {
                            if (1 === a) return 1 === k() ? 1 : -1;
                            var b = m(a);
                            return b >= 1 << (a - 1) ? b : b + (-1 << a) + 1;
                        }

                        function y(a, b) {
                            var e = n(a.huffmanTableDC),
                                e = 0 === e ? 0 : p(e);
                            a.blockData[b] = a.pred += e;
                            for (e = 1; 64 > e;) {
                                var k = n(a.huffmanTableAC),
                                    c = k & 15,
                                    k = k >> 4;
                                if (0 === c) {
                                    if (15 > k) break;
                                    e += 16;
                                } else(e += k), (a.blockData[b + d[e]] = p(c)), e++;
                            }
                        }

                        function x(a, b) {
                            var d = n(a.huffmanTableDC),
                                d = 0 === d ? 0 : p(d) << t;
                            a.blockData[b] = a.pred += d;
                        }

                        function w(a, b) {
                            a.blockData[b] |= k() << t;
                        }

                        function A(a, b) {
                            if (0 < F) F--;
                            else
                                for (var e = g; e <= r;) {
                                    var k = n(a.huffmanTableAC),
                                        c = k & 15,
                                        k = k >> 4;
                                    if (0 === c) {
                                        if (15 > k) {
                                            F = m(k) + (1 << k) - 1;
                                            break;
                                        }
                                        e += 16;
                                    } else
                                        (e += k), (a.blockData[b + d[e]] = p(c) * (1 << t)), e++;
                                }
                        }

                        function E(a, b) {
                            for (var e = g, h = 0, l; e <= r;) {
                                l = d[e];
                                switch (K) {
                                    case 0:
                                        h = n(a.huffmanTableAC);
                                        l = h & 15;
                                        h >>= 4;
                                        if (0 === l)
                                            15 > h ?
                                            ((F = m(h) + (1 << h)), (K = 4)) :
                                            ((h = 16), (K = 1));
                                        else {
                                            if (1 !== l) throw new c('invalid ACn encoding');
                                            L = p(l);
                                            K = h ? 2 : 3;
                                        }
                                        continue;
                                    case 1:
                                    case 2:
                                        a.blockData[b + l] ?
                                            (a.blockData[b + l] += k() << t) :
                                            (h--, 0 === h && (K = 2 === K ? 3 : 0));
                                        break;
                                    case 3:
                                        a.blockData[b + l] ?
                                            (a.blockData[b + l] += k() << t) :
                                            ((a.blockData[b + l] = L << t), (K = 0));
                                        break;
                                    case 4:
                                        a.blockData[b + l] && (a.blockData[b + l] += k() << t);
                                }
                                e++;
                            }
                            4 === K && (F--, 0 === F && (K = 0));
                        }
                        var B = e.mcusPerLine,
                            D = b,
                            H = 0,
                            G = 0,
                            F = 0,
                            K = 0,
                            L,
                            Q = l.length,
                            O,
                            P,
                            J,
                            I,
                            N;
                        u = e.progressive ?
                            0 === g ? (0 === u ? x : w) : 0 === u ? A : E :
                            y;
                        var M = 0;
                        e = 1 === Q ?
                            l[0].blocksPerLine * l[0].blocksPerColumn :
                            B * e.mcusPerColumn;
                        for (var R, Y; M < e;) {
                            var Z = f ? Math.min(e - M, f) : e;
                            for (P = 0; P < Q; P++) l[P].pred = 0;
                            F = 0;
                            if (1 === Q)
                                for ((O = l[0]), (N = 0); N < Z; N++)
                                    u(
                                        O,
                                        64 *
                                        ((O.blocksPerLine + 1) * ((M / O.blocksPerLine) | 0) +
                                            M % O.blocksPerLine)
                                    ), M++;
                            else
                                for (N = 0; N < Z; N++) {
                                    for (P = 0; P < Q; P++)
                                        for ((O = l[P]), (R = O.h), (Y = O.v), (J = 0); J < Y; J++)
                                            for (I = 0; I < R; I++)
                                                u(
                                                    O,
                                                    64 *
                                                    ((O.blocksPerLine + 1) * (((M / B) | 0) * O.v + J) +
                                                        (M % B * O.h + I))
                                                );
                                    M++;
                                }
                            G = 0;
                            (O = h(a, b)) && O.invalid && (b = O.offset);
                            O = O && O.marker;
                            if (!O || 65280 >= O) throw new c('marker was not found');
                            if (65488 <= O && 65495 >= O) b += 2;
                            else break;
                        }
                        (O = h(a, b)) && O.invalid && (b = O.offset);
                        return b - D;
                    }

                    function e(a, b) {
                        a = b.blocksPerLine;
                        for (
                            var d = b.blocksPerColumn, e = new Int16Array(64), k = 0; k < d; k++
                        )
                            for (var h = 0; h < a; h++) {
                                var f = 64 * ((b.blocksPerLine + 1) * k + h),
                                    g = e,
                                    t = b.quantizationTable,
                                    q = b.blockData,
                                    v = void 0,
                                    C = void 0,
                                    z = void 0,
                                    y = void 0,
                                    x = void 0,
                                    w = void 0,
                                    A = void 0,
                                    E = void 0,
                                    B = void 0,
                                    D = (E = void 0),
                                    H = (A = C = w = void 0),
                                    G = void 0,
                                    B = void 0;
                                if (!t) throw new c('missing required Quantization Table.');
                                for (
                                    var F = 0; 64 > F; F += 8
                                )(B = q[f + F]), (E = q[f + F + 1]), (D = q[f + F + 2]), (w = q[f + F + 3]), (C = q[f + F + 4]), (A = q[f + F + 5]), (H = q[f + F + 6]), (G = q[f + F + 7]), (B *= t[F]), 0 === (E | D | w | C | A | H | G) ? ((B = (5793 * B + 512) >> 10), (g[F] = B), (g[F + 1] = B), (g[F + 2] = B), (g[F + 3] = B), (g[F + 4] = B), (g[F + 5] = B), (g[F + 6] = B), (g[F + 7] = B)) : ((E *= t[F + 1]), (D *= t[F + 2]), (w *= t[F + 3]), (C *= t[F + 4]), (A *= t[F + 5]), (H *= t[F + 6]), (G *= t[F + 7]), (v = (5793 * B + 128) >> 8), (C = (5793 * C + 128) >> 8), (z = D), (y = H), (x = (2896 * (E - G) + 128) >> 8), (E = (2896 * (E + G) + 128) >> 8), (w <<= 4), (A <<= 4), (v = (v + C + 1) >> 1), (C = v - C), (B = (3784 * z + 1567 * y + 128) >> 8), (z = (1567 * z - 3784 * y + 128) >> 8), (y = B), (x = (x + A + 1) >> 1), (A = x - A), (E = (E + w + 1) >> 1), (w = E - w), (v = (v + y + 1) >> 1), (y = v - y), (C = (C + z + 1) >> 1), (z = C - z), (B = (2276 * x + 3406 * E + 2048) >> 12), (x = (3406 * x - 2276 * E + 2048) >> 12), (E = B), (B = (799 * w + 4017 * A + 2048) >> 12), (w = (4017 * w - 799 * A + 2048) >> 12), (A = B), (g[F] = v + E), (g[F + 7] = v - E), (g[F + 1] = C + A), (g[F + 6] = C - A), (g[F + 2] = z + w), (g[F + 5] = z - w), (g[F + 3] = y + x), (g[F + 4] = y - x));
                                for (
                                    t = 0; 8 > t;
                                    ++t
                                )(B = g[t]), (E = g[t + 8]), (D = g[t + 16]), (w = g[t + 24]), (C = g[t + 32]), (A = g[t + 40]), (H = g[t + 48]), (G = g[t + 56]), 0 === (E | D | w | C | A | H | G) ? ((B = (5793 * B + 8192) >> 14), (B = -2040 > B ? 0 : 2024 <= B ? 255 : (B + 2056) >> 4), (q[f + t] = B), (q[f + t + 8] = B), (q[f + t + 16] = B), (q[f + t + 24] = B), (q[f + t + 32] = B), (q[f + t + 40] = B), (q[f + t + 48] = B), (q[f + t + 56] = B)) : ((v = (5793 * B + 2048) >> 12), (C = (5793 * C + 2048) >> 12), (z = D), (y = H), (x = (2896 * (E - G) + 2048) >> 12), (E = (2896 * (E + G) + 2048) >> 12), (v = ((v + C + 1) >> 1) + 4112), (C = v - C), (B = (3784 * z + 1567 * y + 2048) >> 12), (z = (1567 * z - 3784 * y + 2048) >> 12), (y = B), (x = (x + A + 1) >> 1), (A = x - A), (E = (E + w + 1) >> 1), (w = E - w), (v = (v + y + 1) >> 1), (y = v - y), (C = (C + z + 1) >> 1), (z = C - z), (B = (2276 * x + 3406 * E + 2048) >> 12), (x = (3406 * x - 2276 * E + 2048) >> 12), (E = B), (B = (799 * w + 4017 * A + 2048) >> 12), (w = (4017 * w - 799 * A + 2048) >> 12), (A = B), (B = v + E), (G = v - E), (E = C + A), (H = C - A), (D = z + w), (A = z - w), (w = y + x), (C = y - x), (B = 16 > B ? 0 : 4080 <= B ? 255 : B >> 4), (E = 16 > E ? 0 : 4080 <= E ? 255 : E >> 4), (D = 16 > D ? 0 : 4080 <= D ? 255 : D >> 4), (w = 16 > w ? 0 : 4080 <= w ? 255 : w >> 4), (C = 16 > C ? 0 : 4080 <= C ? 255 : C >> 4), (A = 16 > A ? 0 : 4080 <= A ? 255 : A >> 4), (H = 16 > H ? 0 : 4080 <= H ? 255 : H >> 4), (G = 16 > G ? 0 : 4080 <= G ? 255 : G >> 4), (q[f + t] = B), (q[f + t + 8] = E), (q[f + t + 16] = D), (q[f + t + 24] = w), (q[f + t + 32] = C), (q[f + t + 40] = A), (q[f + t + 48] = H), (q[f + t + 56] = G));
                            }
                        return b.blockData;
                    }

                    function h(a, b, d) {
                        var e = a.length - 1;
                        d = d < b ? d : b;
                        if (b >= e) return null;
                        var k = (a[b] << 8) | a[b + 1];
                        if (65472 <= k && 65534 >= k)
                            return { invalid: null, marker: k, offset: b };
                        for (b = (a[d] << 8) | a[d + 1]; !(65472 <= b && 65534 >= b);) {
                            if (++d >= e) return null;
                            b = (a[d] << 8) | a[d + 1];
                        }
                        return {
                            invalid: k.toString(16),
                            marker: b,
                            offset: d,
                        };
                    }
                    if (!self || !self.Uint8ClampedArray) return null;
                    var d = new Uint8Array([
                        0,
                        1,
                        8,
                        16,
                        9,
                        2,
                        3,
                        10,
                        17,
                        24,
                        32,
                        25,
                        18,
                        11,
                        4,
                        5,
                        12,
                        19,
                        26,
                        33,
                        40,
                        48,
                        41,
                        34,
                        27,
                        20,
                        13,
                        6,
                        7,
                        14,
                        21,
                        28,
                        35,
                        42,
                        49,
                        56,
                        57,
                        50,
                        43,
                        36,
                        29,
                        22,
                        15,
                        23,
                        30,
                        37,
                        44,
                        51,
                        58,
                        59,
                        52,
                        45,
                        38,
                        31,
                        39,
                        46,
                        53,
                        60,
                        61,
                        54,
                        47,
                        55,
                        62,
                        63,
                    ]);
                    g.prototype = {
                        parse: function(a) {
                            function k() {
                                var b = (a[m] << 8) | a[m + 1];
                                m += 2;
                                return b;
                            }

                            function g() {
                                var b = k(),
                                    b = m + b - 2,
                                    d = h(a, b, m);
                                d && d.invalid && (b = d.offset);
                                b = a.subarray(m, b);
                                m += b.length;
                                return b;
                            }

                            function l(a) {
                                for (
                                    var b = Math.ceil(a.samplesPerLine / 8 / a.maxH),
                                        d = Math.ceil(a.scanLines / 8 / a.maxV),
                                        e = 0; e < a.components.length; e++
                                ) {
                                    D = a.components[e];
                                    var k = Math.ceil(
                                            Math.ceil(a.samplesPerLine / 8) * D.h / a.maxH
                                        ),
                                        c = Math.ceil(Math.ceil(a.scanLines / 8) * D.v / a.maxV);
                                    D.blockData = new Int16Array(64 * d * D.v * (b * D.h + 1));
                                    D.blocksPerLine = k;
                                    D.blocksPerColumn = c;
                                }
                                a.mcusPerLine = b;
                                a.mcusPerColumn = d;
                            }
                            var m = 0,
                                p = null,
                                r = null,
                                u,
                                t,
                                q = [],
                                v = [],
                                C = [],
                                z = k();
                            if (65496 !== z) throw new c('SOI not found');
                            for (z = k(); 65497 !== z;) {
                                var y, x;
                                switch (z) {
                                    case 65504:
                                    case 65505:
                                    case 65506:
                                    case 65507:
                                    case 65508:
                                    case 65509:
                                    case 65510:
                                    case 65511:
                                    case 65512:
                                    case 65513:
                                    case 65514:
                                    case 65515:
                                    case 65516:
                                    case 65517:
                                    case 65518:
                                    case 65519:
                                    case 65534:
                                        y = g();
                                        65504 === z &&
                                            74 === y[0] &&
                                            70 === y[1] &&
                                            73 === y[2] &&
                                            70 === y[3] &&
                                            0 === y[4] &&
                                            (p = {
                                                version: { major: y[5], minor: y[6] },
                                                densityUnits: y[7],
                                                xDensity: (y[8] << 8) | y[9],
                                                yDensity: (y[10] << 8) | y[11],
                                                thumbWidth: y[12],
                                                thumbHeight: y[13],
                                                thumbData: y.subarray(14, 14 + 3 * y[12] * y[13]),
                                            });
                                        65518 === z &&
                                            65 === y[0] &&
                                            100 === y[1] &&
                                            111 === y[2] &&
                                            98 === y[3] &&
                                            101 === y[4] &&
                                            (r = {
                                                version: (y[5] << 8) | y[6],
                                                flags0: (y[7] << 8) | y[8],
                                                flags1: (y[9] << 8) | y[10],
                                                transformCode: y[11],
                                            });
                                        break;
                                    case 65499:
                                        for (var z = k() + m - 2, w; m < z;) {
                                            var A = a[m++],
                                                E = new Uint16Array(64);
                                            if (0 === A >> 4)
                                                for (y = 0; 64 > y; y++)
                                                    (w = d[y]), (E[w] = a[m++]);
                                            else if (1 === A >> 4)
                                                for (y = 0; 64 > y; y++)
                                                    (w = d[y]), (E[w] = k());
                                            else throw new c('DQT - invalid table spec');
                                            q[A & 15] = E;
                                        }
                                        break;
                                    case 65472:
                                    case 65473:
                                    case 65474:
                                        if (u) throw new c('Only single frame JPEGs supported');
                                        k();
                                        u = {};
                                        u.extended = 65473 === z;
                                        u.progressive = 65474 === z;
                                        u.precision = a[m++];
                                        u.scanLines = k();
                                        u.samplesPerLine = k();
                                        u.components = [];
                                        u.componentIds = {};
                                        y = a[m++];
                                        for (z = E = A = 0; z < y; z++) {
                                            w = a[m];
                                            x = a[m + 1] >> 4;
                                            var B = a[m + 1] & 15;
                                            A < x && (A = x);
                                            E < B && (E = B);
                                            x = u.components.push({
                                                h: x,
                                                v: B,
                                                quantizationId: a[m + 2],
                                                quantizationTable: null,
                                            });
                                            u.componentIds[w] = x - 1;
                                            m += 3;
                                        }
                                        u.maxH = A;
                                        u.maxV = E;
                                        l(u);
                                        break;
                                    case 65476:
                                        w = k();
                                        for (z = 2; z < w;) {
                                            A = a[m++];
                                            E = new Uint8Array(16);
                                            for (y = x = 0; 16 > y; y++, m++)
                                                x += E[y] = a[m];
                                            B = new Uint8Array(x);
                                            for (y = 0; y < x; y++, m++)
                                                B[y] = a[m];
                                            z += 17 + x;
                                            (0 === A >> 4 ? C : v)[A & 15] = f(E, B);
                                        }
                                        break;
                                    case 65501:
                                        k();
                                        t = k();
                                        break;
                                    case 65498:
                                        k();
                                        w = a[m++];
                                        y = [];
                                        for (var D, z = 0; z < w; z++)
                                            (A = u.componentIds[a[m++]]), (D = u.components[A]), (A =
                                                a[m++]), (D.huffmanTableDC =
                                                C[A >> 4]), (D.huffmanTableAC = v[A & 15]), y.push(D);
                                        z = a[m++];
                                        w = a[m++];
                                        A = a[m++];
                                        z = b(a, m, u, y, t, z, w, A >> 4, A & 15);
                                        m += z;
                                        break;
                                    case 65535:
                                        255 !== a[m] && m--;
                                        break;
                                    default:
                                        if (255 === a[m - 3] && 192 <= a[m - 2] && 254 >= a[m - 2])
                                            m -= 3;
                                        else throw new c('unknown marker ' + z.toString(16));
                                }
                                z = k();
                            }
                            this.width = u.samplesPerLine;
                            this.height = u.scanLines;
                            this.jfif = p;
                            this.eof = m;
                            this.adobe = r;
                            this.components = [];
                            for (z = 0; z < u.components.length; z++) {
                                D = u.components[z];
                                if ((p = q[D.quantizationId])) D.quantizationTable = p;
                                this.components.push({
                                    output: e(u, D),
                                    scaleX: D.h / u.maxH,
                                    scaleY: D.v / u.maxV,
                                    blocksPerLine: D.blocksPerLine,
                                    blocksPerColumn: D.blocksPerColumn,
                                });
                            }
                            this.numComponents = this.components.length;
                        },
                        _getLinearizedBlockData: function(a, b) {
                            var d = this.width / a,
                                e = this.height / b,
                                k,
                                c,
                                h,
                                f,
                                g,
                                q,
                                v = 0,
                                C,
                                z = this.components.length,
                                y = a * b * z,
                                x = new Uint8ClampedArray(y),
                                w = new Uint32Array(a);
                            for (q = 0; q < z; q++) {
                                k = this.components[q];
                                c = k.scaleX * d;
                                h = k.scaleY * e;
                                v = q;
                                C = k.output;
                                f = (k.blocksPerLine + 1) << 3;
                                for (g = 0; g < a; g++)
                                    (k = 0 | (g * c)), (w[g] = ((k & 4294967288) << 3) | (k & 7));
                                for (c = 0; c < b; c++)
                                    for (
                                        (k = 0 | (c * h)), (k =
                                            (f * (k & 4294967288)) | ((k & 7) << 3)), (g = 0); g < a; g++
                                    )
                                        (x[v] = C[k + w[g]]), (v += z);
                            }
                            if ((b = this.decodeTransform))
                                for (q = 0; q < y;)
                                    for (a = k = 0; k < z; k++, q++, (a += 2))
                                        x[q] = ((x[q] * b[a]) >> 8) + b[a + 1];
                            return x;
                        },
                        _isColorConversionNeeded: function() {
                            return this.adobe ?
                                !!this.adobe.transformCode :
                                3 === this.numComponents ?
                                0 === this.colorTransform ? !1 : !0 :
                                1 === this.colorTransform ? !0 : !1;
                        },
                        _convertYccToRgb: function(a) {
                            for (var b, d, e, c = 0, h = a.length; c < h; c += 3)
                                (b = a[c]), (d = a[c + 1]), (e = a[c + 2]), (a[c] =
                                    b - 179.456 + 1.402 * e), (a[c + 1] =
                                    b + 135.459 - 0.344 * d - 0.714 * e), (a[c + 2] =
                                    b - 226.816 + 1.772 * d);
                            return a;
                        },
                        _convertYcckToRgb: function(a) {
                            for (var b, d, e, c, h = 0, f = 0, g = a.length; f < g; f += 4)
                                (b = a[f]), (d = a[f + 1]), (e = a[f + 2]), (c = a[f + 3]), (a[
                                        h++
                                    ] = -122.67195406894 +
                                    d *
                                    (-6.60635669420364e-5 * d +
                                        4.37130475926232e-4 * e -
                                        5.4080610064599e-5 * b +
                                        4.8449797120281e-4 * c -
                                        0.154362151871126) +
                                    e *
                                    (-9.57964378445773e-4 * e +
                                        8.17076911346625e-4 * b -
                                        0.00477271405408747 * c +
                                        1.53380253221734) +
                                    b *
                                    (9.61250184130688e-4 * b -
                                        0.00266257332283933 * c +
                                        0.48357088451265) +
                                    c * (-3.36197177618394e-4 * c + 0.484791561490776)), (a[h++] =
                                    107.268039397724 +
                                    d *
                                    (2.19927104525741e-5 * d -
                                        6.40992018297945e-4 * e +
                                        6.59397001245577e-4 * b +
                                        4.26105652938837e-4 * c -
                                        0.176491792462875) +
                                    e *
                                    (-7.78269941513683e-4 * e +
                                        0.00130872261408275 * b +
                                        7.70482631801132e-4 * c -
                                        0.151051492775562) +
                                    b *
                                    (0.00126935368114843 * b -
                                        0.00265090189010898 * c +
                                        0.25802910206845) +
                                    c * (-3.18913117588328e-4 * c - 0.213742400323665)), (a[h++] = -20.810012546947 +
                                    d *
                                    (-5.70115196973677e-4 * d -
                                        2.63409051004589e-5 * e +
                                        0.0020741088115012 * b -
                                        0.00288260236853442 * c +
                                        0.814272968359295) +
                                    e *
                                    (-1.53496057440975e-5 * e -
                                        1.32689043961446e-4 * b +
                                        5.60833691242812e-4 * c -
                                        0.195152027534049) +
                                    b *
                                    (0.00174418132927582 * b -
                                        0.00255243321439347 * c +
                                        0.116935020465145) +
                                    c * (-3.43531996510555e-4 * c + 0.24165260232407));
                            return a;
                        },
                        _convertYcckToCmyk: function(a) {
                            for (var b, d, e, c = 0, h = a.length; c < h; c += 4)
                                (b = a[c]), (d = a[c + 1]), (e = a[c + 2]), (a[c] =
                                    434.456 - b - 1.402 * e), (a[c + 1] =
                                    119.541 - b + 0.344 * d + 0.714 * e), (a[c + 2] =
                                    481.816 - b - 1.772 * d);
                            return a;
                        },
                        _convertCmykToRgb: function(a) {
                            for (
                                var b, d, e, c, h = 0, f = 1 / 255, g = 0, t = a.length; g < t; g += 4
                            )
                                (b = a[g] * f), (d = a[g + 1] * f), (e = a[g + 2] * f), (c =
                                    a[g + 3] * f), (a[h++] =
                                    255 +
                                    b *
                                    (-4.387332384609988 * b +
                                        54.48615194189176 * d +
                                        18.82290502165302 * e +
                                        212.25662451639585 * c -
                                        285.2331026137004) +
                                    d *
                                    (1.7149763477362134 * d -
                                        5.6096736904047315 * e -
                                        17.873870861415444 * c -
                                        5.497006427196366) +
                                    e *
                                    (-2.5217340131683033 * e -
                                        21.248923337353073 * c +
                                        17.5119270841813) -
                                    c * (21.86122147463605 * c + 189.48180835922747)), (a[h++] =
                                    255 +
                                    b *
                                    (8.841041422036149 * b +
                                        60.118027045597366 * d +
                                        6.871425592049007 * e +
                                        31.159100130055922 * c -
                                        79.2970844816548) +
                                    d *
                                    (-15.310361306967817 * d +
                                        17.575251261109482 * e +
                                        131.35250912493976 * c -
                                        190.9453302588951) +
                                    e *
                                    (4.444339102852739 * e +
                                        9.8632861493405 * c -
                                        24.86741582555878) -
                                    c * (20.737325471181034 * c + 187.80453709719578)), (a[h++] =
                                    255 +
                                    b *
                                    (0.8842522430003296 * b +
                                        8.078677503112928 * d +
                                        30.89978309703729 * e -
                                        0.23883238689178934 * c -
                                        14.183576799673286) +
                                    d *
                                    (10.49593273432072 * d +
                                        63.02378494754052 * e +
                                        50.606957656360734 * c -
                                        112.23884253719248) +
                                    e *
                                    (0.03296041114873217 * e +
                                        115.60384449646641 * c -
                                        193.58209356861505) -
                                    c * (22.33816807309886 * c + 180.12613974708367));
                            return a;
                        },
                        getData: function(a, b, d) {
                            if (4 < this.numComponents)
                                throw new c('Unsupported color mode');
                            a = this._getLinearizedBlockData(a, b);
                            if (1 === this.numComponents && d) {
                                d = a.length;
                                b = new Uint8ClampedArray(3 * d);
                                for (var e = 0, k = 0; k < d; k++) {
                                    var h = a[k];
                                    b[e++] = h;
                                    b[e++] = h;
                                    b[e++] = h;
                                }
                                return b;
                            }
                            if (3 === this.numComponents && this._isColorConversionNeeded())
                                return this._convertYccToRgb(a);
                            if (4 === this.numComponents) {
                                if (this._isColorConversionNeeded())
                                    return d ?
                                        this._convertYcckToRgb(a) :
                                        this._convertYcckToCmyk(a);
                                if (d) return this._convertCmykToRgb(a);
                            }
                            return a;
                        },
                    };
                    return g;
                })();
            });
        },
        'esri/layers/rasterFormats/Png': function() {
            define(['./Zlib'], function(c) {
                return (function() {
                    function g(b) {
                        var e, c, d, a;
                        this.data = b;
                        this.pos = 8;
                        this.palette = [];
                        this.imgData = [];
                        this.transparency = {};
                        this.animation = null;
                        this.text = {};
                        for (d = null;;) {
                            e = this.readUInt32();
                            a = b = void 0;
                            a = [];
                            for (
                                b = 0; 4 > b;
                                ++b
                            ) a.push(String.fromCharCode(this.data[this.pos++]));
                            b = a.join('');
                            switch (b) {
                                case 'IHDR':
                                    this.width = this.readUInt32();
                                    this.height = this.readUInt32();
                                    this.bits = this.data[this.pos++];
                                    this.colorType = this.data[this.pos++];
                                    this.compressionMethod = this.data[this.pos++];
                                    this.filterMethod = this.data[this.pos++];
                                    this.interlaceMethod = this.data[this.pos++];
                                    break;
                                case 'acTL':
                                    this.animation = {
                                        numFrames: this.readUInt32(),
                                        numPlays: this.readUInt32() || Infinity,
                                        frames: [],
                                    };
                                    break;
                                case 'PLTE':
                                    this.palette = this.read(e);
                                    break;
                                case 'fcTL':
                                    d && this.animation.frames.push(d);
                                    this.pos += 4;
                                    d = {
                                        width: this.readUInt32(),
                                        height: this.readUInt32(),
                                        xOffset: this.readUInt32(),
                                        yOffset: this.readUInt32(),
                                    };
                                    b = this.readUInt16();
                                    e = this.readUInt16() || 100;
                                    d.delay = 1e3 * b / e;
                                    d.disposeOp = this.data[this.pos++];
                                    d.blendOp = this.data[this.pos++];
                                    d.data = [];
                                    break;
                                case 'IDAT':
                                case 'fdAT':
                                    'fdAT' === b && ((this.pos += 4), (e -= 4));
                                    b = (null != d ? d.data : void 0) || this.imgData;
                                    for (
                                        a = 0; 0 <= e ? a < e : a > e; 0 <= e ? ++a : --a
                                    ) b.push(this.data[this.pos++]);
                                    break;
                                case 'tRNS':
                                    this.transparency = {};
                                    switch (this.colorType) {
                                        case 3:
                                            this.transparency.indexed = this.read(e);
                                            e = 255 - this.transparency.indexed.length;
                                            if (0 < e)
                                                for (b = 0; 0 <= e ? b < e : b > e; 0 <= e ? ++b : --b)
                                                    this.transparency.indexed.push(255);
                                            break;
                                        case 0:
                                            this.transparency.grayscale = this.read(e)[0];
                                            break;
                                        case 2:
                                            this.transparency.rgb = this.read(e);
                                    }
                                    break;
                                case 'tEXt':
                                    a = this.read(e);
                                    e = a.indexOf(0);
                                    b = String.fromCharCode.apply(String, a.slice(0, e));
                                    this.text[b] = String.fromCharCode.apply(
                                        String,
                                        a.slice(e + 1)
                                    );
                                    break;
                                case 'IEND':
                                    d && this.animation.frames.push(d);
                                    a: {
                                        switch (this.colorType) {
                                            case 0:
                                            case 3:
                                            case 4:
                                                d = 1;
                                                break a;
                                            case 2:
                                            case 6:
                                                d = 3;
                                                break a;
                                        }
                                        d = void 0;
                                    }
                                    this.colors = d;
                                    this.hasAlphaChannel = 4 === (c = this.colorType) || 6 === c;
                                    c = this.colors + (this.hasAlphaChannel ? 1 : 0);
                                    this.pixelBitlength = this.bits * c;
                                    a: {
                                        switch (this.colors) {
                                            case 1:
                                                c = 'DeviceGray';
                                                break a;
                                            case 3:
                                                c = 'DeviceRGB';
                                                break a;
                                        }
                                        c = void 0;
                                    }
                                    this.colorSpace = c;
                                    this.imgData = new Uint8Array(this.imgData);
                                    return;
                                default:
                                    this.pos += e;
                            }
                            this.pos += 4;
                            if (this.pos > this.data.length)
                                throw Error('Incomplete or corrupt PNG file');
                        }
                    }
                    var f;
                    g.load = function(b, e, c) {
                        var d;
                        'function' === typeof e && (c = e);
                        d = new XMLHttpRequest();
                        d.open('GET', b, !0);
                        d.responseType = 'arraybuffer';
                        d.onload = function() {
                            var a;
                            a = new Uint8Array(d.response || d.mozResponseArrayBuffer);
                            a = new g(a);
                            'function' === typeof(null != e ? e.getContext : void 0) &&
                            a.render(e);
                            return 'function' === typeof c ? c(a) : void 0;
                        };
                        return d.send(null);
                    };
                    g.prototype.read = function(b) {
                        var e, c;
                        c = [];
                        for (e = 0; 0 <= b ? e < b : e > b; 0 <= b ? ++e : --e)
                            c.push(this.data[this.pos++]);
                        return c;
                    };
                    g.prototype.readUInt32 = function() {
                        var b, e, c, d;
                        b = this.data[this.pos++] << 24;
                        e = this.data[this.pos++] << 16;
                        c = this.data[this.pos++] << 8;
                        d = this.data[this.pos++];
                        return b | e | c | d;
                    };
                    g.prototype.readUInt16 = function() {
                        var b, e;
                        b = this.data[this.pos++] << 8;
                        e = this.data[this.pos++];
                        return b | e;
                    };
                    g.prototype.decodePixels = function(b) {
                        var e, h, d, a, k, f, l, g, p, r, u, t, q, v, C;
                        null == b && (b = this.imgData);
                        if (0 === b.length) return new Uint8Array(0);
                        b = new c(b);
                        b = b.getBytes();
                        g = this.pixelBitlength / 8;
                        t = g * this.width;
                        p = new Uint8Array(t * this.height);
                        f = b.length;
                        for (h = r = u = 0; r < f;) {
                            switch (b[r++]) {
                                case 0:
                                    for (a = e = 0; e < t; a = e += 1)
                                        p[h++] = b[r++];
                                    break;
                                case 1:
                                    for (a = q = 0; q < t; a = q += 1)
                                        (e = b[r++]), (k = a < g ? 0 : p[h - g]), (p[h++] =
                                            (e + k) % 256);
                                    break;
                                case 2:
                                    for (a = k = 0; k < t; a = k += 1)
                                        (e = b[r++]), (d = (a - a % g) / g), (q =
                                            u && p[(u - 1) * t + d * g + a % g]), (p[h++] =
                                            (q + e) % 256);
                                    break;
                                case 3:
                                    for (a = C = 0; C < t; a = C += 1)
                                        (e = b[r++]), (d = (a - a % g) / g), (k = a < g ?
                                            0 :
                                            p[h - g]), (q =
                                            u && p[(u - 1) * t + d * g + a % g]), (p[h++] =
                                            (e + Math.floor((k + q) / 2)) % 256);
                                    break;
                                case 4:
                                    for (a = C = 0; C < t; a = C += 1)
                                        (e = b[r++]), (d = (a - a % g) / g), (k = a < g ?
                                            0 :
                                            p[h - g]), 0 === u ?
                                        (q = v = 0) :
                                        ((q = p[(u - 1) * t + d * g + a % g]), (v =
                                            d && p[(u - 1) * t + (d - 1) * g + a % g])), (l =
                                            k + q - v), (a = Math.abs(l - k)), (d = Math.abs(
                                            l - q
                                        )), (l = Math.abs(l - v)), (k = a <= d && a <= l ?
                                            k :
                                            d <= l ? q : v), (p[h++] = (e + k) % 256);
                                    break;
                                default:
                                    throw Error('Invalid filter algorithm: ' + b[r - 1]);
                            }
                            u++;
                        }
                        return p;
                    };
                    g.prototype.decodePalette = function() {
                        var b, e, c, d, a, k, f, l, g;
                        c = this.palette;
                        k = this.transparency.indexed || [];
                        a = new Uint8Array((k.length || 0) + c.length);
                        e = f = b = d = 0;
                        for (l = c.length; f < l; e = f += 3)
                            (a[d++] = c[e]), (a[d++] = c[e + 1]), (a[d++] = c[e + 2]), (a[
                                d++
                            ] = null != (g = k[b++]) ? g : 255);
                        return a;
                    };
                    g.prototype.copyToImageData = function(b, e) {
                        var c, d, a, k, f, l, g;
                        d = this.colors;
                        g = null;
                        c = this.hasAlphaChannel;
                        this.palette.length &&
                            ((g = null != (a = this._decodedPalette) ?
                                a :
                                (this._decodedPalette = this.decodePalette())), (d = 4), (c = !0));
                        b = b.data || b;
                        l = b.length;
                        k = g || e;
                        a = f = 0;
                        if (1 === d)
                            for (; a < l;)
                                (d = g ? 4 * e[a / 4] : f), (f = k[d++]), (b[a++] = f), (b[
                                    a++
                                ] = f), (b[a++] = f), (b[a++] = c ?
                                    k[d++] :
                                    this.transparency.grayscale &&
                                    this.transparency.grayscale === f ?
                                    0 :
                                    255), (f = d);
                        else
                            for (; a < l;)
                                (d = g ? 4 * e[a / 4] : f), (b[a++] = k[d++]), (b[a++] =
                                    k[d++]), (b[a++] = k[d++]), (b[a++] = c ?
                                    k[d++] :
                                    this.transparency.rgb &&
                                    this.transparency.rgb[1] === k[d - 3] &&
                                    this.transparency.rgb[3] === k[d - 2] &&
                                    this.transparency.rgb[5] === k[d - 1] ?
                                    0 :
                                    255), (f = d);
                    };
                    g.prototype.decode = function() {
                        var b;
                        b = new Uint8Array(this.width * this.height * 4);
                        this.copyToImageData(b, this.decodePixels());
                        return b;
                    };
                    f = function(b) {
                        (void 0).clearRect(0, 0, b.width, b.height);
                        (void 0).putImageData(b, 0, 0);
                        b = new Image();
                        b.src = (void 0).toDataURL();
                        return b;
                    };
                    g.prototype.decodeFrames = function(b) {
                        var e, c, d, a, k, g, l;
                        if (this.animation) {
                            g = this.animation.frames;
                            l = [];
                            e = a = 0;
                            for (k = g.length; a < k; e = ++a)
                                (e = g[e]), (c = b.createImageData(
                                    e.width,
                                    e.height
                                )), (d = this.decodePixels(
                                    new Uint8Array(e.data)
                                )), this.copyToImageData(c, d), (e.imageData = c), l.push(
                                    (e.image = f(c))
                                );
                            return l;
                        }
                    };
                    g.prototype.renderFrame = function(b, e) {
                        var c, d;
                        d = this.animation.frames;
                        c = d[e];
                        d = d[e - 1];
                        0 === e && b.clearRect(0, 0, this.width, this.height);
                        1 === (null != d ? d.disposeOp : void 0) ?
                            b.clearRect(d.xOffset, d.yOffset, d.width, d.height) :
                            2 === (null != d ? d.disposeOp : void 0) &&
                            b.putImageData(d.imageData, d.xOffset, d.yOffset);
                        0 === c.blendOp &&
                            b.clearRect(c.xOffset, c.yOffset, c.width, c.height);
                        return b.drawImage(c.image, c.xOffset, c.yOffset);
                    };
                    g.prototype.animate = function(b) {
                        var e, c, d, a, k, f, l = this;
                        c = 0;
                        f = this.animation;
                        a = f.numFrames;
                        d = f.frames;
                        k = f.numPlays;
                        return (e = function() {
                            var h, f;
                            h = c++ % a;
                            f = d[h];
                            l.renderFrame(b, h);
                            if (1 < a && c / a < k)
                                return (l.animation._timeout = setTimeout(e, f.delay));
                        })();
                    };
                    g.prototype.stopAnimation = function() {
                        var b;
                        return clearTimeout(
                            null != (b = this.animation) ? b._timeout : void 0
                        );
                    };
                    g.prototype.render = function(b) {
                        var e;
                        b._png && b._png.stopAnimation();
                        b._png = this;
                        b.width = this.width;
                        b.height = this.height;
                        b = b.getContext('2d');
                        if (this.animation) return this.decodeFrames(b), this.animate(b);
                        e = b.createImageData(this.width, this.height);
                        this.copyToImageData(e, this.decodePixels());
                        return b.putImageData(e, 0, 0);
                    };
                    return g;
                })();
            });
        },
        'esri/layers/rasterFormats/Raw': function() {
            define([], function() {
                return {
                    decodeBIP: function(c, g) {
                        var f = g.pixelType,
                            b = g.bandCount,
                            e = [],
                            h = g.width * g.height,
                            d = this.getBandCount(c, g),
                            b = b || d,
                            a = c.byteLength - c.byteLength % (h * this._getPixelLength(f)),
                            k = new f(c, 0, h * d),
                            n,
                            l,
                            m,
                            p;
                        for (n = 0; n < b; n++) {
                            p = new f(h);
                            for (l = 0; l < h; l++)
                                p[l] = k[l * d + n];
                            e.push(p);
                        }
                        a < c.byteLength - 1 && (m = this._decodeMask(c.slice(a), g));
                        return { pixels: e, maskData: m };
                    },
                    decodeBSQ: function(c, g) {
                        var f = g.pixelType,
                            b = g.bandCount;
                        if (void 0 === b || null === b) b = this.getBandCount(c, g);
                        for (
                            var e = [],
                                h = g.width * g.height,
                                d = h * b,
                                a =
                                c.byteLength - c.byteLength % (h * this._getPixelLength(f)),
                                f = new f(c, 0, d),
                                k,
                                d = 0; d < b; d++
                        )
                            e.push(f.subarray(d * h, (d + 1) * h));
                        a < c.byteLength - 1 && (k = this._decodeMask(c.slice(a), g));
                        return { pixels: e, maskData: k };
                    },
                    getBandCount: function(c, g) {
                        return Math.floor(
                            c.byteLength /
                            (g.width * g.height * this._getPixelLength(g.pixelType))
                        );
                    },
                    _getPixelLength: function(c) {
                        var g = 1;
                        switch (c) {
                            case Uint8Array:
                            case Int8Array:
                            case Uint8ClampedArray:
                                g = 1;
                                break;
                            case Uint16Array:
                            case Int16Array:
                                g = 2;
                                break;
                            case Uint32Array:
                            case Int32Array:
                            case Float32Array:
                                g = 4;
                                break;
                            case Float64Array:
                                g = 8;
                        }
                        return g;
                    },
                    _decodeMask: function(c, g) {
                        var f = g.width * g.height;
                        if (8 * c.byteLength < f) return null;
                        c = new Uint8Array(c, 0, Math.ceil(f / 8));
                        g = new Uint8Array(g.width * g.height);
                        for (var b = 0, e = 0, h = 0, d = 0, h = 0; h < c.length - 1; h++)
                            for ((e = c[h]), (d = 7); 0 <= d; d--)
                                g[b++] = (e >> d) & 1;
                        for (d = 7; b < f - 1;)
                            (e = c[c.length - 1]), (g[b++] = (e >> d) & 1), d--;
                        return g;
                    },
                };
            });
        },
        'esri/layers/rasterFormats/TiffDecoder': function() {
            define(['./Jpg', './Zlib'], function(c, g) {
                var f = function() {
                        var b = new ArrayBuffer(4),
                            a = new Uint8Array(b),
                            b = new Uint32Array(b);
                        a[0] = 1;
                        a[1] = 2;
                        a[2] = 3;
                        a[3] = 4;
                        return 67305985 === b[0];
                    },
                    b = (function() {
                        var b = [];
                        b[254] = 'NEWSUBFILETYPE';
                        b[255] = 'SUBFILETYPE';
                        b[256] = 'IMAGEWIDTH';
                        b[257] = 'IMAGELENGTH';
                        b[258] = 'BITSPERSAMPLE';
                        b[259] = 'COMPRESSION';
                        b[262] = 'PHOTOMETRICINTERPRETATION';
                        b[263] = 'THRESHHOLDING';
                        b[264] = 'CELLWIDTH';
                        b[265] = 'CELLLENGTH';
                        b[266] = 'FILLORDER';
                        b[269] = 'DOCUMENTNAME';
                        b[270] = 'IMAGEDESCRIPTION';
                        b[271] = 'MAKE';
                        b[272] = 'MODEL';
                        b[273] = 'STRIPOFFSETS';
                        b[274] = 'ORIENTATION';
                        b[277] = 'SAMPLESPERPIXEL';
                        b[278] = 'ROWSPERSTRIP';
                        b[279] = 'STRIPBYTECOUNTS';
                        b[280] = 'MINSAMPLEVALUE';
                        b[281] = 'MAXSAMPLEVALUE';
                        b[282] = 'XRESOLUTION';
                        b[283] = 'YRESOLUTION';
                        b[284] = 'PLANARCONFIGURATION';
                        b[285] = 'PAGENAME';
                        b[286] = 'XPOSITION';
                        b[287] = 'YPOSITION';
                        b[288] = 'FREEOFFSETS';
                        b[289] = 'FREEBYTECOUNTS';
                        b[290] = 'GRAYRESPONSEUNIT';
                        b[291] = 'GRAYRESPONSECURVE';
                        b[292] = 'T4OPTIONS';
                        b[293] = 'T6OPTIONS';
                        b[296] = 'RESOLUTIONUNIT';
                        b[297] = 'PAGENUMBER';
                        b[300] = 'COLORRESPONSEUNIT';
                        b[301] = 'TRANSFERFUNCTION';
                        b[305] = 'SOFTWARE';
                        b[306] = 'DATETIME';
                        b[315] = 'ARTIST';
                        b[316] = 'HOSTCOMPUTER';
                        b[317] = 'PREDICTOR';
                        b[318] = 'WHITEPOINT';
                        b[319] = 'PRIMARYCHROMATICITIES';
                        b[320] = 'COLORMAP';
                        b[321] = 'HALFTONEHINTS';
                        b[322] = 'TILEWIDTH';
                        b[323] = 'TILELENGTH';
                        b[324] = 'TILEOFFSETS';
                        b[325] = 'TILEBYTECOUNTS';
                        b[326] = 'BADFAXLINES';
                        b[327] = 'CLEANFAXDATA';
                        b[328] = 'CONSECUTIVEBADFAXLINES';
                        b[330] = 'SUBIFD';
                        b[332] = 'INKSET';
                        b[333] = 'INKNAMES';
                        b[334] = 'NUMBEROFINKS';
                        b[336] = 'DOTRANGE';
                        b[337] = 'TARGETPRINTER';
                        b[338] = 'EXTRASAMPLES';
                        b[339] = 'SAMPLEFORMAT';
                        b[340] = 'SMINSAMPLEVALUE';
                        b[341] = 'SMAXSAMPLEVALUE';
                        b[342] = 'TRANSFERRANGE';
                        b[347] = 'JPEGTABLES';
                        b[512] = 'JPEGPROC';
                        b[513] = 'JPEGIFOFFSET';
                        b[514] = 'JPEGIFBYTECOUNT';
                        b[515] = 'JPEGRESTARTINTERVAL';
                        b[517] = 'JPEGLOSSLESSPREDICTORS';
                        b[518] = 'JPEGPOINTTRANSFORM';
                        b[519] = 'JPEGQTABLES';
                        b[520] = 'JPEGDCTABLES';
                        b[521] = 'JPEGACTABLES';
                        b[529] = 'YCBCRCOEFFICIENTS';
                        b[530] = 'YCBCRSUBSAMPLING';
                        b[531] = 'YCBCRPOSITIONING';
                        b[532] = 'REFERENCEBLACKWHITE';
                        b[33550] = 'GEOPIXELSCALE';
                        b[33922] = 'GEOTIEPOINTS';
                        b[33432] = 'COPYRIGHT';
                        b[42112] = 'GDAL_METADATA';
                        b[42113] = 'GDAL_NODATA';
                        b[50844] = 'RPCCOEFFICIENT';
                        b[34735] = 'GEOKEYDIRECTORY';
                        b[34736] = 'GEODOUBLEPARAMS';
                        b[34737] = 'GEOASCIIPARAMS';
                        return b;
                    })(),
                    e = [0, 1, 1, 2, 4, 8, 1, 1, 2, 4, 8, 4, 8],
                    h = function(b, a) {
                        var d = 'UNKNOWN';
                        3 === b ?
                            (d = 'F32') :
                            1 === b ?
                            8 >= a ?
                            (d = 'U8') :
                            16 >= a ? (d = 'U16') : 32 >= a && (d = 'U32') :
                            2 === b &&
                            (8 >= a ?
                                (d = 'S8') :
                                16 >= a ? (d = 'S16') : 32 >= a && (d = 'S32'));
                        return d;
                    };
                return {
                    decode: function(d) {
                        var a, k = new DataView(d, 0, 8),
                            n = k.getUint16(0, !1),
                            l;
                        if (18761 === n) l = !0;
                        else if (19789 === n) l = !1;
                        else throw 'unexpected endianess byte';
                        if (42 !== k.getUint16(2, l)) throw 'unexpected tiff identifier';
                        var m = k.getUint32(4, l);
                        a = l;
                        var p, r, u, t, q, v, C, z, y, x, w;
                        p = m;
                        for (var A = []; p;) {
                            r = new DataView(d, p, 2).getUint16(0, a);
                            u = p + 2;
                            p = new DataView(d, u + 12 * r, 4).getUint32(0, a);
                            x = {};
                            for (t = 0; t < r; t++)
                                if (
                                    ((q = new DataView(d, u, 12)), (v = q.getUint16(
                                        0,
                                        a
                                    )), (C = q.getUint16(2, a)), (z = q.getUint32(
                                        4,
                                        a
                                    )), (y = q.getUint32(8, a)), (u += 12), !(7 === C || 12 < C))
                                ) {
                                    var E = (w = {
                                            fieldTag: v,
                                            fieldType: C,
                                            fieldValueCount: z,
                                            fieldValueOffset: y,
                                        }),
                                        B = d,
                                        D = a,
                                        H = [],
                                        G = w.fieldType,
                                        F = w.fieldValueCount,
                                        K = w.fieldValueOffset,
                                        L = K,
                                        Q = e[G],
                                        O = 8 * Q,
                                        P = F * Q,
                                        J = F * e[G] * 8,
                                        I = void 0,
                                        N = void 0;
                                    if (32 >= J)
                                        if ((D || (K >>>= 32 - J), 1 === F)) H = [K];
                                        else
                                            for (N = 0; N < F; N++)
                                                H.push(K << (O * N) >>> (32 - O));
                                    else
                                        for (L = K; L < K + P; L += Q) {
                                            switch (G) {
                                                case 1:
                                                    I = new DataView(B, L, 1).getUint8(0);
                                                    break;
                                                case 2:
                                                    I = new DataView(B, L, 1).getUint8(0);
                                                    break;
                                                case 3:
                                                    I = new DataView(B, L, 2).getUint16(0, D);
                                                    break;
                                                case 4:
                                                    I = new DataView(B, L, 4).getUint32(0, D);
                                                    break;
                                                case 5:
                                                    I =
                                                        new DataView(B, L, 4).getUint32(0, D) /
                                                        new DataView(B, L + 4, 4).getUint32(0, D);
                                                    break;
                                                case 6:
                                                    I = new DataView(B, L, 1).getInt8(0);
                                                    break;
                                                case 8:
                                                    I = new DataView(B, L, 2).getInt16(0, D);
                                                    break;
                                                case 9:
                                                    I = new DataView(B, L, 4).getInt32(0, D);
                                                    break;
                                                case 10:
                                                    I =
                                                        new DataView(B, L, 4).getInt32(0, D) /
                                                        new DataView(B, L + 4, 4).getInt32(0, D);
                                                    break;
                                                case 11:
                                                    I = new DataView(B, L, 4).getFloat32(0, D);
                                                    break;
                                                case 12:
                                                    I = new DataView(B, L, 8).getFloat64(0, D);
                                                    break;
                                                case 7:
                                                    I = null;
                                                    break;
                                                default:
                                                    I = null;
                                            }
                                            H.push(I);
                                        }
                                    if (2 === G) {
                                        for (var M = '', R = H, H = [], N = 0; N < R.length; N++)
                                            0 === R[N] && '' !== M ?
                                            (H.push(M), (M = '')) :
                                            (M += String.fromCharCode(R[N]));
                                        ('' === M && 0 !== H.length) || H.push(M);
                                    }
                                    E.fieldValues = H;
                                    var Y = x,
                                        Z = b[v];
                                    void 0 === Z && (Z = 'unknown' + v);
                                    Y[Z] = { type: C, values: w.fieldValues };
                                }
                            A.push(x);
                        }
                        if (0 === A.length) throw 'no valid image file directory';
                        var U,
                            V,
                            T = A[0],
                            ca = void 0 === T.GDAL_NODATA || null === T.GDAL_NODATA ?
                            null :
                            parseFloat(T.GDAL_NODATA.values[0]);
                        if (T.TILEOFFSETS) {
                            var ua,
                                W,
                                ja,
                                Ba = f() === a,
                                ga = T.TILEOFFSETS ? T.TILEOFFSETS.values : void 0;
                            if (void 0 === ga) V = void 0;
                            else {
                                var ka = T.TILEBYTECOUNTS.values,
                                    Ca = T.TILEWIDTH.values[0],
                                    na = T.TILELENGTH.values[0],
                                    la = T.IMAGEWIDTH.values[0],
                                    va = T.IMAGELENGTH.values[0],
                                    oa = la * va,
                                    ra = T.BITSPERSAMPLE.values[0],
                                    ea = T.SAMPLESPERPIXEL.values[0],
                                    sa = T.SAMPLEFORMAT ? T.SAMPLEFORMAT.values[0] : 1,
                                    Fa = h(sa, ra);
                                if (
                                    1 !==
                                    (T.PLANARCONFIGURATION ? T.PLANARCONFIGURATION.values[0] : 1)
                                )
                                    throw 'can only handle PLANARCONFIGURATION\x3d1';
                                var ma = T.COMPRESSION ? T.COMPRESSION.values[0] : 1;
                                if (1 !== ma && 6 !== ma && 8 !== ma && 32946 !== ma)
                                    throw 'this compression is not supported at this moment';
                                if (3 < sa) V = void 0;
                                else {
                                    3 === sa ?
                                        ((W = new Float32Array(oa * ea)), (ja = Float32Array)) :
                                        1 === sa ?
                                        8 >= ra ?
                                        ((W = new Uint8Array(
                                            oa * ea
                                        )), (ja = Uint8Array)) :
                                        16 >= ra ?
                                        ((W = new Uint16Array(
                                            oa * ea
                                        )), (ja = Uint16Array)) :
                                        32 >= ra &&
                                        ((W = new Uint32Array(
                                            oa * ea
                                        )), (ja = Uint32Array)) :
                                        2 === sa &&
                                        (8 >= ra ?
                                            ((W = new Int8Array(
                                                oa * ea
                                            )), (ja = Int8Array)) :
                                            16 >= ra ?
                                            ((W = new Int16Array(
                                                oa * ea
                                            )), (ja = Int16Array)) :
                                            32 >= ra &&
                                            ((W = new Int32Array(
                                                oa * ea
                                            )), (ja = Int32Array)));
                                    var S,
                                        wa,
                                        X,
                                        xa,
                                        ha,
                                        Da,
                                        ya,
                                        La,
                                        aa,
                                        Pa,
                                        db,
                                        Ya,
                                        pa,
                                        da,
                                        Ga,
                                        Za,
                                        Qa,
                                        $a,
                                        eb = Math.ceil(la / Ca);
                                    if (0 === ra % 8)
                                        for (S = 0; S < ga.length; S++) {
                                            Da = Math.floor(S / eb) * na;
                                            ya = S % eb * Ca;
                                            La = (Da * la + ya) * ea;
                                            if ('U8' === Fa || 'S8' === Fa || Ba)
                                                if (8 === ma || 32946 === ma)
                                                    (da = new Uint8Array(d, ga[S], ka[S])), (Qa = new g(
                                                        da
                                                    )), ($a = Qa.getBytes()), (pa = new ArrayBuffer(
                                                        $a.length
                                                    )), (da = new Uint8Array(pa)), da.set($a);
                                                else if (6 === ma) {
                                                da = new Uint8Array(d, ga[S], ka[S]);
                                                var Ra = new c();
                                                Ra.parse(da);
                                                var fb = Ra.getData(Ra.width, Ra.height);
                                                pa = new ArrayBuffer(fb.length);
                                                da = new Uint8Array(pa);
                                                da.set(fb);
                                            } else
                                                1 === ma && (pa = d.slice(ga[S], ga[S] + ka[S]));
                                            else
                                                switch ((8 === ma || 32946 === ma ?
                                                    ((da = new Uint8Array(
                                                        d,
                                                        ga[S],
                                                        ka[S]
                                                    )), (Qa = new g(
                                                        da
                                                    )), (da = Qa.getBytes()), (pa = new ArrayBuffer(
                                                        da.length
                                                    )), (Ga = new Uint8Array(pa))) :
                                                    1 === ma &&
                                                    ((pa = new ArrayBuffer(
                                                        ka[S]
                                                    )), (da = new Uint8Array(
                                                        d,
                                                        ga[S],
                                                        ka[S]
                                                    )), (Ga = new Uint8Array(pa))), Fa)) {
                                                    case 'U16':
                                                    case 'S16':
                                                        for (X = 0; X < da.length; X += 2)
                                                            (Ga[X] = da[X + 1]), (Ga[X + 1] = da[X]);
                                                        break;
                                                    case 'U32':
                                                    case 'S32':
                                                    case 'F32':
                                                        for (X = 0; X < da.length; X += 4)
                                                            (Ga[X] = da[X + 3]), (Ga[X + 1] = da[X + 2]), (Ga[
                                                                    X + 2
                                                                ] =
                                                                da[X + 1]), (Ga[X + 3] = da[X]);
                                                }
                                            ua = new ja(pa);
                                            Pa = 0;
                                            aa = La;
                                            Ya = Math.min(Ca, la - ya);
                                            db = Math.min(na, va - Da);
                                            for (xa = 0; xa < db; xa++)
                                                for (
                                                    (aa = La + xa * la * ea), (Pa =
                                                        xa * Ca * ea), (ha = 0); ha < Ya * ea; ha++, aa++, Pa++
                                                )
                                                    W[aa] = ua[Pa];
                                        }
                                    var Sa = {
                                        width: la,
                                        height: va,
                                        pixelType: Fa,
                                    };
                                    if (1 === ea) Sa.pixels = [W];
                                    else
                                        for ((Sa.pixels = []), (S = 0); S < ea; S++) {
                                            Za = new ja(oa);
                                            for (wa = 0; wa < oa; wa++)
                                                Za[wa] = W[wa * ea + S];
                                            Sa.pixels.push(Za);
                                        }
                                    V = Sa;
                                }
                            }
                        } else if (T.STRIPOFFSETS) {
                            var gb,
                                za,
                                Ea,
                                jb = f() === a,
                                Ha = T.STRIPOFFSETS ? T.STRIPOFFSETS.values : void 0;
                            if (void 0 === Ha) V = void 0;
                            else {
                                var Ma = T.STRIPBYTECOUNTS.values,
                                    kb = T.ROWSPERSTRIP.values,
                                    Ta = T.IMAGEWIDTH.values[0],
                                    ab = T.IMAGELENGTH.values[0],
                                    Ia = Ta * ab,
                                    Ja = T.BITSPERSAMPLE.values[0],
                                    ta = T.SAMPLESPERPIXEL.values[0],
                                    Na = T.SAMPLEFORMAT ? T.SAMPLEFORMAT.values[0] : 1,
                                    Ua = h(Na, Ja);
                                if (
                                    1 !==
                                    (T.PLANARCONFIGURATION ? T.PLANARCONFIGURATION.values[0] : 1)
                                )
                                    throw 'can only handle PLANARCONFIGURATION\x3d1';
                                var qa = T.COMPRESSION ? T.COMPRESSION.values[0] : 1;
                                if (1 !== qa && 6 !== qa && 8 !== qa && 32946 !== qa)
                                    throw 'compressed tiff is not supported at this moment';
                                if (3 < Na) V = void 0;
                                else {
                                    3 === Na ?
                                        ((za = new Float32Array(Ia * ta)), (Ea = Float32Array)) :
                                        1 === Na ?
                                        8 >= Ja ?
                                        ((za = new Uint8Array(
                                            Ia * ta
                                        )), (Ea = Uint8Array)) :
                                        16 >= Ja ?
                                        ((za = new Uint16Array(
                                            Ia * ta
                                        )), (Ea = Uint16Array)) :
                                        32 >= Ja &&
                                        ((za = new Uint32Array(
                                            Ia * ta
                                        )), (Ea = Uint32Array)) :
                                        2 === Na &&
                                        (8 >= Ja ?
                                            ((za = new Int8Array(
                                                Ia * ta
                                            )), (Ea = Int8Array)) :
                                            16 >= Ja ?
                                            ((za = new Int16Array(
                                                Ia * ta
                                            )), (Ea = Int16Array)) :
                                            32 >= Ja &&
                                            ((za = new Int32Array(
                                                Ta * ab * ta
                                            )), (Ea = Int32Array)));
                                    var fa, Oa, ia, hb, Aa, ba, Ka, bb, Va, cb;
                                    if (0 === Ja % 8)
                                        for (fa = 0; fa < Ha.length; fa++) {
                                            hb = fa * kb * Ta * ta;
                                            if ('U8' === Ua || 'S8' === Ua || jb)
                                                if (8 === qa || 32946 === qa)
                                                    (ba = new Uint8Array(
                                                        d,
                                                        Ha[fa],
                                                        Ma[fa]
                                                    )), (Va = new g(
                                                        ba
                                                    )), (cb = Va.getBytes()), (Aa = new ArrayBuffer(
                                                        cb.length
                                                    )), (ba = new Uint8Array(Aa)), ba.set(cb);
                                                else if (6 === qa) {
                                                ba = new Uint8Array(d, Ha[fa], Ma[fa]);
                                                var Wa = new c();
                                                Wa.parse(ba);
                                                var ib = Wa.getData(Wa.width, Wa.height);
                                                Aa = new ArrayBuffer(ib.length);
                                                ba = new Uint8Array(Aa);
                                                ba.set(ib);
                                            } else
                                                1 === qa && (Aa = d.slice(Ha[fa], Ha[fa] + Ma[fa]));
                                            else
                                                switch ((6 === qa || 8 === qa || 32946 === qa ?
                                                    ((ba = new Uint8Array(
                                                        d,
                                                        Ha[fa],
                                                        Ma[fa]
                                                    )), (Va = new g(
                                                        ba
                                                    )), (ba = Va.getBytes()), (Aa = new ArrayBuffer(
                                                        ba.length
                                                    )), (Ka = new Uint8Array(Aa))) :
                                                    1 === qa &&
                                                    ((Aa = new ArrayBuffer(
                                                        Ma[fa]
                                                    )), (ba = new Uint8Array(
                                                        d,
                                                        Ha[fa],
                                                        Ma[fa]
                                                    )), (Ka = new Uint8Array(Aa))), Ua)) {
                                                    case 'U16':
                                                    case 'S16':
                                                        for (ia = 0; ia < ba.length; ia += 2)
                                                            (Ka[ia] = ba[ia + 1]), (Ka[ia + 1] = ba[ia]);
                                                        break;
                                                    case 'U32':
                                                    case 'S32':
                                                    case 'F32':
                                                        for (ia = 0; ia < ba.length; ia += 4)
                                                            (Ka[ia] = ba[ia + 3]), (Ka[ia + 1] =
                                                                ba[ia + 2]), (Ka[ia + 2] = ba[ia + 1]), (Ka[
                                                                    ia + 3
                                                                ] =
                                                                ba[ia]);
                                                }
                                            gb = new Ea(Aa);
                                            za.set(gb, hb);
                                        }
                                    var Xa = { width: Ta, height: ab, pixelType: Ua };
                                    if (1 === ta) Xa.pixels = [za];
                                    else
                                        for ((Xa.pixels = []), (fa = 0); fa < ta; fa++) {
                                            bb = new Ea(Ia);
                                            for (Oa = 0; Oa < Ia; Oa++)
                                                bb[Oa] = za[Oa * ta + fa];
                                            Xa.pixels.push(bb);
                                        }
                                    V = Xa;
                                }
                            }
                        }
                        if (null !== ca) {
                            V.maskData = new Uint8Array(V.width * V.height);
                            if (1e24 < Math.abs(ca))
                                for (U = 0; U < V.width * V.height; U++)
                                    V.maskData[U] = 1e-6 > Math.abs((V.pixels[0][U] - ca) / ca) ?
                                    0 :
                                    1;
                            else
                                for (U = 0; U < V.width * V.height; U++)
                                    V.maskData[U] = V.pixels[0][U] === ca ? 0 : 1;
                            V.noDataValue = ca;
                        }
                        return V;
                    },
                };
            });
        },
        'esri/layers/rasterLib/tile/RasterHandler': function() {
            define(
                'require exports module dojo/Deferred dojo/promise/all ../../PixelBlock ../../vectorTiles/core/workers ../../vectorTiles/core/promiseUtils ../../vectorTiles/core/requireUtils ../../vectorTiles/request ../../rasterLib/function/rasterFunctionHelper ../../rasterLib/renderer/rasterRendererHelper'.split(
                    ' '
                ),
                function(c, g, f, b, e, h, d, a, k, n, l, m) {
                    function p(a) {
                        var d = new b();
                        e(a).then(function(a) {
                            d.resolve();
                        });
                        return d.promise;
                    }
                    return (function() {
                        function e(a) {
                            this.customModules = a && a.customModules;
                        }
                        e.prototype.destroy = function() {
                            this.stop();
                            this.customModules = this.rasterLayer = null;
                        };
                        e.prototype.start = function() {
                            this.stop();
                            var a = new b(),
                                e = 0,
                                h = this.customModules ? this.customModules.length + 1 : 1,
                                l = k.getAbsMid(
                                    'esri/layers/rasterLib/tile/RasterWorker',
                                    c,
                                    f
                                ),
                                g = d.open(l, { client: this }).then(
                                    function(b) {
                                        this._connection = b;
                                        e++;
                                        e === h && ((this._connected = !0), a.resolve());
                                    }.bind(this)
                                );
                            this._openDL = [g];
                            this.customModules &&
                                this.customModules.forEach(
                                    function(b) {
                                        g = d.open(b, { client: this }).then(function(b) {
                                            e++;
                                            e === h && ((this._connected = !0), a.resolve());
                                        });
                                        this._openDL.push(g);
                                    }.bind(this)
                                );
                            return (this._connectionPromise = a.promise);
                        };
                        e.prototype.stop = function() {
                            this._openDL ?
                                this._openDL.forEach(
                                    function(a) {
                                        a.isFulfilled() || a.cancel();
                                    }.bind(this)
                                ) :
                                this._connectionPromise &&
                                !this._connectionPromise.isFulfilled() &&
                                this._connectionPromise.cancel();
                            this._connection &&
                                (this._connection.close(), (this._connection = null));
                        };
                        e.prototype.decode = function(b) {
                            if (!this._connectionPromise.isFulfilled() || !this._connection)
                                return a.reject(Error('no connection'));
                            var d = { id: null };
                            return this._connection
                                .invoke('decode', b, [], d)
                                .then(function(a) {
                                    a.targetWorker = d;
                                    return a;
                                });
                        };
                        e.prototype.process = function(d) {
                            if (!this._connectionPromise.isFulfilled() || !this._connection)
                                return a.reject(Error('no connection'));
                            var e = { id: null };
                            d.layerId = this.rasterLayer.layerId;
                            var c = new b();
                            this._connection.invoke('process', d, [], e).then(function(a) {
                                a.targetWorker = e;
                                a.src ?
                                    Object.keys(a.src).forEach(function(b) {
                                        a.src[b].pixelBlock = new h(a.src[b].pixelBlock);
                                    }) :
                                    (a.src = null);
                                a.pixelBlock && (a.pixelBlock = new h(a.pixelBlock));
                                c.resolve(a);
                            });
                            return c.promise;
                        };
                        e.prototype.render = function(b) {
                            if (!this._connectionPromise.isFulfilled() || !this._connection)
                                return a.reject(Error('no connection'));
                            var d = { id: null };
                            b.layerId = this.rasterLayer.layerId;
                            return this._connection
                                .invoke('render', b, [], d)
                                .then(function(a) {
                                    a.targetWorker = d;
                                    a.pixelBlock = a.pixelBlock ? new h(a.pixelBlock) : null;
                                    return a;
                                });
                        };
                        e.prototype.setLayer = function(b) {
                            if (!this._connectionPromise.isFulfilled() || !this._connection)
                                return a.reject(Error('no connection'));
                            this.rasterLayer = b;
                            b = this._connection.broadcast('setLayer', b, [], { id: null });
                            return p(b);
                        };
                        e.prototype.setRasterFunction = function(b) {
                            if (!this._connectionPromise.isFulfilled() || !this._connection)
                                return a.reject(Error('no connection'));
                            b = this._connection.broadcast('setRasterFunction', b, [], {
                                id: null,
                            });
                            return p(b);
                        };
                        e.prototype.setRasterRenderer = function(b) {
                            if (!this._connectionPromise.isFulfilled() || !this._connection)
                                return a.reject(Error('no connection'));
                            b = this._connection.broadcast('setRasterRenderer', b, [], {
                                id: null,
                            });
                            return p(b);
                        };
                        return e;
                    })();
                }
            );
        },
        'esri/layers/vectorTiles/core/workers': function() {
            define(['require', 'exports', './workers/workers'], function(c, g, f) {
                Object.defineProperty(g, '__esModule', { value: !0 });
                for (var b in f) g.hasOwnProperty(b) || (g[b] = f[b]);
            });
        },
        'esri/layers/vectorTiles/core/workers/workers': function() {
            define(
                'require exports dojo/sniff dojo/promise/all ../Logger ../promiseUtils ./Connection ./RemoteClient ./WorkerOwner'.split(
                    ' '
                ),
                function(c, g, f, b, e, h, d, a, k) {
                    function n() {
                        if (t) return t;
                        for (
                            var a = l + m,
                                d = [],
                                e = function(a) {
                                    var b = k.create(a).then(function(b) {
                                        return (u[a] = b);
                                    });
                                    d.push(b);
                                },
                                c = 0; c < a; c++
                        )
                            e(c);
                        return (t = b(d).then(function() {}));
                    }
                    Object.defineProperty(g, '__esModule', { value: !0 });
                    g.Connection = d;
                    g.RemoteClient = a;
                    (d = navigator.hardwareConcurrency) ||
                    (d = (f('safari') && f('mac')) || f('trident') ? 8 : 2);
                    var l = f('esri-workers-debug') ?
                        1 :
                        Math.max(1, Math.ceil(d / 2)),
                        m = f('esri-workers-debug') ? 1 : Math.max(1, Math.floor(d / 2)),
                        p = e.getLogger('esri.core.workers'),
                        r = 0,
                        u = [];
                    g.initialize = function() {
                        n();
                    };
                    g.open = function(a, b, d) {
                        void 0 === b && (b = {});
                        if (Array.isArray(a))
                            return new g.Connection(
                                a.map(function(a) {
                                    return new g.RemoteClient(a, b.client);
                                })
                            );
                        if ('string' !== typeof a) {
                            p.warn(
                                'workers-open:signature-deprecated',
                                'DEPRECATED: workers.open() changed signature.'
                            );
                            var e = a;
                            a = b;
                            b = { client: e, strategy: d ? 'dedicated' : 'distributed' };
                        }
                        var k = b.strategy || 'distributed';
                        return 'local' === k ?
                            h
                            .create(function(b) {
                                c([a], function(a) {
                                    b(g.RemoteClient.connect(a));
                                });
                            })
                            .then(function(a) {
                                return new g.Connection([
                                    new g.RemoteClient(a, b.client),
                                ]);
                            }) :
                            n().then(function() {
                                if ('dedicated' === k) {
                                    var d = l + r++;
                                    r %= m;
                                    return u[d].open(a).then(function(a) {
                                        return new g.Connection([
                                            new g.RemoteClient(a, b.client),
                                        ]);
                                    });
                                }
                                return h
                                    .all(
                                        u.map(function(b) {
                                            return b.open(a);
                                        })
                                    )
                                    .then(function(a) {
                                        return new g.Connection(
                                            a.map(function(a) {
                                                return new g.RemoteClient(a, b.client);
                                            })
                                        );
                                    });
                            });
                    };
                    g.terminate = function() {
                        for (var a = 0; a < u.length; a++)
                            u[a] && u[a].terminate();
                        u.length = 0;
                    };
                    var t;
                }
            );
        },
        'esri/layers/vectorTiles/core/Logger': function() {
            define(['require', 'exports', 'dojo/has'], function(c, g, f) {
                var b = { info: 0, warn: 1, error: 2 };
                c = (function() {
                    function e(b) {
                        void 0 === b && (b = {});
                        this.module = b.module || '';
                        this.writer = b.writer || null;
                        this.level = b.level || null;
                        null != b.enabled && (this.enabled = !!b.enabled);
                        e._loggers[this.module] = this;
                        b = this.module.lastIndexOf('.'); -
                        1 !== b && (this.parent = e.getLogger(this.module.slice(0, b)));
                    }
                    e.prototype.log = function(b) {
                        for (var d = [], a = 1; a < arguments.length; a++)
                            d[a - 1] = arguments[a];
                        this._isEnabled() &&
                            this._matchLevel(b) &&
                            (a = this._inheritedWriter()) &&
                            a.apply(void 0, [b, this.module].concat(d));
                    };
                    e.prototype.error = function() {
                        for (var b = [], d = 0; d < arguments.length; d++)
                            b[d] = arguments[d];
                        this.log.apply(this, ['error'].concat(b));
                    };
                    e.prototype.warn = function() {
                        for (var b = [], d = 0; d < arguments.length; d++)
                            b[d] = arguments[d];
                        this.log.apply(this, ['warn'].concat(b));
                    };
                    e.prototype.info = function() {
                        for (var b = [], d = 0; d < arguments.length; d++)
                            b[d] = arguments[d];
                        this.log.apply(this, ['info'].concat(b));
                    };
                    e.prototype.getLogger = function(b) {
                        return e.getLogger(this.module + '.' + b);
                    };
                    e.getLogger = function(b) {
                        var d = e._loggers[b];
                        d || (d = new e({ module: b }));
                        return d;
                    };
                    e.prototype._parentWithMember = function(b, d) {
                        for (var a = this; a && null == a[b];)
                            a = a.parent;
                        return a ? a[b] : d;
                    };
                    e.prototype._inheritedWriter = function() {
                        return this._parentWithMember('writer', this._consoleWriter);
                    };
                    e.prototype._consoleWriter = function(b, d) {
                        for (var a = [], e = 2; e < arguments.length; e++)
                            a[e - 2] = arguments[e];
                        console[b].apply(console, ['[' + d + ']'].concat(a));
                    };
                    e.prototype._matchLevel = function(e) {
                        return b[this._parentWithMember('level', 'error')] <= b[e];
                    };
                    e.prototype._isEnabled = function() {
                        return this._parentWithMember('enabled', !0);
                    };
                    e._loggers = {};
                    return e;
                })();
                c.getLogger('esri').level = 'warn';
                return c;
            });
        },
        'esri/layers/vectorTiles/core/promiseUtils': function() {
            define(
                'require exports dojo/Deferred dojo/when dojo/promise/all ./Error'.split(
                    ' '
                ),
                function(c, g, f, b, e, h) {
                    function d(a) {
                        if (a) {
                            if ('function' !== typeof a.forEach) {
                                var b = Object.keys(a),
                                    e = b.map(function(b) {
                                        return a[b];
                                    });
                                return d(e).then(function(a) {
                                    var d = {};
                                    b.forEach(function(b, e) {
                                        return (d[b] = a[e]);
                                    });
                                    return d;
                                });
                            }
                            var c = new f(),
                                h = [],
                                g = a.length;
                            0 === g && c.resolve(h);
                            a.forEach(function(a) {
                                var b = { promise: a };
                                h.push(b);
                                a
                                    .then(function(a) {
                                        b.value = a;
                                    })
                                    .catch(function(a) {
                                        b.error = a;
                                    })
                                    .then(function() {
                                        --g;
                                        0 === g && c.resolve(h);
                                    });
                            });
                            return c.promise;
                        }
                    }
                    Object.defineProperty(g, '__esModule', { value: !0 });
                    g.all = function(a) {
                        return e(a);
                    };
                    g.filter = function(a, b) {
                        var d = a.slice();
                        return e(
                            a.map(function(a, d) {
                                return b(a, d);
                            })
                        ).then(function(a) {
                            return d.filter(function(b, d) {
                                return a[d];
                            });
                        });
                    };
                    g.eachAlways = d;
                    g.create = function(a, d) {
                        var e = new f(d);
                        a(function(a) {
                            void 0 === a && (a = null);
                            return b(a).then(e.resolve);
                        }, e.reject);
                        return e.promise;
                    };
                    g.reject = function(a) {
                        var b = new f();
                        b.reject(a);
                        return b.promise;
                    };
                    g.resolve = function(a) {
                        void 0 === a && (a = null);
                        var b = new f();
                        b.resolve(a);
                        return b.promise;
                    };
                    g.after = function(a, b) {
                        void 0 === b && (b = null);
                        var d = 0,
                            e = new f(function() {
                                d && (clearTimeout(d), (d = 0));
                            }),
                            d = setTimeout(function() {
                                e.resolve(b);
                            }, a);
                        return e.promise;
                    };
                    g.timeout = function(a, b, d) {
                        var e = 0,
                            c = new f(a.cancel);
                        a.then(function(a) {
                            c.isFulfilled() ||
                                (c.resolve(a), e && (clearTimeout(e), (e = 0)));
                        });
                        a.catch(function(a) {
                            c.isFulfilled() ||
                                (c.reject(a), e && (clearTimeout(e), (e = 0)));
                        });
                        e = setTimeout(function() {
                            var a =
                                d ||
                                new h(
                                    'promiseUtils:timeout',
                                    'The wrapped promise did not resolve within ' + b + ' ms'
                                );
                            c.reject(a);
                        }, b);
                        return c.promise;
                    };
                    g.wrapCallback = function(a) {
                        var b = !1,
                            d = new f(function() {
                                return (b = !0);
                            });
                        a(function(a) {
                            b || d.resolve(a);
                        });
                        return d.promise;
                    };
                    g.isThenable = function(a) {
                        return a && 'function' === typeof a.then;
                    };
                    g.when = function(a) {
                        return b(a);
                    };
                }
            );
        },
        'esri/layers/vectorTiles/core/Error': function() {
            define(
                [
                    'require',
                    'exports',
                    './tsSupport/extendsHelper',
                    './lang',
                    './Message',
                ],
                function(c, g, f, b, e) {
                    c = (function(e) {
                        function d(a, b, c) {
                            var k = e.call(this, a, b, c) || this;
                            return k instanceof d ? k : new d(a, b, c);
                        }
                        f(d, e);
                        d.prototype.toJSON = function() {
                            return {
                                name: this.name,
                                message: this.message,
                                details: b.clone(this.details),
                                dojoType: this.dojoType,
                            };
                        };
                        d.fromJSON = function(a) {
                            var b = new d(a.name, a.message, a.details);
                            null != a.dojoType && (b.dojoType = a.dojoType);
                            return b;
                        };
                        return d;
                    })(e);
                    c.prototype.type = 'error';
                    return c;
                }
            );
        },
        'esri/layers/vectorTiles/core/tsSupport/extendsHelper': function() {
            define([], function() {
                return (function() {
                    var c =
                        Object.setPrototypeOf ||
                        ({ __proto__: [] }
                            instanceof Array &&
                            function(c, f) {
                                c.__proto__ = f;
                            }) ||
                        function(c, f) {
                            for (var b in f)
                                f.hasOwnProperty(b) && (c[b] = f[b]);
                        };
                    return function(g, f) {
                        function b() {
                            this.constructor = g;
                        }
                        c(g, f);
                        g.prototype = null === f ?
                            Object.create(f) :
                            ((b.prototype = f.prototype), new b());
                    };
                })();
            });
        },
        'esri/layers/vectorTiles/core/lang': function() {
            define(
                'dojo/_base/kernel dojo/_base/lang dojo/date dojo/number dojo/date/locale dojo/i18n!../nls/common'.split(
                    ' '
                ),
                function(c, g, f, b, e, h) {
                    function d(a) {
                        return void 0 !== a && null !== a;
                    }

                    function a(a) {
                        return d(a) ? a : '';
                    }

                    function k(c, k, h) {
                        var l = h.match(/([^\(]+)(\([^\)]+\))?/i),
                            n = g.trim(l[1]);
                        h = k[c];
                        var l = JSON.parse(
                                (l[2] ? g.trim(l[2]) : '{}')
                                .replace(/^\(/, '{')
                                .replace(/\)$/, '}')
                                .replace(/([{,])\s*([0-9a-zA-Z\_]+)\s*:/gi, '$1"$2":')
                                .replace(/\"\s*:\s*\'/gi, '":"')
                                .replace(/\'\s*(,|\})/gi, '"$1')
                            ),
                            p = l.utcOffset;
                        if (-1 === m.indexOf(n))
                            (n = g.getObject(n)), g.isFunction(n) && (h = n(h, c, k, l));
                        else if (
                            'number' === typeof h ||
                            ('string' === typeof h && h && !isNaN(Number(h)))
                        )
                            switch (((h = Number(h)), n)) {
                                case 'NumberFormat':
                                    c = g.mixin({}, l);
                                    k = parseFloat(c.places);
                                    if (isNaN(k) || 0 > k) c.places = Infinity;
                                    return b.format(h, c);
                                case 'DateString':
                                    h = new Date(h);
                                    if (l.local || l.systemLocale)
                                        return l.systemLocale ?
                                            h.toLocaleDateString() +
                                            (l.hideTime ? '' : ' ' + h.toLocaleTimeString()) :
                                            h.toDateString() +
                                            (l.hideTime ? '' : ' ' + h.toTimeString());
                                    h = h.toUTCString();
                                    l.hideTime &&
                                        (h = h.replace(/\s+\d\d\:\d\d\:\d\d\s+(utc|gmt)/i, ''));
                                    return h;
                                case 'DateFormat':
                                    return (h = new Date(h)), d(p) &&
                                        (h = f.add(
                                            h,
                                            'minute',
                                            h.getTimezoneOffset() - p
                                        )), e.format(h, l);
                            }
                        return a(h);
                    }

                    function n(a, b) {
                        var d;
                        if (b)
                            for (d in a)
                                a.hasOwnProperty(d) &&
                                (void 0 === a[d] ?
                                    delete a[d] :
                                    a[d] instanceof Object && n(a[d], !0));
                        else
                            for (d in a)
                                a.hasOwnProperty(d) && void 0 === a[d] && delete a[d];
                        return a;
                    }

                    function l(a) {
                        if (!a || 'object' != typeof a || g.isFunction(a)) return a;
                        if (
                            a instanceof Int8Array ||
                            a instanceof Uint8Array ||
                            a instanceof Uint8ClampedArray ||
                            a instanceof Int16Array ||
                            a instanceof Int32Array ||
                            a instanceof Uint16Array ||
                            a instanceof Uint32Array ||
                            a instanceof Float32Array ||
                            a instanceof Float64Array ||
                            a instanceof Date
                        )
                            return new a.constructor(a);
                        if (a instanceof ArrayBuffer) return a.slice(0, a.byteLength);
                        if ('function' === typeof a.clone) a = a.clone();
                        else if (
                            'function' === typeof a.map &&
                            'function' === typeof a.forEach
                        )
                            a = a.map(l);
                        else if (
                            'function' === typeof a.notifyChange &&
                            'function' === typeof a.watch
                        )
                            a = a.clone();
                        else {
                            var b = {},
                                d, e, c = {};
                            for (d in a) {
                                e = a[d];
                                var k = !(d in c) || c[d] !== e;
                                if (!(d in b) || (b[d] !== e && k)) b[d] = l ? l(e) : e;
                            }
                            a = b;
                        }
                        return a;
                    }
                    var m = ['NumberFormat', 'DateString', 'DateFormat'],
                        p = /<\/?[^>]+>/g;
                    return {
                        equals: function(a, b) {
                            return (
                                a === b ||
                                ('number' === typeof a &&
                                    isNaN(a) &&
                                    'number' === typeof b &&
                                    isNaN(b)) ||
                                (g.isFunction((a || {}).getTime) &&
                                    g.isFunction((b || {}).getTime) &&
                                    a.getTime() == b.getTime()) ||
                                (g.isFunction((a || {}).equals) && a.equals(b)) ||
                                (g.isFunction((b || {}).equals) && b.equals(a)) ||
                                !1
                            );
                        },
                        mixin: g.mixin,
                        valueOf: function(a, b) {
                            for (var d in a)
                                if (a[d] == b) return d;
                            return null;
                        },
                        stripTags: function(a) {
                            if (a) {
                                var b = typeof a;
                                if ('string' === b) a = a.replace(p, '');
                                else if ('object' === b)
                                    for (var d in a)
                                        (b = a[d]) &&
                                        'string' === typeof b &&
                                        (b = b.replace(p, '')), (a[d] = b);
                            }
                            return a;
                        },
                        substitute: function(b, e, c) {
                            var f, l, n;
                            d(c) &&
                                (g.isObject(c) ?
                                    ((f = c.first), (l = c.dateFormat), (n = c.numberFormat)) :
                                    (f = c));
                            if (e && '{*}' !== e)
                                return g.replace(
                                    e,
                                    g.hitch({ obj: b }, function(b, d) {
                                        b = d.split(':');
                                        return 1 < b.length ?
                                            ((d = b[0]), b.shift(), k(d, this.obj, b.join(':'))) :
                                            l && -1 !== (l.properties || []).indexOf(d) ?
                                            k(d, this.obj, l.formatter || 'DateString') :
                                            n && -1 !== (n.properties || []).indexOf(d) ?
                                            k(d, this.obj, n.formatter || 'NumberFormat') :
                                            a(this.obj[d]);
                                    })
                                );
                            e = [];
                            var m;
                            e.push(
                                '\x3ctable class\x3d"esri-widget__table" summary\x3d"' +
                                h.fieldsSummary +
                                '"\x3e\x3ctbody\x3e'
                            );
                            for (m in b)
                                if (
                                    ((c = b[m]), l && -1 !== (l.properties || []).indexOf(m) ?
                                        (c = k(m, b, l.formatter || 'DateString')) :
                                        n &&
                                        -1 !== (n.properties || []).indexOf(m) &&
                                        (c = k(m, b, n.formatter || 'NumberFormat')), e.push(
                                            '\x3ctr\x3e\x3cth\x3e' +
                                            m +
                                            '\x3c/th\x3e\x3ctd\x3e' +
                                            a(c) +
                                            '\x3c/td\x3e\x3c/tr\x3e'
                                        ), f)
                                )
                                    break;
                            e.push('\x3c/tbody\x3e\x3c/table\x3e');
                            return e.join('');
                        },
                        filter: function(a, b, d) {
                            b = [
                                g.isString(a) ? a.split('') : a,
                                d || c.global,
                                g.isString(b) ? new Function('item', 'index', 'array', b) : b,
                            ];
                            d = {};
                            var e;
                            a = b[0];
                            for (e in a)
                                b[2].call(b[e], a[e], e, a) && (d[e] = a[e]);
                            return d;
                        },
                        startsWith: function(a, b, d) {
                            d = d || 0;
                            return a.indexOf(b, d) === d;
                        },
                        endsWith: function(a, b, d) {
                            if (
                                'number' !== typeof d ||
                                !isFinite(d) ||
                                Math.floor(d) !== d ||
                                d > a.length
                            )
                                d = a.length;
                            d -= b.length;
                            a = a.indexOf(b, d);
                            return -1 !== a && a === d;
                        },
                        isDefined: d,
                        fixJson: n,
                        clone: l,
                    };
                }
            );
        },
        'esri/layers/vectorTiles/core/Message': function() {
            define(['require', 'exports', 'dojo/string'], function(c, g, f) {
                return (function() {
                    function b(e, c, d) {
                        this instanceof b &&
                            ((this.name = e), (this.message =
                                (c &&
                                    f.substitute(c, d, function(a) {
                                        return null == a ? '' : a;
                                    })) ||
                                ''), (this.details = d));
                    }
                    b.prototype.toString = function() {
                        return '[' + this.name + ']: ' + this.message;
                    };
                    return b;
                })();
            });
        },
        'esri/layers/vectorTiles/core/workers/Connection': function() {
            define(['require', 'exports', '../promiseUtils'], function(c, g, f) {
                return (function() {
                    function b(b) {
                        this._clientIdx = 0;
                        this._clients = b;
                    }
                    b.prototype.broadcast = function(b, c, d) {
                        for (var a = [], e = 0, h = this._clients; e < h.length; e++)
                            a.push(h[e].invoke(b, c, d));
                        return a;
                    };
                    b.prototype.close = function() {
                        for (var b = 0, c = this._clients; b < c.length; b++)
                            c[b].close();
                        this._clients = [];
                    };
                    b.prototype.invoke = function(b, c, d, a) {
                        var e = a && a.client;
                        if (!this._clients || !this._clients.length)
                            return f.reject(Error('Connection closed'));
                        (null != e && -1 !== this._clients.indexOf(e)) ||
                        this._clients.some(function(a) {
                                return a.isBusy() ? !1 : ((e = a), !0);
                            }) ||
                            ((this._clientIdx =
                                (this._clientIdx + 1) % this._clients.length), (e = this
                                ._clients[this._clientIdx]));
                        b = e.invoke(b, c, d);
                        a && (a.client = e);
                        return b;
                    };
                    b.prototype.openPorts = function() {
                        return f.all(
                            this._clients.map(function(b) {
                                return b.openPort();
                            })
                        );
                    };
                    return b;
                })();
            });
        },
        'esri/layers/vectorTiles/core/workers/RemoteClient': function() {
            define(
                'require exports dojo/Deferred ../Error ../promiseUtils ./utils'.split(
                    ' '
                ),
                function(c, g, f, b, e, h) {
                    function d(a, b) {
                        a['delete'](b);
                    }
                    var a = h.MessageType.CLOSE,
                        k = h.MessageType.CANCEL,
                        n = h.MessageType.INVOKE,
                        l = h.MessageType.RESPONSE,
                        m = h.MessageType.OPEN_PORT,
                        p = (function() {
                            function a(a) {
                                this._timer = null;
                                this._cancelledJobIds = new Set();
                                this._invokeMessages = [];
                                this._invoke = a;
                                this._timer = null;
                                this._process = this._process.bind(this);
                            }
                            a.prototype.push = function(a) {
                                a.type === h.MessageType.CANCEL ?
                                    this._cancelledJobIds.add(a.jobId) :
                                    (this._invokeMessages.push(a), null === this._timer &&
                                        (this._timer = setTimeout(this._process, 0)));
                            };
                            a.prototype.clear = function() {
                                this._invokeMessages.length = 0;
                                this._cancelledJobIds.clear();
                                this._timer = null;
                            };
                            a.prototype._process = function() {
                                this._timer = null;
                                for (var a = 0, b = this._invokeMessages; a < b.length; a++) {
                                    var d = b[a];
                                    this._cancelledJobIds.has(d.jobId) || this._invoke(d);
                                }
                                this._cancelledJobIds.clear();
                                this._invokeMessages.length = 0;
                            };
                            return a;
                        })();
                    return (function() {
                        function c(a, b, d) {
                            this._outJobs = new Map();
                            this._inJobs = new Map();
                            this._queue = new p(this._onInvoke.bind(this));
                            this._onMessage = this._onMessage.bind(this);
                            this._client = b;
                            this._port = a;
                            this._port.addEventListener('message', this._onMessage);
                            this._port.start();
                            this._channel = d;
                        }
                        c.connect = function(a) {
                            var b = new MessageChannel();
                            a = 'function' === typeof a ?
                                new a() :
                                'default' in a && 'function' === typeof a.default ?
                                new a.default() :
                                a;
                            a.remoteClient = new c(b.port1, a, b);
                            return b.port2;
                        };
                        c.prototype.close = function() {
                            this._post({ type: a });
                            this._close();
                        };
                        c.prototype.isBusy = function() {
                            return 0 < this._outJobs.size;
                        };
                        c.prototype.invoke = function(a, c, l) {
                            var g = this;
                            if (!this._port)
                                return e.reject(
                                    new b(
                                        'remote-client:port-closed',
                                        "Can't invoke(), port is closed"
                                    )
                                );
                            var m = h.newJobId(),
                                p = new f(function() {
                                    d(g._outJobs, m);
                                    g._post({ type: k, jobId: m });
                                });
                            this._outJobs.set(m, p);
                            this._post({ type: n, jobId: m, methodName: a }, c, l);
                            return p.promise;
                        };
                        c.prototype.openPort = function() {
                            var a = this,
                                b = h.newJobId(),
                                e = new f(function() {
                                    d(a._outJobs, b);
                                    a._post({ type: k, jobId: b });
                                });
                            this._outJobs.set(b, e);
                            this._post({ type: m, jobId: b });
                            return e.promise;
                        };
                        c.prototype._close = function() {
                            this._channel && (this._channel = null);
                            this._port.removeEventListener('message', this._onMessage);
                            this._port.close();
                            this._outJobs.forEach(function(a) {
                                a.cancel();
                            });
                            this._inJobs.clear();
                            this._outJobs.clear();
                            this._queue.clear();
                            this._port = this._client = null;
                        };
                        c.prototype._onMessage = function(b) {
                            if ((b = h.receiveMessage(b)))
                                switch (b.type) {
                                    case l:
                                        this._onResponse(b);
                                        break;
                                    case n:
                                        this._queue.push(b);
                                        break;
                                    case k:
                                        this._onCancel(b);
                                        break;
                                    case a:
                                        this._close();
                                        break;
                                    case m:
                                        this._onOpenPort(b);
                                }
                        };
                        c.prototype._onCancel = function(a) {
                            var b = this._inJobs,
                                e = a.jobId,
                                c = b.get(e);
                            this._queue.push(a);
                            c && (d(b, e), c.cancel());
                        };
                        c.prototype._onInvoke = function(a) {
                            var b = this,
                                c = a.methodName,
                                k = a.jobId;
                            a = a.data;
                            var f = this._inJobs,
                                g = this._client,
                                n = g[c],
                                m;
                            try {
                                if (!n && c && -1 !== c.indexOf('.'))
                                    for (var p = c.split('.'), r = 0; r < p.length - 1; r++)
                                        (g = g[p[r]]), (n = g[p[r + 1]]);
                                if ('function' !== typeof n)
                                    throw new TypeError(c + ' is not a function');
                                m = n.call(g, a, this);
                            } catch (E) {
                                this._post({ type: l, jobId: k, error: h.toInvokeError(E) });
                                return;
                            }
                            e.isThenable(m) ?
                                (f.set(k, m), m
                                    .then(function(a) {
                                        f.has(k) && (d(f, k), b._post({ type: l, jobId: k }, a));
                                    })
                                    .catch(function(a) {
                                        f.has(k) &&
                                            (d(f, k), (a && 'cancel' === a.dojoType) ||
                                                b._post({
                                                    type: l,
                                                    jobId: k,
                                                    error: h.toInvokeError(
                                                        a || { message: 'Error encountered at method ' + c }
                                                    ),
                                                }));
                                    })) :
                                this._post({ type: l, jobId: k }, m);
                        };
                        c.prototype._onOpenPort = function(a) {
                            var b = new MessageChannel();
                            new c(b.port1, this._client);
                            this._post({ type: l, jobId: a.jobId }, b.port2, [b.port2]);
                        };
                        c.prototype._onResponse = function(a) {
                            var e = a.jobId,
                                c = a.error;
                            a = a.data;
                            var k = this._outJobs;
                            if (k.has(e)) {
                                var h = k.get(e);
                                d(k, e);
                                c ? h.reject(b.fromJSON(JSON.parse(c))) : h.resolve(a);
                            }
                        };
                        c.prototype._post = function(a, b, d) {
                            return h.postMessage(this._port, a, b, d);
                        };
                        return c;
                    })();
                }
            );
        },
        'esri/layers/vectorTiles/core/workers/utils': function() {
            define(['require', 'exports', 'dojo/has'], function(c, g, f) {
                function b(b) {
                    return (
                        b && 'object' === typeof b && ('result' in b || 'transferList' in b)
                    );
                }
                Object.defineProperty(g, '__esModule', { value: !0 });
                (function(b) {
                    b[(b.HANDSHAKE = 0)] = 'HANDSHAKE';
                    b[(b.CONFIGURE = 1)] = 'CONFIGURE';
                    b[(b.CONFIGURED = 2)] = 'CONFIGURED';
                    b[(b.OPEN = 3)] = 'OPEN';
                    b[(b.OPENED = 4)] = 'OPENED';
                    b[(b.RESPONSE = 5)] = 'RESPONSE';
                    b[(b.INVOKE = 6)] = 'INVOKE';
                    b[(b.CANCEL = 7)] = 'CANCEL';
                    b[(b.CLOSE = 8)] = 'CLOSE';
                    b[(b.OPEN_PORT = 9)] = 'OPEN_PORT';
                })(g.MessageType || (g.MessageType = {}));
                var e = 0;
                g.newJobId = function() {
                    return e++;
                };
                g.isTranferableResult = b;
                g.toInvokeError = function(b) {
                    return b ?
                        b.toJSON ?
                        JSON.stringify(b) :
                        JSON.stringify({
                            name: b.name,
                            message: b.message,
                            details: b.details,
                            stack: b.stack,
                        }) :
                        null;
                };
                g.postMessage = function(e, d, a, c) {
                    2 === arguments.length || (void 0 === a && void 0 === c) ?
                        e.postMessage(d) :
                        (f('esri-workers-supports-transfer-arraybuffer') ||
                            (c ?
                                ((c = c.filter(function(a) {
                                    return !(a instanceof ArrayBuffer);
                                })), c.length || (c = null)) :
                                b(a) &&
                                a.transferList &&
                                ((a.transferList = a.transferList.filter(function(a) {
                                    return !(a instanceof ArrayBuffer);
                                })), a.transferList.length || (a.transferList = null))), c ?
                            ((d.data = a), e.postMessage(d, c)) :
                            b(a) ?
                            ((d.data = a.result), a.transferList ?
                                e.postMessage(d, a.transferList) :
                                e.postMessage(d)) :
                            ((d.data = a), e.postMessage(d)));
                };
                g.receiveMessage = function(b) {
                    return b ?
                        (b = b.data) ? ('string' === typeof b ? JSON.parse(b) : b) : null :
                        null;
                };
            });
        },
        'esri/layers/vectorTiles/core/workers/WorkerOwner': function() {
            define(
                'require exports dojo/Deferred ../../kernel ../Error ../Logger ../promiseUtils ./utils ./workerFactory'.split(
                    ' '
                ),
                function(c, g, f, b, e, h, d, a, k) {
                    var n = h.getLogger('esri.core.workers'),
                        l = a.MessageType.CANCEL,
                        m = a.MessageType.INVOKE,
                        p = a.MessageType.OPEN,
                        r = a.MessageType.OPENED,
                        u = a.MessageType.RESPONSE;
                    return (function() {
                        function c(a, b) {
                            this._outJobs = new Map();
                            this._inJobs = new Map();
                            this.worker = a;
                            this.id = b;
                            a.addEventListener('message', this._onMessage.bind(this));
                            a.addEventListener('error', function(a) {
                                a.preventDefault();
                                n.error(a);
                            });
                        }
                        c.create = function(a) {
                            return k.createWorker().then(function(b) {
                                return new c(b, a);
                            });
                        };
                        c.prototype.terminate = function() {
                            this.worker.terminate();
                        };
                        c.prototype.open = function(b) {
                            var d = this,
                                e = a.newJobId(),
                                c = new f(function(a) {
                                    d._outJobs['delete'](e);
                                    d._post({
                                        type: l,
                                        jobId: e,
                                    });
                                });
                            this._outJobs.set(e, c);
                            this._post({ type: p, jobId: e, modulePath: b });
                            return c.promise;
                        };
                        c.prototype._onMessage = function(b) {
                            if ((b = a.receiveMessage(b)))
                                switch (b.type) {
                                    case r:
                                    case u:
                                        this._onResponse(b);
                                        break;
                                    case l:
                                        this._onCancel(b);
                                        break;
                                    case m:
                                        this._onInvoke(b);
                                }
                        };
                        c.prototype._onCancel = function(a) {
                            (a = this._inJobs.get(a.jobId)) && a.cancel();
                        };
                        c.prototype._onInvoke = function(e) {
                            var c = this,
                                k = e.methodName,
                                h = e.jobId;
                            e = e.data;
                            var f = this._inJobs,
                                g = b.workerMessages[k],
                                l;
                            try {
                                if ('function' !== typeof g)
                                    throw new TypeError(k + ' is not a function');
                                l = g.call(null, e);
                            } catch (A) {
                                this._post({ type: u, jobId: h, error: a.toInvokeError(A) });
                                return;
                            }
                            d.isThenable(l) ?
                                (f.set(h, l), l
                                    .then(function(a) {
                                        f['delete'](h);
                                        c._post({ type: u, jobId: h }, a);
                                    })
                                    .catch(function(b) {
                                        f['delete'](h);
                                        b || (b = { message: 'Error encountered at method' + k });
                                        (b.dojoType && 'cancel' === b.dojoType) ||
                                        c._post({
                                            type: u,
                                            jobId: h,
                                            error: a.toInvokeError(b),
                                        });
                                    })) :
                                this._post({ type: u, jobId: h }, l);
                        };
                        c.prototype._onResponse = function(a) {
                            var b = a.jobId,
                                d = a.error;
                            a = a.data;
                            var c = this._outJobs.get(b);
                            c &&
                                (this._outJobs['delete'](b), d ?
                                    c.reject(e.fromJSON(JSON.parse(d))) :
                                    c.resolve(a));
                        };
                        c.prototype._post = function(b, d, e) {
                            return a.postMessage(this.worker, b, d, e);
                        };
                        return c;
                    })();
                }
            );
        },
        'esri/layers/vectorTiles/kernel': function() {
            define(
                ['require', 'exports', 'esri/kernel', './identity/IdentityManager'],
                function(c, g, f, b) {
                    return (function() {
                        function e() {}
                        Object.defineProperty(e, 'id', {
                            get: function() {
                                return f.id ? b : null;
                            },
                            enumerable: !0,
                            configurable: !0,
                        });
                        e.workerMessages = {};
                        return e;
                    })();
                }
            );
        },
        'esri/layers/vectorTiles/identity/IdentityManager': function() {
            define(['require', 'exports', 'esri/IdentityManager'], function(
                c,
                g,
                f
            ) {
                Object.defineProperty(g, '__esModule', { value: !0 });
                g.findCredential = function(b) {
                    return f.findCredential(b);
                };
            });
        },
        'esri/layers/vectorTiles/core/workers/workerFactory': function() {
            define(
                'require exports ../tsSupport/assignHelper dojo/_base/kernel ../../config ../../request ../Logger ../promiseUtils ../sniff ../urlUtils ./loaderConfig ./utils ./WorkerFallback'.split(
                    ' '
                ),
                function(c, g, f, b, e, h, d, a, k, n, l, m, p) {
                    function r(d) {
                        return a.create(function(a) {
                            function c(g) {
                                if ((g = m.receiveMessage(g)))
                                    switch (g.type) {
                                        case y:
                                            g = d;
                                            var n = e.workers.loaderUrl || l.DEFAULT_LOADER_URL,
                                                p;
                                            null != e['default'] ?
                                                ((p = f({}, e)), delete p[
                                                    'default'
                                                ], (p = JSON.parse(JSON.stringify(p)))) :
                                                (p = JSON.parse(JSON.stringify(e)));
                                            var q = e.workers.loaderConfig,
                                                q = l.default({
                                                    baseUrl: q.baseUrl,
                                                    locale: b.locale,
                                                    has: f({
                                                            'config-deferredInstrumentation': 0,
                                                            'dojo-test-sniff': 0,
                                                            'esri-cors': 1,
                                                            'esri-secure-context': k('esri-secure-context'),
                                                            'esri-workers-supports-transfer-arraybuffer': k(
                                                                'esri-workers-supports-transfer-arraybuffer'
                                                            ),
                                                            'events-keypress-typed': 0,
                                                            'host-webworker': 1,
                                                        },
                                                        q.has
                                                    ),
                                                    map: f({}, q.map),
                                                    paths: f({}, q.paths),
                                                    packages: q.packages || [],
                                                });
                                            g.postMessage({
                                                type: z,
                                                configure: {
                                                    esriConfig: p,
                                                    loaderUrl: n,
                                                    loaderConfig: q,
                                                },
                                            });
                                            break;
                                        case C:
                                            d.removeEventListener(
                                                'message',
                                                c
                                            ), d.removeEventListener('error', h), a(d);
                                    }
                            }

                            function h(a) {
                                a.preventDefault();
                                d.removeEventListener('message', c);
                                d.removeEventListener('error', h);
                                q.warn(
                                    'Failed to create Worker. Fallback to execute module in main thread',
                                    a
                                );
                                d = new p();
                                d.addEventListener('message', c);
                                d.addEventListener('error', h);
                            }
                            d.addEventListener('message', c);
                            d.addEventListener('error', h);
                        });
                    }
                    Object.defineProperty(g, '__esModule', { value: !0 });
                    var u = n.normalize(c.toUrl('./worker.js')),
                        t = !n.hasSameOrigin(u, location.href),
                        q = d.getLogger('esri.core.workers'),
                        v = null,
                        C = m.MessageType.CONFIGURED,
                        z = m.MessageType.CONFIGURE,
                        y = m.MessageType.HANDSHAKE;
                    g.createWorker = function() {
                        if (!k('esri-workers')) return r(new p());
                        if (!t) {
                            var a = void 0;
                            try {
                                a = new Worker(u);
                            } catch (w) {
                                q.warn(
                                    'Failed to create Worker. Fallback to execute module in main thread',
                                    event
                                ), (a = new p());
                            }
                            return r(a);
                        }
                        v || (v = h(u, { responseType: 'text' }));
                        return v
                            .then(function(a) {
                                return new Worker(
                                    URL.createObjectURL(
                                        new Blob([a.data], { type: 'text/javascript' })
                                    )
                                );
                            })
                            .catch(function(a) {
                                q.warn(
                                    'Failed to create Worker. Fallback to execute module in main thread',
                                    a
                                );
                                return new p();
                            })
                            .then(function(a) {
                                return r(a);
                            });
                    };
                }
            );
        },
        'esri/layers/vectorTiles/core/tsSupport/assignHelper': function() {
            define([], function() {
                return (
                    Object.assign ||
                    function(c) {
                        for (var g, f = 1, b = arguments.length; f < b; f++) {
                            g = arguments[f];
                            for (var e in g)
                                Object.prototype.hasOwnProperty.call(g, e) && (c[e] = g[e]);
                        }
                        return c;
                    }
                );
            });
        },
        'esri/layers/vectorTiles/config': function() {
            define(['require', 'exports', 'esri/config'], function(c, g, f) {
                Object.defineProperty(f, 'workers', {
                    get: function() {
                        return f.defaults.workers;
                    },
                    set: function(b) {
                        return (f.defaults.workers = b);
                    },
                });
                return f;
            });
        },
        'esri/layers/vectorTiles/request': function() {
            define(
                [
                    'require',
                    'exports',
                    'esri/request',
                    'dojo/_base/lang',
                    'dojo/Deferred',
                ],
                function(c, g, f, b, e) {
                    return function(c, d) {
                        c = b.mixin({}, { url: c, failOk: !0 }, d);
                        'array-buffer' === d.responseType ?
                            ((c.handleAs = 'arraybuffer'), delete c.responseType) :
                            d.responseType &&
                            ((c.handleAs = d.responseType), delete c.responseType);
                        null !== d.query && ((c.content = c.query), delete c.query);
                        var a;
                        d.hasOwnProperty('allowImageDataAccess') &&
                            ((a = {
                                allowImageDataAccess: d.allowImageDataAccess,
                            }), delete c.allowImageDataAccess);
                        var k,
                            h = new e(function() {
                                k.isFulfilled() || k.cancel();
                            });
                        k = f(c, a)
                            .then(function(a) {
                                h.resolve({ data: a });
                            })
                            .catch(function(a) {
                                a &&
                                    null != a.httpCode &&
                                    ((a.details = a.details || {}), (a.details.httpStatus =
                                        a.httpCode));
                                h.reject(a);
                            });
                        return h.promise;
                    };
                }
            );
        },
        'esri/layers/vectorTiles/core/sniff': function() {
            define(
                [
                    'require',
                    'exports',
                    'dojo/sniff',
                    './global',
                    '../views/webgl/context-util',
                ],
                function(c, g, f, b, e) {
                    function h() {
                        var a = {
                                available: !1,
                                version: 0,
                                majorPerformanceCaveat: !1,
                                supportsHighPrecisionFragment: !1,
                                supportsVertexShaderSamplers: !1,
                                supportsElementIndexUint: !1,
                                supportsStandardDerivatives: !1,
                            },
                            b = document.createElement('canvas');
                        if (!b) return a;
                        var d = e.createContext(
                            b, { failIfMajorPerformanceCaveat: !0 },
                            'webgl'
                        );
                        !d &&
                            (d = e.createContext(b, {}, 'webgl')) &&
                            (a.majorPerformanceCaveat = !0);
                        if (!d) return a;
                        b = d.getParameter(d.VERSION);
                        if (!b) return a;
                        if ((b = b.match(/^WebGL\s+([\d.]*)/)))
                            (a.version = parseFloat(b[1])), (a.available =
                                0.94 <= a.version), (b = d.getShaderPrecisionFormat(
                                d.FRAGMENT_SHADER,
                                d.HIGH_FLOAT
                            )), (a.supportsHighPrecisionFragment =
                                b && 0 < b.precision), (a.supportsVertexShaderSamplers =
                                0 <
                                d.getParameter(
                                    d.MAX_VERTEX_TEXTURE_IMAGE_UNITS
                                )), (a.supportsElementIndexUint =
                                null !==
                                d.getExtension(
                                    'OES_element_index_uint'
                                )), (a.supportsStandardDerivatives =
                                null !== d.getExtension('OES_standard_derivatives'));
                        return a;
                    }

                    function d() {
                        var a = { available: !1, version: 0 },
                            b = document.createElement('canvas');
                        if (!b) return a;
                        b = e.createContext(b, {}, 'webgl2');
                        if (!b) return a;
                        a.available = !0;
                        b = b.getParameter(b.VERSION);
                        if (!b) return a;
                        if ((b = b.match(/^WebGL\s+([\d.]*)/)))
                            a.version = parseFloat(b[1]);
                        return a;
                    }
                    (function() {
                        var e = navigator.userAgent,
                            c = e.match(
                                /Android|webOS|iPhone|iPad|iPod|BlackBerry|Opera Mini|IEMobile/i
                            ),
                            e = e.match(/iPhone/i);
                        c && f.add('esri-mobile', c);
                        e && f.add('esri-iPhone', e);
                        f.add('esri-phonegap', !!b.cordova);
                        f.add(
                            'esri-cors',
                            f('esri-phonegap') ||
                            ('XMLHttpRequest' in b &&
                                'withCredentials' in new XMLHttpRequest())
                        );
                        f.add('esri-geolocation', function() {
                            return !!navigator.geolocation;
                        });
                        f.add('esri-canvas-svg-support', function() {
                            return !(f('trident') || f('ie'));
                        });
                        f.add('esri-secure-context', function() {
                            if ('isSecureContext' in b) return b.isSecureContext;
                            if (b.location && b.location.origin)
                                return 0 === b.location.origin.indexOf('https:');
                        });
                        f.add('esri-wasm', 'WebAssembly' in b);
                        f('host-webworker') ||
                            (f.add(
                                    'esri-workers',
                                    'Worker' in b
                                ), f.add('esri-script-sandbox', function() {
                                    return (
                                        'MessageChannel' in b &&
                                        'HTMLIFrameElement' in b &&
                                        'sandbox' in HTMLIFrameElement.prototype
                                    );
                                }), f.add('esri-url-encodes-apostrophe', function() {
                                    var a = b.document.createElement('a');
                                    a.href = "?'";
                                    return -1 < a.href.indexOf('?%27');
                                }), a || (a = h()), f.add('esri-webgl', a.available), f.add(
                                    'esri-webgl-high-precision-fragment',
                                    a.supportsHighPrecisionFragment
                                ), f.add(
                                    'esri-webgl-vertex-shader-samplers',
                                    a.supportsVertexShaderSamplers
                                ), f.add(
                                    'esri-webgl-element-index-uint',
                                    a.supportsElementIndexUint
                                ), f.add(
                                    'esri-webgl-standard-derivatives',
                                    a.supportsStandardDerivatives
                                ), f.add(
                                    'esri-webgl-major-performance-caveat',
                                    a.majorPerformanceCaveat
                                ), f.add('esri-featurelayer-webgl-labeling', !0), k ||
                                (k = d()), f.add('esri-webgl2', k.available));
                    })();
                    var a = null,
                        k = null;
                    return f;
                }
            );
        },
        'esri/layers/vectorTiles/core/global': function() {
            define(['require', 'exports'], function(c, g) {
                return (function() {
                    if ('undefined' !== typeof global) return global;
                    if ('undefined' !== typeof window) return window;
                    if ('undefined' !== typeof self) return self;
                })();
            });
        },
        'esri/layers/vectorTiles/views/webgl/context-util': function() {
            define(['require', 'exports'], function(c, g) {
                function f(b, a, e) {
                    void 0 === a && (a = {});
                    var d;
                    switch (e) {
                        case 'webgl':
                            d = ['webgl', 'experimental-webgl', 'webkit-3d', 'moz-webgl'];
                            break;
                        case 'webgl2':
                            d = ['webgl2'];
                            break;
                        default:
                            d = ['webgl', 'experimental-webgl', 'webkit-3d', 'moz-webgl'];
                    }
                    e = null;
                    for (var c = 0; c < d.length; c++) {
                        var k = d[c];
                        try {
                            e = b.getContext(k, a);
                        } catch (p) {}
                        if (e) break;
                    }
                    return e;
                }

                function b(b, a) {
                    (b = b.parentNode) &&
                    (b.innerHTML =
                        '\x3ctable style\x3d"background-color: #8CE; width: 100%; height: 100%;"\x3e\x3ctr\x3e\x3ctd align\x3d"center"\x3e\x3cdiv style\x3d"display: table-cell; vertical-align: middle;"\x3e\x3cdiv style\x3d""\x3e' +
                        a +
                        '\x3c/div\x3e\x3c/div\x3e\x3c/td\x3e\x3c/tr\x3e\x3c/table\x3e');
                }
                Object.defineProperty(g, '__esModule', { value: !0 });
                g.createContextOrErrorHTML = function(d, a, c) {
                    void 0 === a && (a = {});
                    if (!window.WebGLRenderingContext) return b(d, e), null;
                    a = f(d, a, c);
                    return a ? a : (b(d, h), null);
                };
                g.createContext = f;
                var e =
                    'This page requires a browser that supports WebGL.\x3cbr/\x3e\x3ca href\x3d"http://get.webgl.org"\x3eClick here to upgrade your browser.\x3c/a\x3e',
                    h =
                    'It doesn\'t appear your computer can support WebGL.\x3cbr/\x3e\x3ca href\x3d"http://get.webgl.org/troubleshooting/"\x3eClick here for more information.\x3c/a\x3e';
            });
        },
        'esri/layers/vectorTiles/core/urlUtils': function() {
            define(
                ['require', 'exports', 'esri/urlUtils', 'dojo/_base/url'],
                function(c, g, f, b) {
                    function e(a) {
                        return f.normalize(a);
                    }

                    function h(a) {
                        return 'data:' === a.slice(0, 5);
                    }

                    function d(b) {
                        return a(b) || v.test(b);
                    }

                    function a(a) {
                        return a && '/' === a[0] && '/' === a[1];
                    }

                    function k(a) {
                        return f.urlToObject(a);
                    }

                    function n(a) {
                        if ('string' === typeof a) return new b(m(a));
                        a.scheme || (a.scheme = g.appUrl.scheme);
                        return a;
                    }

                    function l(b) {
                        if (h(b)) return null;
                        var d = b.indexOf('://');
                        if (-1 === d && a(b)) d = 2;
                        else if (-1 !== d) d += 3;
                        else return null;
                        d = b.indexOf('/', d);
                        return -1 === d ? b : b.slice(0, d);
                    }

                    function m(b, d, e) {
                        void 0 === d && (d = g.appBaseUrl);
                        if (a(b))
                            return e && e.preserveProtocolRelative ?
                                b :
                                'http' === g.appUrl.scheme &&
                                g.appUrl.authority === l(b).slice(2) ?
                                'http:' + b :
                                'https:' + b;
                        if (v.test(b)) return b;
                        e = r;
                        if ('/' === b[0]) {
                            var c = d.indexOf('//'),
                                c = d.indexOf('/', c + 2);
                            d = -1 === c ? d : d.slice(0, c);
                        }
                        return e(d, b);
                    }

                    function p(a, b, d) {
                        void 0 === d && (d = !1);
                        a = n(a);
                        b = n(b);
                        return d || a.scheme === b.scheme ?
                            a.host.toLowerCase() === b.host.toLowerCase() &&
                            a.port === b.port :
                            !1;
                    }

                    function r() {
                        for (var a = [], b = 0; b < arguments.length; b++)
                            a[b] = arguments[b];
                        if (a && a.length) {
                            b = [];
                            if (d(a[0])) {
                                var e = a[0],
                                    c = e.indexOf('//');
                                b.push(e.slice(0, c + 1));
                                q.test(a[0]) && (b[0] += '/');
                                a[0] = e.slice(c + 2);
                            } else '/' === a[0][0] && b.push('');
                            a = a.reduce(function(a, b) {
                                return b ? a.concat(b.split('/')) : a;
                            }, []);
                            for (e = 0; e < a.length; e++)
                                (c = a[e]), '..' === c && 0 < b.length ?
                                b.pop() :
                                !c || ('.' === c && 0 !== b.length) || b.push(c);
                            return b.join('/');
                        }
                    }

                    function u(a, b, e) {
                        if (!(b && e && a && d(a))) return a;
                        var c = a.indexOf('//'),
                            k = a.indexOf('/', c + 2),
                            h = a.indexOf(':', c + 2),
                            k = Math.min(0 > k ? a.length : k, 0 > h ? a.length : h);
                        if (a.slice(c + 2, k).toLowerCase() !== b.toLowerCase())
                            return a;
                        b = a.slice(0, c + 2);
                        a = a.slice(k);
                        return '' + b + e + a;
                    }

                    function t(a, b, c) {
                        void 0 === b && (b = g.appBaseUrl);
                        if (!d(a)) return a;
                        var k = e(a),
                            h = k.toLowerCase();
                        b = e(b).toLowerCase().replace(/\/+$/, '');
                        if (
                            (c = c ? e(c).toLowerCase().replace(/\/+$/, '') : null) &&
                            0 !== b.indexOf(c)
                        )
                            return a;
                        for (
                            var f = function(a, b, d) {
                                    d = a.indexOf(b, d);
                                    return -1 === d ? a.length : d;
                                },
                                l = f(h, '/', h.indexOf('//') + 2),
                                n = -1; h.slice(0, l + 1) === b.slice(0, l) + '/';

                        ) {
                            n = l + 1;
                            if (l === h.length) break;
                            l = f(h, '/', l + 1);
                        }
                        if (-1 === n || (c && n < c.length)) return a;
                        a = k.slice(n);
                        k = b.slice(n - 1).replace(/[^/]+/g, '').length;
                        if (0 < k)
                            for (h = 0; h < k; h++) a = '../' + a;
                        else a = './' + a;
                        return a;
                    }
                    Object.defineProperty(g, '__esModule', { value: !0 });
                    g.normalize = e;
                    g.canUseXhr = function(a) {
                        return f.canUseXhr(a);
                    };
                    g.removeTrailingSlash = function(a) {
                        return a.replace(/\/+$/, '');
                    };
                    c = Function('return this')();
                    g.appUrl = new b(c.location);
                    g.appBaseUrl = (function() {
                        var a = g.appUrl.path,
                            a = a.substring(
                                0,
                                a.lastIndexOf(a.split('/')[a.split('/').length - 1])
                            );
                        return (
                            '' +
                            (g.appUrl.scheme +
                                '://' +
                                g.appUrl.host +
                                (null != g.appUrl.port ? ':' + g.appUrl.port : '')) +
                            a
                        );
                    })();
                    var q = /^\s*file:/i,
                        v = /^\s*[a-z][a-z0-9-+.]*:[^0-9]/i;
                    g.isDataProtocol = h;
                    g.isAbsolute = d;
                    g.isProtocolRelative = a;
                    g.urlToObject = k;
                    g.getOrigin = l;
                    g.makeAbsolute = m;
                    g.hasSameOrigin = p;
                    g.join = r;
                    g.removeFile = function(a) {
                        var b = 0;
                        if (d(a)) {
                            var e = a.indexOf('//'); -
                            1 !== e && (b = e + 2);
                        }
                        e = a.lastIndexOf('/');
                        return e < b ? a : a.slice(0, e + 1);
                    };
                    g.addProxy = function(a) {
                        return f.addProxy(a);
                    };
                    g.makeData = function(a) {
                        return a.isBase64 ?
                            'data:' + a.mediaType + ';base64,' + a.data :
                            'data:' + a.mediaType + ',' + a.data;
                    };
                    var C = /^data:(.*?)(;base64)?,(.*)$/;
                    g.dataComponents = function(a) {
                        return (a = a.match(C)) ?
                            { mediaType: a[1], isBase64: !!a[2], data: a[3] } :
                            null;
                    };
                    g.changeDomain = u;
                    g.read = function(a, b) {
                        var d = b && b.url && b.url.path;
                        a && d && (a = m(a, d, { preserveProtocolRelative: !0 }));
                        (b = b && b.portal) && !b.isPortal && b.urlKey && b.customBaseUrl ?
                            ((d = b.urlKey + '.' + b.customBaseUrl), (b = p(
                                    g.appUrl,
                                    g.appUrl.scheme + '://' + d
                                ) ?
                                u(a, b.portalHostname, d) :
                                u(a, d, b.portalHostname))) :
                            (b = a);
                        return b;
                    };
                    g.write = function(a, b) {
                        if (!a) return a;
                        !d(a) &&
                            b &&
                            b.blockedRelativeUrls &&
                            b.blockedRelativeUrls.push(a);
                        var e = m(a);
                        if (b) {
                            var c =
                                (b.verifyItemRelativeUrls &&
                                    b.verifyItemRelativeUrls.rootPath) ||
                                (b.url && b.url.path);
                            c &&
                                ((e = t(e, c, c)), e !== a &&
                                    b.verifyItemRelativeUrls &&
                                    b.verifyItemRelativeUrls.writtenUrls.push(e));
                        }
                        a = e;
                        e = (b = b && b.portal) &&
                            !b.isPortal &&
                            b.urlKey &&
                            b.customBaseUrl ?
                            u(a, b.urlKey + '.' + b.customBaseUrl, b.portalHostname) :
                            a;
                        return e;
                    };
                    g.makeRelative = t;
                    g.removeQueryParameters = function(a) {
                        a = k(a);
                        Object.keys(a.query || {});
                        return a.path;
                    };
                }
            );
        },
        'esri/layers/vectorTiles/core/workers/loaderConfig': function() {
            define(
                [
                    'require',
                    'exports',
                    '../tsSupport/assignHelper',
                    'dojo/has',
                    '../urlUtils',
                ],
                function(c, g, f, b, e) {
                    Object.defineProperty(g, '__esModule', { value: !0 });
                    g.DEFAULT_LOADER_URL = e.makeAbsolute(
                        e.removeQueryParameters(c.toUrl('./worker-init.js'))
                    );
                    g.DEFAULT_CONFIG = {
                        baseUrl: (function() {
                            var b = e.removeQueryParameters(c.toUrl('dojo/x.js'));
                            return e.makeAbsolute(b.slice(0, b.length - 5));
                        })(),
                        packages: [
                            { name: 'esri' },
                            { name: 'dojo' },
                            { name: 'dojox' },
                            { name: 'dstore' },
                            { name: 'moment', main: 'moment' },
                            { name: '@dojo' },
                            { name: 'cldrjs', main: 'dist/cldr' },
                            { name: 'globalize', main: 'dist/globalize' },
                            { name: 'maquette', main: 'dist/maquette.umd' },
                            {
                                name: 'maquette-css-transitions',
                                main: 'dist/maquette-css-transitions.umd',
                            },
                            { name: 'maquette-jsx', main: 'dist/maquette-jsx.umd' },
                            { name: 'tslib', main: 'tslib' },
                        ],
                        map: {
                            globalize: {
                                cldr: 'cldrjs/dist/cldr',
                                'cldr/event': 'cldrjs/dist/cldr/event',
                                'cldr/supplemental': 'cldrjs/dist/cldr/supplemental',
                                'cldr/unresolved': 'cldrjs/dist/cldr/unresolved',
                            },
                        },
                    };
                    g.default = function(b) {
                        var d = {
                            async: b.async,
                            isDebug: b.isDebug,
                            locale: b.locale,
                            baseUrl: b.baseUrl,
                            has: f({}, b.has),
                            map: f({}, b.map),
                            packages: (b.packages && b.packages.concat()) || [],
                            paths: f({}, b.paths),
                        };
                        b.hasOwnProperty('async') || (d.async = !0);
                        b.hasOwnProperty('isDebug') || (d.isDebug = !1);
                        b.baseUrl || (d.baseUrl = g.DEFAULT_CONFIG.baseUrl);
                        g.DEFAULT_CONFIG.packages.forEach(function(a) {
                            a: {
                                for (
                                    var b = d.packages, k = 0; k < b.length; k++
                                )
                                    if (b[k].name === a.name) break a;
                                a = f({}, a);
                                k = e.removeQueryParameters(c.toUrl(a.name + '/x.js'));
                                k = k.slice(0, k.length - 5);
                                a.location = e.makeAbsolute(k);
                                b.push(a);
                            }
                        });
                        b = d.map = d.map || {};
                        for (
                            var a = 0, k = Object.keys(g.DEFAULT_CONFIG.map); a < k.length; a++
                        ) {
                            var h = k[a];
                            b[h] || (b[h] = g.DEFAULT_CONFIG.map[h]);
                        }
                        return d;
                    };
                }
            );
        },
        'esri/layers/vectorTiles/core/workers/WorkerFallback': function() {
            define(
                ['require', 'exports', 'dojo/has', '../global', './utils'],
                function(c, g, f, b, e) {
                    var h = (function() {
                            return function() {
                                var a = this,
                                    b = document.createDocumentFragment();
                                [
                                    'addEventListener',
                                    'dispatchEvent',
                                    'removeEventListener',
                                ].forEach(function(d) {
                                    a[d] = function() {
                                        for (var a = [], e = 0; e < arguments.length; e++)
                                            a[e] = arguments[e];
                                        return b[d].apply(b, a);
                                    };
                                });
                            };
                        })(),
                        d = b.MutationObserver || b.WebKitMutationObserver,
                        a = (function() {
                            var a;
                            if (b.process && b.process.nextTick)
                                a = function(a) {
                                    b.process.nextTick(a);
                                };
                            else if (b.Promise)
                                a = function(a) {
                                    b.Promise.resolve().then(a);
                                };
                            else if (d) {
                                var e = [],
                                    c = document.createElement('div');
                                new d(function() {
                                    for (; 0 < e.length;) e.shift()();
                                }).observe(c, { attributes: !0 });
                                a = function(a) {
                                    e.push(a);
                                    c.setAttribute('queueStatus', '1');
                                };
                            }
                            return a;
                        })();
                    return (function() {
                        function b() {
                            this._dispatcher = new h();
                            this._isInitialized = !1;
                            this._workerPostMessage({ type: e.MessageType.HANDSHAKE });
                        }
                        b.prototype.terminate = function() {};
                        Object.defineProperty(b.prototype, 'onmessage', {
                            get: function() {
                                return this._onmessageHandler;
                            },
                            set: function(a) {
                                this._onmessageHandler &&
                                    this.removeEventListener('message', this._onmessageHandler);
                                (this._onmessageHandler = a) &&
                                this.addEventListener('message', a);
                            },
                            enumerable: !0,
                            configurable: !0,
                        });
                        Object.defineProperty(b.prototype, 'onerror', {
                            get: function() {
                                return this._onerrorHandler;
                            },
                            set: function(a) {
                                this._onerrorHandler &&
                                    this.removeEventListener('error', this._onerrorHandler);
                                (this._onerrorHandler = a) &&
                                this.addEventListener('error', a);
                            },
                            enumerable: !0,
                            configurable: !0,
                        });
                        b.prototype.postMessage = function(b, d) {
                            var e = this;
                            a(function() {
                                e._workerMessageHandler(
                                    new MessageEvent('message', { data: b })
                                );
                            });
                        };
                        b.prototype.dispatchEvent = function(a) {
                            return this._dispatcher.dispatchEvent(a);
                        };
                        b.prototype.addEventListener = function(a, b, d) {
                            this._dispatcher.addEventListener(a, b, d);
                        };
                        b.prototype.removeEventListener = function(a, b, d) {
                            this._dispatcher.removeEventListener(a, b, d);
                        };
                        b.prototype._workerPostMessage = function(b, d) {
                            var e = this;
                            a(function() {
                                e.dispatchEvent(new MessageEvent('message', { data: b }));
                            });
                        };
                        b.prototype._workerMessageHandler = function(a) {
                            var b = this;
                            if ((a = e.receiveMessage(a))) {
                                var d = a.jobId;
                                switch (a.type) {
                                    case e.MessageType.CONFIGURE:
                                        this._isInitialized ||
                                            this._workerPostMessage({
                                                type: e.MessageType.CONFIGURED,
                                            });
                                        break;
                                    case e.MessageType.OPEN:
                                        (a = a.modulePath), f('esri-webpack') ?
                                            c(
                                                [
                                                    'esri/core/workers/RemoteClient',
                                                    'esri/views/vectorTiles/WorkerTileHandler',
                                                    'esri/views/2d/layers/features/Pipeline',
                                                    'esri/views/3d/layers/PointCloudWorker',
                                                    'esri/views/3d/layers/SceneLayerWorker',
                                                    'esri/layers/graphics/sources/support/CSVSourceWorker',
                                                    'esri/views/3d/webgl-engine/lib/edgeRendering/EdgeProcessingWorker',
                                                    a,
                                                ],
                                                function(a, c, k, h, f, g, l, n) {
                                                    switch (n) {
                                                        case 'esri/views/vectorTiles/WorkerTileHandler':
                                                            break;
                                                        case 'esri/views/2d/layers/features/Pipeline':
                                                            c = k;
                                                            break;
                                                        case 'esri/views/3d/layers/PointCloudWorker':
                                                            c = h;
                                                            break;
                                                        case 'esri/views/3d/layers/SceneLayerWorker':
                                                            c = f;
                                                            break;
                                                        case 'esri/layers/graphics/sources/support/CSVSourceWorker':
                                                            c = g;
                                                            break;
                                                        case 'esri/views/3d/webgl-engine/lib/edgeRendering/EdgeProcessingWorker':
                                                            c = l;
                                                            break;
                                                        default:
                                                            c = n;
                                                    }
                                                    a = a.connect(c);
                                                    b._workerPostMessage({
                                                        type: e.MessageType.OPENED,
                                                        jobId: d,
                                                        data: a,
                                                    });
                                                }
                                            ) :
                                            c(['./RemoteClient', a], function(a, c) {
                                                a = a.connect(c);
                                                b._workerPostMessage({
                                                    type: e.MessageType.OPENED,
                                                    jobId: d,
                                                    data: a,
                                                });
                                            });
                                }
                            }
                        };
                        return b;
                    })();
                }
            );
        },
        'esri/layers/vectorTiles/core/requireUtils': function() {
            define(['require', 'exports', 'dojo/Deferred'], function(c, g, f) {
                function b(e, c) {
                    if (Array.isArray(c)) {
                        var d = new f();
                        e(c, function() {
                            for (
                                var a = [], b = 0; b < arguments.length; b++
                            ) a[b] = arguments[b];
                            d.resolve(a);
                        });
                        return d.promise;
                    }
                    return b(e, [c]).then(function(a) {
                        return a[0];
                    });
                }
                Object.defineProperty(g, '__esModule', { value: !0 });
                g.when = b;
                g.getAbsMid = function(b, c, d) {
                    return c.toAbsMid ?
                        c.toAbsMid(b) :
                        d.id.replace(/\/[^\/]*$/gi, '/') + b;
                };
            });
        },
        'esri/layers/rasterLib/function/rasterFunctionHelper': function() {
            define(
                ['dojo/_base/declare', 'dojo/_base/lang', './rasterFunctionRegistry'],
                function(c, g, f) {
                    return {
                        create: function(b, e) {
                            if (b) {
                                var c = b.renderTexture,
                                    d = Object.keys(b);
                                if (b.read && !e) return b;
                                b.read && e && (b = b.toJson()); -
                                1 < d.indexOf('name') && d.indexOf(!1) ?
                                    ((b = g.mixin({}, b)), (e = this._parseV2(b, e))) :
                                    ((b = 'esri.layers.RasterFunction' === b.declaredClass ?
                                        b.toJson() :
                                        g.mixin({}, b)), (e = this._parseV1(b, e)));
                                e.branchCount = e.updateBranchStructure();
                                e.renderTexture || (e.renderTexture = !!c);
                                return e;
                            }
                        },
                        _parseV1: function(b, e) {
                            var c = b.rasterFunction,
                                d = b.rasterFunctionArguments,
                                a =
                                b.renderTexture ||
                                b.rasterFunctionArguments.renderTexture ||
                                !1,
                                k,
                                n,
                                l,
                                m,
                                p,
                                r,
                                u;
                            (m = d.raster || d.Raster) &&
                            m.rasterFunction &&
                                (k = this._parseV1(m, e));
                            (m = d.raster2 || d.Raster2) &&
                            m.rasterFunction &&
                                (n = this._parseV1(m, e));
                            (m = d.rasters || d.Rasters) &&
                            0 < m.length &&
                                (l = m.map(
                                    g.hitch(this, function(a) {
                                        return a && a.rasterFunction ? this._parseV1(a, e) : a;
                                    })
                                ));
                            (m = d.dem || d.DEM) &&
                            (m.functionName || m.rasterFunction) &&
                            (p = this._parseV1(m, e));
                            (m = d.fillRaster || d.FillRaster) &&
                            (m.functionName || m.rasterFunction) &&
                            (r = this._parseV1(m, e));
                            m = f.functions[c];
                            if (!m) return null;
                            c = new m(d);
                            c.variableName &&
                                (m = d[c.variableName]) &&
                                (m.functionName || m.rasterFunction) &&
                                (u = this._parseV1(m, e));
                            b.outputPixelType && (c.pixelType = b.outputPixelType);
                            '$$' === k
                                ?
                                (c.functionArguments.raster = e && e.raster) :
                                null != k ?
                                (c.functionArguments.raster = k) :
                                c.functionArguments.raster ||
                                (c.functionArguments.raster = e && e.raster);
                            null != n && (c.functionArguments.raster2 = n);
                            null != l &&
                                (c.functionArguments.rasters = l.map(function(a) {
                                    '$$' === a && (a = e && e.raster);
                                    return a;
                                }));
                            null != p && (c.functionArguments.dem = p);
                            null != r && (c.functionArguments.fillRaster = r);
                            null != u && (c.functionArguments[c.variableName] = u);
                            c.renderTexture = a;
                            return c;
                        },
                        _parseV2: function(b, c) {
                            if (!b) return null;
                            b = g.clone(b);
                            this._bindV2Args(b, c);
                            var e = {};
                            this._convertTov1(b, e);
                            return this._parseV1(e, c);
                        },
                        _bindV2Args: function(b, c) {
                            (b || c) &&
                            Object.keys(b).forEach(
                                function(e) {
                                    b[e]['function'] && b[e].arguments ?
                                        this._bindV2Args(b[e].arguments, c) :
                                        null != c[b[e].name] && (b[e].value = c[b[e].name]);
                                }.bind(this)
                            );
                        },
                        _convertV2Types: function(b) {
                            if (!b) return null;
                            'ArgumentArray' === b.type ?
                                b.elements &&
                                'RasterStatistics' === b.elements[0].type &&
                                (b = b.elements) :
                                b instanceof Array && 0 === b.length && (b = null);
                            return b;
                        },
                        _convertTov1: function(b, c) {
                            if ((b || c) && b['function']) {
                                var e = b['function'],
                                    d = b.arguments;
                                c.rasterFunction = e.type.replace('Function', '');
                                c.outputPixelType = 'UNKNOWN' === e.pixelType ?
                                    'Unknown' :
                                    e.pixelType;
                                c.rasterFunctionArguments = {};
                                var a;
                                Object.keys(d).forEach(
                                    function(b) {
                                        d[b]['function'] && d[b].arguments ?
                                            ((c.rasterFunctionArguments[
                                                b
                                            ] = {}), this._convertTov1(
                                                d[b],
                                                c.rasterFunctionArguments[b]
                                            )) :
                                            ((a = d[b].value), (c.rasterFunctionArguments[
                                                    b
                                                ] = 'object' !== typeof a || a.functionArguments ?
                                                a :
                                                this._convertV2Types(a)));
                                    }.bind(this)
                                );
                            }
                        },
                    };
                }
            );
        },
        'esri/layers/rasterLib/function/rasterFunctionRegistry': function() {
            define(
                'dojo/_base/declare dojo/_base/lang ../../rasterLib/function/AspectFunction ../../rasterLib/function/BandArithmeticFunction ../../rasterLib/function/ColormapFunction ../../rasterLib/function/CompositeBandFunction ../../rasterLib/function/ContrastBrightnessFunction ../../rasterLib/function/ConvolutionFunction ../../rasterLib/function/ExtractBandFunction ../../rasterLib/function/HillshadeFunction ../../rasterLib/function/LocalFunction ../../rasterLib/function/MaskFunction ../../rasterLib/function/NDVIFunction ../../rasterLib/function/SlopeFunction ../../rasterLib/function/StretchFunction ../../rasterLib/function/RemapFunction ../../rasterLib/function/IdentityFunction ../../rasterLib/function/ResampleFunction'.split(
                    ' '
                ),
                function(c, g, f, b, e, h, d, a, k, n, l, m, p, r, u, t, q, v) {
                    return (function() {
                        function c(a) {
                            a.prototype.supportWebGL && (y[a.prototype.functionName] = a);
                            a.prototype.support2D && (g[a.prototype.functionName] = a);
                            x[a.prototype.functionName] = a;
                        }
                        var g = {},
                            y = {},
                            x = {};
                        c(f);
                        c(b);
                        c(e);
                        c(h);
                        c(d);
                        c(a);
                        c(k);
                        c(n);
                        c(l);
                        c(m);
                        c(p);
                        c(r);
                        c(u);
                        c(t);
                        c(q);
                        c(v);
                        return {
                            cpu: g,
                            gpu: y,
                            functions: x,
                            register: c,
                            getFunction: function(a) {
                                return x[a];
                            },
                            support: function(a, b) {
                                return !!('gpu' === b ? y : 'cpu' === b ? g : x)[a];
                            },
                        };
                    })();
                }
            );
        },
        'esri/layers/rasterLib/function/AspectFunction': function() {
            define(
                'dojo/_base/declare dojo/_base/lang ./RasterFunctionX ../../../WKIDUnitConversion ../../PixelBlock ./pixelShaders ./RasterFunctionWebGLMixin ./surfaceUtils'.split(
                    ' '
                ),
                function(c, g, f, b, e, h, d, a) {
                    return c([f, d], {
                        declaredClass: 'esri.layers.rasterLib.function.AspectFunction',
                        functionName: 'Aspect',
                        supportWebGL: !0,
                        support2D: !0,
                        constructor: function(a) {
                            this.functionArguments = this.mixinIgnoreCase({ raster: null }, a);
                        },
                        bind: function() {
                            var a = this.getSourceRasterInfo();
                            if (!a.raster)
                                return Error(
                                    'The raster input to aspect function is invalid.'
                                );
                            this.rasterInfo = g.mixin(a.raster, {
                                bandCount: 1,
                                pixelType: this._calculatePixelType(this.pixelType, 'F32'),
                                statistics: [{ min: 0, max: 360 }],
                                histograms: null,
                            });
                            this.rasterInfo.keyProperties = this.rasterInfo
                                .keyProperties || {};
                            this.rasterInfo.keyProperties.DataType = 'Generic';
                            return !0;
                        },
                        read2D: function(b) {
                            this._performance.start();
                            b = a.aspect(b.raster);
                            this._addPerformanceMetric(this._performance.elapsed());
                            return b;
                        },
                        readGL: function(a) {
                            this._performance.start();
                            this._initializeProgram({
                                fragment: h.aspect,
                                fragmentName: 'Aspect',
                            });
                            var b = this._setupTextureData(a.raster),
                                d = this.bindFrameBuffer(),
                                c = this.gl,
                                e = c.drawingBufferWidth,
                                c = c.drawingBufferHeight,
                                k = b.extent;
                            this._setUniforms({
                                u_resolution: a && a.raster && a.raster.pixelBlock ?
                                    [
                                        1 / a.raster.pixelBlock.width,
                                        1 / a.raster.pixelBlock.height,
                                    ] :
                                    [1 / e, 1 / c],
                                u_cellSize: [(k.xmax - k.xmin) / e, (k.ymax - k.ymin) / c],
                            });
                            this._bindTexture(b.texture, 'u_image');
                            this._drawGL();
                            this._addPerformanceMetric(this._performance.elapsed());
                            return { extent: b.extent, texture: d.texture };
                        },
                    });
                }
            );
        },
        'esri/layers/rasterLib/function/RasterFunctionX': function() {
            define(
                'dojo/_base/declare dojo/_base/lang dojo/_base/config ../raster/RasterInfo ../../../geometry/Extent ../../PixelBlock'.split(
                    ' '
                ),
                function(c, g, f, b, e, h) {
                    return c(null, {
                        functionName: null,
                        functionArguments: null,
                        pixelType: 'Unknown',
                        rasterInfo: null,
                        constructor: function(b) {
                            b &&
                                ((this.pixelType =
                                    b.outputPixelType ||
                                    b.OutputPixelType ||
                                    this.pixelType), (this.renderTexture =
                                    b.renderTexture), this._initFunction());
                        },
                        mixinIgnoreCase: function(b, a) {
                            var d = Object.keys(b),
                                c = Object.keys(a),
                                e,
                                h,
                                f = d.length,
                                g;
                            for (e = 0; e < c.length; e++)
                                if (((g = a[c[e]]), null != g))
                                    for (h = 0; h < f; h++)
                                        if (d[h].toLowerCase() === c[e].toLowerCase()) {
                                            b[d[h]] = g;
                                            break;
                                        }
                            return b;
                        },
                        bind: function(b) {},
                        setProcessingContext: function(b) {
                            if (!b) throw 'cannot bind to layer without options';
                            this.useWebGL = !!b.useWebGL;
                            this._tileMode = !!b.tileMode;
                            this._glSetting = b.glSetting;
                            this._rawRasterInfo = b.rawRasterInfo;
                            this._xformSetting = b.xformSetting || this._xformSetting;
                            this.gl = this.useWebGL ? this._glSetting.gl : null;
                            this._glSetting &&
                                ((this._glSetting.pingpong = null), (this._glSetting.branches = null));
                            var a = this.functionArguments.raster,
                                d = this.functionArguments.raster2,
                                c = this.functionArguments.dem,
                                e = this.functionArguments.fillRaster,
                                h = this.functionArguments.rasters;
                            a && a.functionArguments && a.setProcessingContext(b);
                            d && d.functionArguments && d.setProcessingContext(b);
                            c && c.functionArguments && c.setProcessingContext(b);
                            e && e.functionArguments && e.setProcessingContext(b);
                            if (h)
                                for (a = 0; a < h.length; a++)
                                    h[a] &&
                                    h[a].functionArguments &&
                                    h[a].setProcessingContext(b);
                            this.bind();
                        },
                        updateBranchStructure: function() {
                            var b = 0,
                                a = this.functionArguments;
                            a.raster &&
                                a.raster.read &&
                                a.raster.functionArguments &&
                                (b += a.raster.updateBranchStructure());
                            a.raster2 &&
                                a.raster2.read &&
                                a.raster2.functionArguments &&
                                ((b += a.raster2.updateBranchStructure()), (a.raster2.isBranch = !0), a.raster &&
                                    a.raster.read &&
                                    (a.raster.isBranch = !0));
                            a.rasters &&
                                ((b = a.rasters.length), a.rasters.forEach(function(a) {
                                    a.read && a.functionArguments && (a.isBranch = !0);
                                }));
                            a.dem &&
                                a.dem.read &&
                                a.dem.functionArguments &&
                                (b += a.dem.updateBranchStructure());
                            return 1 === b ? 0 : b;
                        },
                        read: function(b) {
                            b = this.processRasterArgument(b);
                            return this.useWebGL ? this.readGL(b) : this.read2D(b);
                        },
                        hasTilingEffects: function() {
                            return !1;
                        },
                        read2D: function() {},
                        readGL: function() {},
                        getSourceRasterInfo: function() {
                            var b, a = {};
                            if (this.functionArguments.raster2)
                                (a.functionArguments.raster = this._bindRaster(
                                    this.functionArguments.raster
                                )), (a.functionArguments.raster2 = this._bindRaster(
                                    this.functionArguments.raster2
                                ));
                            else if (this.functionArguments.rasters)
                                for (
                                    (a.rasters = []), (b = 0); b < this.functionArguments.rasters.length; b++
                                )
                                    a.rasters[b] = this._bindRaster(
                                        this.functionArguments.rasters[b]
                                    );
                            else a.raster = this._bindRaster(this.functionArguments.raster);
                            return (this.sourceRasterInfo = a);
                        },
                        processRasterArgument: function(b) {
                            var a = this.bind();
                            if (!0 !== a) throw a;
                            var d = {};
                            if (this.functionArguments.raster2)
                                (d.raster = this._readRaster(
                                    this.functionArguments.raster,
                                    b
                                )), (d.raster2 = this._readRaster(
                                    this.functionArguments.raster2,
                                    b
                                ));
                            else if (this.functionArguments.rasters)
                                for (
                                    (d.rasters = []), (a = 0); a < this.functionArguments.rasters.length; a++
                                )
                                    d.rasters[a] = this._readRaster(
                                        this.functionArguments.rasters[a],
                                        b
                                    );
                            else
                                d.raster = this._readRaster(this.functionArguments.raster, b);
                            return d;
                        },
                        toJson: function() {
                            var b = this.functionArguments,
                                a = b.raster,
                                c = b.raster2,
                                b = b.rasters,
                                a = a ? (a.toJson ? a.toJson() : a) : null,
                                c = c ? (c.toJson ? c.toJson() : c) : null,
                                e;
                            b &&
                                0 < b.length &&
                                (e = b.map(function(a) {
                                    return a.toJson ? a.toJson() : a;
                                }));
                            b = g.mixin({}, this.functionArguments);
                            b.raster = a;
                            b.raster2 = c;
                            b.rasters = e;
                            b = this._fixRasterFunctionJson(b);
                            return {
                                rasterFunction: this.functionName,
                                rasterFunctionArguments: b,
                                outputPixelType: this.pixelType,
                            };
                        },
                        _initFunction: function(b) {},
                        _getIntegerRange: function(b) {
                            var a;
                            switch (b) {
                                case 'U8':
                                    a = [0, 255];
                                    break;
                                case 'U16':
                                    a = [0, 65535];
                                    break;
                                case 'U32':
                                    a = [0, 4294967295];
                                    break;
                                case 'S8':
                                    a = [-128, 127];
                                    break;
                                case 'S16':
                                    a = [-32768, 32767];
                                    break;
                                case 'S32':
                                    a = [-2147483648, 2147483647];
                            }
                            return a;
                        },
                        _calculatePixelType: function(b, a) {
                            return b && 'unknown' !== b.toLowerCase() ? b : a;
                        },
                        _clonePixelData: function(b) {
                            if (null == b) return b;
                            var a = {};
                            b.extent &&
                                (a.extent = new e(
                                    b.extent.xmin,
                                    b.extent.ymin,
                                    b.extent.xmax,
                                    b.extent.ymax,
                                    b.extent.spatialReference
                                ));
                            b = b.pixelBlock;
                            if (null == b) return a;
                            a.pixelBlock = b.clone ? b.clone() : h.prototype.clone(b);
                            return a;
                        },
                        _readRaster: function(b, a) {
                            var d;
                            null == b || '$$' === b ?
                                (d = this._clonePixelData(a.src[Object.keys(a.src)[0]])) :
                                b && b.rasterInfo && !b.functionArguments ?
                                (d = this._clonePixelData(a.src[b._rasterId])) :
                                isNaN(b) ?
                                b.read &&
                                (d = b.functionArguments ?
                                    b.read(a) :
                                    this._clonePixelData(a)) :
                                ((d = a.src ? a.src[Object.keys(a.src)[0]] : a), (a =
                                    d.pixelBlock), (a = new Float32Array(
                                    a.width * a.height
                                )), a.fill(
                                    parseFloat(b)
                                ), (d = this._clonePixelData(
                                    d
                                )), (d.pixelBlock.pixels = [a]), (d.isConstant = !0));
                            return d;
                        },
                        _bindRaster: function(d) {
                            var a;
                            d && '$$' !== d ?
                                isNaN(d) ?
                                d.rasterInfo ?
                                (a = d.rasterInfo) :
                                d.bind && d.bind() && (a = d.rasterInfo) :
                                (a = {}) :
                                (a = this._rawRasterInfo);
                            a &&
                                ((a = a.clone ? a.clone() : new b(a)), (a.bandCount =
                                    a.bandCount || 3));
                            return a;
                        },
                        _getOutputBand: function(b, a) {
                            switch (b) {
                                case 'U8':
                                    b = new Uint8Array(a);
                                    break;
                                case 'U16':
                                    b = new Uint16Array(a);
                                    break;
                                case 'U32':
                                    b = new Uint32Array(a);
                                    break;
                                case 'S8':
                                    b = new Int8Array(a);
                                    break;
                                case 'S16':
                                    b = new Int16Array(a);
                                    break;
                                case 'S32':
                                    b = new Int32Array(a);
                                    break;
                                case 'U32':
                                    b = new Uint32Array(a);
                                    break;
                                case 'F32':
                                    b = new Float32Array(a);
                                    break;
                                case 'F64':
                                    b = new Float64Array(a);
                                    break;
                                default:
                                    b = new Float32Array(a);
                            }
                            return b;
                        },
                        _clampBand: function(b, a, c) {
                            if (('F64' === a || 'F32' === a) && !c) return b;
                            var d, e, k = this._getIntegerRange(a),
                                h = b.length;
                            if (k)
                                for (
                                    (c = k[1]), (k = k[0]), (a = this._getOutputBand(
                                        a,
                                        h
                                    )), (d = 0); d < h; d++
                                )
                                    (e = b[d]), (a[d] = e > c ? c : e < k ? k : e);
                            else a = b;
                            return a;
                        },
                        _performance: {
                            start: function() {
                                return (this._start =
                                    (self.performance && self.performance.now()) || new Date());
                            }.bind(this),
                            elapsed: function() {
                                return (
                                    ((self.performance && self.performance.now()) ||
                                        new Date()) - this._start
                                );
                            }.bind(this),
                        },
                        _addPerformanceMetric: function(b) {
                            f.isDebug &&
                                (self.rasterFunctionPerformance ||
                                    (self.rasterFunctionPerformance = []), self.rasterFunctionPerformance.push(
                                        b
                                    ), 50 < self.rasterFunctionPerformance.length &&
                                    self.rasterFunctionPerformance.shift());
                        },
                        _fixRasterFunctionJson: function(b) {
                            for (var a in b)
                                b.hasOwnProperty(a) &&
                                (null == b[a] ?
                                    delete b[a] :
                                    b[a] instanceof Object &&
                                    !b[a].sourceType &&
                                    this._fixRasterFunctionJson(b[a], !0));
                            return b;
                        },
                    });
                }
            );
        },
        'esri/layers/rasterLib/function/pixelShaders': function() {
            define(
                ['dojo/_base/declare', 'dojo/_base/lang', './pixelShaderScripts'],
                function(c, g, f) {
                    c = {
                        shaderType: 'fragment',
                        getShader: function(b, c) {
                            var e;
                            e = b.createShader(b.FRAGMENT_SHADER);
                            b.shaderSource(e, c);
                            b.compileShader(e);
                            b.getShaderParameter(e, b.COMPILE_STATUS) || (e = null);
                            return e;
                        },
                    };
                    g.mixin(c, f);
                    return c;
                }
            );
        },
        'esri/layers/rasterLib/function/pixelShaderScripts': function() {
            define([], function() {
                return {
                    aspect: 'precision mediump float;\nuniform sampler2D u_image;\nvarying vec2 v_texCoord;\nuniform vec2 u_resolution;\nuniform vec2 u_cellSize;\nfloat getNeighborHoodAlpha(float a, float b, float c, float d, float e, float f, float g, float h, float i){\nif (a \x3d\x3d 0.0 || a \x3d\x3d 0.0 || a\x3d\x3d0.0 || a \x3d\x3d 0.0 || a \x3d\x3d 0.0 || a\x3d\x3d0.0 || a \x3d\x3d 0.0 || a \x3d\x3d 0.0 || a\x3d\x3d0.0) {\nreturn 0.0;\n}\nelse {\nreturn e;\n}\n}\nbool isOutside(){\nif (v_texCoord.t\x3e1.00001 ||v_texCoord.t\x3c-0.00001 || v_texCoord.s\x3e1.00001 ||v_texCoord.s\x3c-0.00001) {\ngl_FragColor \x3d vec4(0.0, 0.0, 0.0, 0.0);\nreturn true;\n}\nelse {\nreturn false;\n}\n}\nvoid main() {\nif (isOutside()) {\nreturn;\n}\nfloat pi \x3d 3.141592653589793238;\nfloat dz_dx \x3d 0.0;\nfloat dz_dy \x3d 0.0;\nvec4 va, vb, vc,vd,ve,vf,vg,vh,vi;\nvec2 axy \x3d vec2(-1.0,-1.0);\nvec2 bxy \x3d vec2(0.0, -1.0);\nvec2 cxy \x3d vec2(1.0, -1.0);\nvec2 dxy \x3d vec2(-1.0, 0.0);\nvec2 fxy \x3d vec2(1.0, 0.0);\nvec2 gxy \x3d vec2(-1.0, 1.0);\nvec2 hxy \x3d vec2(0.0, 1.0);\nvec2 ixy \x3d vec2(1.0, 1.0);\nif (v_texCoord.s \x3c u_resolution.s)\n{\naxy[0] \x3d 1.0;\ndxy[0] \x3d 1.0;\ngxy[0] \x3d 1.0;\n}\nif (v_texCoord.t \x3c u_resolution.t)\n{\naxy[1] \x3d 1.0;\nbxy[1] \x3d 1.0;\ncxy[1] \x3d 1.0;\n}\nif (v_texCoord.s \x3e1.0-u_resolution.s)\n{\ncxy[0] \x3d -1.0;\nfxy[0] \x3d -1.0;\nixy[0] \x3d -1.0;\n}\nif (v_texCoord.t \x3e 1.0- u_resolution.t)\n{\ngxy[1] \x3d -1.0;\nhxy[1] \x3d -1.0;\nixy[1] \x3d -1.0;\n}\nif (v_texCoord.s \x3e\x3d u_resolution.s \x26\x26 (1.0-u_resolution.s)\x3e\x3dv_texCoord.s \x26\x26 v_texCoord.t \x3e\x3d u_resolution.t \x26\x26 (1.0-u_resolution.t)\x3e\x3dv_texCoord.t)\n{\nva \x3d texture2D(u_image, v_texCoord + u_resolution* axy);\nvb \x3d texture2D(u_image, v_texCoord + u_resolution* bxy);\nvc \x3d texture2D(u_image, v_texCoord + u_resolution* cxy);\nvd \x3d texture2D(u_image, v_texCoord + u_resolution* dxy);\nve \x3d texture2D(u_image, v_texCoord + u_resolution* vec2(0, 0));\nvf \x3d texture2D(u_image, v_texCoord + u_resolution* fxy);\nvg \x3d texture2D(u_image, v_texCoord + u_resolution* gxy);\nvh \x3d texture2D(u_image, v_texCoord + u_resolution* hxy);\nvi \x3d texture2D(u_image, v_texCoord + u_resolution* ixy);\n}\ndz_dx \x3d (vc+2.0*vf+vi - va - 2.0*vd - vg).r/(8.0*u_cellSize[0]);\ndz_dy \x3d -(vg+2.0*vh+vi - va - 2.0*vb - vc).r/(8.0*u_cellSize[1]);\nfloat alpha \x3d getNeighborHoodAlpha(va.a, vb.a, vc.a, vd.a, ve.a, vf.a, vg.a, vh.a, vi.a);\nfloat aspect_rad \x3d 0.0;\nif (dz_dx \x3d\x3d 0.0)\n{\nif (dz_dy \x3e 0.0)\naspect_rad \x3d 0.5 * pi;\nelse if (dz_dy \x3c 0.0)\naspect_rad \x3d 1.5 * pi;\nelse\nalpha \x3d 0.0;//undefined make it nodata\n}\nelse\n{\naspect_rad \x3d 0.5*pi + atan(dz_dy, -dz_dx);\nif (aspect_rad \x3c 0.0)\naspect_rad \x3d 2.0*pi + aspect_rad;\n}\nfloat aspect \x3d aspect_rad * 180.0 / pi;\ngl_FragColor \x3d vec4(aspect, aspect, aspect, alpha);\n}',
                    bandArithmetic: 'precision mediump float;\nuniform sampler2D u_image;\nvarying vec2 v_texCoord;\nuniform int u_bandId_nir;\nuniform int u_bandId_red;\nuniform bool u_scaled;\nuniform int u_bandCount;\nuniform int u_method;\nuniform float u_constants[6];\nvec4 calculateNDVI() {\nvec4 currentPixel \x3d texture2D(u_image, v_texCoord);\nfloat red \x3d float(u_bandId_red \x3d\x3d 0 ? currentPixel.r : (u_bandId_red \x3d\x3d 1 ? currentPixel.g : currentPixel.b));\nfloat nir \x3d float(u_bandId_nir \x3d\x3d 0 ? currentPixel.r : (u_bandId_nir \x3d\x3d 1 ? currentPixel.g : currentPixel.b));\nfloat ndvi_denom \x3d nir + red;\nfloat ndvi;\nif (ndvi_denom \x3d\x3d 0.0) {\nndvi \x3d 0.0;\n} else {\nndvi \x3d (nir - red) / ndvi_denom;\nif (u_scaled) {\nndvi \x3d float(floor(ndvi * 100.0 + 100.5));\n}\n}\nreturn vec4(ndvi, ndvi, ndvi, currentPixel.a);\n}\nvec4 calculateSAVI() {\nvec4 currentPixel \x3d texture2D(u_image, v_texCoord);\nfloat red \x3d float(u_bandId_red \x3d\x3d 0 ? currentPixel.r : (u_bandId_red \x3d\x3d 1 ? currentPixel.g : currentPixel.b));\nfloat nir \x3d float(u_bandId_nir \x3d\x3d 0 ? currentPixel.r : (u_bandId_nir \x3d\x3d 1 ? currentPixel.g : currentPixel.b));\nfloat savi_denom \x3d nir + red + u_constants[0];\nfloat savi;\nif (savi_denom \x3d\x3d 0.0) {\nsavi \x3d 0.0;\n} else {\nsavi \x3d (nir - red) / savi_denom * (1.0 + u_constants[0]);\n}\nreturn vec4(savi, savi, savi, currentPixel.a);\n}\nvec4 calculateMSAVI() {\nvec4 currentPixel \x3d texture2D(u_image, v_texCoord);\nfloat red \x3d float(u_bandId_red \x3d\x3d 0 ? currentPixel.r : (u_bandId_red \x3d\x3d 1 ? currentPixel.g : currentPixel.b));\nfloat nir \x3d float(u_bandId_nir \x3d\x3d 0 ? currentPixel.r : (u_bandId_nir \x3d\x3d 1 ? currentPixel.g : currentPixel.b));\nfloat msavi \x3d 0.5 * (2.0 * (nir + 1.0) - sqrt(pow((2.0 * nir + 1.0), 2.0) - 8.0 * (nir - red)));\nreturn vec4(msavi, msavi, msavi, currentPixel.a);\n}\nvec4 calculateTSAVI() {\nvec4 currentPixel \x3d texture2D(u_image, v_texCoord);\nfloat red \x3d float(u_bandId_red \x3d\x3d 0 ? currentPixel.r : (u_bandId_red \x3d\x3d 1 ? currentPixel.g : currentPixel.b));\nfloat nir \x3d float(u_bandId_nir \x3d\x3d 0 ? currentPixel.r : (u_bandId_nir \x3d\x3d 1 ? currentPixel.g : currentPixel.b));\nfloat s \x3d u_constants[0];\nfloat a \x3d u_constants[1];\nfloat x \x3d u_constants[2];\nfloat tsavi_denom \x3d a * nir + red - a * s + x * (1.0 + s * s);\nfloat tsavi;\nif (tsavi_denom \x3d\x3d 0.0) {\ntsavi \x3d 0.0;\n} else {\ntsavi \x3d s * (nir - s * red - a) / tsavi_denom;\n}\nreturn vec4(tsavi, tsavi, tsavi, currentPixel.a);\n}\nvec4 calculatePVI() {\nvec4 currentPixel \x3d texture2D(u_image, v_texCoord);\nfloat red \x3d float(u_bandId_red \x3d\x3d 0 ? currentPixel.r : (u_bandId_red \x3d\x3d 1 ? currentPixel.g : currentPixel.b));\nfloat nir \x3d float(u_bandId_nir \x3d\x3d 0 ? currentPixel.r : (u_bandId_nir \x3d\x3d 1 ? currentPixel.g : currentPixel.b));\nfloat a \x3d u_constants[0];\nfloat b \x3d u_constants[1];\nfloat pvi \x3d (nir - a * red - b) / sqrt(1.0 + a * 2.0);\nreturn vec4(pvi, pvi, pvi, currentPixel.a);\n}\nvec4 calculateGEMI() {\nvec4 currentPixel \x3d texture2D(u_image, v_texCoord);\nfloat red \x3d float(u_bandId_red \x3d\x3d 0 ? currentPixel.r : (u_bandId_red \x3d\x3d 1 ? currentPixel.g : currentPixel.b));\nfloat nir \x3d float(u_bandId_nir \x3d\x3d 0 ? currentPixel.r : (u_bandId_nir \x3d\x3d 1 ? currentPixel.g : currentPixel.b));\nfloat gemi;\nif (red \x3d\x3d 1.0) {\ngemi \x3d 0.0;\n} else {\nfloat eta \x3d (2.0 * (nir * nir - red * red) + 1.5 * nir + 0.5 * red) / (nir + red + 0.5);\nfloat gemi \x3d eta * (1.0 - 0.25*eta) - (red - 0.125) / (1.0 - red);\n}\nreturn vec4(gemi, gemi, gemi, currentPixel.a);\n}\nvec4 calculateVARI() {\nvec4 currentPixel \x3d texture2D(u_image, v_texCoord);\nfloat red \x3d float(currentPixel.r);\nfloat green \x3d float(currentPixel.g);\nfloat blue \x3d float(currentPixel.b);\nfloat vari \x3d (green - red) /(green + red - blue);\nreturn vec4(vari, vari, vari, currentPixel.a);\n}\nbool isOutside(){\nif (v_texCoord.t\x3e1.00001 ||v_texCoord.t\x3c-0.00001 || v_texCoord.s\x3e1.00001 ||v_texCoord.s\x3c-0.00001) {\ngl_FragColor \x3d vec4(0.0, 0.0, 0.0, 0.0);\nreturn true;\n}\nelse {\nreturn false;\n}\n}\nvoid main() {\nif (isOutside()) {\nreturn;\n}\nvec4 pv;\nif (u_method \x3c 4) {\nif (u_method \x3d\x3d 1) {\npv \x3d calculateNDVI();\n} else if (u_method \x3d\x3d 2) {\npv \x3d calculateSAVI();\n} else if (u_method \x3d\x3d 3) {\npv \x3d calculateTSAVI();\n} else if (u_method \x3d\x3d 4) {\npv \x3d calculateMSAVI();\n}\n} else {\nif (u_method \x3d\x3d 5) {\npv \x3d calculateGEMI();\n} else if (u_method \x3d\x3d 6) {\npv \x3d calculatePVI();\n} else if (u_method \x3d\x3d 7) {\npv \x3d calculateGEMI();\n} else if (u_method \x3d\x3d 9) {\npv \x3d calculateVARI();\n}\n}\ngl_FragColor \x3d pv;\n}',
                    colormap: 'precision mediump float;\nuniform sampler2D u_image;\nuniform sampler2D u_image1;\nvarying vec2 v_texCoord;\nuniform float u_indexedColormapOffset;\nuniform float u_indexedColormapMaxIndex;\nvec4 colorize() {\nvec4 currentPixel \x3d texture2D(u_image, v_texCoord);\nfloat clrIndex \x3d currentPixel.r - u_indexedColormapOffset;\nvec4 result;\nif (currentPixel.a \x3d\x3d 0.0 || clrIndex \x3e u_indexedColormapMaxIndex) {\nresult \x3d vec4(0.0, 0.0, 0.0, 0.0);\n}\nelse {\nvec2 clrPosition \x3d vec2(clrIndex / u_indexedColormapMaxIndex, 0.0);\nvec4 color \x3d texture2D(u_image1, clrPosition);\nresult \x3d vec4(color.r, color.g, color.b, color.a);\n}\nreturn result;\n}\nbool isOutside(){\nif (v_texCoord.t\x3e1.00001 ||v_texCoord.t\x3c-0.00001 || v_texCoord.s\x3e1.00001 ||v_texCoord.s\x3c-0.00001) {\ngl_FragColor \x3d vec4(0.0, 0.0, 0.0, 0.0);\nreturn true;\n}\nelse {\nreturn false;\n}\n}\nvoid main() {\nif (isOutside()) {\nreturn;\n}\ngl_FragColor \x3d colorize();\n}',
                    compositeBand: 'precision mediump float;\nuniform sampler2D u_image;\nuniform sampler2D u_image1;\nuniform sampler2D u_image2;\nvarying vec2 v_texCoord;\nuniform int u_rasterCount;\nvec4 composite() {\nvec4 p0, p1, p2;\np0 \x3d texture2D(u_image, v_texCoord);\nvec4 result;\nif (u_rasterCount \x3d\x3d 1){\nresult \x3d p0;\n}\nelse if (u_rasterCount \x3d\x3d 2){\np1 \x3d texture2D(u_image1, v_texCoord);\nresult \x3d vec4(p0.r,p1.r,0.0,min(p0.a,p1.a));\n}\nelse if (u_rasterCount \x3d\x3d 3){\np1 \x3d texture2D(u_image1, v_texCoord);\np2 \x3d texture2D(u_image2, v_texCoord);\nresult \x3d vec4(p0.r,p1.r,p2.r,min(min(p0.a,p1.a),p2.a));\n}\nreturn result;\n}\nbool isOutside(){\nif (v_texCoord.t\x3e1.00001 ||v_texCoord.t\x3c-0.00001 || v_texCoord.s\x3e1.00001 ||v_texCoord.s\x3c-0.00001) {\ngl_FragColor \x3d vec4(0.0, 0.0, 0.0, 0.0);\nreturn true;\n}\nelse {\nreturn false;\n}\n}\nvoid main() {\nif (isOutside()) {\nreturn;\n}\ngl_FragColor \x3d composite();\n}',
                    constant: 'precision mediump float;\nuniform vec4 u_color;\nvoid main() {\ngl_FragColor \x3d u_color;\n}',
                    contrastBrightness: 'precision mediump float;\nuniform sampler2D u_image;\nvarying vec2 v_texCoord;\nuniform float u_contrastOffset;\nuniform float u_brightnessOffset;\nuniform float u_scaleFactor;\nvec4 adjustContrastBrightness() {\nvec4 currentPixel \x3d texture2D(u_image, v_texCoord);\nfloat c \x3d u_contrastOffset;\nfloat b \x3d u_brightnessOffset;\nfloat maxI \x3d 255.0;\nfloat mid \x3d 128.0;\nvec4 v;\nif (c \x3e 0.0 \x26\x26 c \x3c 100.0) {\nv \x3d (200.0 * currentPixel - 100.0 * maxI + 2.0 * maxI * b) / (2.0 * (100.0 - c)) + mid;\n} else if (c \x3c\x3d 0.0 \x26\x26 c \x3e -100.0) {\nv \x3d (200.0 * currentPixel - 100.0 * maxI + 2.0 * maxI * b) * (100.0 + c) / 20000.0 + mid;\n} else if (c \x3d\x3d 100.0) {\nv \x3d (200.0 * currentPixel - 100.0 * maxI + (maxI + 1.0) * (100.0 - c) + 2.0 * maxI * b);\nv \x3d (sign(v) + 1.0) / 2.0; //binary contrast with extra mid tone at 0.5\n} else if (c \x3d\x3d -100.0) {\nv \x3d vec4(mid, mid, mid, currentPixel.a); //no contrast\n}\nreturn vec4(v.r / u_scaleFactor, v.g / u_scaleFactor, v.b / u_scaleFactor, currentPixel.a);\n}\nbool isOutside(){\nif (v_texCoord.t\x3e1.00001 ||v_texCoord.t\x3c-0.00001 || v_texCoord.s\x3e1.00001 ||v_texCoord.s\x3c-0.00001) {\ngl_FragColor \x3d vec4(0.0, 0.0, 0.0, 0.0);\nreturn true;\n}\nelse {\nreturn false;\n}\n}\nvoid main() {\nif (isOutside()) {\nreturn;\n}\ngl_FragColor \x3d adjustContrastBrightness();\n}',
                    convolution: 'precision mediump float;\nuniform sampler2D u_image;\nvarying vec2 v_texCoord;\nuniform vec2 u_resolution;\nuniform float u_kernel[25];\nuniform int u_kernelSize;\nvec4 convolve33(){\nvec4 vp11, vp12, vp13, vp21, vp22, vp23, vp31, vp32, vp33;\nvec2 xy11 \x3d vec2(-1.0, -1.0);\nvec2 xy12 \x3d vec2(0.0, -1.0);\nvec2 xy13 \x3d vec2(1.0, -1.0);\nvec2 xy21 \x3d vec2(-1.0, 0.0);\nvec2 xy23 \x3d vec2(1.0, 0.0);\nvec2 xy31 \x3d vec2(-1.0, 1.0);\nvec2 xy32 \x3d vec2(0.0, 1.0);\nvec2 xy33 \x3d vec2(1.0, 1.0);\nif (v_texCoord.s \x3c u_resolution.s) {\nxy11[0] \x3d 1.0;\nxy21[0] \x3d 1.0;\nxy31[0] \x3d 1.0;\n}\nif (v_texCoord.t \x3c u_resolution.t) {\nxy11[1] \x3d 1.0;\nxy12[1] \x3d 1.0;\nxy13[1] \x3d 1.0;\n}\nif (v_texCoord.s \x3e 1.0 - u_resolution.s) {\nxy13[0] \x3d -1.0;\nxy23[0] \x3d -1.0;\nxy33[0] \x3d -1.0;\n}\nif (v_texCoord.t \x3e 1.0 - u_resolution.t) {\nxy31[1] \x3d -1.0;\nxy32[1] \x3d -1.0;\nxy33[1] \x3d -1.0;\n}\nvec4 convolResult \x3d\ntexture2D(u_image, v_texCoord + u_resolution * xy11) * u_kernel[0] +\ntexture2D(u_image, v_texCoord + u_resolution * xy12) * u_kernel[1] +\ntexture2D(u_image, v_texCoord + u_resolution * xy13) * u_kernel[2] +\ntexture2D(u_image, v_texCoord + u_resolution * xy21) * u_kernel[3] +\ntexture2D(u_image, v_texCoord + u_resolution * vec2(0, 0)) * u_kernel[4] +\ntexture2D(u_image, v_texCoord + u_resolution * xy23) * u_kernel[5] +\ntexture2D(u_image, v_texCoord + u_resolution * xy31) * u_kernel[6] +\ntexture2D(u_image, v_texCoord + u_resolution * xy32) * u_kernel[7] +\ntexture2D(u_image, v_texCoord + u_resolution * xy33) * u_kernel[8];\nreturn vec4(convolResult.rgb, texture2D(u_image, v_texCoord).a);\n}\nvec4 convolve55(){\nvec4 vp11, vp12, vp13, vp21, vp22, vp23, vp31, vp32, vp33;\nfloat xdif[5];//https://www.opengl.org/wiki/Data_Type_(GLSL) array constructor ES3.0\nfloat ydif[5];\nfloat a \x3d -2.0;\nfor (int i\x3d0; i\x3c5; i++){\nxdif[i] \x3d a;\nydif[i] \x3d a;\na++;\n}\nif (v_texCoord.s \x3c u_resolution.s *2.0) { //2 pixel\nxdif[0] \x3d 2.0;\nif (v_texCoord.s \x3c u_resolution.s) { //1 pixel\nxdif[1] \x3d 1.0;\n}\n}\nelse if (v_texCoord.s \x3e 1.0 - u_resolution.s *2.0) {\nxdif[0] \x3d -2.0;\nif (v_texCoord.s \x3e 1.0 - u_resolution.s) {\nxdif[1] \x3d -1.0;\n}\n}\nif (v_texCoord.t \x3c u_resolution.t *2.0) {\nydif[0] \x3d 2.0;\nif (v_texCoord.t \x3c u_resolution.t) {\nydif[1] \x3d 1.0;\n}\n}\nelse if (v_texCoord.t \x3e 1.0 - u_resolution.t*2.0) {\nydif[0] \x3d -2.0;\nif (v_texCoord.t \x3e 1.0 - u_resolution.t) {\nydif[1] \x3d -1.0;\n}\n}\nvec4 convolResult \x3d\ntexture2D(u_image, v_texCoord + u_resolution * vec2(xdif[0], ydif[0])) * u_kernel[0] +\ntexture2D(u_image, v_texCoord + u_resolution * vec2(xdif[1], ydif[0])) * u_kernel[1] +\ntexture2D(u_image, v_texCoord + u_resolution * vec2(xdif[2], ydif[0])) * u_kernel[2] +\ntexture2D(u_image, v_texCoord + u_resolution * vec2(xdif[3], ydif[0])) * u_kernel[3] +\ntexture2D(u_image, v_texCoord + u_resolution * vec2(xdif[4], ydif[0])) * u_kernel[4] +\ntexture2D(u_image, v_texCoord + u_resolution * vec2(xdif[0], ydif[1])) * u_kernel[5] +\ntexture2D(u_image, v_texCoord + u_resolution * vec2(xdif[1], ydif[1])) * u_kernel[6] +\ntexture2D(u_image, v_texCoord + u_resolution * vec2(xdif[2], ydif[1])) * u_kernel[7] +\ntexture2D(u_image, v_texCoord + u_resolution * vec2(xdif[3], ydif[1])) * u_kernel[8] +\ntexture2D(u_image, v_texCoord + u_resolution * vec2(xdif[4], ydif[1])) * u_kernel[9] +\ntexture2D(u_image, v_texCoord + u_resolution * vec2(xdif[0], ydif[2])) * u_kernel[10] +\ntexture2D(u_image, v_texCoord + u_resolution * vec2(xdif[1], ydif[2])) * u_kernel[11] +\ntexture2D(u_image, v_texCoord + u_resolution * vec2(xdif[2], ydif[2])) * u_kernel[12] +\ntexture2D(u_image, v_texCoord + u_resolution * vec2(xdif[3], ydif[2])) * u_kernel[13] +\ntexture2D(u_image, v_texCoord + u_resolution * vec2(xdif[4], ydif[2])) * u_kernel[14] +\ntexture2D(u_image, v_texCoord + u_resolution * vec2(xdif[0], ydif[3])) * u_kernel[15] +\ntexture2D(u_image, v_texCoord + u_resolution * vec2(xdif[1], ydif[3])) * u_kernel[16] +\ntexture2D(u_image, v_texCoord + u_resolution * vec2(xdif[2], ydif[3])) * u_kernel[17] +\ntexture2D(u_image, v_texCoord + u_resolution * vec2(xdif[3], ydif[3])) * u_kernel[18] +\ntexture2D(u_image, v_texCoord + u_resolution * vec2(xdif[4], ydif[3])) * u_kernel[19] +\ntexture2D(u_image, v_texCoord + u_resolution * vec2(xdif[0], ydif[4])) * u_kernel[20] +\ntexture2D(u_image, v_texCoord + u_resolution * vec2(xdif[1], ydif[4])) * u_kernel[21] +\ntexture2D(u_image, v_texCoord + u_resolution * vec2(xdif[2], ydif[4])) * u_kernel[22] +\ntexture2D(u_image, v_texCoord + u_resolution * vec2(xdif[3], ydif[4])) * u_kernel[23] +\ntexture2D(u_image, v_texCoord + u_resolution * vec2(xdif[4], ydif[4])) * u_kernel[24];\nreturn vec4(convolResult.rgb, texture2D(u_image, v_texCoord).a);\n}\nbool isOutside(){\nif (v_texCoord.t\x3e1.00001 ||v_texCoord.t\x3c-0.00001 || v_texCoord.s\x3e1.00001 ||v_texCoord.s\x3c-0.00001) {\ngl_FragColor \x3d vec4(0.0, 0.0, 0.0, 0.0);\nreturn true;\n}\nelse {\nreturn false;\n}\n}\nvoid main() {\nif (isOutside()) {\nreturn;\n}\nif (u_kernelSize \x3d\x3d 9){\ngl_FragColor \x3d convolve33();\n}\nelse {\ngl_FragColor \x3d convolve55();\n}\n}',
                    extractBand: 'precision mediump float;\nuniform sampler2D u_image;\nvarying vec2 v_texCoord;\nuniform int u_bandIDs[3];\nuniform bool u_alterBand;\nvec4 extractBand() {\nvec4 p \x3d texture2D(u_image, v_texCoord);\nif (!u_alterBand){\nreturn p;\n}\nfloat r, g, b;\nif (u_bandIDs[0] \x3d\x3d0){\nr \x3d p.r;\n}\nelse if (u_bandIDs[0] \x3d\x3d1){\nr \x3d p.g;\n}\nelse if (u_bandIDs[0] \x3d\x3d2){\nr \x3d p.b;\n}\nif (u_bandIDs[1] \x3d\x3d0){\ng \x3d p.r;\n}\nelse if (u_bandIDs[1] \x3d\x3d1){\ng \x3d p.g;\n}\nelse if (u_bandIDs[1] \x3d\x3d2){\ng \x3d p.b;\n}\nif (u_bandIDs[2] \x3d\x3d0){\nb \x3d p.r;\n}\nelse if (u_bandIDs[2] \x3d\x3d1){\nb \x3d p.g;\n}\nelse if (u_bandIDs[2] \x3d\x3d2){\nb \x3d p.b;\n}\nreturn vec4(r, g, b, p.a);\n}\nbool isOutside(){\nif (v_texCoord.t\x3e1.00001 ||v_texCoord.t\x3c-0.00001 || v_texCoord.s\x3e1.00001 ||v_texCoord.s\x3c-0.00001) {\ngl_FragColor \x3d vec4(0.0, 0.0, 0.0, 0.0);\nreturn true;\n}\nelse {\nreturn false;\n}\n}\nvoid main() {\nif (isOutside()) {\nreturn;\n}\ngl_FragColor \x3d extractBand();\n}',
                    hillshade: 'precision mediump float;\nuniform sampler2D u_image;\nuniform sampler2D u_image1;\nvarying vec2 v_texCoord;\nuniform vec2 u_resolution;\nuniform int u_slopeType;\nuniform int u_hillshadeType;\nuniform int u_lightSourceCount;\nuniform float u_sinZcosA;\nuniform float u_sinZsinA;\nuniform float u_cosZ;\nuniform float u_sinZcosAs[6];\nuniform float u_sinZsinAs[6];\nuniform float u_cosZs[6];\nuniform float u_weights[6];\nuniform float u_xFactor;\nuniform float u_yFactor;\nuniform bool u_scaled;\nuniform float u_minValue;\nuniform float u_maxValue;\nuniform bool u_applyColorramp;\nuniform float u_indexedColormapOffset;\nuniform float u_indexedColormapMaxIndex;\nfloat getNeighborHoodAlpha(float a, float b, float c, float d, float e, float f, float g, float h, float i){\nif (a \x3d\x3d 0.0 || a \x3d\x3d 0.0 || a\x3d\x3d0.0 || a \x3d\x3d 0.0 || a \x3d\x3d 0.0 || a\x3d\x3d0.0 || a \x3d\x3d 0.0 || a \x3d\x3d 0.0 || a\x3d\x3d0.0) {\nreturn 0.0;\n}\nelse {\nreturn e;\n}\n}\nbool isOutside(){\nif (v_texCoord.t\x3e1.00001 ||v_texCoord.t\x3c-0.00001 || v_texCoord.s\x3e1.00001 ||v_texCoord.s\x3c-0.00001) {\ngl_FragColor \x3d vec4(0.0, 0.0, 0.0, 0.0);\nreturn true;\n}\nelse {\nreturn false;\n}\n}\nvec3 rgb2hsv(vec3 c) {\nvec4 K \x3d vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\nvec4 p \x3d c.g \x3c c.b ? vec4(c.bg, K.wz) : vec4(c.gb, K.xy);\nvec4 q \x3d c.r \x3c p.x ? vec4(p.xyw, c.r) : vec4(c.r, p.yzx);\nfloat d \x3d q.x - min(q.w, q.y);\nfloat e \x3d 1.0e-10;\nreturn vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), min(d / (q.x + e), 1.0), q.x);\n}\nvec3 hsv2rgb(vec3 c) {\nvec4 K \x3d vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\nvec3 p \x3d abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\nreturn c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\nvec4 overlay(float val, float minValue, float maxValue, float hillshade, float alpha) {\nfloat clrIndex \x3d clamp((val - minValue) / (maxValue - minValue), 0.0, 1.0);\nvec4 rgb \x3d texture2D(u_image1, vec2(clrIndex, 0.0));\nvec3 hsv \x3d rgb2hsv(rgb.xyz);\nhsv.z \x3d hillshade;\nreturn vec4(hsv2rgb(hsv) * alpha, alpha);\n}\nvoid main() {\nif (isOutside()) {\nreturn;\n}\nvec4 va, vb, vc, vd, ve, vf, vg, vh, vi;\nvec2 axy \x3d vec2(-1.0, -1.0);\nvec2 bxy \x3d vec2(0.0, -1.0);\nvec2 cxy \x3d vec2(1.0, -1.0);\nvec2 dxy \x3d vec2(-1.0, 0.0);\nvec2 fxy \x3d vec2(1.0, 0.0);\nvec2 gxy \x3d vec2(-1.0, 1.0);\nvec2 hxy \x3d vec2(0.0, 1.0);\nvec2 ixy \x3d vec2(1.0, 1.0);\nif (v_texCoord.s \x3c u_resolution.s) {\naxy[0] \x3d 1.0;\ndxy[0] \x3d 1.0;\ngxy[0] \x3d 1.0;\n}\nif (v_texCoord.t \x3c u_resolution.t) {\naxy[1] \x3d 1.0;\nbxy[1] \x3d 1.0;\ncxy[1] \x3d 1.0;\n}\nif (v_texCoord.s \x3e 1.0 - u_resolution.s) {\ncxy[0] \x3d -1.0;\nfxy[0] \x3d -1.0;\nixy[0] \x3d -1.0;\n}\nif (v_texCoord.t \x3e 1.0 - u_resolution.t) {\ngxy[1] \x3d -1.0;\nhxy[1] \x3d -1.0;\nixy[1] \x3d -1.0;\n}\nva \x3d texture2D(u_image, v_texCoord + u_resolution * axy);\nvb \x3d texture2D(u_image, v_texCoord + u_resolution * bxy);\nvc \x3d texture2D(u_image, v_texCoord + u_resolution * cxy);\nvd \x3d texture2D(u_image, v_texCoord + u_resolution * dxy);\nve \x3d texture2D(u_image, v_texCoord + u_resolution * vec2(0, 0));\nvf \x3d texture2D(u_image, v_texCoord + u_resolution * fxy);\nvg \x3d texture2D(u_image, v_texCoord + u_resolution * gxy);\nvh \x3d texture2D(u_image, v_texCoord + u_resolution * hxy);\nvi \x3d texture2D(u_image, v_texCoord + u_resolution * ixy);\nfloat alpha \x3d getNeighborHoodAlpha(va.a, vb.a, vc.a, vd.a, ve.a, vf.a, vg.a, vh.a, vi.a);\nfloat dzx \x3d (vc + 2.0 * vf + vi - va - 2.0 * vd - vg).r * u_xFactor;\nfloat dzy \x3d (vg + 2.0 * vh + vi - va - 2.0 * vb - vc).r * u_yFactor; //flip\nfloat s2 \x3d sqrt(1.0 + dzx * dzx + dzy * dzy);\nfloat hillshade \x3d 0.0;\nif (u_hillshadeType \x3d\x3d 0){\nfloat cosDelta \x3d u_sinZsinA * dzy - u_sinZcosA * dzx;\nfloat z \x3d (u_cosZ + cosDelta) / s2;\nif (z \x3c 0.0)  z \x3d 0.0;\nhillshade \x3d z;\n}\nelse if (u_hillshadeType \x3d\x3d 1){\nfor (int k \x3d 0; k \x3c 6; k++) {\nfloat cosDelta \x3d u_sinZsinAs[k] * dzy - u_sinZcosAs[k] * dzx;\nfloat z \x3d (u_cosZs[k] + cosDelta) / s2;\nif (z \x3c 0.0) z \x3d 0.0;\nhillshade \x3d hillshade + z * u_weights[k];\nif (k \x3d\x3d u_lightSourceCount-1) break;\n}\n}\nif (u_applyColorramp) {\nvec4 result \x3d overlay(ve.r, u_minValue, u_maxValue, hillshade, alpha);\nif (u_scaled) {\nresult \x3d vec4(result.rgb * 255.0, result.a);\n}\ngl_FragColor \x3d result;\n} else {\nif (u_scaled) {\nhillshade \x3d hillshade * 255.0;\nif (hillshade\x3e 255.0) {\nhillshade \x3d 255.0;\n}\n}\ngl_FragColor \x3d vec4(hillshade, hillshade, hillshade, alpha);\n}\n}',
                    identity: 'precision mediump float;\nuniform sampler2D u_image;\nvarying vec2 v_texCoord;\nuniform int u_bandCount;\nfloat shift_right(float v, float amt) {\nv \x3d floor(v) + 0.5;\nreturn floor(v / exp2(amt));\n}\nfloat shift_left(float v, float amt) {\nreturn floor(v * exp2(amt) + 0.5);\n}\nfloat mask_last(float v, float bits) {\nreturn mod(v, shift_left(1.0, bits));\n}\nfloat extract_bits(float num, float from, float to) {\nfrom \x3d floor(from + 0.5);\nto \x3d floor(to + 0.5);\nreturn mask_last(shift_right(num, from), to - from);\n}\nvec4 encode_float(float val) {\nif (val \x3d\x3d 0.0)\nreturn vec4(0, 0, 0, 0);\nfloat sign \x3d val \x3e 0.0 ? 0.0 : 1.0;\nval \x3d abs(val);\nfloat exponent \x3d floor(log2(val));\nfloat biased_exponent \x3d exponent + 127.0;\nfloat fraction \x3d ((val / exp2(exponent)) - 1.0) * 8388608.0;\nfloat t \x3d biased_exponent / 2.0;\nfloat last_bit_of_biased_exponent \x3d fract(t) * 2.0;\nfloat remaining_bits_of_biased_exponent \x3d floor(t);\nfloat byte4 \x3d extract_bits(fraction, 0.0, 8.0) / 255.0;\nfloat byte3 \x3d extract_bits(fraction, 8.0, 16.0) / 255.0;\nfloat byte2 \x3d (last_bit_of_biased_exponent * 128.0 + extract_bits(fraction, 16.0, 23.0)) / 255.0;\nfloat byte1 \x3d (sign * 128.0 + remaining_bits_of_biased_exponent) / 255.0;\nreturn vec4(byte4, byte3, byte2, byte1);\n}\nbool isOutside(){\nif (v_texCoord.t\x3e1.00001 ||v_texCoord.t\x3c-0.00001 || v_texCoord.s\x3e1.00001 ||v_texCoord.s\x3c-0.00001) {\ngl_FragColor \x3d vec4(0.0, 0.0, 0.0, 0.0);\nreturn true;\n}\nelse {\nreturn false;\n}\n}\nvoid main() {\nif (isOutside()) {\nreturn;\n}\nvec4 currentPixel \x3d  texture2D(u_image, v_texCoord);\ngl_FragColor \x3d vec4( currentPixel.rgb, currentPixel.a); //encode_float(currentPixel.r);\n}',
                    local: 'precision mediump float;\nuniform sampler2D u_image;\nuniform sampler2D u_image1;\nuniform sampler2D u_image2;\nvarying vec2 v_texCoord;\nuniform int u_rasterCount;\nvec4 polyfill;\nvec4 localOp1() {\nvec4 a \x3d texture2D(u_image, v_texCoord);\nvec4 result;\nvec4 replaceme1;\nreturn result;\n}\nvec4 localOp2() {\nvec4 a \x3d texture2D(u_image, v_texCoord);\nvec4 b \x3d texture2D(u_image1, v_texCoord);\nvec4 result;\nvec4 replaceme2;\nreturn result;\n}\nvec4 localOp3() {\nvec4 a \x3d texture2D(u_image, v_texCoord);\nvec4 b \x3d texture2D(u_image1, v_texCoord);\nvec4 c \x3d texture2D(u_image2, v_texCoord);\nvec4 result;\nvec4 replaceme3;\nreturn result;\n}\nbool isOutside(){\nif (v_texCoord.t\x3e1.00001 ||v_texCoord.t\x3c-0.00001 || v_texCoord.s\x3e1.00001 ||v_texCoord.s\x3c-0.00001) {\ngl_FragColor \x3d vec4(0.0, 0.0, 0.0, 0.0);\nreturn true;\n}\nelse {\nreturn false;\n}\n}\nvoid main() {\nif (isOutside()) {\nreturn;\n}\ngl_FragColor \x3d localOp1();\n}',
                    local0: 'precision mediump float;\nuniform sampler2D u_image0;\nuniform sampler2D u_image1;\nvarying vec2 v_texCoord;\nuniform float u_minCutOff[3];\nuniform float u_maxCutOff[3];\nuniform float u_minOutput[3];\nuniform float u_maxOutput[3];\nuniform float u_factor[3];\nuniform int u_operation;\nuniform int u_constant[3];\nuniform vec4 gamma;\nfloat localOperate1(float a, float b, float c){\nfloat result;\nif (u_operation \x3d\x3d 1){\nresult \x3d a + b;\n}\nelse if (u_operation \x3d\x3d 2){\nresult \x3d a - b;\n}\nelse if (u_operation \x3d\x3d3){\nresult \x3d a * b;\n}\nelse if (u_operation \x3d\x3d4){\nresult \x3d sqrt(a);\n}\nelse if (u_operation \x3d\x3d5){\nresult \x3d pow(a, b);\n}\nelse if (u_operation \x3d\x3d6){\nresult \x3d acos(a);\n}\nelse if (u_operation \x3d\x3d7){\nresult \x3d asin(a);\n}\nelse if (u_operation \x3d\x3d8){\nresult \x3d atan(a);\n}\nelse if (u_operation \x3d\x3d9){\nresult \x3d 999.0; //atanh not available\n}\nelse if (u_operation \x3d\x3d10){\nresult \x3d abs(a);\n}\nelse if (u_operation \x3d\x3d13){\nresult \x3d 999.0; //bitwise not available\n}\nelse if (u_operation \x3d\x3d17){\nresult \x3d a !\x3d 0.0 \x26\x26 b !\x3d0.0;\n}\nelse if (u_operation \x3d\x3d18){\nresult \x3d a \x3d\x3d0.0? 1.0:0.0;\n}\nelse if (u_operation \x3d\x3d19){\nresult \x3d a !\x3d 0.0 || b !\x3d0.0;\n}\nelse if (u_operation \x3d\x3d20){\nresult \x3d a !\x3d 0.0 ^^ b !\x3d0.0; //exclusive or\n}\nelse if (u_operation \x3d\x3d21){\nresult \x3d cos(a);\n}\nelse if (u_operation \x3d\x3d23){\nresult \x3d a / b;\n}\nelse if (u_operation \x3d\x3d24){\nresult \x3d a \x3d\x3d b ? 1.0:0.0;\n}\nelse if (u_operation \x3d\x3d25){\nresult \x3d exp(a);\n}\nelse if (u_operation \x3d\x3d26){\nresult \x3d pow(10.0, a);\n}\nelse if (u_operation \x3d\x3d27){\nresult \x3d exp2(a);\n}\nelse if (u_operation \x3d\x3d28){\nresult \x3d a \x3e b? 1.0 : 0.0;\n}\nelse if (u_operation \x3d\x3d29){\nresult \x3d  a \x3e\x3d b? 1.0 : 0.0;\n}\nelse if (u_operation \x3d\x3d30){\nresult \x3d floor(a); //int\n}\nelse if (u_operation \x3d\x3d31){\nresult \x3d a \x3d\x3d0? 1.0:0.0; //null pass mask\n}\nelse if (u_operation \x3d\x3d32){\nresult \x3d a; //float\n}\nelse if (u_operation \x3d\x3d33){\nresult \x3d a \x3c b? 1.0 : 0.0;\n}\nelse if (u_operation \x3d\x3d34){\nresult \x3d a \x3c\x3d b? 1.0 : 0.0;\n}\nelse if (u_operation \x3d\x3d35){\nresult \x3d log(a);\n}\nelse if (u_operation \x3d\x3d36){\nresult \x3d log2(a) / log2(10.0);\n}\nelse if (u_operation \x3d\x3d37){\nresult \x3d log2(a);\n}\nelse if (u_operation \x3d\x3d44){\nresult \x3d mod(a, b);\n}\nelse if (u_operation \x3d\x3d45){\nresult \x3d -a;\n}\nelse if (u_operation \x3d\x3d46){\nresult \x3d a !\x3d b? 1.0 : 0.0;\n}\nelse if (u_operation \x3d\x3d48){\nresult \x3d ceil(a);\n}\nelse if (u_operation \x3d\x3d49){\nresult \x3d floor(a);\n}\nelse if (u_operation \x3d\x3d51){\nresult \x3d sin(a);\n}\nelse if (u_operation \x3d\x3d53){\nresult \x3d a * a;\n}\nelse if (u_operation \x3d\x3d56){\nresult \x3d tan(a);\n}\nelse if (u_operation \x3d\x3d57){\nresult \x3d 999.0; //tanh not available\n}\nelse if (u_operation \x3d\x3d59){\nresult \x3d 999.0; //acosh not available\n}\nelse if (u_operation \x3d\x3d60){\nresult \x3d 999.0; //asinh not available\n}\nelse if (u_operation \x3d\x3d61){\nresult \x3d atan(a, b);\n}\nelse if (u_operation \x3d\x3d64){\nresult \x3d a / b;\n}\nelse if (u_operation \x3d\x3d65){\nresult \x3d floor(a/b);\n}\nelse if (u_operation \x3d\x3d76){\nresult \x3d a !\x3d0? b:c;\n}\n}\nvoid main() {\nvec4 currentPixel0 \x3d  texture2D(u_image0, v_texCoord);\nfloat graya, reda, greena, bluea;\nif (u_bandCount \x3d\x3d 1) {\ngraya \x3d stretchOneaue(float(currentPixel.r), u_minCutOff[0], u_maxCutOff[0], u_minOutput[0], u_maxOutput[0], u_factor[0]);\ngl_FragColor \x3d vec4(graya, graya, graya, currentPixel.a);\n}\nelse if (u_bandCount \x3d\x3d 3) {\nreda \x3d stretchOneaue(float(currentPixel.r), u_minCutOff[0], u_maxCutOff[0], u_minOutput[0], u_maxOutput[0], u_factor[0]);\ngreena \x3d stretchOneaue(float(currentPixel.g), u_minCutOff[1], u_maxCutOff[1], u_minOutput[1], u_maxOutput[1], u_factor[1]);\nbluea \x3d stretchOneaue(float(currentPixel.b), u_minCutOff[2], u_maxCutOff[2], u_minOutput[2], u_maxOutput[2], u_factor[2]);\ngl_FragColor \x3d vec4(reda, greena, bluea, currentPixel.a);\n}\n}',
                    mask: 'precision mediump float;\nuniform sampler2D u_image;\nvarying vec2 v_texCoord;\nuniform float u_includedRanges[6];\nuniform bool u_includedRanges_specified;\nuniform float u_noDataValues[6];\nuniform bool u_noDataValues_specified;\nuniform int u_noDataInterpretation;\nuniform int u_bandCount;\nvec4 mask() {\nvec4 currentPixel \x3d texture2D(u_image, v_texCoord);\nvec4 processedPixel \x3d currentPixel;\nif (u_includedRanges_specified) {\nif (u_bandCount \x3d\x3d 1) {\nif (currentPixel.r \x3e u_includedRanges[0] \x26\x26 currentPixel.r \x3c u_includedRanges[1])\nprocessedPixel \x3d vec4(currentPixel.rgb, currentPixel.a);\nelse\nprocessedPixel \x3d vec4(currentPixel.rgb, 0);\n} else if (u_bandCount \x3d\x3d 3) {\nif (currentPixel.r \x3e u_includedRanges[0] \x26\x26 currentPixel.r \x3c u_includedRanges[1] \x26\x26 currentPixel.g \x3e u_includedRanges[2] \x26\x26 currentPixel.g \x3c u_includedRanges[3] \x26\x26 currentPixel.b \x3e u_includedRanges[4] \x26\x26 currentPixel.b \x3c u_includedRanges[5])\nprocessedPixel \x3d vec4(currentPixel.rgb, currentPixel.a);\nelse\nprocessedPixel \x3d vec4(currentPixel.rgb, 0);\n}\n}\nif (u_noDataValues_specified) {\nif (u_bandCount \x3d\x3d 1) {\nif (processedPixel.r \x3d\x3d u_noDataValues[0])\nprocessedPixel \x3d vec4(processedPixel.rgb, 0);\nelse\nprocessedPixel \x3d vec4(processedPixel.rgb, processedPixel.a);\n} else if (u_bandCount \x3d\x3d 3) {\nif (u_noDataInterpretation \x3d\x3d1 \x26\x26 processedPixel.r \x3d\x3d u_noDataValues[0] \x26\x26 processedPixel.g \x3d\x3d u_noDataValues[1] \x26\x26 processedPixel.b \x3d\x3d u_noDataValues[2])\nprocessedPixel \x3d vec4(processedPixel.rgb, 0);\nelse if (processedPixel.r \x3d\x3d u_noDataValues[0] || processedPixel.g \x3d\x3d u_noDataValues[1] || processedPixel.b \x3d\x3d u_noDataValues[2])\nprocessedPixel \x3d vec4(processedPixel.rgb, 0);\nelse\nprocessedPixel \x3d vec4(processedPixel.rgb, processedPixel.a);\n}\n}\nreturn processedPixel;\n}\nbool isOutside(){\nif (v_texCoord.t\x3e1.00001 ||v_texCoord.t\x3c-0.00001 || v_texCoord.s\x3e1.00001 ||v_texCoord.s\x3c-0.00001) {\ngl_FragColor \x3d vec4(0.0, 0.0, 0.0, 0.0);\nreturn true;\n}\nelse {\nreturn false;\n}\n}\nvoid main() {\nif (isOutside()) {\nreturn;\n}\ngl_FragColor \x3d mask();\n}',
                    ndvi: 'precision mediump float;\nuniform sampler2D u_image;\nvarying vec2 v_texCoord;\nuniform int u_bandId_red;\nuniform int u_bandId_nir;\nuniform bool u_scaled;\nuniform int u_bandCount;\nvec4 calculateNDVI(){\nvec4 currentPixel \x3d texture2D(u_image, v_texCoord);\nfloat red \x3d float(u_bandId_red \x3d\x3d 0 ? currentPixel.r : (u_bandId_red \x3d\x3d 1 ? currentPixel.g : currentPixel.b));\nfloat nir \x3d float(u_bandId_nir \x3d\x3d 0 ? currentPixel.r : (u_bandId_nir \x3d\x3d 1 ? currentPixel.g : currentPixel.b));\nfloat ndvi_denom \x3d nir + red;\nfloat ndvi;\nif (ndvi_denom \x3d\x3d 0.0) {\nndvi \x3d 0.0;\n}\nelse {\nndvi \x3d (nir - red) / ndvi_denom;\nif (u_scaled) {\nndvi \x3d float(floor(ndvi * 100.0 + 100.5));\n}\n}\nreturn vec4(ndvi, ndvi, ndvi, currentPixel.a);\n}\nbool isOutside(){\nif (v_texCoord.t\x3e1.00001 ||v_texCoord.t\x3c-0.00001 || v_texCoord.s\x3e1.00001 ||v_texCoord.s\x3c-0.00001) {\ngl_FragColor \x3d vec4(0.0, 0.0, 0.0, 0.0);\nreturn true;\n}\nelse {\nreturn false;\n}\n}\nvoid main() {\nif (isOutside()) {\nreturn;\n}\ngl_FragColor \x3d calculateNDVI();\n}',
                    remap: 'precision mediump float;\nuniform sampler2D u_image;\nuniform sampler2D u_image1;\nvarying vec2 v_texCoord;\nuniform float u_indexedColormapOffset;\nuniform float u_indexedColormapMaxIndex;\nuniform float u_breaks[16];\nfloat getRemapIndex(float pixelValue) {\nif (pixelValue \x3c u_breaks[0] || pixelValue \x3e u_breaks[15]) {\nreturn -1.0;\n}\nfor (int i \x3d 0; i \x3c 16; i++) {\nif (pixelValue \x3c u_breaks[i]) {\nreturn float(i - 1);\n}\n}\nif (pixelValue \x3d\x3d u_breaks[15]) {\nreturn 15.0;\n}\nreturn 0.0;\n}\nvec4 colorize(float pv) {\nfloat clrIndex \x3d pv - u_indexedColormapOffset;\nvec4 result;\nif (clrIndex \x3e u_indexedColormapMaxIndex) {\nresult \x3d vec4(0.0, 0.0, 0.0, 0.0);\n}\nelse {\nvec2 clrPosition \x3d vec2(clrIndex / u_indexedColormapMaxIndex, 0.0);\nvec4 color \x3d texture2D(u_image1, clrPosition);\nresult \x3d vec4(color.r, color.g, color.b, color.a);\n}\nreturn result;\n}\nbool isOutside(){\nif (v_texCoord.t\x3e1.00001 ||v_texCoord.t\x3c-0.00001 || v_texCoord.s\x3e1.00001 ||v_texCoord.s\x3c-0.00001) {\ngl_FragColor \x3d vec4(0.0, 0.0, 0.0, 0.0);\nreturn true;\n}\nelse {\nreturn false;\n}\n}\nvoid main() {\nif (isOutside()) {\nreturn;\n}\nvec4 currentPixel \x3d texture2D(u_image, v_texCoord);\nif (currentPixel.a \x3d\x3d 0.0) {\ngl_FragColor \x3d vec4(0.0, 0.0, 0.0, 0.0);\nreturn;\n}\nfloat remappedIndex \x3d getRemapIndex(currentPixel.r);\nif (remappedIndex \x3c 0.0) {\ngl_FragColor \x3d vec4(0.0, 0.0, 0.0, 0.0);\nreturn;\n}\ngl_FragColor \x3d colorize(remappedIndex);\n}',
                    resample: 'precision mediump float;\nuniform sampler2D u_image;\nvarying vec2 v_texCoord;\nuniform vec2 u_resamplingRatio;\nuniform int u_resamplingType;\nuniform vec2 u_anchor;\nuniform vec2 u_resolution;\nvec4 resample(){\nvec2 pos_nn, pos_ul, pos_ur, pos_ll, pos_lr, pos_offset;\nfloat weight,weight_total, weight_ul, weight_ur, weight_ll, weight_lr;\nvec4 vp;  //v_texCoord is canvas space 0-1\nvec2 originalResolution \x3d vec2(u_resolution.s*u_resamplingRatio.s, u_resolution.t*u_resamplingRatio.t);\nvec2 pos \x3d vec2(u_anchor.s+(v_texCoord.s-u_anchor.s),(u_anchor.t+(v_texCoord.t-u_anchor.t)));\nif (u_resamplingType \x3d\x3d 0)\n{//shift and scaling, y \x3d ax+b so x \x3d (y-b)/a\npos_nn \x3d vec2(floor(pos.s/originalResolution.s+0.5)*originalResolution.s,floor(pos.t/originalResolution.t+0.5)*originalResolution.t);\nif (pos_nn.s \x3c0.0 || pos_nn.s \x3e 1.0 || pos_nn.t \x3c0.0 || pos_nn.t \x3e 1.0){\nvp \x3d vec4(1.0, 0.0, 0.0, 1.0);//vec4(0.0, 1.0, 0.0, vp.a);\n}\nelse {\nvp \x3d texture2D(u_image, vec2(pos_nn.s, pos_nn.t));\n}\n}\nelse if (u_resamplingType \x3d\x3d 1)\n{//shift and scaling, 4 neighbors y \x3d ax+b so x \x3d (y-b)/a\npos_ul \x3d vec2(floor(pos.s/originalResolution.s)*originalResolution.s,floor(pos.t/originalResolution.t)*originalResolution.t);\npos_ur \x3d vec2(pos_ul.s+originalResolution.s, pos_ul.t);\npos_ll \x3d vec2(pos_ul.s, pos_ul.t+originalResolution.t);\npos_lr \x3d vec2(pos_ul.s+originalResolution.s, pos_ul.t+originalResolution.t);\npos_offset \x3d vec2(pos.s - floor(pos_ul.s),pos.t - floor(pos_ul.t));\nweight_lr \x3d sqrt(pow(pos_offset.s,2.0) + pow(pos_offset.t,2.0));\nweight_ul \x3d sqrt(pow( originalResolution.s- pos_offset.s,2.0)+ pow(originalResolution.t- pos_offset.t,2.0));\nweight_ur \x3d sqrt(pow( pos_offset.s,2.0)+ 1.0- pow(originalResolution.t - pos_offset.t,2.0));\nweight_ll \x3d sqrt(pow( originalResolution.s- pos_offset.s,2.0)+ pow(pos_offset.t,2.0));\nvp \x3d (texture2D(u_image, pos_ul) * weight_ul + texture2D(u_image, pos_ur) * weight_ur + texture2D(u_image, pos_ll) * weight_ll + texture2D(u_image, pos_lr) * weight_lr)/(weight_ul+weight_ur+weight_ll+weight_lr);\n}\nelse if (u_resamplingType \x3d\x3d 2)\n{//shift and scaling, 16 neighbors\nweight_total \x3d 0.0;\nvp \x3d vec4(0.0,0.0,0.0,0.0);\npos_ul \x3d vec2(floor(pos.s/originalResolution.s)*originalResolution.s-originalResolution.s,floor(pos.t/originalResolution.t)*originalResolution.t-originalResolution.t);\npos_offset \x3d vec2(pos.s - floor(pos_ul.s),pos.t - floor(pos_ul.t));\nfor (int i\x3d0; i\x3c4; i++){//row\nfor (int j\x3d0; j\x3c4; j++){//col\nweight \x3d sqrt(pow(pos_offset.s-float(j),2.0)+ pow(pos_offset.t-float(i),2.0));\nvp +\x3dtexture2D(u_image, vec2(pos_ul.s+float(i)*originalResolution.s,pos_ul.t+float(j)*originalResolution.t)) * weight;\nweight_total +\x3d weight;\n}\n}\nvp \x3d vp/weight_total;\n}\nreturn vp;\n}\nbool isOutside(){\nif (v_texCoord.t\x3e1.00001 ||v_texCoord.t\x3c-0.00001 || v_texCoord.s\x3e1.00001 ||v_texCoord.s\x3c-0.00001) {\ngl_FragColor \x3d vec4(0.0, 0.0, 0.0, 0.0);\nreturn true;\n}\nelse {\nreturn false;\n}\n}\nvoid main() {\nif (isOutside()) {\nreturn;\n}\ngl_FragColor \x3d resample();\n}',
                    slope: 'precision mediump float;\nuniform sampler2D u_image;\nvarying vec2 v_texCoord;\nuniform vec2 u_resolution;\nuniform vec2 u_cellSize;\nuniform float u_zfactor;\nuniform float u_altitude;\nuniform float u_azimuth;\nfloat shift_right(float v, float amt) {\nv \x3d floor(v) + 0.5;\nreturn floor(v / exp2(amt));\n}\nfloat shift_left(float v, float amt) {\nreturn floor(v * exp2(amt) + 0.5);\n}\nfloat mask_last(float v, float bits) {\nreturn mod(v, shift_left(1.0, bits));\n}\nfloat extract_bits(float num, float from, float to) {\nfrom \x3d floor(from + 0.5);\nto \x3d floor(to + 0.5);\nreturn mask_last(shift_right(num, from), to - from);\n}\nvec4 encode_float(float val) {\nif (val \x3d\x3d 0.0)\nreturn vec4(0, 0, 0, 0);\nfloat sign \x3d val \x3e 0.0 ? 0.0 : 1.0;\nval \x3d abs(val);\nfloat exponent \x3d floor(log2(val));\nfloat biased_exponent \x3d exponent + 127.0;\nfloat fraction \x3d ((val / exp2(exponent)) - 1.0) * 8388608.0;\nfloat t \x3d biased_exponent / 2.0;\nfloat last_bit_of_biased_exponent \x3d fract(t) * 2.0;\nfloat remaining_bits_of_biased_exponent \x3d floor(t);\nfloat byte4 \x3d extract_bits(fraction, 0.0, 8.0) / 255.0;\nfloat byte3 \x3d extract_bits(fraction, 8.0, 16.0) / 255.0;\nfloat byte2 \x3d (last_bit_of_biased_exponent * 128.0 + extract_bits(fraction, 16.0, 23.0)) / 255.0;\nfloat byte1 \x3d (sign * 128.0 + remaining_bits_of_biased_exponent) / 255.0;\nreturn vec4(byte4, byte3, byte2, byte1);\n}\nfloat getNeighborHoodAlpha(float a, float b, float c, float d, float e, float f, float g, float h, float i){\nif (a \x3d\x3d 0.0 || a \x3d\x3d 0.0 || a\x3d\x3d0.0 || a \x3d\x3d 0.0 || a \x3d\x3d 0.0 || a\x3d\x3d0.0 || a \x3d\x3d 0.0 || a \x3d\x3d 0.0 || a\x3d\x3d0.0) {\nreturn 0.0;\n}\nelse {\nreturn e;\n}\n}\nvec4 calculateSlope() {\nfloat pi \x3d 3.141592653589793238;\nfloat dzx \x3d 0.0;\nfloat dzy \x3d 0.0;\nvec4 va,  vb,  vc,  vd,  ve,  vf,  vg,  vh,  vi;\nvec2 axy \x3d vec2(-1.0, -1.0);\nvec2 bxy \x3d vec2(0.0, -1.0);\nvec2 cxy \x3d vec2(1.0, -1.0);\nvec2 dxy \x3d vec2(-1.0, 0.0);\nvec2 fxy \x3d vec2(1.0, 0.0);\nvec2 gxy \x3d vec2(-1.0, 1.0);\nvec2 hxy \x3d vec2(0.0, 1.0);\nvec2 ixy \x3d vec2(1.0, 1.0);\nif (v_texCoord.s \x3c u_resolution.s) {\naxy[0] \x3d 1.0;\ndxy[0] \x3d 1.0;\ngxy[0] \x3d 1.0;\n}\nif (v_texCoord.t \x3c u_resolution.t) {\naxy[1] \x3d 1.0;\nbxy[1] \x3d 1.0;\ncxy[1] \x3d 1.0;\n}\nif (v_texCoord.s \x3e 1.0 - u_resolution.s) {\ncxy[0] \x3d -1.0;\nfxy[0] \x3d -1.0;\nixy[0] \x3d -1.0;\n}\nif (v_texCoord.t \x3e 1.0 - u_resolution.t) {\ngxy[1] \x3d -1.0;\nhxy[1] \x3d -1.0;\nixy[1] \x3d -1.0;\n}\nif (v_texCoord.s \x3e\x3d u_resolution.s \x26\x26 (1.0 - u_resolution.s) \x3e\x3d v_texCoord.s \x26\x26 v_texCoord.t \x3e\x3d u_resolution.t \x26\x26 (1.0 - u_resolution.t) \x3e\x3d v_texCoord.t) {\nva \x3d texture2D(u_image, v_texCoord + u_resolution * axy);\nvb \x3d texture2D(u_image, v_texCoord + u_resolution * bxy);\nvc \x3d texture2D(u_image, v_texCoord + u_resolution * cxy);\nvd \x3d texture2D(u_image, v_texCoord + u_resolution * dxy);\nve \x3d texture2D(u_image, v_texCoord + u_resolution * vec2(0, 0));\nvf \x3d texture2D(u_image, v_texCoord + u_resolution * fxy);\nvg \x3d texture2D(u_image, v_texCoord + u_resolution * gxy);\nvh \x3d texture2D(u_image, v_texCoord + u_resolution * hxy);\nvi \x3d texture2D(u_image, v_texCoord + u_resolution * ixy);\n}\ndzx \x3d (vc + 2.0 * vf + vi - va - 2.0 * vd - vg).r / (8.0 * u_cellSize[0]);\ndzy \x3d -(vg + 2.0 * vh + vi - va - 2.0 * vb - vc).r / (8.0 * u_cellSize[1]);\nfloat alpha \x3d getNeighborHoodAlpha(va.a, vb.a, vc.a, vd.a, ve.a, vf.a, vg.a, vh.a, vi.a);\nfloat slope \x3d atan(u_zfactor * sqrt(dzx * dzx + dzy * dzy)) * 57.2957795;\nreturn vec4(slope, slope, slope, alpha);\n}\nbool isOutside(){\nif (v_texCoord.t\x3e1.00001 ||v_texCoord.t\x3c-0.00001 || v_texCoord.s\x3e1.00001 ||v_texCoord.s\x3c-0.00001) {\ngl_FragColor \x3d vec4(0.0, 0.0, 0.0, 0.0);\nreturn true;\n}\nelse {\nreturn false;\n}\n}\nvoid main() {\nif (isOutside()) {\nreturn;\n}\ngl_FragColor \x3d calculateSlope();\n}',
                    stretch: 'precision mediump float;\nuniform sampler2D u_image;\nuniform sampler2D u_image1;\nuniform sampler2D u_image2;\nvarying vec2 v_texCoord;\nuniform float u_minCutOff[3];\nuniform float u_maxCutOff[3];\nuniform float u_minOutput[3];\nuniform float u_maxOutput[3];\nuniform float u_factor[3];\nuniform int u_bandCount;\nuniform vec2 u_sourceDim;\nuniform vec2 u_targetDim;\nuniform int u_state;\nuniform bool u_minMaxTexture;\nuniform bool u_useGamma;\nuniform float u_gamma[4];\nuniform float u_gammaCorrection[4];\nuniform bool u_scaled;\nvec4 findMin(vec4 p1, vec4 p2) {\nif (p1.a \x3d\x3d 0.0) {\nreturn p2;\n} else if (p2.a \x3d\x3d 0.0) {\nreturn p1;\n} else {\nreturn vec4(min(p1.r, p2.r),min(p1.g, p2.g),min(p1.b, p2.b),p1.a);\n}\n}\nvec4 findMax(vec4 p1, vec4 p2) {\nif (p1.a \x3d\x3d 0.0) {\nreturn p2;\n} else if (p2.a \x3d\x3d 0.0) {\nreturn p1;\n} else {\nreturn vec4(max(p1.r, p2.r),max(p1.g, p2.g),max(p1.b, p2.b),p1.a);\n}\n}\nvec4 findMinMax(vec4 p1, vec4 p2) {\nif (p1.a \x3d\x3d 0.0) {\nreturn p2;\n} else if (p2.a \x3d\x3d 0.0) {\nreturn p1;\n} else {\nreturn vec4(min(p1.r, p2.r), max(p1.g, p2.g), 0.0, p1.a);\n}\n}\nvec4 minMax(int state) {\nvec2 pixelFract \x3d fract(v_texCoord * u_sourceDim);\nfloat xshift \x3d ((pixelFract.s \x3e\x3d 0.5 || pixelFract.s \x3d\x3d 0.0) ? -1.0 : 1.0) / u_sourceDim.s; //take left pixel if \x3e 0.5\nfloat yshift \x3d ((pixelFract.s \x3e\x3d 0.5 || pixelFract.s \x3d\x3d 0.0) ? -1.0 : 1.0) / u_sourceDim.t; //take bottom pixel if \x3e 0.5\nif (u_sourceDim.s \x3d\x3d 1.0) {\nxshift \x3d 0.0;\n}\nif (u_sourceDim.t \x3d\x3d 1.0) {\nyshift \x3d 0.0;\n}\nvec4 p1 \x3d texture2D(u_image, v_texCoord);\nvec4 p2 \x3d texture2D(u_image, v_texCoord + vec2(xshift, 0.0));\nvec4 p3 \x3d texture2D(u_image, v_texCoord + vec2(0.0, yshift));\nvec4 p4 \x3d texture2D(u_image, v_texCoord + vec2(xshift, yshift));\nvec4 pval;\nif (state \x3d\x3d 2) {\npval \x3d findMinMax(findMinMax(p1, p2), findMinMax(p3, p4));\n} else if (state \x3d\x3d 1) {\npval \x3d findMax(findMax(p1, p2), findMax(p3, p4));\n} else if (state \x3d\x3d 0) {\npval \x3d findMin(findMin(p1, p2), findMin(p3, p4));\n}\nreturn pval;\n}\nfloat stretchOneValue(float val, float minCutOff, float maxCutOff, float minOutput, float maxOutput, float factor, bool scaled) {\nfloat stretchedVal;\nif (val \x3e minCutOff \x26\x26 val \x3c maxCutOff) {\nstretchedVal \x3d minOutput + (val - minCutOff) * factor;\n} else if (val \x3e\x3d maxCutOff) {\nstretchedVal \x3d maxOutput;\n} else {\nstretchedVal \x3d minOutput;\n}\nif (scaled) {\nreturn stretchedVal;\n}\nelse {\nreturn stretchedVal / maxOutput; //0-1\n}\n}\nfloat stretchOneValueGamma(float val, float minCutOff, float maxCutOff, float minOutput, float maxOutput, float factor, float gamma, float gammaCorrection, bool scaled) {\nfloat stretchedVal;\nfloat tempf \x3d 1.0;\nfloat outRange \x3d maxOutput - minOutput;\nfloat relativeVal \x3d (val - minCutOff) / (maxCutOff - minCutOff);\nif (val \x3e minCutOff \x26\x26 val \x3c maxCutOff) {\nif (gamma \x3e 1.0) {\ntempf -\x3d pow(1.0 / outRange, relativeVal * gammaCorrection);\n}\nstretchedVal \x3d floor(tempf * outRange * pow(relativeVal, 1.0 / gamma)) + minOutput;\n}\nelse if (val \x3e\x3d maxCutOff) {\nstretchedVal \x3d maxOutput;\n} else {\nstretchedVal \x3d minOutput;\n}\nif (scaled) {\nreturn stretchedVal;\n}\nelse {\nreturn stretchedVal / maxOutput; //0-1\n}\n}\nbool isOutside(){\nif (v_texCoord.t\x3e1.00001 ||v_texCoord.t\x3c-0.00001 || v_texCoord.s\x3e1.00001 ||v_texCoord.s\x3c-0.00001) {\ngl_FragColor \x3d vec4(0.0, 0.0, 0.0, 0.0);\nreturn true;\n}\nelse {\nreturn false;\n}\n}\nvoid main() {\nif (isOutside()) {\nreturn;\n}\nif (u_state \x3d\x3d 100) {\nvec4 currentPixel \x3d texture2D(u_image, v_texCoord);\nfloat grayVal,\nredVal,\ngreenVal,\nblueVal;\nfloat min0,\nmax0,\nmin1,\nmax1,\nmin2,\nmax2,\nfactor0,\nfactor1,\nfactor2;\nvec4 minV, maxV;\nif (u_minMaxTexture) {\nif (u_bandCount \x3d\x3d 1) {\nminV \x3d texture2D(u_image1, v_texCoord);\nmin0 \x3d minV.r;\nmax0 \x3d minV.g;\nfactor0 \x3d (u_maxOutput[0] - u_minOutput[0]) / (max0 - min0);\n} else {\nminV \x3d texture2D(u_image1, v_texCoord);\nmaxV \x3d texture2D(u_image2, v_texCoord);\nmin0 \x3d minV.r;\nmax0 \x3d maxV.r;\nmin1 \x3d minV.g;\nmax1 \x3d maxV.g;\nmin2 \x3d minV.b;\nmax2 \x3d maxV.b;\nfactor0 \x3d (u_maxOutput[0] - u_minOutput[0]) / (max0 - min0);\nfactor1 \x3d (u_maxOutput[1] - u_minOutput[1]) / (max1 - min1);\nfactor2 \x3d (u_maxOutput[2] - u_minOutput[2]) / (max2 - min2);\n}\n} else {\nmin0 \x3d u_minCutOff[0];\nmax0 \x3d u_maxCutOff[0];\nmin1 \x3d u_minCutOff[1];\nmax1 \x3d u_maxCutOff[1];\nmin2 \x3d u_minCutOff[2];\nmax2 \x3d u_maxCutOff[2];\nfactor0 \x3d u_factor[0];\nfactor1 \x3d u_factor[1];\nfactor2 \x3d u_factor[2];\n}\nif (u_useGamma){\nif (u_bandCount \x3d\x3d 1) {\ngrayVal \x3d stretchOneValueGamma(float(currentPixel.r), min0, max0, u_minOutput[0], u_maxOutput[0], factor0, u_gamma[0], u_gammaCorrection[0], u_scaled);\ngl_FragColor \x3d vec4(grayVal, grayVal, grayVal, currentPixel.a);\n} else {\nredVal \x3d stretchOneValueGamma(float(currentPixel.r), min0, max0, u_minOutput[0], u_maxOutput[0], factor0, u_gamma[0], u_gammaCorrection[0], u_scaled);\ngreenVal \x3d stretchOneValueGamma(float(currentPixel.g), min1, max1, u_minOutput[1], u_maxOutput[1], factor1, u_gamma[1], u_gammaCorrection[1], u_scaled);\nblueVal \x3d stretchOneValueGamma(float(currentPixel.b), min2, max2, u_minOutput[2], u_maxOutput[2], factor2, u_gamma[1], u_gammaCorrection[2], u_scaled);\ngl_FragColor \x3d vec4(redVal, greenVal, blueVal, currentPixel.a);\n}\n}\nelse {\nif (u_bandCount \x3d\x3d 1) {\ngrayVal \x3d stretchOneValue(float(currentPixel.r), min0, max0, u_minOutput[0], u_maxOutput[0], factor0, u_scaled);\ngl_FragColor \x3d vec4(grayVal, grayVal, grayVal, currentPixel.a);\n} else {\nredVal \x3d stretchOneValue(float(currentPixel.r), min0, max0, u_minOutput[0], u_maxOutput[0], factor0, u_scaled);\ngreenVal \x3d stretchOneValue(float(currentPixel.g), min1, max1, u_minOutput[1], u_maxOutput[1], factor1, u_scaled);\nblueVal \x3d stretchOneValue(float(currentPixel.b), min2, max2, u_minOutput[2], u_maxOutput[2], factor2, u_scaled);\ngl_FragColor \x3d vec4(redVal, greenVal, blueVal, currentPixel.a);\n}\n}\n} else {\nvec4 currentPixel \x3d minMax(u_state);\ngl_FragColor \x3d currentPixel;\n}\n}',
                };
            });
        },
        'esri/layers/rasterLib/function/RasterFunctionWebGLMixin': function() {
            define(
                'dojo/_base/declare dojo/_base/lang ./RasterFunctionX ./pixelShaders ./vertexShaders ./webglHelper ./convolutionKernel'.split(
                    ' '
                ),
                function(c, g, f, b, e, h, d) {
                    return c(null, {
                        gl: null,
                        rgbaFloatData: null,
                        originalTexture: null,
                        lastTexture: null,
                        renderTexture: !1,
                        constructor: function(a) {
                            this._isProgramInitialized = !1;
                            this.gl = a && a.gl;
                            a && a.renderTexture && (this.renderTexture = a.renderTexture);
                            this._xformSetting = (a && a._xformSetting) || {
                                requireProjection: !1,
                                meshSize: [20, 20],
                            };
                        },
                        bindFrameBuffer: function() {
                            var a = this.gl;
                            this._setupPingPongTextures();
                            this._setupBranchingTextures();
                            var b;
                            b = this._glSetting;
                            this.isBranch ?
                                ((b.branchIndex = (b.branchIndex + 1) % b.branchCount), (b =
                                    b.branches[b.branchIndex])) :
                                ((b.pingpongIndex =
                                    (b.pingpongIndex + 1) % b.pingpong.length), (b =
                                    b.pingpong[b.pingpongIndex]));
                            a.bindFramebuffer(a.FRAMEBUFFER, b.frameBuffer);
                            a.viewport(0, 0, a.drawingBufferWidth, a.drawingBufferHeight);
                            return b;
                        },
                        _initializeProgram: function(a) {
                            if (this.gl)
                                try {
                                    var d = this.gl;
                                    d.viewport(
                                        0,
                                        0,
                                        d.drawingBufferWidth,
                                        d.drawingBufferHeight
                                    );
                                    var c = this._glSetting.programUniforms,
                                        f = 'local' === this.functionName ?
                                        'local' + this.functionArguments.operation :
                                        this.functionName,
                                        g = c[f];
                                    if (g)
                                        (this._uniforms = g.uniforms), (this.rasterProgram =
                                            g.program);
                                    else {
                                        var p = (this._useMesh =
                                                this._tileMode && this._xformSetting.requireProjection) ?
                                            e.mesh :
                                            e.basic,
                                            r = e.getShader(d, a.vertex || p),
                                            u = b.getShader(d, a.fragment),
                                            t = this._loadProgram(r, u),
                                            q = { rasterProgram: h.getUniforms(d, t) };
                                        c[f] = { uniforms: q, program: t };
                                        this.rasterProgram = t;
                                        this._uniforms = q;
                                    }
                                    d.useProgram(this.rasterProgram);
                                    var v = d.getAttribLocation(
                                            this.rasterProgram,
                                            'a_texCoord'
                                        ),
                                        C = d.createBuffer();
                                    d.bindBuffer(d.ARRAY_BUFFER, C);
                                    var z = h.createMesh(this._xformSetting.meshSize);
                                    d.bufferData(d.ARRAY_BUFFER, z, d.STATIC_DRAW);
                                    d.enableVertexAttribArray(v);
                                    d.vertexAttribPointer(v, 2, d.FLOAT, !1, 0, 0);
                                    d.disable(d.DEPTH_TEST);
                                    d.blendFunc(d.SRC_ALPHA, d.ZERO);
                                    d.disable(d.BLEND);
                                    d.pixelStorei(d.UNPACK_PREMULTIPLY_ALPHA_WEBGL, !1);
                                    d.pixelStorei(d.UNPACK_FLIP_Y_WEBGL, !1);
                                    this._shaderInfo = { fragment: a.fragmentName };
                                } catch (y) {}
                        },
                        _setUniform: function(a, b, d) {
                            null != b &&
                                (d &&
                                    !this._uniforms[d] &&
                                    (this._uniforms[d] = h.getUniforms(this.gl, this[d])), (d = d ?
                                        this._uniforms[d] :
                                        this._uniforms.rasterProgram), (a = d[a] || d[a + '[0]']) &&
                                    h.setUniform(this.gl, a, b));
                        },
                        _setUniforms: function(a, b) {
                            var d = Object.keys(a),
                                c, e = d.length;
                            for (c = 0; c < e; c++)
                                this._setUniform(d[c], a[d[c]], b);
                            this.rawInput ?
                                this._setUniform('u_flipY', !0, b) :
                                this._setUniform('u_flipY', !1, b);
                            this._tileMode ?
                                (this.rawInput ?
                                    ((a = this._xformSetting.offset), (d = this._xformSetting
                                        .scale)) :
                                    ((a = [0, 0]), (d = [1, 1])), this._setUniform(
                                        'u_xformOffset',
                                        a,
                                        b
                                    ), this._setUniform('u_xformScale', d, b), this._xformSetting
                                    .requireProjection &&
                                    (this.rawInput ?
                                        (this._setupXformTexture(), this._setUniform(
                                            'u_projection', !0,
                                            b
                                        ), this._setUniform(
                                            'u_transformGridSize',
                                            this._xformSetting.gridConfig.size,
                                            b
                                        ), this._setUniform(
                                            'u_transformSpacing',
                                            this._xformSetting.gridConfig.spacing,
                                            b
                                        ), this._setUniform(
                                            'u_targetImageSize',
                                            new Float32Array([
                                                this.gl.drawingBufferWidth,
                                                this.gl.drawingBufferHeight,
                                            ]),
                                            b
                                        )) :
                                        this._setUniform('u_projection', !1, b))) :
                                ((a = [0, 0]), (d = [1, 1]), this._setUniform(
                                    'u_xformOffset',
                                    a,
                                    b
                                ), this._setUniform('u_xformScale', d, b));
                        },
                        _setupTextureData: function(a, b) {
                            if (a.texture) return a;
                            a.raster && a.raster.pixelBlock && (a = a.raster);
                            this.rawInput = !0;
                            var d = b && b.notOriginal,
                                c = b && b.bandIDs;
                            b && b.reCreate ?
                                (b = !1) :
                                (b = this._tileMode ?
                                    !this._xformSetting.hasNewTexture :
                                    !this._glSetting.hasNewTexture) &&
                                this._originalBandIDs &&
                                (b = c ?
                                    this._originalBandIDs.join('') === c.join('') :
                                    !1);
                            0 < this._glSetting.branchCount && (b = !1);
                            if (b && this.originalTexture)
                                return { extent: a.extent, texture: this.originalTexture };
                            b = this._createTexture();
                            d || ((this.originalTexture = b), (this._originalBandIDs = c));
                            var d = this.gl,
                                e = a.pixelBlock,
                                k = 0;
                            c &&
                                0 < c.length &&
                                e &&
                                ((k = Math.max.apply(null, c)), e.pixels.length > k &&
                                    c &&
                                    ((e.pixels = c.map(function(a) {
                                            return e.pixels[a];
                                        })), e.statistics &&
                                        (e.statistics = c.map(function(a) {
                                            return e.statistics[a];
                                        }))));
                            c = e.width;
                            k = e.height;
                            d.getExtension('OES_texture_float');
                            var h = e.getAsRGBAFloat();
                            d.texImage2D(
                                d.TEXTURE_2D,
                                0,
                                d.RGBA,
                                c,
                                k,
                                0,
                                d.RGBA,
                                d.FLOAT,
                                h
                            );
                            return { extent: a.extent, texture: b };
                        },
                        _setupPingPongTextures: function() {
                            var a = this._glSetting;
                            if (!a || !a.pingpong) {
                                a.pingpong = [];
                                var b = h.createBufferTexture(this.gl, !1);
                                a.pingpong.push(b);
                                b = h.createBufferTexture(this.gl, !1);
                                a.pingpong.push(b);
                                a.pingpongIndex = 1;
                            }
                        },
                        _setupBranchingTextures: function() {
                            var a = this._glSetting;
                            if (!a || !a.branches) {
                                a.branches = [];
                                var b = 0,
                                    d, c = a.branchCount;
                                if (0 < c) {
                                    for (b = 0; b < c; b++)
                                        (d = h.createBufferTexture(this.gl, !1)), a.branches.push(
                                            d
                                        );
                                    a.branchIndex = c - 1;
                                }
                            }
                        },
                        _setupXformTexture: function(a) {
                            for (
                                var b = this._createTexture(),
                                    d = this.gl,
                                    c = 4 * this._xformSetting.gridConfig.size[0],
                                    e = this._xformSetting.gridConfig.size[1],
                                    h = new Float32Array(c * e * 4),
                                    f = 0,
                                    g = 0; g < this._xformSetting.gridConfig.coefficients.length; g++
                            )
                                (h[f++] = this._xformSetting.gridConfig.coefficients[g]), 2 ===
                                g % 3 && (h[f++] = 1);
                            d.getExtension('OES_texture_float');
                            d.texImage2D(
                                d.TEXTURE_2D,
                                0,
                                d.RGBA,
                                c,
                                e,
                                0,
                                d.RGBA,
                                d.FLOAT,
                                h
                            );
                            this._bindTexture(b, 'u_transformGrid', a);
                        },
                        _createTexture: function(a) {
                            return h.createTexture(this.gl, a);
                        },
                        _bindTexture: function(a, b, d) {
                            b = b || 'u_image';
                            d = this._uniforms[d || 'rasterProgram'];
                            var c = this._getTextureIndex(b);
                            if (-1 !== c) {
                                var e = this.gl;
                                e.uniform1i(d[b].location, c);
                                e.activeTexture(e.TEXTURE0 + c);
                                e.bindTexture(e.TEXTURE_2D, a);
                            }
                        },
                        _getTextureIndex: function(a, b) {
                            b = this._uniforms[b || 'rasterProgram'];
                            if (!b || !b[a] || b[a].info.type !== this.gl.SAMPLER_2D)
                                return -1;
                            if ('u_transformGrid' === a) return 0;
                            a = 'u_image' === a ? 0 : parseInt(a.replace('u_image', ''));
                            return this._xformSetting.requireProjection ? a + 1 : a;
                        },
                        _drawGL: function(a) {
                            var b = this.gl;
                            this.renderTexture ?
                                (b.enable(b.BLEND), b.bindFramebuffer(b.FRAMEBUFFER, null)) :
                                b.disable(b.BLEND);
                            a ||
                                b.viewport(0, 0, b.drawingBufferWidth, b.drawingBufferHeight);
                            a = this._xformSetting.meshSize || [1, 1];
                            b.drawArrays(b.TRIANGLES, 0, a[0] * a[1] * 6);
                            this._drawMesh();
                        },
                        _drawMesh: function() {
                            if (this.renderTexture && this._glSetting.drawMesh) {
                                this.meshProgram =
                                    this.meshProgram || this._setupMeshProgram();
                                var a = this.gl;
                                a.useProgram(this.meshProgram);
                                a.bindFramebuffer(a.FRAMEBUFFER, null);
                                var b = a.getAttribLocation(this.meshProgram, 'a_texCoord'),
                                    d = a.createBuffer();
                                a.bindBuffer(a.ARRAY_BUFFER, d);
                                var d = this._xformSetting.meshSize || [1, 1],
                                    c = h.createMesh(d, !0);
                                a.bufferData(a.ARRAY_BUFFER, c, a.STATIC_DRAW);
                                a.enableVertexAttribArray(b);
                                a.vertexAttribPointer(b, 2, a.FLOAT, !1, 0, 0);
                                a.disable(a.DEPTH_TEST);
                                a.blendFunc(a.ONE, a.ZERO);
                                this._setUniforms({ u_color: [0, 0, 1, 1], u_drawMeshLines: !0 },
                                    'meshProgram'
                                );
                                a.drawArrays(a.LINES, 0, d[0] * d[1] * 10);
                            }
                        },
                        _setupMeshProgram: function() {
                            var a = e.getShader(this.gl, e.mesh),
                                d = b.getShader(this.gl, b.constant);
                            return this._loadProgram(a, d);
                        },
                        _loadProgram: function(a, b) {
                            return h.loadProgram(this.gl, a, b);
                        },
                        _getShaderScript: function(a, b) {
                            b = document.getElementById(b);
                            if (!b) return null;
                            a = '';
                            for (b = b.firstChild; b;)
                                3 == b.nodeType && (a += b.textContent), (b = b.nextSibling);
                            return a;
                        },
                    });
                }
            );
        },
        'esri/layers/rasterLib/function/vertexShaders': function() {
            define(
                ['dojo/_base/declare', 'dojo/_base/lang', './vertexShaderScripts'],
                function(c, g, f) {
                    c = {
                        shaderType: 'vertex',
                        getShader: function(b, c) {
                            var e;
                            e = b.createShader(b.VERTEX_SHADER);
                            b.shaderSource(e, c);
                            b.compileShader(e);
                            b.getShaderParameter(e, b.COMPILE_STATUS) || (e = null);
                            return e;
                        },
                    };
                    g.mixin(c, f);
                    return c;
                }
            );
        },
        'esri/layers/rasterLib/function/vertexShaderScripts': function() {
            define([], function() {
                return {
                    basic: 'varying vec2 v_texCoord;\nattribute vec2 a_texCoord;\nuniform vec2 u_xformOffset;\nuniform vec2 u_xformScale;\nuniform bool u_flipY;\nvoid main() {\nv_texCoord \x3d u_xformOffset + a_texCoord * u_xformScale;\nif (u_flipY) {\nv_texCoord.t \x3d 1.0 - v_texCoord.t;\n}\nvec2 position \x3d a_texCoord * 2.0 - 1.0;\ngl_Position \x3d vec4(position, 0.0, 1.0);\n}',
                    histogram: 'attribute float a_pixelIndex;\nuniform sampler2D u_image;\nuniform sampler2D u_image1;\nuniform sampler2D u_image2;\nuniform vec2 u_sourceDim;\nuniform vec2 u_halfPixel;\nuniform vec4 u_bandSelection;\nuniform vec4 u_mins;\nuniform vec4 u_factors;\nuniform float u_size;\nuniform int u_bandCount;\nuniform bool u_minMaxTexture;\nvoid main() {\nfloat row \x3d a_pixelIndex/u_sourceDim.s;\nvec2 coord \x3d vec2(fract(row), floor(row)/u_sourceDim.t);\nvec4 pv \x3d texture2D(u_image, coord + u_halfPixel);\nvec4 minVal, maxVal, pvm;\nif (u_minMaxTexture){\nif (u_bandCount \x3d\x3d1){ //min \x3d red, max \x3d green\nvec4 minmax \x3d texture2D(u_image1, vec2(0.5,0.5));\nminVal \x3d vec4(minmax.r, minmax.r, minmax.r, 0.0);\nmaxVal \x3d vec4(minmax.g, minmax.g, minmax.g, 0.0);\n}\nelse if (u_bandCount \x3d\x3d3){ //min \x3d red, max \x3d green\nminVal \x3d texture2D(u_image1, vec2(0.5,0.5));\nmaxVal \x3d texture2D(u_image2, vec2(0.5,0.5));\n}\nvec4 factors \x3d u_size/(maxVal-minVal+vec4(0.0,0.0,0.0,1.0)) * u_factors;\npvm \x3d (pv - minVal) * factors;\n}\nelse {\npvm \x3d (pv - u_mins) * u_factors;\n}\nfloat histVal \x3d min(floor(pvm.r+pvm.g+pvm.b), u_size-1.0);\nhistVal \x3d pv.a \x3d\x3d 1.0? histVal: u_size;\ngl_Position \x3d vec4((histVal+0.1) / (u_size+1.0) * 2.0 - 1.0, 0.5, 0, 1);\ngl_PointSize \x3d 1.0;\n}',
                    mesh: 'varying vec2 v_texCoord;\nattribute vec2 a_texCoord;\nuniform bool u_drawMeshLines;\nuniform bool u_flipY;\nuniform vec2 u_xformOffset;\nuniform vec2 u_xformScale;\nuniform sampler2D u_transformGrid;\nuniform vec2 u_transformSpacing;\nuniform vec2 u_transformGridSize;\nuniform vec2 u_targetImageSize;\nuniform vec2 u_srcImageSize;\nuniform bool u_projection;\nvec2 projectPixelLocation(vec2 coords) {\nvec2 index_image \x3d floor(coords * u_targetImageSize);\nvec2 oneTransformPixel \x3d vec2(0.25 / u_transformGridSize.s, 1.0 / u_transformGridSize.t);\nvec2 index_transform \x3d floor(index_image / u_transformSpacing) / u_transformGridSize;\nvec2 pos \x3d fract((index_image + vec2(0.5, 0.5)) / u_transformSpacing);\nvec2 srcLocation;\nvec2 transform_location \x3d index_transform + oneTransformPixel * 0.5;\nif (pos.s \x3c\x3d pos.t) {\nvec4 ll_abc \x3d texture2D(u_transformGrid, vec2(transform_location.s, transform_location.t));\nvec4 ll_def \x3d texture2D(u_transformGrid, vec2(transform_location.s + oneTransformPixel.s, transform_location.t));\nsrcLocation.s \x3d dot(ll_abc.rgb, vec3(pos, 1.0));\nsrcLocation.t \x3d dot(ll_def.rgb, vec3(pos, 1.0));\n} else {\nvec4 ur_abc \x3d texture2D(u_transformGrid, vec2(transform_location.s + 2.0 * oneTransformPixel.s, transform_location.t));\nvec4 ur_def \x3d texture2D(u_transformGrid, vec2(transform_location.s + 3.0 * oneTransformPixel.s, transform_location.t));\nsrcLocation.s \x3d dot(ur_abc.rgb, vec3(pos, 1.0));\nsrcLocation.t \x3d dot(ur_def.rgb, vec3(pos, 1.0));\n}\nreturn srcLocation;// + halfPixel;\n}\nvoid main() {\nif (u_projection) {\nv_texCoord \x3d projectPixelLocation(a_texCoord);\n} else {\nv_texCoord \x3d u_xformOffset + a_texCoord * u_xformScale;\n}\nif (u_flipY) {\nv_texCoord.t \x3d 1.0 - v_texCoord.t;\n}\nvec2 position \x3d a_texCoord * 2.0 - 1.0;\nif (u_drawMeshLines){\nvec2 adjustedPos \x3d (v_texCoord - u_xformOffset) / u_xformScale;\ngl_Position \x3d vec4( adjustedPos * 2.0 - 1.0, 0.0, 1.0);\n}\nelse {\ngl_Position \x3d vec4(position, 0.0, 1.0);\n}\n}',
                };
            });
        },
        'esri/layers/rasterLib/function/webglHelper': function() {
            define([], function() {
                var c = {
                    getUniforms: function(c, f) {
                        var b = c.getProgramParameter(f, c.ACTIVE_UNIFORMS),
                            e, h, d = {};
                        for (e = 0; e < b; e++)
                            (h = c.getActiveUniform(f, e)) &&
                            (d[h.name] = {
                                location: c.getUniformLocation(f, h.name),
                                info: h,
                            });
                        return d;
                    },
                    setUniform: function(c, f, b) {
                        var e = f.info;
                        f = f.location;
                        var h = e.type;
                        if (null != b)
                            switch (h) {
                                case c.FLOAT:
                                    1 < e.size ?
                                        0 !== b.length && c.uniform1fv(f, b) :
                                        c.uniform1f(f, b);
                                    break;
                                case c.FLOAT_VEC2:
                                    if (0 === b.length) break;
                                    c.uniform2fv(f, b);
                                    break;
                                case c.FLOAT_VEC3:
                                    if (0 === b.length) break;
                                    c.uniform3fv(f, b);
                                    break;
                                case c.FLOAT_VEC4:
                                    if (0 === b.length) break;
                                    c.uniform4fv(f, b);
                                    break;
                                case c.INT:
                                case c.BOOL:
                                    1 < e.size ?
                                        0 !== b.length && c.uniform1iv(f, b) :
                                        c.uniform1i(f, b);
                                    break;
                                case c.INT_VEC2:
                                case c.BOOL_VEC2:
                                    if (0 === b.length) break;
                                    c.uniform2iv(f, b);
                                    break;
                                case c.INT_VEC3:
                                case c.BOOL_VEC3:
                                    if (0 === b.length) break;
                                    c.uniform3iv(f, b);
                                    break;
                                case c.INT_VEC4:
                                case c.BOOL_VEC4:
                                    0 !== b.length && c.uniform4iv(f, b);
                            }
                    },
                    createTexture: function(c, f) {
                        var b = c.createTexture();
                        c.bindTexture(c.TEXTURE_2D, b);
                        c.texParameteri(c.TEXTURE_2D, c.TEXTURE_WRAP_S, c.CLAMP_TO_EDGE);
                        c.texParameteri(c.TEXTURE_2D, c.TEXTURE_WRAP_T, c.CLAMP_TO_EDGE);
                        c.texParameteri(
                            c.TEXTURE_2D,
                            c.TEXTURE_MIN_FILTER,
                            f ? c.LINEAR : c.NEAREST
                        );
                        c.texParameteri(
                            c.TEXTURE_2D,
                            c.TEXTURE_MAG_FILTER,
                            f ? c.LINEAR : c.NEAREST
                        );
                        return b;
                    },
                    createBufferTexture: function(g, f, b) {
                        f = c.createTexture(g, f);
                        g.getExtension('OES_texture_float');
                        b = b || [g.drawingBufferWidth, g.drawingBufferHeight];
                        g.texImage2D(
                            g.TEXTURE_2D,
                            0,
                            g.RGBA,
                            b[0],
                            b[1],
                            0,
                            g.RGBA,
                            g.FLOAT,
                            null
                        );
                        b = g.createFramebuffer();
                        g.bindFramebuffer(g.FRAMEBUFFER, b);
                        g.framebufferTexture2D(
                            g.FRAMEBUFFER,
                            g.COLOR_ATTACHMENT0,
                            g.TEXTURE_2D,
                            f,
                            0
                        );
                        return { texture: f, frameBuffer: b };
                    },
                    getShader: function(c, f, b) {
                        b = b ?
                            c.createShader(c.VERTEX_SHADER) :
                            c.createShader(c.FRAGMENT_SHADER);
                        c.shaderSource(b, f);
                        c.compileShader(b);
                        c.getShaderParameter(b, c.COMPILE_STATUS) || (b = null);
                        return b;
                    },
                    loadProgram: function(c, f, b) {
                        var e = c.createProgram();
                        c.attachShader(e, f);
                        c.attachShader(e, b);
                        c.linkProgram(e);
                        c.getProgramParameter(e, c.LINK_STATUS) ||
                            (c.deleteProgram(e), (e = null));
                        return e;
                    },
                    createMesh: function(c, f) {
                        if (!c || (1 === c[0] && 1 === c[1]))
                            return new Float32Array([0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1]);
                        var b;
                        b = c && f ?
                            new Float32Array(c[0] * c[1] * 20) :
                            new Float32Array(c[0] * c[1] * 12);
                        var e = 0.9998 / c[1],
                            h = 0.9998 / c[0],
                            d, a, k, g, l = 0;
                        for (d = 0; d < c[1]; d++)
                            for (a = 0; a < c[0]; a++)
                                (k = 1e-4 + e * d), (g = 1e-4 + h * a), c && !f ?
                                ((b[l++] = k), (b[l++] = g), (b[l++] = k + e), (b[
                                    l++
                                ] = g), (b[l++] = k), (b[l++] = g + h), (b[l++] = k), (b[
                                        l++
                                    ] =
                                    g + h), (b[l++] = k + e), (b[l++] = g), (b[l++] =
                                    k + e), (b[l++] = g + h)) :
                                ((b[l++] = k), (b[l++] = g), (b[l++] = k), (b[l++] =
                                    g + h), (b[l++] = k), (b[l++] = g + h), (b[l++] =
                                    k + e), (b[l++] = g + h), (b[l++] = k + e), (b[l++] =
                                    g + h), (b[l++] = k + e), (b[l++] = g), (b[l++] = k), (b[
                                    l++
                                ] = g), (b[l++] = k + e), (b[l++] = g), (b[l++] = k), (b[
                                        l++
                                    ] =
                                    g + h), (b[l++] = k + e), (b[l++] = g));
                        return b;
                    },
                };
                return c;
            });
        },
        'esri/layers/rasterLib/function/convolutionKernel': function() {
            define([], function() {
                var c = {
                    Default: [0, 0, 0, 0, 1, 0, 0, 0, 0],
                    LineDetectionHorizontal: [-1, -1, -1, 2, 2, 2, -1, -1, -1],
                    LineDetectionVertical: [-1, 2, -1, -1, 2, -1, -1, 2, -1],
                    LineDetectionLeftDiagonal: [2, -1, -1, -1, 2, -1, -1, -1, 2],
                    LineDetectionRightDiagonal: [-1, -1, 2, -1, 2, -1, 2, -1, -1],
                    GradientNorth: [-1, -2, -1, 0, 0, 0, 1, 2, 1],
                    GradientWest: [-1, 0, 1, -2, 0, 2, -1, 0, 1],
                    GradientEast: [1, 0, -1, 2, 0, -2, 1, 0, -1],
                    GradientSouth: [1, 2, 1, 0, 0, 0, -1, -2, -1],
                    GradientNorthEast: [0, -1, -2, 1, 0, -1, 2, 1, 0],
                    GradientNorthWest: [-2, -1, 0, -1, 0, 1, 0, 1, 2],
                    SmoothArithmeticMean: [
                        0.111111111111,
                        0.111111111111,
                        0.111111111111,
                        0.111111111111,
                        0.111111111111,
                        0.111111111111,
                        0.111111111111,
                        0.111111111111,
                        0.111111111111,
                    ],
                    Smoothing3x3: [
                        0.0625,
                        0.125,
                        0.0625,
                        0.125,
                        0.25,
                        0.125,
                        0.0625,
                        0.125,
                        0.0625,
                    ],
                    Smoothing5x5: [
                        1,
                        1,
                        1,
                        1,
                        1,
                        1,
                        4,
                        4,
                        4,
                        1,
                        1,
                        4,
                        12,
                        4,
                        1,
                        1,
                        4,
                        4,
                        4,
                        1,
                        1,
                        1,
                        1,
                        1,
                        1,
                    ],
                    Sharpening3x3: [-1, -1, -1, -1, 9, -1, -1, -1, -1],
                    Sharpening5x5: [-1, -3, -4, -3, -1, -3,
                        0,
                        6,
                        0, -3, -4,
                        6,
                        21,
                        6, -4, -3,
                        0,
                        6,
                        0, -3, -1, -3, -4, -3, -1,
                    ],
                    Laplacian3x3: [0, -1, 0, -1, 4, -1, 0, -1, 0],
                    Laplacian5x5: [
                        0,
                        0, -1,
                        0,
                        0,
                        0, -1, -2, -1,
                        0, -1, -2,
                        17, -2, -1,
                        0, -1, -2, -1,
                        0,
                        0,
                        0, -1,
                        0,
                        0,
                    ],
                    SobelHorizontal: [-1, -2, -1, 0, 0, 0, 1, 2, 1],
                    SobelVertical: [-1, 0, 1, -2, 0, 2, -1, 0, 1],
                    Sharpen: [0, -0.25, 0, -0.25, 2, -0.25, 0, -0.25, 0],
                    Sharpen2: [-0.25, -0.25, -0.25, -0.25, 3, -0.25, -0.25, -0.25, -0.25],
                    PointSpread: [-0.627,
                        0.352, -0.627,
                        0.352,
                        2.923,
                        0.352, -0.627,
                        0.352, -0.627,
                    ],
                    getKernel: function(g) {
                        switch (g) {
                            case 0:
                                return c.LineDetectionHorizontal;
                            case 1:
                                return c.LineDetectionVertical;
                            case 2:
                                return c.LineDetectionLeftDiagonal;
                            case 3:
                                return c.LineDetectionRightDiagonal;
                            case 4:
                                return c.GradientNorth;
                            case 5:
                                return c.GradientWest;
                            case 6:
                                return c.GradientEast;
                            case 7:
                                return c.GradientSouth;
                            case 8:
                                return c.GradientNorthEast;
                            case 9:
                                return c.GradientNorthWest;
                            case 10:
                                return c.SmoothArithmeticMean;
                            case 11:
                                return c.Smoothing3x3;
                            case 12:
                                return c.Smoothing5x5;
                            case 13:
                                return c.Sharpening3x3;
                            case 14:
                                return c.Sharpening5x5;
                            case 15:
                                return c.Laplacian3x3;
                            case 16:
                                return c.Laplacian5x5;
                            case 17:
                                return c.SobelHorizontal;
                            case 18:
                                return c.SobelVertical;
                            case 19:
                                return c.Sharpen;
                            case 20:
                                return c.Sharpen2;
                            case 21:
                                return c.PointSpread;
                            default:
                                return c.Default;
                        }
                    },
                };
                return c;
            });
        },
        'esri/layers/rasterLib/function/surfaceUtils': function() {
            define(['dojo/_base/lang'], function(c) {
                return {
                    hillshade: function(c, f) {
                        if (
                            null !== c &&
                            null !== c.pixelBlock &&
                            null !== c.pixelBlock.pixels
                        ) {
                            var b = this._clonePixelBlock(c.pixelBlock),
                                e = f.altitude,
                                h = f.azimuth,
                                d = f.zFactor,
                                a = f.psPower,
                                k = f.psFactor,
                                g = f.hillshadeType,
                                l = f.slopeType,
                                m = f.isGCS;
                            1 === g && (d *= 2);
                            f = b.width;
                            var p = b.height,
                                r = b.pixels[0],
                                u = b.mask,
                                t = new Uint8Array(f * p);
                            u && t.set(u);
                            var q = new Uint8Array(f * p),
                                v = (c.extent.xmax - c.extent.xmin) / f,
                                C = (c.extent.ymax - c.extent.ymin) / p,
                                z = d / (8 * v),
                                y = d / (8 * C);
                            0.001 < d && m && ((z /= 111e3), (y /= 111e3));
                            3 === l &&
                                (m ?
                                    ((z = 111e3 * v), (y = 111e3 * C), (z =
                                        (d + Math.pow(z, a) * k) / (8 * z)), (y =
                                        (d + Math.pow(y, a) * k) / (8 * y))) :
                                    ((z = (d + Math.pow(v, a) * k) / (8 * v)), (y =
                                        (d + Math.pow(C, a) * k) / (8 * C))));
                            var m = (90 - e) * Math.PI / 180,
                                e = Math.cos(m),
                                x = (360 - h + 90) * Math.PI / 180,
                                h = Math.sin(m) * Math.cos(x),
                                m = Math.sin(m) * Math.sin(x),
                                w,
                                A,
                                E,
                                B,
                                D,
                                H,
                                G,
                                F,
                                d = [],
                                a = [],
                                k = [],
                                K,
                                v = [315, 270, 225, 360, 180, 0];
                            A = [60, 60, 60, 60, 60, 90];
                            var l = [3, 5, 3, 2, 1, 4],
                                L = l.reduce(function(a, b) {
                                    return a + b;
                                }),
                                C = l.map(function(a) {
                                    return a / L;
                                });
                            if (1 === g)
                                for ((K = v.length), (l = 0); l < K; l++)
                                    (e = A[l]), (h = v[l]), (m =
                                        (90 - e) * Math.PI / 180), (e = Math.cos(m)), (x =
                                        (360 - h + 90) * Math.PI / 180), (h =
                                        Math.sin(m) * Math.cos(x)), (m =
                                        Math.sin(m) * Math.sin(x)), d.push(e), a.push(
                                        h
                                    ), k.push(m);
                            H = 0;
                            for (l = 1; l < p - 1; l++)
                                for ((A = l * f), (v = 1); v < f - 1; v++)
                                    if (u && !u[A + v]) q[A + v] = 0;
                                    else {
                                        x = 0;
                                        if (
                                            u &&
                                            ((x =
                                                u[A - f + v - 1] +
                                                u[A - f + v] +
                                                u[A - f + v + 1] +
                                                u[A + v - 1] +
                                                u[A + v + 1] +
                                                u[A + f + v - 1] +
                                                u[A + f + v] +
                                                u[A + f + v + 1]), 7 > x)
                                        ) {
                                            q[A + v] = 0;
                                            t[A + v] = 0;
                                            continue;
                                        }
                                        7 === x ?
                                            ((w = u[A - f + v - 1] ?
                                                r[A - f + v - 1] :
                                                r[A + v]), (E = u[A - f + v] ?
                                                r[A - f + v] :
                                                r[A + v]), (B = u[A - f + v + 1] ?
                                                r[A - f + v + 1] :
                                                r[A + v]), (x = u[A + v - 1] ?
                                                r[A + v - 1] :
                                                r[A + v]), (D = u[A + v + 1] ?
                                                r[A + v + 1] :
                                                r[A + v]), (H = u[A + f + v - 1] ?
                                                r[A + f + v - 1] :
                                                r[A + v]), (G = u[A + f + v] ?
                                                r[A + f + v] :
                                                r[A + v]), (F = u[A + f + v + 1] ?
                                                r[A + f + v + 1] :
                                                r[A + v])) :
                                            ((w = r[A - f + v - 1]), (E = r[A - f + v]), (B =
                                                r[A - f + v + 1]), (x = r[A + v - 1]), (D =
                                                r[A + v + 1]), (H = r[A + f + v - 1]), (G =
                                                r[A + f + v]), (F = r[A + f + v + 1]));
                                        x = (B + D + D + F - (w + x + x + H)) * z;
                                        E = (H + G + G + F - (w + E + E + B)) * y;
                                        B = Math.sqrt(1 + x * x + E * E);
                                        H = 0;
                                        if (0 === g)
                                            (G = m * E - h * x), (G = 255 * (e + G) / B), 0 > G &&
                                            (G = 0), (H = G);
                                        else if (1 === g)
                                            for (w = 0; w < K; w++)
                                                (G = k[w] * E - a[w] * x), (G =
                                                    255 * (d[w] + G) / B), 0 > G && (G = 0), (H +=
                                                    G * C[w]);
                                        q[A + v] = H;
                                    }
                            for (l = 0; l < p; l++)
                                (q[l * f] = q[l * f + 1]), (q[(l + 1) * f - 1] =
                                    q[(l + 1) * f - 2]);
                            for (l = 1; l < f - 1; l++)
                                (q[l] = q[l + f]), (q[l + (p - 1) * f] = q[l + (p - 2) * f]);
                            b.pixelType = 'U8';
                            b.pixels = [q];
                            b.statistics = [{ minValue: 0, maxValue: 255 }];
                            u && (b.mask = t);
                            return { extent: c.extent, pixelBlock: b };
                        }
                    },
                    slope: function(c, f) {
                        if (
                            null !== c &&
                            null !== c.pixelBlock &&
                            null !== c.pixelBlock.pixels
                        ) {
                            var b = this._clonePixelBlock(c.pixelBlock),
                                e = f.zFactor,
                                h = f.psPower,
                                d = f.psFactor,
                                a = f.slopeType,
                                k = f.isGCS;
                            f = b.width;
                            var g = b.height,
                                l = b.pixels[0],
                                m = b.mask,
                                p = new Uint8Array(f * g);
                            m && p.set(m);
                            var r = new Float32Array(f * g),
                                u = (c.extent.xmax - c.extent.xmin) / f,
                                t = (c.extent.ymax - c.extent.ymin) / g,
                                q = e / (8 * u),
                                v = e / (8 * t);
                            1e-4 > Math.abs(e - 1) && k && ((q /= 111e3), (v /= 111e3));
                            3 === a &&
                                (k ?
                                    ((q = 111e3 * u), (v = 111e3 * t), (q =
                                        (e + Math.pow(q, h) * d) / (8 * q)), (v =
                                        (e + Math.pow(v, h) * d) / (8 * v))) :
                                    ((q = (e + Math.pow(u, h) * d) / (8 * u)), (v =
                                        (e + Math.pow(t, h) * d) / (8 * t))));
                            for (var C, z, y, x, w, e = 1; e < g - 1; e++)
                                for ((d = e * f), (h = 1); h < f - 1; h++)
                                    if (m && !m[d + h]) r[d + h] = 0;
                                    else {
                                        t = 0;
                                        if (
                                            m &&
                                            ((t =
                                                m[d - f + h - 1] +
                                                m[d - f + h] +
                                                m[d - f + h + 1] +
                                                m[d + h - 1] +
                                                m[d + h + 1] +
                                                m[d + f + h - 1] +
                                                m[d + f + h] +
                                                m[d + f + h + 1]), 7 > t)
                                        ) {
                                            r[d + h] = 0;
                                            p[d + h] = 0;
                                            continue;
                                        }
                                        7 === t ?
                                            ((t = m[d - f + h - 1] ?
                                                l[d - f + h - 1] :
                                                l[d + h]), (k = m[d - f + h] ?
                                                l[d - f + h] :
                                                l[d + h]), (u = m[d - f + h + 1] ?
                                                l[d - f + h + 1] :
                                                l[d + h]), (C = m[d + h - 1] ?
                                                l[d + h - 1] :
                                                l[d + h]), (z = m[d + h + 1] ?
                                                l[d + h + 1] :
                                                l[d + h]), (y = m[d + f + h - 1] ?
                                                l[d + f + h - 1] :
                                                l[d + h]), (x = m[d + f + h] ?
                                                l[d + f + h] :
                                                l[d + h]), (w = m[d + f + h + 1] ?
                                                l[d + f + h + 1] :
                                                l[d + h])) :
                                            ((t = l[d - f + h - 1]), (k = l[d - f + h]), (u =
                                                l[d - f + h + 1]), (C = l[d + h - 1]), (z =
                                                l[d + h + 1]), (y = l[d + f + h - 1]), (x =
                                                l[d + f + h]), (w = l[d + f + h + 1]));
                                        C = (u + z + z + w - (t + C + C + y)) * q;
                                        t = (y + x + x + w - (t + k + k + u)) * v;
                                        t = Math.sqrt(C * C + t * t);
                                        r[d + h] = 1 === a || 3 === a ?
                                            57.2957795 * Math.atan(t) :
                                            100 * t;
                                    }
                            for (e = 0; e < g; e++)
                                (r[e * f] = r[e * f + 1]), (r[(e + 1) * f - 1] =
                                    r[(e + 1) * f - 2]);
                            for (e = 1; e < f - 1; e++)
                                (r[e] = r[e + f]), (r[e + (g - 1) * f] = r[e + (g - 2) * f]);
                            b.pixelType = 'F32';
                            b.pixels = [r];
                            b.statistics = [{ minValue: 0, maxValue: 255 }];
                            m && (b.mask = p);
                            return { extent: c.extent, pixelBlock: b };
                        }
                    },
                    aspect: function(c) {
                        if (
                            null !== c &&
                            null !== c.pixelBlock &&
                            null !== c.pixelBlock.pixels
                        ) {
                            var f = this._clonePixelBlock(c.pixelBlock),
                                b = f.width,
                                e = f.height,
                                h = f.pixels[0],
                                d = f.mask,
                                a = new Uint8Array(b * e);
                            d && a.set(d);
                            var k = new Float32Array(b * e),
                                g = 1 / ((c.extent.xmax - c.extent.xmin) / b),
                                l = 1 / ((c.extent.ymax - c.extent.ymin) / e),
                                m,
                                p,
                                r,
                                u,
                                t,
                                q,
                                v,
                                C,
                                z,
                                y,
                                x;
                            for (m = 1; m < e - 1; m++)
                                for ((r = m * b), (p = 1); p < b - 1; p++)
                                    if (d && !d[r + p]) k[r + p] = 0;
                                    else {
                                        u = 0;
                                        if (
                                            d &&
                                            ((u =
                                                d[r - b + p - 1] +
                                                d[r - b + p] +
                                                d[r - b + p + 1] +
                                                d[r + p - 1] +
                                                d[r + p + 1] +
                                                d[r + b + p - 1] +
                                                d[r + b + p] +
                                                d[r + b + p + 1]), 7 > u)
                                        ) {
                                            k[r + p] = 0;
                                            a[r + p] = 0;
                                            continue;
                                        }
                                        7 === u ?
                                            ((u = d[r - b + p - 1] ?
                                                h[r - b + p - 1] :
                                                h[r + p]), (t = d[r - b + p] ?
                                                h[r - b + p] :
                                                h[r + p]), (q = d[r - b + p + 1] ?
                                                h[r - b + p + 1] :
                                                h[r + p]), (v = d[r + p - 1] ?
                                                h[r + p - 1] :
                                                h[r + p]), (C = d[r + p + 1] ?
                                                h[r + p + 1] :
                                                h[r + p]), (z = d[r + b + p - 1] ?
                                                h[r + b + p - 1] :
                                                h[r + p]), (y = d[r + b + p] ?
                                                h[r + b + p] :
                                                h[r + p]), (x = d[r + b + p + 1] ?
                                                h[r + b + p + 1] :
                                                h[r + p])) :
                                            ((u = h[r - b + p - 1]), (t = h[r - b + p]), (q =
                                                h[r - b + p + 1]), (v = h[r + p - 1]), (C =
                                                h[r + p + 1]), (z = h[r + b + p - 1]), (y =
                                                h[r + b + p]), (x = h[r + b + p + 1]));
                                        v = (q + C + C + x - (u + v + v + z)) * g;
                                        u = (z + y + y + x - (u + t + t + q)) * l;
                                        0 === v && 0 === u ?
                                            (u = -1) :
                                            ((u = 90 - 57.29578 * Math.atan2(u, -v)), 0 > u &&
                                                (u += 360), 360 === u ?
                                                (u = 0) :
                                                360 < u && (u %= 360));
                                        k[r + p] = u;
                                    }
                            for (m = 0; m < e; m++)
                                (k[m * b] = k[m * b + 1]), (k[(m + 1) * b - 1] =
                                    k[(m + 1) * b - 2]);
                            for (m = 1; m < b - 1; m++)
                                (k[m] = k[m + b]), (k[m + (e - 1) * b] = k[m + (e - 2) * b]);
                            f.pixelType = 'F32';
                            f.pixels = [k];
                            f.statistics = {
                                minValue: 0,
                                maxValue: 360,
                            };
                            d && (f.mask = a);
                            return { extent: c.extent, pixelBlock: f };
                        }
                    },
                    _clonePixelBlock: function(g) {
                        return g.clone ? g.clone() : c.clone(g);
                    },
                };
            });
        },
        'esri/layers/rasterLib/function/BandArithmeticFunction': function() {
            define(
                'dojo/_base/declare dojo/_base/lang ./RasterFunctionX ../../PixelBlock ./pixelShaders ./RasterFunctionWebGLMixin ./rasterIndex'.split(
                    ' '
                ),
                function(c, g, f, b, e, h, d) {
                    return c([f, h], {
                        declaredClass: 'esri.layers.rasterLib.function.BandArithmeticFunction',
                        functionName: 'BandArithmetic',
                        supportWebGL: !0,
                        support2D: !0,
                        constructor: function(a) {
                            this.functionArguments = this.mixinIgnoreCase({ method: 1, bandIndexes: '', raster: null },
                                a
                            );
                        },
                        bind: function(a) {
                            a = this.getSourceRasterInfo(a);
                            if (!a.raster)
                                return Error(
                                    'The raster input to band arithmetic function is invalid.'
                                );
                            this.rasterInfo = g.mixin(a.raster, {
                                bandCount: 8 === this.functionArguments.method ?
                                    a.raster.bandCount :
                                    1,
                                pixelType: this._calculatePixelType(this.pixelType, 'F32'),
                                statistics: null,
                                histograms: null,
                            });
                            this.rasterInfo.keyProperties = this.rasterInfo
                                .keyProperties || {};
                            this.rasterInfo.keyProperties.DataType = 'Generic';
                            return !0;
                        },
                        read2D: function(a) {
                            this._performance.start();
                            a = a.raster;
                            var b = d.calculate(a.pixelBlock, {
                                bandIndexes: this.functionArguments.bandIndexes,
                                method: this.functionArguments.method,
                            });
                            this._addPerformanceMetric(this._performance.elapsed());
                            'Unknown' !== this.pixelType && (b.pixelType = this.pixelType);
                            return { extent: a.extent, pixelBlock: b };
                        },
                        readGL: function(a) {
                            this._performance.start();
                            this._initializeProgram({
                                fragment: e.bandArithmetic,
                                fragmentName: 'bandArithmetic',
                            });
                            var b = this.functionArguments.bandIndexes
                                .trim()
                                .split(' ')
                                .map(function(a) {
                                    return parseInt(a, 10);
                                });
                            this._infraredBandID = b[0] - 1;
                            this._visibleBandID = b[1] - 1;
                            this._alterBand = 2 <
                                Math.max(this._infraredBandID, this._visibleBandID) ?
                                !0 :
                                !1;
                            a = this._setupTextureData(
                                a.raster,
                                this._alterBand && 2 == b.length ?
                                {
                                    bandIDs: [
                                        this._infraredBandID,
                                        this._visibleBandID,
                                        this._infraredBandID,
                                    ],
                                } :
                                { bandIDs: [b[0] - 1, b[1] - 1, b[2] - 1] }
                            );
                            var d = this.bindFrameBuffer(),
                                c = this.functionArguments.method,
                                h = 2 < b.length ? b.slice(2) : null;
                            this._alterBand ?
                                this._setUniforms({
                                    u_method: c,
                                    u_bandId_nir: 0,
                                    u_bandId_red: 1,
                                    u_constants: h,
                                }) :
                                this._setUniforms({
                                    u_method: c,
                                    u_bandId_nir: b[0] - 1,
                                    u_bandId_red: b[1] - 1,
                                    u_constants: h,
                                });
                            this._bindTexture(a.texture, 'u_image');
                            this._drawGL();
                            this._addPerformanceMetric(this._performance.elapsed());
                            return { extent: a.extent, texture: d.texture };
                        },
                    });
                }
            );
        },
        'esri/layers/rasterLib/function/rasterIndex': function() {
            define(['dojo/_base/lang'], function(c) {
                return {
                    calculate: function(c, f) {
                        if (c && c.pixels && c.pixels.length) {
                            var b = f && f.bandIndexes;
                            f = f && f.method;
                            var e = b
                                .trim()
                                .split(' ')
                                .map(function(a) {
                                    return parseInt(a, 10);
                                })
                                .filter(function(a) {
                                    return null != a;
                                });
                            c = this._clonePixelBlock(c);
                            var h = c.pixels,
                                d = c.mask;
                            switch (f) {
                                case 1:
                                    h = this._calculateNDVI(d, h[e[0] - 1], h[e[1] - 1]);
                                    break;
                                case 2:
                                    h = this._calculateSAVI(d, h[e[0] - 1], h[e[1] - 1], e[2]);
                                    break;
                                case 3:
                                    h = this._calculateTSAVI(
                                        d,
                                        h[e[0] - 1],
                                        h[e[1] - 1],
                                        e[2],
                                        e[3],
                                        e[4]
                                    );
                                    break;
                                case 4:
                                    h = this._calculateMSAVI(d, h[e[0] - 1], h[e[1] - 1]);
                                    break;
                                case 5:
                                    h = this._calculateGEMI(d, h[e[0] - 1], h[e[1] - 1]);
                                    break;
                                case 6:
                                    h = this._calculatePVI(
                                        d,
                                        h[e[0] - 1],
                                        h[e[1] - 1],
                                        e[2],
                                        e[3]
                                    );
                                    break;
                                case 7:
                                    h = this._calculateGVITM(
                                        d,
                                        h[e[0] - 1],
                                        h[e[1] - 1],
                                        h[e[2] - 1],
                                        h[e[3] - 1],
                                        h[e[4] - 1],
                                        h[e[5] - 1]
                                    );
                                    break;
                                case 8:
                                    h = this._calculateSultan(
                                        d,
                                        h[e[0] - 1],
                                        h[e[1] - 1],
                                        h[e[2] - 1],
                                        h[e[3] - 1],
                                        h[e[4] - 1],
                                        h[e[5] - 1]
                                    );
                                    break;
                                case 9:
                                    h = this._calculateVARI(
                                        d,
                                        h[e[0] - 1],
                                        h[e[1] - 1],
                                        h[e[2] - 1]
                                    );
                                    break;
                                case 0:
                                    h = this._calculateUserDefined(d, h, b);
                            }
                            c.pixels = h;
                            c.pixelType = 'F32';
                            c.calculateStatistics();
                            return c;
                        }
                    },
                    _clonePixelBlock: function(g) {
                        return g.clone ? g.clone() : c.clone(g);
                    },
                    _parseUserDefined: function(c, f) {
                        c = c.replace(' ', '');
                        0 === c.indexOf('-') && (c = '0' + c);
                        0 === c.indexOf('+') && (c = c.slice(1, c.length));
                        c = c.split('');
                        var b = [],
                            e = [],
                            h = '+-*/()'.split(''),
                            d, a = '',
                            k;
                        for (d = 0; d < c.length; d++)
                            (k = c[d]), h.some(function(a) {
                                return a === k;
                            }) ?
                            ('' !== a && e.push(parseFloat(a)), b.push(k), (a = '')) :
                            'b' === k.toLowerCase() ?
                            (d++, (a = k.concat(c[d])), e.push(
                                f[parseInt(a[1], 10) - 1]
                            ), (a = '')) :
                            ((a = a.concat(k)), d === c.length - 1 &&
                                e.push(parseFloat(a)));
                        return { ops: b, nums: e };
                    },
                    _op: function(c, f, b, e) {
                        if (b.constructor === Number && e.constructor === Number)
                            return b + e;
                        var h, d, a;
                        if (b.constructor === Number)
                            for (
                                (h = e.length), (d = b), (b = new Float32Array(h)), (a = 0); a < h; a++
                            )
                                b[a] = d;
                        else if (((h = b.length), e.constructor === Number))
                            for ((d = e), (e = new Float32Array(h)), (a = 0); a < h; a++)
                                e[a] = d;
                        d = new Float32Array(h);
                        if (null == c)
                            if ('+' === f)
                                for (a = 0; a < h; a++) d[a] = b[a] + e[a];
                            else if ('-' === f)
                            for (a = 0; a < h; a++) d[a] = b[a] - e[a];
                        else if ('*' === f)
                            for (a = 0; a < h; a++) d[a] = b[a] * e[a];
                        else {
                            if ('/' === f)
                                for (a = 0; a < h; a++) d[a] = b[a] / e[a];
                        } else if ('+' === f)
                            for (a = 0; a < h; a++)
                                c[a] && (d[a] = b[a] + e[a]);
                        else if ('-' === f)
                            for (a = 0; a < h; a++)
                                c[a] && (d[a] = b[a] - e[a]);
                        else if ('*' === f)
                            for (a = 0; a < h; a++)
                                c[a] && (d[a] = b[a] * e[a]);
                        else if ('/' === f)
                            for (a = 0; a < h; a++)
                                c[a] && (d[a] = b[a] / e[a]);
                        return d;
                    },
                    _shrinkOp: function(c, f) {
                        c.splice(f, 1);
                        var b = (f = 0),
                            e = 0;
                        do {
                            for (f = e = b = 0; f < c.length; f++)
                                if ('(' === c[f]) b = f;
                                else if (')' === c[f]) {
                                e = f;
                                break;
                            }
                            e === b + 1 && c.splice(b, 2);
                        } while (e === b + 1);
                        return c;
                    },
                    _getPriorityOpIndex: function(c, f) {
                        if (1 === c.length) return { opIndex: 0, numIndex: 0 };
                        var b = (f = 0),
                            e = 0,
                            h = -1,
                            d = 0,
                            a;
                        for (f = 0; f < c.length; f++)
                            if ('(' === c[f]) b = f;
                            else if (')' === c[f]) {
                            e = f;
                            break;
                        }
                        a = 0 === e ? c : c.slice(b + 1, e);
                        for (f = 0; f < a.length; f++)
                            if ('*' === a[f] || '/' === a[f]) {
                                h = f;
                                break;
                            }
                        if (!(-1 < h))
                            for (f = 0; f < a.length; f++)
                                if ('+' === a[f] || '-' === a[f]) {
                                    h = f;
                                    break;
                                }
                        0 < e && (h += b + 1);
                        for (f = 0; f < h; f++)
                            '(' === c[f] && d++;
                        return { opIndex: h, numIndex: h - d };
                    },
                    _calculateUserDefined: function(c, f, b) {
                        f = this._parseUserDefined(b, f);
                        b = f.ops;
                        for (
                            var e = f.nums, h, d, a; 0 < b.length &&
                            ((f = this._getPriorityOpIndex(b, e)), (h = b[f.opIndex]), (d =
                                e[f.numIndex]), (a = e[f.numIndex + 1]), (h = this._op(
                                c,
                                h,
                                d,
                                a
                            )), 1 !== b.length);

                        )
                            (b = this._shrinkOp(b, f.opIndex)), e.splice(f.numIndex, 2, h);
                        return [h];
                    },
                    _calculateNDVI: function(c, f, b) {
                        var e = b.length,
                            h = new Float32Array(e),
                            d, a, k;
                        if (null == c)
                            for (d = 0; d < e; d++)
                                (a = b[d]), (k = f[d]), (h[d] = (k - a) / (k + a));
                        else
                            for (d = 0; d < e; d++)
                                c[d] && ((a = b[d]), (k = f[d]), (h[d] = (k - a) / (k + a)));
                        return [h];
                    },
                    _calculateSAVI: function(c, f, b, e) {
                        var h = b.length,
                            d = new Float32Array(h),
                            a, k, g;
                        if (null == c)
                            for (a = 0; a < h; a++)
                                (k = b[a]), (g = f[a]), (d[a] =
                                    (g - k) / (g + k + e) * (1 + e));
                        else
                            for (a = 0; a < h; a++)
                                c[a] &&
                                ((k = b[a]), (g = f[a]), (d[a] =
                                    (g - k) / (g + k + e) * (1 + e)));
                        return [d];
                    },
                    _calculateTSAVI: function(c, f, b, e, h, d) {
                        var a = b.length,
                            k = new Float32Array(a),
                            g,
                            l,
                            m = -h * e + d * (1 + e * e);
                        if (null == c)
                            for (d = 0; d < a; d++)
                                (g = b[d]), (l = f[d]), (k[d] =
                                    e * (l - e * g - h) / (h * l + g + m));
                        else
                            for (d = 0; d < a; d++)
                                c[d] &&
                                ((g = b[d]), (l = f[d]), (k[d] =
                                    e * (l - e * g - h) / (h * l + g + m)));
                        return [k];
                    },
                    _calculateMSAVI: function(c, f, b) {
                        var e = b.length,
                            h = new Float32Array(e),
                            d, a, k;
                        if (null == c)
                            for (d = 0; d < e; d++)
                                (a = b[d]), (k = f[d]), (h[d] =
                                    0.5 *
                                    (2 * (k + 1) -
                                        Math.sqrt(Math.pow(2 * k + 1, 2) - 8 * (k - a))));
                        else
                            for (d = 0; d < e; d++)
                                c[d] &&
                                (h[d] =
                                    0.5 *
                                    (2 * (k + 1) -
                                        Math.sqrt(Math.pow(2 * k + 1, 2) - 8 * (k - a))));
                        return [h];
                    },
                    _calculateGEMI: function(c, f, b) {
                        var e = b.length,
                            h = new Float32Array(e),
                            d, a, k;
                        if (null == c)
                            for (d = 0; d < e; d++)
                                (a = b[d]), (k = f[d]), (k =
                                    (2 * (k * k - a * a) + 1.5 * k + 0.5 * a) /
                                    (k + a + 0.5)), (h[d] =
                                    k * (1 - 0.25 * k) - (a - 0.125) / (1 - a));
                        else
                            for (d = 0; d < e; d++)
                                c[d] &&
                                ((a = b[d]), (k = f[d]), (k =
                                    (2 * (k * k - a * a) + 1.5 * k + 0.5 * a) /
                                    (k + a + 0.5)), (h[d] =
                                    k * (1 - 0.25 * k) - (a - 0.125) / (1 - a)));
                        return [h];
                    },
                    _calculatePVI: function(c, f, b, e, h) {
                        var d = b.length,
                            a = new Float32Array(d),
                            k,
                            g,
                            l,
                            m = Math.sqrt(1 + e * e);
                        if (null == c)
                            for (k = 0; k < d; k++)
                                (g = b[k]), (l = f[k]), (a[k] = (l - e * g - h) / m);
                        else
                            for (k = 0; k < d; k++)
                                c[k] && ((g = b[k]), (l = f[k]), (a[k] = (l - e * g - h) / m));
                        return [a];
                    },
                    _calculateGVITM: function(c, f, b, e, h, d, a) {
                        var k = f.length,
                            g = new Float32Array(k),
                            l;
                        if (null == c)
                            for (l = 0; l < k; l++)
                                g[l] = -0.2848 * f[l] -
                                0.2435 * b[l] -
                                0.5436 * e[l] +
                                0.7243 * h[l] +
                                0.084 * d[l] -
                                1.18 * a[l];
                        else
                            for (l = 0; l < k; l++)
                                c[l] &&
                                (g[l] = -0.2848 * f[l] -
                                    0.2435 * b[l] -
                                    0.5436 * e[l] +
                                    0.7243 * h[l] +
                                    0.084 * d[l] -
                                    1.18 * a[l]);
                        return [g];
                    },
                    _calculateSultan: function(c, f, b, e, h, d, a) {
                        b = f.length;
                        var k = new Float32Array(b),
                            g = new Float32Array(b),
                            l = new Float32Array(b),
                            m;
                        if (null == c)
                            for (m = 0; m < b; m++)
                                (k[m] = d[m] / a[m] * 100), (g[m] = d[m] / f[m] * 100), (l[m] =
                                    e[m] / h[m] * (d[m] / h[m]) * 100);
                        else
                            for (m = 0; m < b; m++)
                                c[m] &&
                                ((k[m] = d[m] / a[m] * 100), (g[m] = d[m] / f[m] * 100), (l[
                                        m
                                    ] =
                                    e[m] / h[m] * (d[m] / h[m]) * 100));
                        return [k, g, l];
                    },
                    _calculateVARI: function(c, f, b, e) {
                        var h = f.length,
                            d = new Float32Array(h),
                            a, k, g, l;
                        if (null == c)
                            for (a = 0; a < h; a++)
                                (k = f[a]), (g = b[a]), (l = e[a]), (d[a] =
                                    (g - k) / (g + k - l));
                        else
                            for (a = 0; a < h; a++)
                                if (c[a])
                                    for (a = 0; a < h; a++)
                                        (k = f[a]), (g = b[a]), (l = e[a]), (d[a] =
                                            (g - k) / (g + k - l));
                        return [d];
                    },
                };
            });
        },
        'esri/layers/rasterLib/function/ColormapFunction': function() {
            define(
                'dojo/_base/declare dojo/_base/lang ../../../renderers/colorRampGenerator ./RasterFunctionX ./pixelShaders ./RasterFunctionWebGLMixin ./rasterUtils'.split(
                    ' '
                ),
                function(c, g, f, b, e, h, d) {
                    return c([b, h], {
                        declaredClass: 'esri.layers.rasterLib.function.ColormapFunction',
                        functionName: 'Colormap',
                        pixelType: 'U8',
                        renderTexture: !1,
                        supportWebGL: !0,
                        support2D: !0,
                        constructor: function(a) {
                            this.functionArguments = this.mixinIgnoreCase({
                                    colormap: null,
                                    colorRampName: null,
                                    colorRamp: null,
                                    colorMapName: null,
                                    raster: null,
                                },
                                a
                            );
                            this.invert = a && a.invert;
                            a = a.colormap || a.Colormap;
                            var b, d, c, e, h, f, g;
                            if (a) {
                                if (a.features || a[0].attributes) {
                                    a = a.features || a;
                                    b = Object.keys(a[0].attributes);
                                    c = b.filter(function(a) {
                                        return 'alpha' === a.toLowerCase();
                                    })[0];
                                    d = b.filter(function(a) {
                                        return 'value' === a.toLowerCase();
                                    })[0];
                                    e = b.filter(function(a) {
                                        return 'red' === a.toLowerCase();
                                    })[0];
                                    h = b.filter(function(a) {
                                        return 'green' === a.toLowerCase();
                                    })[0];
                                    f = b.filter(function(a) {
                                        return 'blue' === a.toLowerCase();
                                    })[0];
                                    if (!(d && e && h && f)) throw 'invalid colormap';
                                    a = a.map(function(a) {
                                        return c ?
                                            [
                                                a.attributes[d],
                                                a.attributes[e],
                                                a.attributes[h],
                                                a.attributes[f],
                                                a.attributes[c],
                                            ] :
                                            [
                                                a.attributes[d],
                                                a.attributes[e],
                                                a.attributes[h],
                                                a.attributes[f],
                                            ];
                                    });
                                    g =
                                        1.1 >
                                        Math.max.apply(
                                            null,
                                            a.map(function(a) {
                                                return a[1];
                                            })
                                        );
                                    b =
                                        c &&
                                        1.1 >
                                        Math.max.apply(
                                            null,
                                            a.map(function(a) {
                                                return a[4];
                                            })
                                        );
                                    if (g)
                                        for (g = 0; g < a.length; g++)
                                            (a[g][1] = Math.round(255 * a[g][1])), (a[
                                                g
                                            ][2] = Math.round(255 * a[g][2])), (a[
                                                g
                                            ][3] = Math.round(255 * a[g][3])), b &&
                                            (a[g][4] = Math.round(255 * a[g][4]));
                                }
                                this.functionArguments.colormap = this._sortClr(a);
                            }
                            this._initialize();
                        },
                        bind: function(a) {
                            this._initialize();
                            a = this.getSourceRasterInfo(a);
                            if (!a.raster || 'F32' === a.raster.pixelType)
                                return Error(
                                    'The raster input to colormap function is invalid. It must be integer type.'
                                );
                            this.rasterInfo = g.mixin(a.raster, {
                                bandCount: 3,
                                pixelType: this._calculatePixelType(this.pixelType, 'U8'),
                                statistics: null,
                                histograms: null,
                            });
                            this.rasterInfo.keyProperties = this.rasterInfo
                                .keyProperties || {};
                            this.rasterInfo.keyProperties.DataType = 'Processed';
                            return !0;
                        },
                        read2D: function(a) {
                            return this._colorize(a.raster);
                        },
                        readGL: function(a) {
                            return this._colorizeGL(a.raster);
                        },
                        _colorize: function(a) {
                            this._performance.start();
                            var b = d.colorize(a.pixelBlock, {
                                indexedColormap: this._indexedColormap,
                                indexedColormapOffset: this._indexedColormapOffset,
                                indexed2DColormap: this._indexed2DColormap,
                                alphaSpecified: this._alphaSpecified,
                            });
                            this._addPerformanceMetric(this._performance.elapsed());
                            return { extent: a.extent, pixelBlock: b };
                        },
                        _binarySearchClr: function(a, b) {
                            for (var d = 0, c = a.length - 1, e = 0, k = 0; d < c;)
                                if (((e = Math.floor((d + c) / 2)), (k = a[e]), k[0] < b))
                                    d = e;
                                else if (k[0] > b) c = e;
                            else return k.slice(1);
                            return null;
                        },
                        _sortClr: function(a, b) {
                            var d, c, e = [];
                            for (d = 0; d < a.length; d++)
                                e.push(a[d]);
                            for (d = 0; d < e.length - 1; d++)
                                for ((c = e[d]), (a = d + 1); a < e.length; a++)
                                    c[0] > e[a][0] && ((c = e[a]), (e[a] = e[d]), (e[d] = c));
                            if (b)
                                for (d = 0; d < e.length / 2; d++)
                                    (c = e[d]), (e[e.length - 1 - d] = e[d]), (e[d] = c);
                            return e;
                        },
                        _invertColorRamp: function(a) {
                            if (!a) return a;
                            var b = { type: a.type };
                            'random' === a.type ?
                                (b = a) :
                                'multipart' === a.type ?
                                (b.colorRamps = a.colorRamps
                                    .map(function(a) {
                                        return { fromColor: a.toColor, toColor: a.fromColor };
                                    })
                                    .reverse()) :
                                ((b.fromColor = a.toColor), (b.toColor = a.fromColor));
                            return b;
                        },
                        _initialize: function() {
                            this._indexedColormapOffset = 0;
                            if (this.functionArguments.colormap) {
                                var a = d.buildIndexedColormap(
                                    this.functionArguments.colormap
                                );
                                this._alphaSpecified = a && a.alphaSpecified;
                                this._indexedColormap = a && a.indexedColormap;
                                this._indexedColormapOffset = a && a.offset;
                                this._indexedColormap ||
                                    (this._indexed2DColormap = this._getIndexed2DColormap());
                            } else
                                this.functionArguments.colorRamp ?
                                (this._indexedColormap = 'multipart' ===
                                    this.functionArguments.colorRamp.type ?
                                    this.invert ?
                                    f.createMultiPartColorRamp(
                                        this._invertColorRamp(
                                            this.functionArguments.colorRamp
                                        )
                                    ) :
                                    f.createMultiPartColorRamp(
                                        this.functionArguments.colorRamp
                                    ) :
                                    this.invert ?
                                    f.createAlgorithmicColorRamp(
                                        this._invertColorRamp(
                                            this.functionArguments.colorRamp
                                        )
                                    ) :
                                    f.createAlgorithmicColorRamp(
                                        this.functionArguments.colorRamp
                                    )) :
                                this.functionArguments.colormapName &&
                                'random' ===
                                this.functionArguments.colormapName.toLowerCase() &&
                                (this._indexedColormap = f.createRandomColorRamp());
                        },
                        _getIndexed2DColormap: function() {
                            var a = this.functionArguments.colormap;
                            if (!a) return null;
                            var b = 0;
                            0 > a[0][0] && (b = a[0][0]);
                            var d = [],
                                c = 5 === a[0].length,
                                e;
                            for (e = 0; e < a.length; e++)
                                d[a[e][0] - b] = c ?
                                a[e].slice(1) :
                                a[e].slice(1).concat([255]);
                            return d;
                        },
                        _colorizeGL: function(a) {
                            this._performance.start();
                            this._initializeProgram({
                                fragment: e.colormap,
                                fragmentName: 'Colormap',
                            });
                            var b = this._indexedColormap,
                                d = this._indexedColormapOffset;
                            this._clrTexture ||
                                (this._clrTexture = this._setupColormapTexture(b));
                            var c = this._clrTexture,
                                h = this.bindFrameBuffer();
                            a = this._setupTextureData(a);
                            this._setUniforms({
                                u_indexedColormapOffset: d,
                                u_indexedColormapMaxIndex: b.length / 4 - 1,
                            });
                            this._bindTexture(c, 'u_image1');
                            this._bindTexture(a.texture, 'u_image');
                            this._drawGL();
                            return { extent: a.extent, texture: h.texture };
                        },
                        _setupColormapTexture: function(a) {
                            var b = this._createTexture(),
                                d = this.gl,
                                c = a.length / 4,
                                e = new Float32Array(a.length),
                                h,
                                f = this.renderTexture ? 255 : 1;
                            for (h = 0; h < a.length; h++)
                                e[h] = a[h] / f;
                            d.getExtension('OES_texture_float');
                            d.texImage2D(
                                d.TEXTURE_2D,
                                0,
                                d.RGBA,
                                c,
                                1,
                                0,
                                d.RGBA,
                                d.FLOAT,
                                e
                            );
                            return b;
                        },
                    });
                }
            );
        },
        'esri/renderers/colorRampGenerator': function() {
            define(
                ['dojo/_base/declare', 'dojo/_base/lang', '../renderers/colorUtils'],
                function(c, g, f) {
                    return {
                        createAlgorithmicColorRamp: function(b, c) {
                            if (!b) return null;
                            var e = b.fromColor,
                                d = b.toColor;
                            if (!e || !d) return null;
                            void 0 === e.r &&
                                3 <= e.length &&
                                (e = { r: e[0], g: e[1], b: e[2] });
                            void 0 === d.r &&
                                3 <= d.length &&
                                (d = { r: d[0], g: d[1], b: d[2] });
                            var a = b.size || 256;
                            b = b.algorithm || 'cie-lab';
                            var k;
                            if (-1 < b.toLowerCase().indexOf('hsv')) {
                                k = f.toHSV(e);
                                var d = f.toHSV(d),
                                    a = a || 256,
                                    g = 0 === k.s,
                                    l = 0 === d.s,
                                    e = k.h;
                                b = d.h;
                                g && !l ? (e = k.h = b) : l && !g && (b = d.h = e);
                                g = Math.abs(b - e);
                                180 > g ?
                                    (b = (b - e) / (a - 1)) :
                                    ((g = 360 - g), (b = e > b ? g / (a - 1) : -g / (a - 1)));
                                var g = (d.s - k.s) / (a - 1),
                                    l = (d.v - k.v) / (a - 1),
                                    m = k.s;
                                k = k.v;
                                var p, r, u = new Uint8Array(4 * a);
                                for (p = 0; p < a - 1; p++)
                                    (r = f.toRGB({ h: e, s: m, v: k })), (u[4 * p] = r.r), (u[
                                            4 * p + 1
                                        ] =
                                        r.g), (u[4 * p + 2] = r.b), (u[
                                        4 * p + 3
                                    ] = 255), (e += b), (m += g), (k += l), 360 < e ?
                                    (e -= 360) :
                                    0 > e && (e += 360);
                                r = f.toRGB(d);
                                u[4 * (a - 1)] = r.r;
                                u[4 * (a - 1) + 1] = r.g;
                                u[4 * (a - 1) + 2] = r.b;
                                u[4 * (a - 1) + 3] = 255;
                                k = u;
                            } else if (-1 < b.toLowerCase().indexOf('lch')) {
                                m = f.toLCH(e);
                                d = f.toLCH(d);
                                a = a || 256;
                                k = (d.l - m.l) / (a - 1);
                                e = (d.c - m.c) / (a - 1);
                                b = (d.h - m.h) / (a - 1);
                                g = m.l;
                                l = m.c;
                                m = m.h;
                                u = new Uint8Array(4 * a);
                                for (p = 0; p < a - 1; p++)
                                    (r = f.toRGB({ l: g, c: l, h: m })), (u[4 * p] = r.r), (u[
                                            4 * p + 1
                                        ] =
                                        r.g), (u[4 * p + 2] = r.b), (u[
                                        4 * p + 3
                                    ] = 255), (g += k), (l += e), (m += b);
                                r = f.toRGB(d);
                                u[4 * (a - 1)] = r.r;
                                u[4 * (a - 1) + 1] = r.g;
                                u[4 * (a - 1) + 2] = r.b;
                                u[4 * (a - 1) + 3] = 255;
                                k = u;
                            } else if (-1 < b.toLowerCase().indexOf('lab')) {
                                m = f.toLAB(e);
                                d = f.toLAB(d);
                                a = a || 256;
                                k = (d.l - m.l) / (a - 1);
                                e = (d.a - m.a) / (a - 1);
                                b = (d.b - m.b) / (a - 1);
                                g = m.l;
                                l = m.a;
                                m = m.b;
                                u = new Uint8Array(4 * a);
                                for (p = 0; p < a - 1; p++)
                                    (r = f.toRGB({ l: g, a: l, b: m })), (u[4 * p] = r.r), (u[
                                            4 * p + 1
                                        ] =
                                        r.g), (u[4 * p + 2] = r.b), (u[
                                        4 * p + 3
                                    ] = 255), (g += k), (l += e), (m += b);
                                r = f.toRGB(d);
                                u[4 * (a - 1)] = r.r;
                                u[4 * (a - 1) + 1] = r.g;
                                u[4 * (a - 1) + 2] = r.b;
                                u[4 * (a - 1) + 3] = 255;
                                k = u;
                            }
                            if (c && !1 === c.flattened)
                                for ((c = k), (k = []), (d = 0); d < k / 4; d++)
                                    k[d] = c.slice(4 * d, 4 * d + 4);
                            return k;
                        },
                        createMultiPartColorRamp: function(b, c) {
                            if (!b) return null;
                            c = (c && g.clone(c)) || { flattened: !0 };
                            var e = b.colorRamps;
                            if (!e || 0 === e.length) return null;
                            var d = b.size || 256;
                            b = Math.max(Math.floor(d / e.length), 3);
                            var a = Math.max(b, d - (e.length - 1) * b),
                                k = !1 !== c.flattened;
                            c.flattened = !0;
                            for (
                                var d = (e.length - 1) * b + a,
                                    f,
                                    l = new Uint8Array(4 * d),
                                    d = 0; d < e.length; d++
                            )
                                (f = {
                                    fromColor: e[d].fromColor,
                                    toColor: e[d].toColor,
                                    size: d === e.length - 1 ? a : b,
                                }), l instanceof Array ?
                                l.concat(this.createAlgorithmicColorRamp(f, c)) :
                                l.set(this.createAlgorithmicColorRamp(f, c), b * d * 4);
                            if (!k)
                                for ((c = l), (l = []), (d = 0); d < l / 4; d++)
                                    l[d] = c.slice(4 * d, 4 * d + 4);
                            return l;
                        },
                        createRandomColorRamp: function(b) {
                            b = b || {};
                            var c = b.size || 256,
                                h = !1 === b.flattened,
                                d;
                            d = h ? new Uint8Array(4 * c) : [];
                            for (b = 0; b < c; b++)
                                h ?
                                ((d[4 * b] = Math.round(255 * Math.random())), (d[
                                    4 * b + 1
                                ] = Math.round(255 * Math.random())), (d[
                                    4 * b + 2
                                ] = Math.round(255 * Math.random())), (d[
                                    4 * b + 3
                                ] = 255)) :
                                (d[b] = [
                                    Math.round(255 * Math.random()),
                                    Math.round(255 * Math.random()),
                                    Math.round(255 * Math.random()),
                                    255,
                                ]);
                            return d;
                        },
                    };
                }
            );
        },
        'esri/layers/rasterLib/function/rasterUtils': function() {
            define(['dojo/_base/lang'], function(c) {
                return {
                    mask: function(c, f) {
                        if (c && c.pixels && c.pixels.length) {
                            c = this._clonePixelBlock(c);
                            var b = f.includedRanges,
                                e = f.noDataInterpretation;
                            f = f.noDataValues;
                            if (null === b && null === f) return c;
                            var h = c.pixels,
                                d = c.mask,
                                a = c.width * c.height,
                                k = h.length,
                                g;
                            if (null !== f && f.length !== k)
                                throw 'expect ' + k + ' elements in noDataValues';
                            if (null !== b && b.length !== 2 * k)
                                throw 'expect ' + 2 * k + ' elements in IncludeRanges';
                            var l, m, p, r, u;
                            if (null == d) {
                                d = new Uint8Array(a);
                                for (g = 0; g < a; g++)
                                    d[g] = 1;
                                c.mask = d;
                            }
                            if (0 === e)
                                for (e = 0; e < k; e++)
                                    if (
                                        ((p = h[e]), (l = null === b ?
                                            null :
                                            b[2 * e]), (m = null === b ?
                                            null :
                                            b[2 * e + 1]), (r = null === f ?
                                            null :
                                            parseFloat(f[e])), null === l || null === m)
                                    )
                                        for (g = 0; g < a; g++)
                                            d[g] && ((u = p[g]), u === r && (d[g] = 0));
                                    else if (null === r)
                                for (g = 0; g < a; g++)
                                    d[g] && ((u = p[g]), u < l || u > m) && (d[g] = 0);
                            else
                                for (g = 0; g < a; g++)
                                    d[g] &&
                                    ((u = p[g]), u < l || u > m || u === r) &&
                                    (d[g] = 0);
                            else {
                                var t = new Uint8Array(a);
                                for (g = 0; g < a; g++)
                                    t[g] = d[g];
                                for (e = 0; e < k; e++)
                                    if (
                                        ((p = h[e]), (l = null === b ?
                                            null :
                                            b[2 * e]), (m = null === b ?
                                            null :
                                            b[2 * e + 1]), (r = null === f ?
                                            null :
                                            parseFloat(f[e])), null === l || null === m)
                                    )
                                        for (g = 0; g < a; g++)
                                            t[g] && ((u = p[g]), u !== r && (t = 0));
                                    else if (null === r)
                                    for (g = 0; g < a; g++)
                                        t[g] && ((u = p[g]), u <= l && u <= m && (t = 0));
                                else
                                    for (g = 0; g < a; g++)
                                        t[g] &&
                                        ((u = p[g]), u <= l && u <= m && u !== r && (t = 0));
                                for (g = 0; g < a; g++)
                                    d[g] && t[g] && (d[g] = 0);
                            }
                            return c;
                        }
                    },
                    calculateStatisticsHistograms: function(c, f) {
                        c = this._clonePixelBlock(c);
                        f = c.pixelType;
                        var b = c.pixels,
                            e = c.mask,
                            h = b.length,
                            d,
                            a,
                            k,
                            g,
                            l = [],
                            m,
                            p,
                            r,
                            u,
                            t;
                        for (k = 0; k < h; k++) {
                            m = {
                                min: -0.5,
                                max: 255.5,
                                size: 256,
                                counts: new Uint32Array(256),
                            };
                            p = m.counts;
                            u = b[k];
                            if ('U8' === f)
                                if (e)
                                    for (g = 0; g < c.width * c.height; g++)
                                        e[g] && p[u[g]]++;
                                else
                                    for (g = 0; g < c.width * c.height; g++) p[u[g]]++;
                            else {
                                d = c.statistics[k].minValue;
                                a = c.statistics[k].maxValue;
                                m.min = d;
                                m.max = a;
                                a = (a - d) / 256;
                                r = new Uint32Array(257);
                                if (e)
                                    for (g = 0; g < c.width * c.height; g++)
                                        e[g] && r[Math.floor((u[g] - d) / a)]++;
                                else
                                    for (g = 0; g < c.width * c.height; g++)
                                        r[Math.floor((u[g] - d) / a)]++;
                                for (g = 0; 255 > g; g++)
                                    p[g] = r[g];
                                p[255] = r[255] + r[256];
                            }
                            l.push(m);
                            d = c.statistics[k].minValue;
                            a = c.statistics[k].maxValue;
                            for (g = r = t = u = 0; g < m.size; g++)
                                (u += p[g]), (t += g * p[g]);
                            t /= u;
                            for (g = 0; g < m.size; g++)
                                r += p[g] * Math.pow(g - t, 2);
                            p = Math.sqrt(r / (u - 1));
                            g = (t + 0.5) * (m.max - m.min) / m.size + m.min;
                            m = p * (m.max - m.min) / m.size;
                            c.statistics[k] = {
                                min: d,
                                minValue: d,
                                max: a,
                                maxValue: a,
                                mean: g,
                                stddev: m,
                            };
                        }
                        c.histograms = l;
                        return c;
                    },
                    buildIndexedColormap: function(c, f) {
                        if (!c) return null;
                        var b = 0;
                        0 > c[0][0] && (b = c[0][0]);
                        var e = Math.max(256, c[c.length - 1][0] - b);
                        if (65536 < e) return null;
                        var h = new Uint8Array(4 * e),
                            d = [],
                            a = 0,
                            k = 5 === c[0].length;
                        if (f)
                            for ((d = c[a]), (f = d[0] - b); f < e; f++)
                                (h[4 * f] = d[1]), (h[4 * f + 1] = d[2]), (h[4 * f + 2] =
                                    d[3]), (h[4 * f + 3] = k ? d[4] : 255), f === d[0] - b &&
                                (d = a === c.length - 1 ? d : c[++a]);
                        else
                            for (f = 0; f < c.length; f++)
                                (d = c[f]), (a = 4 * (d[0] - b)), (h[a] = d[1]), (h[a + 1] =
                                    d[2]), (h[a + 2] = d[3]), (h[a + 3] = k ? d[4] : 255);
                        return { indexedColormap: h, offset: b, alphaSpecified: k };
                    },
                    colorize: function(c, f) {
                        if (null !== c && null !== c.pixels) {
                            c = this._clonePixelBlock(c);
                            var b = c.pixels,
                                e = c.width * c.height,
                                h = c.mask,
                                d = f.indexedColormap,
                                a = f.indexedColormapOffset,
                                k = d && d.length - 1,
                                g = f.indexed2DColormap;
                            f = f.alphaSpecified;
                            if (3 <= b.length)
                                throw 'colormap only works on single band image';
                            var l = b[0],
                                m = new Uint8Array(l.length),
                                p = new Uint8Array(l.length),
                                r = new Uint8Array(l.length),
                                u = 0;
                            if (d)
                                if (h)
                                    for (b = 0; b < e; b++)
                                        h[b] &&
                                        ((u = 4 * (l[b] - a)), u < a || u > k ?
                                            (h[b] = 0) :
                                            ((m[b] = d[u]), (p[b] = d[u + 1]), (r[b] =
                                                d[u + 2]), (h[b] = d[u + 3])));
                                else {
                                    h = new Uint8Array(e);
                                    for (b = 0; b < e; b++)
                                        (u = 4 * (l[b] - a)), u < a || u > k ?
                                        (h[b] = 0) :
                                        ((m[b] = d[u]), (p[b] = d[u + 1]), (r[b] =
                                            d[u + 2]), (h[b] = d[u + 3]));
                                    c.mask = h;
                                }
                            else if (h)
                                for (b = 0; b < e; b++)
                                    h[b] &&
                                    ((d = g[l[b]]), (m[b] = d[0]), (p[b] = d[1]), (r[b] =
                                        d[2]), (h[b] = d[3]));
                            else {
                                h = new Uint8Array(e);
                                for (b = 0; b < e; b++)
                                    (d = g[l[b]]), (m[b] = d[0]), (p[b] = d[1]), (r[b] =
                                        d[2]), (h[b] = d[3]);
                                c.mask = h;
                            }
                            c.pixels = [m, p, r];
                            c.statistics = null;
                            c.pixelType = 'U8';
                            c.maskIsAlpha = f;
                            return c;
                        }
                    },
                    convolute: function(c, f) {
                        c = this._clonePixelBlock(c);
                        var b = c.pixels,
                            e = c.width,
                            h = c.height,
                            d = e * h,
                            a = b.length,
                            k,
                            g,
                            l,
                            m,
                            p,
                            r,
                            u = [],
                            t = [],
                            q = f.normalizedKernel,
                            v = f.kernelRows,
                            C = f.kernelCols,
                            z;
                        for (f = 0; f < a; f++) {
                            l = b[f];
                            m = new Float32Array(d);
                            m.set(l);
                            for (p = 1; p < h - 1; p++)
                                for ((z = p * e), (r = 1); r < e - 1; r++) {
                                    for (k = t = 0; k < v; k++)
                                        for (g = 0; g < C; g++)
                                            t += l[z + r + (k - 1) * e + g - 1] * q[k * C + g];
                                    m[z + r] = t;
                                }
                            u.push(m);
                        }
                        c.pixels = u;
                        return c;
                    },
                    contrastBrightnessStretch: function(c, f) {
                        if (null !== c && null !== c.pixels) {
                            c = this._clonePixelBlock(c);
                            var b = c.pixels,
                                e = c.mask,
                                h = c.width * c.height,
                                d = b.length,
                                a;
                            a = f && f.contrastOffset;
                            f = f && f.brightnessOffset;
                            if ('U8' !== c.pixelType)
                                throw 'the contrast and brightness function only supports 8 bit unsigned integer data';
                            var k = this._createContrastBrightnessLUT(a, f);
                            if (null == e)
                                for (a = 0; a < h; a++)
                                    for (f = 0; f < d; f++)
                                        b[f][a] = k[b[f][a]];
                            else
                                for (a = 0; a < h; a++)
                                    if (e[a])
                                        for (f = 0; f < d; f++) b[f][a] = k[b[f][a]];
                            c.pixelType = 'U8';
                            return c;
                        }
                    },
                    isNull: function(c, f) {
                        if (null !== c && null !== c.pixels) {
                            c = this._clonePixelBlock(c);
                            f = c.mask;
                            var b = c.pixels[0],
                                e = b.length,
                                h;
                            if (f) {
                                for (h = 0; h < e; h++)
                                    b[h] = f[h] ? 0 : 1;
                                c.mask = null;
                            } else if (b.fill) b.fill(0);
                            else
                                for (h = 0; h < e; h++) b[h] = 0;
                            return c;
                        }
                    },
                    setNull: function(c) {
                        if (null !== f && null !== f.pixels) {
                            var f = this._clonePixelBlock(c);
                            c = f.mask;
                            var b = f.pixels[0],
                                e = b.length,
                                h;
                            c = c || new Uint8Array(e);
                            for (h = 0; h < e; h++)
                                c[h] = b[h] ? 0 : 1;
                            f.mask = c;
                            return f;
                        }
                    },
                    local: function(c, f) {
                        if (!f) return c[0];
                        var b = f.rasterCountNeeded;
                        f = f.functor;
                        var e = this._clonePixelBlock(c[0]);
                        if (null !== e && null !== e.pixels) {
                            var h = e.width * e.height,
                                d;
                            c = (d = c[1]) && d.pixels[0];
                            var a = d && d.mask,
                                k = e.mask,
                                g = e.pixels[0];
                            if (2 === b)
                                if (!k && a) k = a;
                                else if (k && a)
                                for (d = 0; d < h; d++)
                                    k[d] = k[d] && a[d] ? 1 : 0;
                            e.mask = k;
                            if (1 === b)
                                if (null == k)
                                    for (d = 0; d < h; d++) g[d] = f(g[d]);
                                else
                                    for (d = 0; d < h; d++) k[d] && (g[d] = f(g[d]));
                            else if (2 === b)
                                if (null == k)
                                    for (d = 0; d < h; d++) g[d] = f(g[d], c[d]);
                                else
                                    for (d = 0; d < h; d++) k[d] && (g[d] = f(g[d], c[d]));
                            e.mask = k;
                            e.calculateStatistics();
                            return e;
                        }
                    },
                    remapColor: function(c, f) {
                        c = this._clonePixelBlock(c);
                        var b = c.width * c.height,
                            e = f.length,
                            h = Math.floor(e / 2),
                            d = f[Math.floor(h)],
                            a = f[0].value,
                            k = f[f.length - 1].value,
                            g = c.pixels[0],
                            l,
                            m,
                            p,
                            r,
                            u,
                            t,
                            q = !1,
                            v = new Uint8Array(b),
                            C = new Uint8Array(b),
                            z = new Uint8Array(b),
                            y = c.mask,
                            x = 4 === f[0].mappedColor.length;
                        (y && 0 !== y.length) ||
                        ((y = new Uint8Array(b)), y.fill(x ? 255 : 1), (c.mask = y));
                        for (u = 0; u < b; u++)
                            if (y[u])
                                if (((l = g[u]), l < a || l > k)) v[u] = C[u] = z[u] = y[u] = 0;
                                else {
                                    q = !1;
                                    t = h;
                                    m = d;
                                    p = 0;
                                    for (r = e - 1; 1 < r - p;) {
                                        if (l === m.value) {
                                            q = !0;
                                            break;
                                        }
                                        l > m.value ? (p = t) : (r = t);
                                        t = Math.floor((p + r) / 2);
                                        m = f[Math.floor(t)];
                                    }
                                    q || (m = l === f[r].value ? f[r] : f[p]);
                                    v[u] = m.mappedColor[0];
                                    C[u] = m.mappedColor[1];
                                    z[u] = m.mappedColor[2];
                                    y[u] = m.mappedColor[3];
                                }
                        c.pixels = [v, C, z];
                        c.mask = y;
                        c.pixelType = 'u8';
                        c.maskIsAlpha = x;
                        return c;
                    },
                    _clonePixelBlock: function(g) {
                        if (g.clone) return g.clone();
                        var f = c.clone(g),
                            b, e;
                        if (
                            g.pixels &&
                            g.pixels[0] &&
                            0 < g.pixels[0].length &&
                            !(f.pixels && f.pixels[0] && 0 < f.pixels[0].length)
                        )
                            for ((f.pixels = []), (b = g.pixels.length), (e = 0); e < b; e++)
                                f.pixels[e] = new g.pixels[e].constructor(g.pixels[e]);
                        if (g.statistics)
                            for (
                                (f.statistics = []), (b = g.statistics.length), (e = 0); e < b; e++
                            )
                                f.statistics[e] = c.clone(g.statistics[e]);
                        g.mask && (f.mask = new Uint8Array(g.mask));
                        return f;
                    },
                    _createContrastBrightnessLUT: function(c, f) {
                        if (
                            this._contrastCache &&
                            this._contrastCache.contrastOffset === c &&
                            this._contrastCache.brightnessOffset === f
                        )
                            return this._contrastCache.lut;
                        var b = Math.min(Math.max(c, -100), 100),
                            e = Math.min(Math.max(f, -100), 100),
                            h,
                            d,
                            a = new Uint8Array(256);
                        for (h = 0; 256 > h; h++)
                            0 < b && 100 > b ?
                            (d = (200 * h - 25500 + 510 * e) / (2 * (100 - b)) + 128) :
                            0 >= b && -100 < b ?
                            (d = (200 * h - 25500 + 510 * e) * (100 + b) / 2e4 + 128) :
                            100 === b ?
                            ((d =
                                200 * h -
                                25500 +
                                256 * (100 - b) +
                                510 * e), (d = 0 < d ? 255 : 0)) :
                            -100 === b && (d = 128), (a[h] = 255 < d ?
                                255 :
                                0 > d ? 0 : d);
                        this._contrastCache = {
                            contrastOffset: c,
                            brightnessOffset: f,
                            lut: a,
                        };
                        return a;
                    },
                };
            });
        },
        'esri/layers/rasterLib/function/CompositeBandFunction': function() {
            define(
                'dojo/_base/declare dojo/_base/lang ./RasterFunctionX ../../PixelBlock ./pixelShaders ./RasterFunctionWebGLMixin'.split(
                    ' '
                ),
                function(c, g, f, b, e, h) {
                    return c([f, h], {
                        declaredClass: 'esri.layers.rasterLib.function.CompositeBandFunction',
                        functionName: 'CompositeBand',
                        supportWebGL: !0,
                        support2D: !0,
                        constructor: function(b) {
                            this.functionArguments = this.mixinIgnoreCase({ rasters: null },
                                b
                            );
                        },
                        bind: function(b) {
                            b = this.getSourceRasterInfo(b);
                            if (!b.rasters)
                                return Error(
                                    'The rasters input to composite band function is invalid.'
                                );
                            var a = [],
                                c = [],
                                d = b.rasters.length,
                                e;
                            if (b.rasters[0].statistics)
                                for (e = 0; e < d; e++)
                                    a.push(b.rasters[e].statistics[0]);
                            if (b.rasters[0].histograms)
                                for (e = 0; e < d; e++)
                                    c.push(b.rasters[e].histograms[0]);
                            this.rasterInfo = g.mixin(b.rasters[0], {
                                bandCount: d,
                                pixelType: this._calculatePixelType(
                                    this.pixelType,
                                    b.rasters[0].pixelType
                                ),
                                statistics: a,
                                histograms: c,
                            });
                            return !0;
                        },
                        read2D: function(b) {
                            b = b.rasters;
                            if (null != b && 0 !== b.length) {
                                for (
                                    var a = this._clonePixelData(b[0]),
                                        c = a.pixelBlock,
                                        d = [],
                                        e = [],
                                        h = 0; h < b.length; h++
                                )
                                    d.push(b[h].pixelBlock.pixels[0]), e.push(
                                        b[h].pixelBlock.statistics[0]
                                    );
                                c.pixels = d;
                                c.stackedStatistics = e;
                                c.planes = b.length;
                                var f, h, e = c.width * c.height;
                                for (h = 0; h < b.length; h++)
                                    if (((c = b[h].pixelBlock.mask), f && c))
                                        for (d = 0; d < e; d++)
                                            f[d] &= c[d];
                                    else f = f || c;
                                a.maks = f;
                                return a;
                            }
                        },
                        readGL: function(b) {
                            this._performance.start();
                            this._initializeProgram({
                                fragment: e.compositeBand,
                                fragmentName: 'CompositeBand',
                            });
                            var a = b.rasters;
                            if (null != a && 0 !== a.length) {
                                var a = a.length,
                                    c, d, h, f = this.bindFrameBuffer();
                                for (c = 0; c < a; c++)
                                    (d = this._setupTextureData(b.rasters[c], {
                                        notOriginal: 0 < c,
                                    })), (h = 0 < c ? c.toString() : ''), this._bindTexture(
                                        d.texture,
                                        'u_image' + h
                                    );
                                this._setUniforms({ u_rasterCount: a });
                                this._drawGL();
                                this._addPerformanceMetric(this._performance.elapsed());
                                return { extent: d.extent, texture: f.texture };
                            }
                        },
                    });
                }
            );
        },
        'esri/layers/rasterLib/function/ContrastBrightnessFunction': function() {
            define(
                'dojo/_base/declare dojo/_base/lang ./RasterFunctionX ../../PixelBlock ./pixelShaders ./RasterFunctionWebGLMixin ./rasterUtils'.split(
                    ' '
                ),
                function(c, g, f, b, e, h, d) {
                    return c([f, h], {
                        declaredClass: 'esri.layers.rasterLib.function.ContrastBrightnessFunction',
                        renderTexture: !0,
                        functionName: 'ContrastBrightness',
                        supportWebGL: !0,
                        support2D: !0,
                        pixelType: 'U8',
                        constructor: function(a) {
                            this.functionArguments = this.mixinIgnoreCase({ contrastOffset: 0, brightnessOffset: 0, raster: null },
                                a
                            );
                        },
                        bind: function(a) {
                            a = this.getSourceRasterInfo(a);
                            if (!a.raster)
                                return Error(
                                    'The raster input to contrast and brightness function is invalid.'
                                );
                            this.rasterInfo = g.mixin(a.raster, {
                                bandCount: a.raster.bandCount,
                                pixelType: this._calculatePixelType(this.pixelType, 'U8'),
                                statistics: null,
                                histograms: null,
                            });
                            this.rasterInfo.keyProperties = this.rasterInfo
                                .keyProperties || {};
                            this.rasterInfo.keyProperties.DataType = 'Processed';
                            return !0;
                        },
                        read2D: function(a) {
                            a = a.raster;
                            if (
                                null !== a &&
                                null !== a.pixelBlock &&
                                null !== a.pixelBlock.pixels
                            ) {
                                var b = d.contrastBrightnessStretch(a.pixelBlock, {
                                    contrastOffset: this.functionArguments.contrastOffset,
                                    brightnessOffset: this.functionArguments.brightnessOffset,
                                });
                                'Unknown' !== this.pixelType &&
                                    ((b.pixelType = this.pixelType), (b.pixels = b.pixels.map(
                                        g.hitch(this, function(a) {
                                            return this._clampBand(a, b.pixelType);
                                        })
                                    )));
                                return { extent: a.extent, pixelBlock: b };
                            }
                        },
                        readGL: function(a) {
                            return this._cbGL(a.raster);
                        },
                        _cbGL: function(a) {
                            this._performance.start();
                            this._initializeProgram({
                                fragment: e.contrastBrightness,
                                fragmentName: 'ContrastBrightness',
                            });
                            a = this._setupTextureData(a);
                            this._setUniforms({
                                u_contrastOffset: Math.min(
                                    Math.max(this.functionArguments.contrastOffset, -100),
                                    100
                                ),
                                u_brightnessOffset: Math.min(
                                    Math.max(this.functionArguments.brightnessOffset, -100),
                                    100
                                ),
                                u_scaleFactor: this.renderTexture ? 255 : 1,
                            });
                            this._bindTexture(a.texture, 'u_image');
                            var b = this.bindFrameBuffer();
                            this._drawGL();
                            this._addPerformanceMetric(this._performance.elapsed());
                            return { extent: a.extent, texture: b.texture };
                        },
                    });
                }
            );
        },
        'esri/layers/rasterLib/function/ConvolutionFunction': function() {
            define(
                'dojo/_base/declare dojo/_base/lang ./RasterFunctionX ../../PixelBlock ./convolutionKernel ./pixelShaders ./RasterFunctionWebGLMixin ./rasterUtils'.split(
                    ' '
                ),
                function(c, g, f, b, e, h, d, a) {
                    return c([f, d], {
                        declaredClass: 'esri.layers.rasterLib.function.ConvolutionFunction',
                        functionName: 'Convolution',
                        supportWebGL: !0,
                        support2D: !0,
                        constructor: function(a) {
                            this.functionArguments = this.mixinIgnoreCase({ columns: 3, rows: 3, type: 0, kernel: null, raster: null },
                                a
                            );
                        },
                        bind: function(a) {
                            a = this.getSourceRasterInfo(a);
                            if (!a.raster)
                                return Error(
                                    'The raster input to convolution function is invalid.'
                                );
                            this.rasterInfo = g.mixin(a.raster, {
                                bandCount: a.raster.bandCount,
                                pixelType: this._calculatePixelType(
                                    this.pixelType,
                                    a.raster.pixelType
                                ),
                                statistics: a.raster.statistics,
                                histograms: a.raster.histograms,
                            });
                            this.rasterInfo.keyProperties = this.rasterInfo
                                .keyProperties || {};
                            this.rasterInfo.keyProperties.DataType = 'Generic';
                            return !0;
                        },
                        read2D: function(b) {
                            this._performance.start();
                            b = b.raster;
                            var c = this._analyzeKernel(),
                                d = a.convolute(b.pixelBlock, {
                                    normalizedKernel: c.normalizedKernel,
                                    kernelCols: this.functionArguments.columns,
                                    kernelRows: this.functionArguments.rows,
                                });
                            this._addPerformanceMetric(this._performance.elapsed());
                            'Unknown' !== this.pixelType && (d.pixelType = this.pixelType);
                            d.pixels = d.pixels.map(
                                g.hitch(this, function(a) {
                                    return this._clampBand(a, d.pixelType);
                                })
                            );
                            return { extent: b.extent, pixelBlock: d };
                        },
                        readGL: function(a) {
                            this._performance.start();
                            this._initializeProgram({
                                fragment: h.convolution,
                                fragmentName: 'Convolution',
                            });
                            var b = this._setupTextureData(a.raster),
                                c = this.bindFrameBuffer(),
                                d = this.gl,
                                e = d.drawingBufferWidth,
                                d = d.drawingBufferHeight,
                                k = this.functionArguments.kernel;
                            this._setUniforms({
                                u_resolution: a && a.raster && a.raster.pixelBlock ?
                                    [
                                        1 / a.raster.pixelBlock.width,
                                        1 / a.raster.pixelBlock.height,
                                    ] :
                                    [1 / e, 1 / d],
                                u_kernel: k,
                                u_kernelSize: k.length,
                            });
                            this._bindTexture(b.texture, 'u_image');
                            this._drawGL();
                            this._addPerformanceMetric(this._performance.elapsed());
                            return { extent: b.extent, texture: c.texture };
                        },
                        _analyzeKernel: function() {
                            var a = this.functionArguments.kernel,
                                b = a.reduce(function(a, b) {
                                    return a + b;
                                });
                            0 !== b &&
                                1 !== b &&
                                (a = a.map(function(a) {
                                    return a / b;
                                }));
                            var c, d = [];
                            for (c = 0; c < a.length; c++)
                                d.some(function(b) {
                                    return b === a[c];
                                }) || d.push(a[c]);
                            return { normalizedKernel: a, distinctValues: d };
                        },
                        _analyzeKernelPattern: function() {
                            var a = this.functionArguments.rows,
                                b = this.functionArguments.columns,
                                c = this.functionArguments.kernel,
                                d = [],
                                e,
                                h;
                            for (e = 0; e < a; e++)
                                d.push({ weights: c.slice(e * b, (e + 1) * b) });
                            var f, g, q;
                            for (e = 1; e < a; e++)
                                for ((g = d[e].weights), (c = 0); c < e; c++)
                                    if ((f = d[c].weights)) {
                                        q = g[0] / f[0];
                                        for (h = 1; h < b; h++)
                                            g[h] / f[h] !== q && (q = null);
                                        null !== q && (d[e] = { row: c, factor: q });
                                    }
                            return d;
                        },
                    });
                }
            );
        },
        'esri/layers/rasterLib/function/ExtractBandFunction': function() {
            define(
                'dojo/_base/declare dojo/_base/lang ./RasterFunctionX ../../PixelBlock ./pixelShaders ./RasterFunctionWebGLMixin'.split(
                    ' '
                ),
                function(c, g, f, b, e, h) {
                    return c([f, h], {
                        declaredClass: 'esri.layers.rasterLib.function.ExtractBandFunction',
                        functionName: 'ExtractBand',
                        supportWebGL: !0,
                        support2D: !0,
                        constructor: function(b) {
                            this.functionArguments = this.mixinIgnoreCase({ bandIDs: [], missingBandAction: 0, raster: null },
                                b
                            );
                        },
                        bind: function(b) {
                            b = this.getSourceRasterInfo(b);
                            if (!b.raster)
                                return Error(
                                    'The raster input to extract band function is invalid.'
                                );
                            var a = [],
                                c = b.raster.statistics,
                                d = [],
                                e = b.raster.histograms,
                                h = this.functionArguments.bandIDs.length || b.raster.bandCount;
                            this.functionArguments.bandIDs.forEach(
                                g.hitch(this, function(b) {
                                    if (b >= h - 1) {
                                        if (1 === this.functionArguments.missingBandAction)
                                            return Error('missing band ' + b);
                                        b = h - 1;
                                    }
                                    if (0 > b) return Error('missing band ' + b);
                                    void 0 !== c && null !== c && 0 < c.length && a.push(c[b]);
                                    void 0 !== e && null !== e && 0 < e.length && d.push(e[b]);
                                })
                            );
                            this.rasterInfo = g.mixin(b.raster, {
                                bandCount: h,
                                pixelType: this._calculatePixelType(
                                    this.pixelType,
                                    b.raster.pixelType
                                ),
                                statistics: a,
                                histograms: d,
                            });
                            return !0;
                        },
                        read2D: function(b) {
                            b = this._clonePixelData(b.raster);
                            if (
                                null !== b &&
                                null !== b.pixelBlock &&
                                null !== b.pixelBlock.pixels
                            ) {
                                this._performance.start();
                                var a = b.pixelBlock,
                                    c = a.statistics,
                                    d = a.pixels,
                                    e = d.length;
                                if (null == this.functionArguments.bandIDs)
                                    throw 'missing bandIDs parameter';
                                if (0 === this.functionArguments.bandIDs.length) return b;
                                var h = [],
                                    f = [];
                                this.functionArguments.bandIDs.forEach(function(a) {
                                    if (a >= e - 1) {
                                        if (1 === this.functionArguments.missingBandAction)
                                            throw 'missing band ' + a;
                                        a = e - 1;
                                    }
                                    if (0 > a) throw 'missing band ' + a;
                                    h.push(d[a]);
                                    void 0 !== c && null !== c && 0 < c.length && f.push(c[a]);
                                });
                                a.pixels = h;
                                a.statistics = f;
                                a.planes = this.functionArguments.bandIDs.length;
                                return b;
                            }
                        },
                        readGL: function(b) {
                            this._performance.start();
                            if (null == this.functionArguments.bandIDs)
                                throw 'missing bandIDs parameter';
                            if (3 < this.functionArguments.bandIDs.length)
                                throw 'this version does not support more than 3 bands yet';
                            this._initializeProgram({
                                fragment: e.extractBand,
                                fragmentName: 'ExtractBand',
                            });
                            var a = this.functionArguments.bandIDs;
                            1 === a.length && (a = [a[0], a[0], a[0]]);
                            this._bandIDs = a;
                            this._alterBand = !(0 === this.functionArguments.bandIDs.length ||
                                (0 === a[0] && 1 === a[1] && 2 === a[2]));
                            var c = !!(this._alterBand && b.raster && b.raster.texture);
                            b = this._setupTextureData(b.raster, { bandIDs: a });
                            var d = this.bindFrameBuffer();
                            c
                                ?
                                this._setUniforms({
                                    u_bandIDs: a,
                                    u_alterBand: this._alterBand,
                                }) :
                                this._setUniforms({ u_bandIDs: a, u_alterBand: !1 });
                            this._bindTexture(b.texture, 'u_image');
                            this._drawGL();
                            this._addPerformanceMetric(this._performance.elapsed());
                            return { extent: b.extent, texture: d.texture };
                        },
                    });
                }
            );
        },
        'esri/layers/rasterLib/function/HillshadeFunction': function() {
            define(
                'dojo/_base/declare dojo/_base/lang ./RasterFunctionX ../../../renderers/colorRampGenerator ../../../WKIDUnitConversion ../../PixelBlock ./pixelShaders ./RasterFunctionWebGLMixin ./surfaceUtils ./rasterUtils'.split(
                    ' '
                ),
                function(c, g, f, b, e, h, d, a, k, n) {
                    return c([f, a], {
                        declaredClass: 'esri.layers.rasterLib.function.HillshadeFunction',
                        functionName: 'Hillshade',
                        supportWebGL: !0,
                        support2D: !0,
                        renderTexture: !0,
                        constructor: function(a) {
                            this.functionArguments = this.mixinIgnoreCase({
                                    hillshadeType: 0,
                                    altitude: 45,
                                    azimuth: 315,
                                    zFactor: 1,
                                    slopeType: 1,
                                    psPower: 0.664,
                                    psFactor: 0.024,
                                    colorRamp: null,
                                    raster: null,
                                },
                                a
                            );
                            this._azimuths = [315, 270, 225, 360, 180, 0];
                            this._altitudes = [60, 60, 60, 60, 60, 90];
                            this._weights = [3, 5, 3, 2, 1, 4];
                            var b = this._weights.reduce(function(a, b) {
                                return a + b;
                            });
                            this._weights = this._weights.map(function(a) {
                                return a / b;
                            });
                        },
                        bind: function(a) {
                            a = this.getSourceRasterInfo(a);
                            if (!a.raster)
                                return Error(
                                    'The raster input to hillshade function is invalid.'
                                );
                            a.raster.statistics && (this.srcStatistics = a.raster.statistics);
                            this.rasterInfo = g.mixin(a.raster, {
                                bandCount: 1,
                                pixelType: this._calculatePixelType(this.pixelType, 'U8'),
                                statistics: [{ min: 0, max: 255 }],
                                histograms: null,
                            });
                            this.rasterInfo.keyProperties = this.rasterInfo
                                .keyProperties || {};
                            this.rasterInfo.keyProperties.DataType = 'Generic';
                            this._initializeColormap();
                            return !0;
                        },
                        read2D: function(a) {
                            this._performance.start();
                            a = a.raster;
                            a = k.hillshade(a, {
                                altitude: this.functionArguments.altitude,
                                azimuth: this.functionArguments.azimuth,
                                zFactor: this.functionArguments.zFactor,
                                psPower: this.functionArguments.psPower,
                                psFactor: this.functionArguments.psFactor,
                                hillshadeType: this.functionArguments.hillshadeType,
                                slopeType: this.functionArguments.slopeType,
                                isGCS: a.extent.spatialReference.wkid &&
                                    null == e[a.extent.spatialReference.wkid],
                            });
                            this._addPerformanceMetric(this._performance.elapsed());
                            return a;
                        },
                        readGL: function(a) {
                            this._performance.start();
                            this._initializeProgram({
                                fragment: d.hillshade,
                                fragmentName: 'Hillshade',
                            });
                            this.functionArguments.colorRamp &&
                                this._indexedColormap &&
                                !this._clrTexture &&
                                (this._clrTexture = this._setupColormapTexture(
                                    this._indexedColormap
                                ));
                            var b = this._setupTextureData(a.raster),
                                c = this.bindFrameBuffer(),
                                k = this.gl,
                                h = k.drawingBufferWidth,
                                k = k.drawingBufferHeight,
                                f = b.extent,
                                g = (f.xmax - f.xmin) / h,
                                l = (f.ymax - f.ymin) / k,
                                n = this.functionArguments.altitude,
                                z = this.functionArguments.azimuth,
                                y = this.functionArguments.zFactor;
                            1 === this.functionArguments.hillshadeType && (y *= 2);
                            var x = y / (8 * g),
                                w = y / (8 * l);
                            0.001 < y &&
                                f.spatialReference.wkid &&
                                null == e[f.spatialReference.wkid] &&
                                ((x /= 111e3), (w /= 111e3));
                            var A = this.functionArguments.psPower,
                                E = this.functionArguments.psFactor;
                            3 === this.functionArguments.slopeType &&
                                ((x =
                                        f.spatialReference.wkid && null == e[f.spatialReference.wkid]) ?
                                    ((x = 111e3 * g), (w = 111e3 * l), (x =
                                        (y + Math.pow(x, A) * E) / (8 * x)), (w =
                                        (y + Math.pow(w, A) * E) / (8 * w))) :
                                    ((x = (y + Math.pow(g, A) * E) / (8 * g)), (w =
                                        (y + Math.pow(l, A) * E) / (8 * l))));
                            var B = (90 - n) * Math.PI / 180,
                                n = Math.cos(B),
                                D = (360 - z + 90) * Math.PI / 180,
                                z = Math.sin(B) * Math.cos(D),
                                B = Math.sin(B) * Math.sin(D),
                                A = Array(6),
                                E = Array(6),
                                f = Array(6),
                                H,
                                G = this._weights,
                                F;
                            if (1 === this.functionArguments.hillshadeType)
                                for ((H = this._azimuths.length), (F = 0); F < H; F++)
                                    (n = this._altitudes[F]), (z = this._azimuths[F]), (B =
                                        (90 - n) * Math.PI / 180), (n = Math.cos(B)), (D =
                                        (360 - z + 90) * Math.PI / 180), (z =
                                        Math.sin(B) * Math.cos(D)), (B =
                                        Math.sin(B) * Math.sin(D)), (A[F] = n), (E[F] = z), (f[
                                        F
                                    ] = B);
                            else(A[0] = n), (E[0] = z), (f[0] = B);
                            A = A.map(function(a) {
                                return parseFloat(a);
                            });
                            E = E.map(function(a) {
                                return parseFloat(a);
                            });
                            f = f.map(function(a) {
                                return parseFloat(a);
                            });
                            this._setUniforms({
                                u_cellSize: [g, l],
                                u_zfactor: y,
                                u_xFactor: x,
                                u_yFactor: w,
                                u_sinZcosA: z,
                                u_sinZsinA: B,
                                u_cosZ: n,
                                u_sinZcosAs: E,
                                u_sinZsinAs: f,
                                u_cosZs: A,
                                u_weights: G,
                                u_hillshadeType: this.functionArguments.hillshadeType,
                                u_resolution: a && a.raster && a.raster.pixelBlock ?
                                    [
                                        1 / a.raster.pixelBlock.width,
                                        1 / a.raster.pixelBlock.height,
                                    ] :
                                    [1 / h, 1 / k],
                                u_scaled: !this.renderTexture,
                                u_applyColorramp: this._clrTexture ? !0 : !1,
                                u_minValue: this.srcStatistics[0].min,
                                u_maxValue: this.srcStatistics[0].max,
                                u_indexedColormapOffset: this._indexedColormapOffset || 0,
                                u_indexedColormapMaxIndex: this._indexedColormap ?
                                    this._indexedColormap.length / 4 - 1 :
                                    0,
                            });
                            this._clrTexture &&
                                this._bindTexture(this._clrTexture, 'u_image1');
                            this._bindTexture(b.texture, 'u_image');
                            this._drawGL();
                            this._addPerformanceMetric(this._performance.elapsed());
                            return { extent: b.extent, texture: c.texture };
                        },
                        _initializeColormap: function() {
                            this._indexedColormapOffset = 0;
                            var a = this._indexedColormap,
                                c = this.functionArguments.colorRamp;
                            this.functionArguments.colormap ?
                                ((this._alphaSpecified =
                                    (c = n.buildIndexedColormap(
                                        this.functionArguments.colormap
                                    )) && c.alphaSpecified), (this._indexedColormap =
                                    c && c.indexedColormap), (this._indexedColormapOffset =
                                    c && c.offset)) :
                                c ?
                                ((this._indexedColormap = 'multipart' === c.type ?
                                        this.invert ?
                                        b.createMultiPartColorRamp(
                                            this._invertColorRamp(c)
                                        ) :
                                        b.createMultiPartColorRamp(c) :
                                        this.invert ?
                                        b.createAlgorithmicColorRamp(
                                            this._invertColorRamp(c)
                                        ) :
                                        b.createAlgorithmicColorRamp(c)), c.fromColor &&
                                    c.toColor &&
                                    '000' === c.fromColor.slice(0, 3).join('') &&
                                    '255255255' === c.toColor.slice(0, 3).join('') &&
                                    (this._clrTexture = this._indexedColormap = null)) :
                                this.functionArguments.colormapName ?
                                'random' ===
                                this.functionArguments.colormapName.toLowerCase() &&
                                (this._indexedColormap = b.createRandomColorRamp()) :
                                (this._clrTexture = this._indexedColormap = null);
                            if (a && this._indexedColormap) {
                                for (var c = !0, d = 0; d < a.length; d++)
                                    if (a[d] !== this._indexedColormap[d]) {
                                        c = !1;
                                        break;
                                    }
                                c || (this._clrTexture = null);
                            }
                        },
                        _setupColormapTexture: function(a) {
                            var b = this._createTexture(),
                                c = this.gl,
                                d = a.length / 4,
                                e = new Float32Array(a.length),
                                k;
                            for (k = 0; k < a.length; k++)
                                e[k] = a[k] / 255;
                            c.getExtension('OES_texture_float');
                            c.texImage2D(
                                c.TEXTURE_2D,
                                0,
                                c.RGBA,
                                d,
                                1,
                                0,
                                c.RGBA,
                                c.FLOAT,
                                e
                            );
                            return b;
                        },
                    });
                }
            );
        },
        'esri/layers/rasterLib/function/LocalFunction': function() {
            define(
                'dojo/_base/declare dojo/_base/lang ./RasterFunctionX ../../PixelBlock ./pixelShaders ./RasterFunctionWebGLMixin ./rasterUtils'.split(
                    ' '
                ),
                function(c, g, f, b, e, h, d) {
                    return c([f, h], {
                        declaredClass: 'esri.layers.rasterLib.function.LocalFunction',
                        functionName: 'Local',
                        supportWebGL: !0,
                        support2D: !0,
                        constructor: function(a) {
                            this.functionArguments = this.mixinIgnoreCase({ operation: null, rasters: null },
                                a
                            );
                        },
                        bind: function(a) {
                            a = this.getSourceRasterInfo(a);
                            var b = 0;
                            a.raster ?
                                (b = a.raster.bandCount) :
                                a.rasters &&
                                (b = Math.max.apply(
                                    null,
                                    a.rasters.map(function(a) {
                                        return a.bandCount;
                                    })
                                ));
                            if (0 === b)
                                return Error(
                                    'The raster input to local function is invalid. It only takes single band input.'
                                );
                            a =
                                a.raster ||
                                a.rasters.filter(function(a) {
                                    return !!a.extent;
                                })[0];
                            this.rasterInfo = g.mixin(a, {
                                bandCount: 1,
                                pixelType: this._calculatePixelType(this.pixelType, 'F32'),
                                statistics: null,
                                histograms: null,
                            });
                            this.rasterInfo.keyProperties = this.rasterInfo
                                .keyProperties || {};
                            this.rasterInfo.keyProperties.DataType = 'Generic';
                            return !0;
                        },
                        read2D: function(a) {
                            var b = [],
                                b = a.raster ?
                                a.raster2 ? [a.raster, a.raster2] : [a.raster] :
                                a.rasters;
                            a = b.map(function(a) {
                                return a.pixelBlock;
                            });
                            var c = this.functionArguments.operation;
                            if (null === c) return b[0];
                            this._performance.start();
                            var e = this._getOperations(),
                                h = e.operators[c - 1],
                                e = e.functors[c - 1];
                            if (!this.functionArguments.rasters) {
                                if (1 !== h) throw 'no sufficient rasters, require ' + h;
                            } else if (
                                999 !== h &&
                                this.functionArguments.rasters.length !== h
                            )
                                throw 'number of rasters does not meet (short or exceed) the operation requirment, require ' +
                                    h;
                            var f;
                            f = 31 === c ?
                                d.isNull(a[0]) :
                                50 === c ?
                                d.setNull(a[0]) :
                                d.local(a, { rasterCountNeeded: h, functor: e });
                            'Unknown' !== this.pixelType &&
                                ((f.pixelType = this.pixelType), (f.pixels = f.pixels.map(
                                    g.hitch(this, function(a) {
                                        return this._clampBand(a, f.pixelType);
                                    })
                                )));
                            f.statistics || f.calculateStatistics();
                            return { extent: b[0].extent, pixelBlock: f };
                        },
                        readGL: function(a) {
                            this._performance.start();
                            var b = this.functionArguments.operation,
                                c = this._getWebGLOperations(),
                                d = c.operators[b - 1],
                                h = e.local,
                                c = 'result\x3d' + c.functors[b - 1] + ';';
                            31 !== b &&
                                50 !== b &&
                                (c += 'result \x3d vec4(result.rgb, a.a);');
                            var h = h.replace('vec4 replaceme' + d + ';', c),
                                c = this.gl.getParameter(this.gl.VERSION),
                                f = '';
                            if (-1 < c.toLowerCase().indexOf('webgl 1.0') ||
                                -1 < c.toLowerCase().indexOf('webgl 0.')
                            )
                                f = this._getPolyfill(b);
                            h = h.replace('vec4 polyfill;', f);
                            1 < d &&
                                (h = h.replace(
                                    'gl_FragColor \x3d localOp1();',
                                    'gl_FragColor \x3d localOp1();'.replace('1', d.toString())
                                ));
                            this._initializeProgram({ fragment: h, fragmentName: 'Local' });
                            b = a.rasters;
                            if (null != b && 0 !== b.length) {
                                for (
                                    var b = b.length, g, c = this.bindFrameBuffer(), d = 0; d < b; d++
                                )
                                    (h = 0 < d ?
                                        d.toString() :
                                        ''), (g = this._setupTextureData(a.rasters[d], {
                                        reCreate: !0,
                                    })), this._bindTexture(g.texture, 'u_image' + h);
                                this._setUniforms({});
                                this._drawGL();
                                this._addPerformanceMetric(this._performance.elapsed());
                                return { extent: g.extent, texture: c.texture };
                            }
                        },
                        _getOperations: function() {
                            return {
                                operators: [
                                    2,
                                    2,
                                    2,
                                    1,
                                    2,
                                    1,
                                    1,
                                    1,
                                    1,
                                    1,
                                    2,
                                    2,
                                    1,
                                    2,
                                    2,
                                    2,
                                    2,
                                    1,
                                    2,
                                    2,
                                    1,
                                    1,
                                    2,
                                    2,
                                    1,
                                    1,
                                    1,
                                    2,
                                    2,
                                    1,
                                    1,
                                    1,
                                    2,
                                    2,
                                    1,
                                    1,
                                    1,
                                    999,
                                    999,
                                    999,
                                    999,
                                    999,
                                    999,
                                    2,
                                    1,
                                    2,
                                    999,
                                    1,
                                    1,
                                    1,
                                    1,
                                    1,
                                    1,
                                    999,
                                    999,
                                    1,
                                    1,
                                    999,
                                    1,
                                    1,
                                    2,
                                    2,
                                    2,
                                    999,
                                    999,
                                    999,
                                    999,
                                    999,
                                    999,
                                    999,
                                    999,
                                    999,
                                    999,
                                    3,
                                ],
                                functors: [
                                    function(a, b) {
                                        return a + b;
                                    },
                                    function(a, b) {
                                        return a - b;
                                    },
                                    function(a, b) {
                                        return a * b;
                                    },
                                    function(a) {
                                        return Math.sqrt(a);
                                    },
                                    function(a, b) {
                                        return Math.pow(a, b);
                                    },
                                    function(a) {
                                        return Math.acos(a);
                                    },
                                    function(a) {
                                        return Math.asin(a);
                                    },
                                    function(a) {
                                        return Math.atan(a);
                                    },
                                    function(a) {
                                        return Math.atanh(a);
                                    },
                                    function(a) {
                                        return Math.abs(a);
                                    },
                                    function(a, b) {
                                        return a & b;
                                    },
                                    function(a, b) {
                                        return a << b;
                                    },
                                    function(a) {
                                        return ~a;
                                    },
                                    function(a, b) {
                                        return a | b;
                                    },
                                    function(a, b) {
                                        return a >> b;
                                    },
                                    function(a, b) {
                                        return a ^ b;
                                    },
                                    function(a, b) {
                                        return a && b;
                                    },
                                    function(a) {
                                        return !a;
                                    },
                                    function(a, b) {
                                        return a || b;
                                    },
                                    function(a, b) {
                                        return a != b;
                                    },
                                    function(a) {
                                        return Math.cos(a);
                                    },
                                    function(a, b) {
                                        return Math.cosh(a);
                                    },
                                    function(a, b) {
                                        return a / b;
                                    },
                                    function(a, b) {
                                        return a == b;
                                    },
                                    function(a) {
                                        return Math.exp(a);
                                    },
                                    function(a) {
                                        return Math.pow(10, a);
                                    },
                                    function(a) {
                                        return Math.pow(2, a);
                                    },
                                    function(a, b) {
                                        return a > b ? 1 : 0;
                                    },
                                    function(a, b) {
                                        return a >= b ? 1 : 0;
                                    },
                                    function(a, b) {
                                        return Math.floor(a);
                                    },
                                    function(a) {
                                        return !a;
                                    },
                                    function(a) {
                                        return a;
                                    },
                                    function(a, b) {
                                        return a < b ? 1 : 0;
                                    },
                                    function(a, b) {
                                        return a <= b ? 1 : 0;
                                    },
                                    function(a) {
                                        return Math.log(a);
                                    },
                                    function(a, b) {
                                        return Math.log10(a);
                                    },
                                    function(a, b) {
                                        return Math.log2(a);
                                    },
                                    999,
                                    999,
                                    999,
                                    999,
                                    999,
                                    999,
                                    function(a, b) {
                                        return a % b;
                                    },
                                    function(a) {
                                        return -a;
                                    },
                                    function(a, b) {
                                        return a != b ? 1 : 0;
                                    },
                                    999,
                                    function(a, b) {
                                        return Math.floor(a);
                                    },
                                    function(a, b) {
                                        return Math.ceil(a);
                                    },
                                    function(a, b) {
                                        return b ? 0 : a;
                                    },
                                    function(a, b) {
                                        return Math.sin(a);
                                    },
                                    function(a, b) {
                                        return Math.sinh(a);
                                    },
                                    function(a, b) {
                                        return a * a;
                                    },
                                    999,
                                    999,
                                    function(a) {
                                        return Math.tan(a);
                                    },
                                    function(a) {
                                        return Math.tanh(a);
                                    },
                                    999,
                                    function(a) {
                                        return Math.acosh(a);
                                    },
                                    function(a) {
                                        return Math.asinh(a);
                                    },
                                    function(a, b) {
                                        return Math.atan2(a, b);
                                    },
                                    function(a, b) {
                                        return a / b;
                                    },
                                    function(a, b) {
                                        return Math.floor(a / b);
                                    },
                                    999,
                                    999,
                                    999,
                                    999,
                                    999,
                                    999,
                                    999,
                                    999,
                                    999,
                                    999,
                                    function(a, b, c) {
                                        return a ? b : c;
                                    },
                                ],
                            };
                        },
                        _polyfill: {
                            sinh: 'vec4 sinh(vec4 x) {\nvec4 halfexp \x3d exp(x)/2.0;\nreturn halfexp - 1.0/halfexp;\n}',
                            asinh: 'vec4 asinh(vec4 x) {\nvec4 halfexp \x3d exp(x)/2.0;\nreturn 1.0/(halfexp - 1.0/halfexp);\n}',
                            cosh: 'vec4 cosh(vec4 x) {\nvec4 halfexp \x3d exp(x)/2.0;\nreturn halfexp + 1.0/halfexp;\n}',
                            acosh: 'vec4 acosh(vec4 x) {\nvec4 halfexp \x3d exp(x)/2.0;\nreturn 1.0/(halfexp + 1.0/halfexp);\n}',
                            tanh: 'vec4 tanh(vec4 x) {\nvec4 expx \x3d exp(x);\nreturn (expx - 1.0/expx)/(expx + 1.0/expx);\n}',
                            atanh: 'vec4 atanh(vec4 x) {\nvec4 expx \x3d exp(x);\nreturn (expx + 1.0/expx)/(expx - 1.0/expx);\n}',
                        },
                        _getPolyfill: function(a) {
                            var b = '';
                            switch (a) {
                                case 9:
                                    b = this._polyfill.atanh;
                                    break;
                                case 22:
                                    b = this._polyfill.cosh;
                                    break;
                                case 52:
                                    b = this._polyfill.sinh;
                                    break;
                                case 57:
                                    b = this._polyfill.tanh;
                                    break;
                                case 59:
                                    b = this._polyfill.acosh;
                                    break;
                                case 60:
                                    b = this._polyfill.asinh;
                            }
                            return b;
                        },
                        _getWebGLOperations: function() {
                            return {
                                operators: [
                                    2,
                                    2,
                                    2,
                                    1,
                                    2,
                                    1,
                                    1,
                                    1,
                                    1,
                                    1,
                                    2,
                                    2,
                                    1,
                                    2,
                                    2,
                                    2,
                                    2,
                                    1,
                                    2,
                                    2,
                                    1,
                                    1,
                                    2,
                                    2,
                                    1,
                                    1,
                                    1,
                                    2,
                                    2,
                                    1,
                                    1,
                                    1,
                                    2,
                                    2,
                                    1,
                                    1,
                                    1,
                                    999,
                                    999,
                                    999,
                                    999,
                                    999,
                                    999,
                                    2,
                                    1,
                                    2,
                                    999,
                                    1,
                                    1,
                                    1,
                                    1,
                                    1,
                                    1,
                                    999,
                                    999,
                                    1,
                                    1,
                                    999,
                                    1,
                                    1,
                                    2,
                                    2,
                                    2,
                                    999,
                                    999,
                                    999,
                                    999,
                                    999,
                                    999,
                                    999,
                                    999,
                                    999,
                                    999,
                                    3,
                                ],
                                functors: [
                                    '(a + b)',
                                    '(a - b)',
                                    '(a * b)',
                                    'sqrt(a)',
                                    'pow(a, b)',
                                    'acos(a)',
                                    'asin(a)',
                                    'atan(a)',
                                    'atanh(a)',
                                    'abs(a)',
                                    'a',
                                    'a',
                                    'a',
                                    'a',
                                    'a',
                                    'a',
                                    '(a.r\x3d\x3d0.0 || b.r\x3d\x3d0.0) ? vec4(0.0,0.0,0.0,a.a) : vec4(1.0,1.0,1.0,a.a)',
                                    'a.r\x3d\x3d0.0?vec4(1.0,1.0,1.0,a.a) : vec4(0.0,0.0,0.0,a.a)',
                                    '(a.r\x3d\x3d0.0 \x26\x26 b.r\x3d\x3d0.0) ? vec4(0.0,0.0,0.0,a.a) : vec4(1.0,1.0,1.0,a.a)',
                                    '(a.r\x3d\x3d0.0 ^^ b.r\x3d\x3d0.0) ? vec4(1.0,1.0,1.0,a.a) : vec4(0.0,0.0,0.0,a.a)',
                                    'cos(a)',
                                    'cosh(a)',
                                    'a / b',
                                    'a.r \x3d\x3d b.r? vec4(1.0,1.0,1.0,a.a) : vec4(0.0,0.0,0.0,a.a)',
                                    'exp(a)',
                                    'pow(10.0, a)',
                                    'pow(2.0, a)',
                                    'a.r \x3e b.r ? vec4(1.0,1.0,1.0,a.a) : vec4(0.0,0.0,0.0,a.a)',
                                    'a.r \x3e\x3d b.r ? vec4(1.0,1.0,1.0,a.a) : vec4(0.0,0.0,0.0,a.a)',
                                    'floor(a)',
                                    'a.a \x3d\x3d 0.0? vec4(1.0,1.0,1.0,1.0) : vec4(0.0,0.0,0.0,1.0)',
                                    'a',
                                    'a.r \x3c b.r ? vec4(1.0,1.0,1.0,a.a) : vec4(0.0,0.0,0.0,a.a)',
                                    'a.r \x3c\x3d b.r ? vec4(1.0,1.0,1.0,a.a) : vec4(0.0,0.0,0.0,a.a)',
                                    'log(a)',
                                    'log2(a) / log2(10.0)',
                                    'log2(a)',
                                    999,
                                    999,
                                    999,
                                    999,
                                    999,
                                    999,
                                    'mod(a, b)',
                                    '-a',
                                    'a.r !\x3d b.r ? vec4(1.0,1.0,1.0,a.a) : vec4(0.0,0.0,0.0,a.a)',
                                    999,
                                    'floor(a)',
                                    'ceil(a)',
                                    'a.r !\x3d 0.0 ? vec4(0.0,0.0,0.0,0.0) : a',
                                    'sin(a)',
                                    'sinh(a)',
                                    'a * a',
                                    999,
                                    999,
                                    'tan(a)',
                                    'tanh(a)',
                                    999,
                                    'acosh(a)',
                                    'asinh(a)',
                                    'atan(a, b)',
                                    'a / b',
                                    'floor(a / b)',
                                    999,
                                    999,
                                    999,
                                    999,
                                    999,
                                    999,
                                    999,
                                    999,
                                    999,
                                    999,
                                    'a.r!\x3d0 ? b : c',
                                ],
                            };
                        },
                    });
                }
            );
        },
        'esri/layers/rasterLib/function/MaskFunction': function() {
            define(
                'dojo/_base/declare dojo/_base/lang ./RasterFunctionX ../../PixelBlock ./pixelShaders ./RasterFunctionWebGLMixin ./rasterUtils'.split(
                    ' '
                ),
                function(c, g, f, b, e, h, d) {
                    return c([f, h], {
                        declaredClass: 'esri.layers.rasterLib.function.MaskFunction',
                        functionName: 'Mask',
                        supportWebGL: !0,
                        support2D: !0,
                        constructor: function(a) {
                            this.functionArguments = this.mixinIgnoreCase({
                                    includedRanges: null,
                                    noDataInterpretation: 0,
                                    noDataValues: null,
                                    raster: null,
                                },
                                a
                            );
                        },
                        bind: function(a) {
                            a = this.getSourceRasterInfo(a);
                            if (!a.raster)
                                return Error('The raster input to mask function is invalid.');
                            this.rasterInfo = g.mixin(a.raster, {
                                bandCount: a.raster.bandCount,
                                pixelType: this._calculatePixelType(
                                    this.pixelType,
                                    a.raster.pixelType
                                ),
                                statistics: a.raster.statistics,
                                histograms: a.raster.histograms,
                            });
                            return !0;
                        },
                        read2D: function(a) {
                            this._performance.start();
                            a = a.raster;
                            var b = d.mask(a.pixelBlock, {
                                includedRanges: this.functionArguments.includedRanges,
                                noDataInterpretation: this.functionArguments
                                    .noDataInterpretation,
                                noDataValues: this.functionArguments.noDataValues,
                            });
                            this._addPerformanceMetric(this._performance.elapsed());
                            'Unknown' !== this.pixelType && (b.pixelType = this.pixelType);
                            return { extent: a.extent, pixelBlock: b };
                        },
                        readGL: function(a) {
                            this._performance.start();
                            this._initializeProgram({
                                fragment: e.mask,
                                fragmentName: 'Mask',
                            });
                            a = this._setupTextureData(a.raster);
                            var b = this.bindFrameBuffer(),
                                c = this.functionArguments.includedRanges,
                                d = this.functionArguments.noDataValues ?
                                this.functionArguments.noDataValues.map(function(a) {
                                    return parseFloat(a, 10);
                                }) :
                                null;
                            this._setUniforms({
                                u_includedRanges: c,
                                u_includedRanges_specified: c ? !0 : !1,
                                u_noDataValues: d,
                                u_noDataValues_specified: d ? !0 : !1,
                                u_noDataInterpretation: this.functionArguments
                                    .noDataInterpretation,
                                u_bandCount: Math.min(
                                    this.sourceRasterInfo.raster.bandCount,
                                    3
                                ),
                            });
                            this._bindTexture(a.texture, 'u_image');
                            this._drawGL();
                            this._addPerformanceMetric(this._performance.elapsed());
                            return { extent: a.extent, texture: b.texture };
                        },
                    });
                }
            );
        },
        'esri/layers/rasterLib/function/NDVIFunction': function() {
            define(
                'dojo/_base/declare dojo/_base/lang ./RasterFunctionX ../../PixelBlock ./pixelShaders ./RasterFunctionWebGLMixin ./rasterIndex'.split(
                    ' '
                ),
                function(c, g, f, b, e, h, d) {
                    return c([f, h], {
                        declaredClass: 'esri.layers.rasterLib.function.NDVIFunction',
                        functionName: 'NDVI',
                        supportWebGL: !0,
                        support2D: !0,
                        constructor: function(a) {
                            this.functionArguments = this.mixinIgnoreCase({
                                    visibleBandID: 1,
                                    infraredBandID: 2,
                                    scaled: !0,
                                    raster: null,
                                },
                                a
                            );
                        },
                        bind: function(a) {
                            a = this.getSourceRasterInfo(a);
                            if (!(a.raster && 1 < a.raster.bandCount))
                                return Error(
                                    'The raster input to ndvi function is invalid. It requires more than 1 band.'
                                );
                            this.rasterInfo = g.mixin(a.raster, {
                                bandCount: 1,
                                pixelType: this._calculatePixelType(
                                    this.pixelType,
                                    this.scaled ? 'U8' : 'F32'
                                ),
                                statistics: this.scaled ?
                                    [{ min: 0, max: 200 }] :
                                    [{ min: -1, max: 1 }],
                                histograms: null,
                            });
                            this.rasterInfo.keyProperties = this.rasterInfo
                                .keyProperties || {};
                            this.rasterInfo.keyProperties.DataType = 'Generic';
                            return !0;
                        },
                        read2D: function(a) {
                            this._performance.start();
                            a = a.raster;
                            var b = d.calculate(a.pixelBlock, {
                                    bandIndexes: [
                                        this.functionArguments.infraredBandID + 1,
                                        this.functionArguments.visibleBandID + 1,
                                    ].join(' '),
                                    method: 1,
                                }),
                                c,
                                e,
                                h,
                                f,
                                g;
                            if (this.functionArguments.scaled) {
                                c = b.pixels[0];
                                h = b.mask;
                                f = c.length;
                                e = new Uint8Array(f);
                                if (null == h)
                                    for (g = 0; g < f; g++)
                                        e[g] = (100 * c[g] + 100) & 255;
                                else
                                    for (g = 0; g < f; g++)
                                        h[g] && (e[g] = (100 * c[g] + 100) & 255);
                                b.pixels[0] = e;
                                b.pixelType = 'U8';
                            }
                            this._addPerformanceMetric(this._performance.elapsed());
                            'Unknown' !== this.pixelType && (b.pixelType = this.pixelType);
                            return { extent: a.extent, pixelBlock: b };
                        },
                        readGL: function(a) {
                            this._performance.start();
                            this._initializeProgram({
                                fragment: e.ndvi,
                                fragmentName: 'NDVI',
                            });
                            var b = this.functionArguments.visibleBandID,
                                c = this.functionArguments.infraredBandID,
                                d = this.functionArguments.scaled || !1;
                            this._alterBand = 2 < Math.max(c, b) ? !0 : !1;
                            a = this._setupTextureData(a.raster, {
                                bandIDs: this._alterBand ? { bandIDs: [c, b, c] } : null,
                            });
                            var h = this.bindFrameBuffer();
                            this._alterBand ?
                                this._setUniforms({
                                    u_bandId_nir: 0,
                                    u_bandId_red: 1,
                                    u_scaled: d,
                                }) :
                                this._setUniforms({
                                    u_bandId_nir: c,
                                    u_bandId_red: b,
                                    u_scaled: d,
                                });
                            this._bindTexture(a.texture, 'u_image');
                            this._drawGL();
                            this._addPerformanceMetric(this._performance.elapsed());
                            return { extent: a.extent, texture: h.texture };
                        },
                    });
                }
            );
        },
        'esri/layers/rasterLib/function/SlopeFunction': function() {
            define(
                'dojo/_base/declare dojo/_base/lang ./RasterFunctionX ../../../WKIDUnitConversion ../../PixelBlock ./pixelShaders ./RasterFunctionWebGLMixin ./surfaceUtils'.split(
                    ' '
                ),
                function(c, g, f, b, e, h, d, a) {
                    return c([f, d], {
                        declaredClass: 'esri.layers.rasterLib.function.SlopeFunction',
                        functionName: 'Slope',
                        supportWebGL: !0,
                        support2D: !0,
                        constructor: function(a) {
                            this.functionArguments = this.mixinIgnoreCase({
                                    zFactor: 1,
                                    slopeType: 1,
                                    psPower: 0.664,
                                    psFactor: 0.024,
                                    raster: null,
                                },
                                a
                            );
                        },
                        bind: function(a) {
                            a = this.getSourceRasterInfo(a);
                            if (!a.raster)
                                return Error('The raster input to slope function is invalid.');
                            this.rasterInfo = g.mixin(a.raster, {
                                bandCount: 1,
                                pixelType: this._calculatePixelType(
                                    this.outputPixelType,
                                    'F32'
                                ),
                                statistics: 1 === this.slopeType || 3 === this.slopeType ?
                                    [{ min: 0, max: 90 }] :
                                    null,
                                histograms: null,
                            });
                            this.rasterInfo.keyProperties = this.rasterInfo
                                .keyProperties || {};
                            this.rasterInfo.keyProperties.DataType = 'Generic';
                            return !0;
                        },
                        read2D: function(c) {
                            this._performance.start();
                            c = c.raster;
                            c = a.slope(c, {
                                zFactor: this.functionArguments.zFactor,
                                psPower: this.functionArguments.psPower,
                                psFactor: this.functionArguments.psFactor,
                                slopeType: this.functionArguments.slopeType,
                                isGCS: c.extent.spatialReference.wkid &&
                                    null == b[c.extent.spatialReference.wkid],
                            });
                            this._addPerformanceMetric(this._performance.elapsed());
                            return c;
                        },
                        readGL: function(a) {
                            this._performance.start();
                            this._initializeProgram({
                                fragment: h.slope,
                                fragmentName: 'Slope',
                            });
                            var b = this._setupTextureData(a.raster),
                                c = this.bindFrameBuffer(),
                                d = this.gl,
                                e = d.drawingBufferWidth,
                                d = d.drawingBufferHeight,
                                k = b.extent;
                            this._setUniforms({
                                u_resolution: a && a.raster && a.raster.pixelBlock ?
                                    [
                                        1 / a.raster.pixelBlock.width,
                                        1 / a.raster.pixelBlock.height,
                                    ] :
                                    [1 / e, 1 / d],
                                u_cellSize: [(k.xmax - k.xmin) / e, (k.ymax - k.ymin) / d],
                                u_zfactor: this.functionArguments.zFactor,
                            });
                            this._bindTexture(b.texture, 'u_image');
                            this._drawGL();
                            this._addPerformanceMetric(this._performance.elapsed());
                            return { extent: b.extent, texture: c.texture };
                        },
                    });
                }
            );
        },
        'esri/layers/rasterLib/function/StretchFunction': function() {
            define(
                'dojo/_base/declare dojo/_base/lang ./RasterFunctionX ../../PixelBlock ./vertexShaders ./pixelShaders ./RasterFunctionWebGLMixin'.split(
                    ' '
                ),
                function(c, g, f, b, e, h, d) {
                    return c([f, d], {
                        declaredClass: 'esri.layers.rasterLib.function.StretchFunction',
                        functionName: 'Stretch',
                        supportWebGL: !0,
                        support2D: !0,
                        constructor: function(a) {
                            this.functionArguments = this.mixinIgnoreCase({
                                    stretchType: 0,
                                    min: 0,
                                    max: 255,
                                    numberOfStandardDeviations: 2,
                                    statistics: null,
                                    histograms: null,
                                    dra: !1,
                                    minPercent: 0.25,
                                    maxPercent: 0.5,
                                    useGamma: !1,
                                    gamma: null,
                                    raster: null,
                                    computeGamma: !1,
                                },
                                a
                            );
                            this.functionArguments.statistics = this._convertStats(
                                this.functionArguments.statistics
                            ); -
                            1 === [0, 3, 5, 6].indexOf(this.functionArguments.stretchType) &&
                                (this.functionArguments.stretchType = 5);
                            this.min = null == this.min ? 0 : this.min;
                            this.max = null == this.max ? 255 : this.max;
                        },
                        bind: function(a) {
                            a = this.getSourceRasterInfo(a);
                            if (!a.raster)
                                return Error(
                                    'The raster input to stretch function is invalid.'
                                );
                            a.raster.statistics &&
                                (this.srcStatistics = this._convertStats(a.raster.statistics));
                            a.raster.histograms && (this.srcHistograms = a.raster.histograms);
                            this.rasterInfo = g.mixin({}, a.raster, {
                                bandCount: a.raster.bandCount,
                                pixelType: this._calculatePixelType(this.pixelType, 'U8'),
                                statistics: null,
                                histograms: null,
                            });
                            this.rasterInfo.keyProperties = this.rasterInfo
                                .keyProperties || {};
                            this.rasterInfo.keyProperties.DataType = 'Generic';
                            return !0;
                        },
                        read2D: function(a) {
                            a = a.raster;
                            this._stretch(a);
                            return a;
                        },
                        hasTilingEffects: function(a) {
                            a = a || this.functionArguments;
                            return !!(a.dra ||
                                (a.raster && 'object' === typeof a.raster && a.raster.dra));
                        },
                        _convertStats: function(a) {
                            return a ?
                                a.map(function(a) {
                                    return a && null != a.min ?
                                        [a.min, a.max, a.mean, a.stddev] :
                                        a;
                                }) :
                                null;
                        },
                        _updateStatistisHistograms: function(a) {
                            var b = this.functionArguments,
                                c = b.histograms || this.srcHistograms;
                            if (a && a.pixelBlock && a.pixelBlock.pixels) {
                                if (0 === b.stretchType)
                                    (this._statistics = b.statistics && 0 < b.statistics.length ?
                                        b.statistics :
                                        this.srcStatistics), (this._histograms = c);
                                else {
                                    var d = a.pixelBlock,
                                        e = d.pixels.length,
                                        h =
                                        (6 === b.stretchType && (b.dra || !c)) ||
                                        (3 === b.stretchType && b.dra);
                                    h &&
                                        (d.statistics ||
                                            d.calculateStatistics(), this._calculateStatisticsHistograms(
                                                a
                                            ));
                                    if (b.dra)
                                        if ((d.statistics || d.calculateStatistics(), h))
                                            (this._statistics = d.statistics), (this._histograms =
                                                d.histograms);
                                        else
                                            for (
                                                (b = d.statistics), (this._statistics = []), (a = 0); a < e; a++
                                            )
                                                this._statistics[a] = [
                                                    b[a].minValue,
                                                    b[a].maxValue,
                                                    0,
                                                    0,
                                                ];
                                    else
                                        (this._statistics = b.statistics && 0 < b.statistics.length ?
                                            b.statistics :
                                            this.srcStatistics), (this._histograms = c);
                                }
                                this._statistics = this._convertStats(this._statistics);
                                this._gammaCorrection = this._getGammaCorrection();
                            } else
                                (this._statistics = b.statistics && 0 < b.statistics.length ?
                                    b.statistics :
                                    this
                                    .srcStatistics), (this._histograms = c), (this._gammaCorrection = this._getGammaCorrection()), (this._statistics = this._convertStats(
                                    this._statistics
                                ));
                        },
                        _getGammaCorrection: function() {
                            var a = this.functionArguments.gamma;
                            if (a) {
                                var b = [],
                                    c;
                                for (c = 0; c < a.length; c++)
                                    b[c] = 1 < a[c] ?
                                    2 < a[c] ?
                                    6.5 + Math.pow(a[c] - 2, 2.5) :
                                    6.5 + 100 * Math.pow(2 - a[c], 4) :
                                    1;
                                return b;
                            }
                        },
                        _stretch: function(a) {
                            if (
                                null !== a &&
                                null !== a.pixelBlock &&
                                null !== a.pixelBlock.pixels &&
                                0 !== this.functionArguments.stretchType
                            ) {
                                this._updateStatistisHistograms(a);
                                var b = a.pixelBlock,
                                    c = b.pixels,
                                    b = b.width * b.height,
                                    d = c.length,
                                    e,
                                    h;
                                this._createLUT(a);
                                if (null == this.LUT) return this._filterNoLUT(a);
                                var f = this.LUT,
                                    g = this.LUTOffset,
                                    t, q;
                                for (e = 0; e < d; e++)
                                    for ((q = f[e]), (h = 0); h < b; h++)
                                        (t = c[e][h]), (c[e][h] = q[t - g]);
                                a.pixelBlock.pixelType = 'U8';
                            }
                        },
                        _calculateStatisticsHistograms: function(a) {
                            a = a.pixelBlock;
                            var b = a.pixelType,
                                c = a.pixels,
                                d = a.mask,
                                e = c.length,
                                h,
                                f,
                                u,
                                t,
                                q = function(a) {
                                    this.min = -0.5;
                                    this.max = 255.5;
                                    this.size = 256;
                                    g.mixin(this, a);
                                    this.counts = this.counts || new Uint32Array(this.size);
                                },
                                v = [],
                                C,
                                z,
                                y,
                                x,
                                w,
                                A;
                            for (u = 0; u < e; u++) {
                                C = new q();
                                z = C.counts;
                                x = c[u];
                                if ('U8' === b)
                                    if (d)
                                        for (t = 0; t < a.width * a.height; t++)
                                            d[t] && z[x[t]]++;
                                    else
                                        for (t = 0; t < a.width * a.height; t++) z[x[t]]++;
                                else {
                                    h = a.statistics[u].minValue;
                                    f = a.statistics[u].maxValue;
                                    C.min = h;
                                    C.max = f;
                                    f = (f - h) / 256;
                                    y = new Uint32Array(257);
                                    if (d)
                                        for (t = 0; t < a.width * a.height; t++)
                                            d[t] && y[Math.floor((x[t] - h) / f)]++;
                                    else
                                        for (t = 0; t < a.width * a.height; t++)
                                            y[Math.floor((x[t] - h) / f)]++;
                                    for (t = 0; 255 > t; t++)
                                        z[t] = y[t];
                                    z[255] = y[255] + y[256];
                                }
                                v.push(C);
                                x = [];
                                h = a.statistics[u].minValue;
                                f = a.statistics[u].maxValue;
                                for (t = A = w = y = 0; t < C.size; t++)
                                    (y += z[t]), (w += t * z[t]);
                                w /= y;
                                for (t = 0; t < C.size; t++)
                                    A += z[t] * Math.pow(t - w, 2);
                                z = Math.sqrt(A / (y - 1));
                                t = (w + 0.5) * (C.max - C.min) / C.size + C.min;
                                C = z * (C.max - C.min) / C.size;
                                x.push(h);
                                x.push(f);
                                x.push(t);
                                x.push(C);
                                a.statistics[u] = {
                                    min: h,
                                    minValue: h,
                                    max: f,
                                    maxValue: f,
                                    mean: t,
                                    stddev: C,
                                };
                            }
                            a.histograms = v;
                        },
                        _getCutOffPoints: function(a) {
                            var b = this.functionArguments,
                                c = 999;
                            a && a.pixelBlock ?
                                (c = a.pixelBlock.pixels.length) :
                                a && a.texture && (c = 3);
                            a = Math.min(c, this._statistics.length);
                            var d = [],
                                e = [],
                                h, f, g, t, q, v;
                            switch (b.stretchType) {
                                case 5:
                                    for (q = 0; q < a; q++)
                                        (d[q] = this._statistics[q][0]), (e[q] = this._statistics[
                                            q
                                        ][1]);
                                    break;
                                case 3:
                                    for (q = 0; q < a; q++)
                                        (d[q] =
                                            this._statistics[q][2] -
                                            b.numberOfStandardDeviations *
                                            this._statistics[q][3]), (e[q] =
                                            this._statistics[q][2] +
                                            b.numberOfStandardDeviations * this._statistics[q][3]), d[
                                            q
                                        ] < this._statistics[q][0] &&
                                        (d[q] = this._statistics[q][0]), e[q] >
                                        this._statistics[q][1] && (e[q] = this._statistics[q][1]);
                                    break;
                                case 6:
                                    for (q = 0; q < a; q++) {
                                        c = this._histograms[q];
                                        g = new Uint32Array(c.size);
                                        f = c.counts;
                                        h = 0;
                                        t = -0.5 === c.min && 1 === (c.max - c.min) / f ? 0.5 : 0;
                                        for (v = 0; v < c.size; v++)
                                            (h += f[v]), (g[v] = h);
                                        f = b.minPercent * h / 100;
                                        for (v = 0; v < c.size; v++)
                                            if (g[v] > f) {
                                                d[q] = c.min + (c.max - c.min) / c.size * (v + t);
                                                break;
                                            }
                                        f = (1 - b.maxPercent / 100) * h;
                                        for (v = c.size - 2; 0 <= v; v--)
                                            if (g[v] < f) {
                                                e[q] = c.min + (c.max - c.min) / c.size * (v + 2 - t);
                                                break;
                                            }
                                    }
                                    break;
                                default:
                                    for (q = 0; q < c; q++)
                                        (d[q] = 0), (e[q] = 255);
                            }
                            return { minCutOff: d, maxCutOff: e };
                        },
                        _createLUT: function(a) {
                            var b = this.functionArguments,
                                c = a.pixelBlock,
                                d = c.pixelType;
                            if ('U8' === d || 'U16' === d || 'S8' === d || 'S16' === d) {
                                if (
                                    this._LUTSignature &&
                                    ((d = this._computeLutSignature()), d.length ===
                                        this._LUTSignature.length &&
                                        !d.some(
                                            function(a, b) {
                                                return a !== this._LUTSignature[b];
                                            }.bind(this)
                                        ))
                                )
                                    return;
                                var d = c.pixels.length,
                                    e = [],
                                    h = [],
                                    f,
                                    g,
                                    t = b.max,
                                    q = b.min,
                                    v = b.gamma,
                                    C = t - q,
                                    z = this._getCutOffPoints(a);
                                a = z.minCutOff;
                                var z = z.maxCutOff,
                                    y = 0,
                                    x = 256,
                                    w;
                                'S8' === c.pixelType ?
                                    (y = -127) :
                                    'S16' === c.pixelType && (y = -32767);
                                if ('U16' === c.pixelType || 'S16' === c.pixelType) x = 65536;
                                for (c = 0; c < d; c++)
                                    e[c] = z[c] - a[c];
                                var A = this._gammaCorrection;
                                if (b.useGamma)
                                    for (var E, c = 0; c < d; c++) {
                                        w = [];
                                        for (b = 0; b < x; b++)
                                            (f = b + y), (E = (f - a[c]) / e[c]), (g = 1), 1 < v[c] &&
                                            (g -= Math.pow(1 / C, E * A[c])), f < z[c] && f > a[c] ?
                                            (w[b] =
                                                Math.floor(g * C * Math.pow(E, 1 / v[c])) + q) :
                                            f > z[c] ? (w[b] = t) : f < a[c] && (w[b] = q);
                                        h[c] = w;
                                    }
                                else
                                    for (c = 0; c < d; c++) {
                                        w = [];
                                        for (b = 0; b < x; b++)
                                            (f = b + y), (w[b] = f < a[c] ?
                                                q :
                                                f > z[c] ?
                                                t :
                                                Math.floor((f - a[c]) / e[c] * C) + q);
                                        h[c] = w;
                                    }
                                this.LUT = h;
                                this.LUTOffset = y;
                                this._LUTSignature = this._computeLutSignature();
                            }
                        },
                        _computeLutSignature: function() {
                            var a = this.functionArguments,
                                b = [],
                                c, d;
                            b.push(a.stretchType);
                            b.push(a.min);
                            b.push(a.max);
                            b.push(a.numberOfStandardDeviations);
                            if (this._statistics)
                                for (c = 0; c < this._statistics.length; c++)
                                    for (d = 0; d < this._statistics[c].length; d++)
                                        b.push(this._statistics[c][d]);
                            b.push(a.dra ? 1 : 0);
                            b.push(a.minPercent);
                            b.push(a.maxPercent);
                            if (a.gamma)
                                for (c = 0; c < this._statistics.length; c++)
                                    b.push(a.gamma[c]);
                            b.push(a.useGamma ? 1 : 0);
                            return b;
                        },
                        _filterNoLUT: function(a) {
                            if (
                                null !== a &&
                                null !== a.pixelBlock &&
                                null !== a.pixelBlock.pixels
                            ) {
                                var b = this.functionArguments,
                                    c = a.pixelBlock,
                                    d = c.pixels,
                                    e = c.mask,
                                    c = c.width * c.height,
                                    h = d.length,
                                    f = [],
                                    g = [],
                                    t,
                                    q,
                                    v,
                                    C,
                                    z = b.max,
                                    y = b.min,
                                    x = b.gamma,
                                    w = z - y;
                                t = this._getCutOffPoints(a);
                                var A = t.minCutOff,
                                    E = t.maxCutOff;
                                for (t = 0; t < h; t++)
                                    f[t] = E[t] - A[t];
                                if (b.useGamma && null !== x && x.length >= h)
                                    for (t = 0; t < h; t++)
                                        g[t] = 1 < x[t] ?
                                        2 < x[t] ?
                                        6.5 + Math.pow(x[t] - 2, 2.5) :
                                        6.5 + 100 * Math.pow(2 - x[t], 4) :
                                        1;
                                if (b.useGamma)
                                    if (void 0 !== e && null !== e)
                                        for (b = 0; b < c; b++) {
                                            if (e[b])
                                                for (t = 0; t < h; t++)
                                                    (q = d[t][b]), (C = (q - A[t]) / f[t]), (v = 1), 1 <
                                                    x[t] && (v -= Math.pow(1 / w, C * g[t])), q <
                                                    E[t] && q > A[t] ?
                                                    (d[t][b] =
                                                        Math.floor(v * w * Math.pow(C, 1 / x[t])) + y) :
                                                    q > E[t] ?
                                                    (d[t][b] = z) :
                                                    q < A[t] && (d[t][b] = y);
                                        }
                                    else
                                        for (b = 0; b < c; b++)
                                            for (t = 0; t < h; t++)
                                                (q = d[t][b]), (C = (q - A[t]) / f[t]), (v = 1), 1 <
                                                x[t] && (v -= Math.pow(1 / w, C * g[t])), q < E[t] &&
                                                q > A[t] ?
                                                (d[t][b] =
                                                    Math.floor(v * w * Math.pow(C, 1 / x[t])) + y) :
                                                q > E[t] ?
                                                (d[t][b] = z) :
                                                q < A[t] && (d[t][b] = y);
                                else if (void 0 !== e && null !== e)
                                    for (b = 0; b < c; b++) {
                                        if (e[b])
                                            for (t = 0; t < h; t++)
                                                (q = d[t][b]), q < E[t] && q > A[t] ?
                                                (d[t][b] = Math.floor((q - A[t]) / f[t] * w) + y) :
                                                q > E[t] ?
                                                (d[t][b] = z) :
                                                q < A[t] && (d[t][b] = y);
                                    }
                                else
                                    for (b = 0; b < c; b++)
                                        for (t = 0; t < h; t++)
                                            (q = d[t][b]), q < E[t] && q > A[t] ?
                                            (d[t][b] = Math.floor((q - A[t]) / f[t] * w) + y) :
                                            q > E[t] ? (d[t][b] = z) : q < A[t] && (d[t][b] = y);
                                a.pixelBlock.pixelType = 'U8';
                                return a;
                            }
                        },
                        _computeGammaValues: function(a) {
                            var b = this._statistics.length,
                                c, d = [],
                                e;
                            for (c = 0; c < b; c++)
                                (e = this._statistics[c][2]), 'U8' !== a &&
                                (e =
                                    255 *
                                    (e - this._statistics[c][0]) /
                                    (this._statistics[c][1] - this._statistics[c][0])), d.push(
                                    this._computeGammaValue(e)
                                );
                            return d;
                        },
                        _computeGammaValue: function(a) {
                            if (0 !== a && !(255 < a || 0 > a)) {
                                var b = 0;
                                0 < a &&
                                    150 != a &&
                                    255 > a &&
                                    (b = 150 >= a ?
                                        45 * Math.cos(0.01047 * a) :
                                        17 * Math.sin(0.021 * a));
                                b = Math.log((a + b) / 255);
                                if (0 !== b && ((a = Math.log(a / 255) / b), !isNaN(a)))
                                    return Math.min(9.9, Math.max(0.01, a));
                            }
                        },
                        readGL: function(a) {
                            return this._stretchGL(a.raster);
                        },
                        _stretchGL: function(a) {
                            this._performance.start();
                            var c = this.renderTexture,
                                d,
                                e,
                                f,
                                g =
                                (a.pixelBlock &&
                                    a.pixelBlock.pixels &&
                                    a.pixelBlock.pixels.length) ||
                                this.sourceRasterInfo.raster.bandCount,
                                r = a.pixelBlock,
                                u = this.gl,
                                t = u.drawingBufferWidth,
                                q = u.drawingBufferHeight;
                            if (!r && this.functionArguments.dra) {
                                var v = new Float32Array(t * q * 4),
                                    C = new Uint8Array(t * q);
                                e = new Float32Array(t * q);
                                f = new Float32Array(t * q);
                                var z = new Float32Array(t * q);
                                u.checkFramebufferStatus(u.FRAMEBUFFER) ==
                                    u.FRAMEBUFFER_COMPLETE &&
                                    u.readPixels(0, 0, t, q, u.RGBA, u.FLOAT, v);
                                for (d = 0; d < t * q; d++)
                                    (e[d] = v[4 * d]), (f[d] = v[4 * d + 1]), (z[d] =
                                        v[4 * d + 2]), (C[d] = v[4 * d + 3]);
                                a.pixelBlock = new b({
                                    width: t,
                                    height: q,
                                    pixels: [e, f, z],
                                    mask: C,
                                });
                                a.pixelBlock.calculateStatistics();
                            }!r && this.functionArguments.dra && this._useGPUStats ?
                                ((e = new Float32Array(g)), (f = new Float32Array(g))) :
                                (this._updateStatistisHistograms(
                                    a
                                ), (v = this._getCutOffPoints(a)), (e = new Float32Array(
                                    g
                                )), (f = new Float32Array(g)), e.set(
                                    v.minCutOff.slice(0, g)
                                ), f.set(v.maxCutOff.slice(0, g)));
                            this._initializeProgram({
                                fragment: h.stretch,
                                fragmentName: 'Stretch',
                            });
                            v = this._setupTextureData(a);
                            C = this.bindFrameBuffer();
                            this.renderTexture = !1;
                            var y, x;
                            this._performance.start();
                            !r &&
                                this.functionArguments.dra &&
                                this._useGPUStats &&
                                (this._setUniforms({
                                        u_sourceDim: [t, q],
                                        u_bandCount: g,
                                    }), 1 === g ?
                                    (y = this._readMinMax(v, 2)) :
                                    ((y = this._readMinMax(v, 0)), (x = this._readMinMax(
                                        v,
                                        1
                                    ))), 6 === this.functionArguments.stretchType ||
                                    (3 === this.functionArguments.stretchType &&
                                        this.functionArguments.dra)) &&
                                ((d = this._readHistogram(y, x, a)), (e =
                                    d.minCutOff || e), (f = d.minCutOff || f));
                            z = this.functionArguments.max - this.functionArguments.min;
                            a = new Float32Array(g);
                            for (d = 0; d < g; d++)
                                a[d] = z / (f[d] - e[d]);
                            this._useGPUStats &&
                                this._initializeProgram({
                                    fragment: h.stretch,
                                    fragmentName: 'Stretch',
                                });
                            u.blendFunc(u.SRC_ALPHA, u.ZERO);
                            var z = new Float32Array(3),
                                w = new Float32Array(3);
                            for (d = 0; 3 > d; d++)
                                (z[d] = this.functionArguments.min), (w[
                                    d
                                ] = this.functionArguments.max);
                            d = this.functionArguments.useGamma;
                            var A = this.functionArguments.gamma,
                                E = this._gammaCorrection;
                            (Array.isArray(A) && A.length >= g) || (d = !1);
                            this._setUniforms({
                                u_sourceDim: [t, q],
                                u_bandCount: g,
                                u_minOutput: z,
                                u_maxOutput: w,
                                u_minCutOff: e,
                                u_maxCutOff: f,
                                u_factor: a,
                                u_state: 100,
                                u_useGamma: d,
                                u_gamma: A,
                                u_scaled: !c,
                                u_gammaCorrection: E,
                                u_minMaxTexture: !r &&
                                    this.functionArguments.dra &&
                                    this._useGPUStats ?
                                    !0 :
                                    !1,
                            });
                            this.renderTexture = c;
                            u.viewport(0, 0, t, q);
                            this._bindTexture(v.texture, 'u_image');
                            !r &&
                                this.functionArguments.dra &&
                                this._useGPUStats &&
                                ((c = u.getUniformLocation(
                                        this.rasterProgram,
                                        'u_image1'
                                    )), u.uniform1i(c, 1), u.activeTexture(
                                        u.TEXTURE1
                                    ), u.bindTexture(u.TEXTURE_2D, y.texture), 1 < g &&
                                    ((g = u.getUniformLocation(
                                        this.rasterProgram,
                                        'u_image2'
                                    )), u.uniform1i(g, 2), u.activeTexture(
                                        u.TEXTURE2
                                    ), u.bindTexture(u.TEXTURE_2D, x.texture)));
                            this._drawGL();
                            return { extent: v.extent, texture: C.texture };
                        },
                        _readMinMax: function(a, b) {
                            var c = this.gl,
                                d = a.width || c.drawingBufferWidth,
                                e = a.height || c.drawingBufferHeight;
                            this._setUniforms({ u_state: b });
                            this.renderTexture = !1;
                            var h, f, k = a.texture;
                            for (c.activeTexture(c.TEXTURE0); 1 < d || 1 < e;)
                                (h = this._createTexture()), (b = Math.max(
                                    Math.ceil(d / 2),
                                    1
                                )), (f = Math.max(Math.ceil(e / 2), 1)), c.getExtension(
                                    'OES_texture_float'
                                ), c.texImage2D(
                                    c.TEXTURE_2D,
                                    0,
                                    c.RGBA,
                                    b,
                                    f,
                                    0,
                                    c.RGBA,
                                    c.FLOAT,
                                    null
                                ), (a = c.createFramebuffer()), c.bindFramebuffer(
                                    c.FRAMEBUFFER,
                                    a
                                ), c.framebufferTexture2D(
                                    c.FRAMEBUFFER,
                                    c.COLOR_ATTACHMENT0,
                                    c.TEXTURE_2D,
                                    h,
                                    0
                                ), c.viewport(0, 0, b, f), c.bindTexture(
                                    c.TEXTURE_2D,
                                    k
                                ), this._setUniforms({
                                    u_sourceDim: [d, e],
                                }), (d = b), (e = f), this._drawGL(!0), (k = h);
                            a = new Float32Array(d * e * 4);
                            c.checkFramebufferStatus(c.FRAMEBUFFER) ==
                                c.FRAMEBUFFER_COMPLETE &&
                                c.readPixels(0, 0, d, e, c.RGBA, c.FLOAT, a);
                            return { texture: h, minmax: a };
                        },
                        _readHistogram: function(a, b, c) {
                            if (a)
                                try {
                                    var d = this.gl,
                                        f = d.drawingBufferWidth,
                                        k = d.drawingBufferHeight,
                                        g,
                                        n,
                                        t,
                                        q,
                                        v,
                                        C,
                                        z;
                                    if (a.texture instanceof WebGLTexture)
                                        (z = !0), (q = [1, 0, 0, 1]), b ?
                                        ((v = a.minmax), (C = b.minmax)) :
                                        ((v = [a.minmax[0]]), (C = [a.minmax[1]]));
                                    else
                                        for (
                                            (C = b), (v = a), (q = new Float32Array(
                                                C.length
                                            )), (g = 0); g < C.length; g++
                                        )
                                            q[g] = 256 / (C[g] - v[g]);
                                    var y = new Float32Array(f * k);
                                    for (t = 0; t < y.length; t++)
                                        y[t] = t;
                                    if (!this.histogramProgram) {
                                        var x = e.getShader(d, e.histogram),
                                            w = h.getShader(d, h.constant);
                                        this.histogramProgram = this._loadProgram(x, w);
                                    }
                                    d.blendFunc(d.ONE, d.ONE);
                                    d.enable(d.BLEND);
                                    d.useProgram(this.histogramProgram);
                                    var A = d.getAttribLocation(
                                            this.histogramProgram,
                                            'a_pixelIndex'
                                        ),
                                        E = d.createBuffer();
                                    d.bindBuffer(d.ARRAY_BUFFER, E);
                                    d.bufferData(d.ARRAY_BUFFER, y, d.STATIC_DRAW);
                                    d.enableVertexAttribArray(A);
                                    d.vertexAttribPointer(A, 1, d.FLOAT, !1, 0, 0);
                                    var B = this._setupHistTexture(c),
                                        D = this._createTexture();
                                    d.getExtension('OES_texture_float');
                                    d.texImage2D(
                                        d.TEXTURE_2D,
                                        0,
                                        d.RGBA,
                                        257,
                                        1,
                                        0,
                                        d.RGBA,
                                        d.FLOAT,
                                        null
                                    );
                                    var H = d.createFramebuffer();
                                    d.bindFramebuffer(d.FRAMEBUFFER, H);
                                    d.framebufferTexture2D(
                                        d.FRAMEBUFFER,
                                        d.COLOR_ATTACHMENT0,
                                        d.TEXTURE_2D,
                                        D,
                                        0
                                    );
                                    d.viewport(0, 0, 257, 1);
                                    var G = d.getUniformLocation(
                                        this.histogramProgram,
                                        'u_image'
                                    );
                                    d.uniform1i(G, 0);
                                    d.activeTexture(d.TEXTURE0);
                                    d.bindTexture(d.TEXTURE_2D, B);
                                    var F = d.getUniformLocation(
                                        this.histogramProgram,
                                        'u_sourceDim'
                                    );
                                    d.uniform2f(F, f, k);
                                    var K = d.getUniformLocation(
                                        this.histogramProgram,
                                        'u_bandCount'
                                    );
                                    d.uniform1i(K, 3);
                                    var L = d.getUniformLocation(
                                        this.histogramProgram,
                                        'u_halfPixel'
                                    );
                                    d.uniform2f(L, 0.5 / f, 0.5 / k);
                                    var Q = d.getUniformLocation(
                                        this.histogramProgram,
                                        'u_minMaxTexture'
                                    );
                                    if (z) {
                                        d.uniform1i(Q, 1);
                                        var O = d.getUniformLocation(
                                            this.histogramProgram,
                                            'u_image1'
                                        );
                                        d.uniform1i(O, 1);
                                        d.activeTexture(d.TEXTURE1);
                                        d.bindTexture(d.TEXTURE_2D, a.texture);
                                        if (b) {
                                            var P = d.getUniformLocation(
                                                this.histogramProgram,
                                                'u_image2'
                                            );
                                            d.uniform1i(P, 2);
                                            d.activeTexture(d.TEXTURE2);
                                            d.bindTexture(d.TEXTURE_2D, b.texture);
                                        }
                                    } else {
                                        var J = d.getUniformLocation(
                                            this.histogramProgram,
                                            'u_mins'
                                        );
                                        d.uniform4f(J, v[0], v[0], v[0], v[0]);
                                        d.uniform1i(Q, 0);
                                    }
                                    var I = d.getUniformLocation(
                                            this.histogramProgram,
                                            'u_color'
                                        ),
                                        N = d.getUniformLocation(
                                            this.histogramProgram,
                                            'u_factors'
                                        ),
                                        M = d.getUniformLocation(this.histogramProgram, 'u_size');
                                    d.uniform1f(M, 256);
                                    a = [];
                                    b = [];
                                    var R;
                                    d.uniform4fv(I, [1, 0, 0, 1]);
                                    d.uniform4fv(N, [q[0], 0, 0, 1]);
                                    d.drawArrays(d.POINTS, 0, y.length);
                                    var Y = this.sourceRasterInfo.raster.bandCount;
                                    1 < Y &&
                                        (d.uniform4fv(I, [0, 1, 0, 1]), d.uniform4fv(N, [
                                            0,
                                            q[0],
                                            0,
                                            1,
                                        ]), d.drawArrays(d.POINTS, 0, y.length), d.uniform4fv(I, [
                                            0,
                                            0,
                                            1,
                                            1,
                                        ]), d.uniform4fv(N, [0, 0, q[0], 1]), d.drawArrays(
                                            d.POINTS,
                                            0,
                                            y.length
                                        ));
                                    if (
                                        d.checkFramebufferStatus(d.FRAMEBUFFER) ==
                                        d.FRAMEBUFFER_COMPLETE
                                    ) {
                                        R = new Float32Array(1028);
                                        d.readPixels(0, 0, 257, 1, d.RGBA, d.FLOAT, R);
                                        var Z,
                                            d = 0,
                                            U = -0.5 === v[0] && 1 === (C[0] - v[0]) / 256 ? 0.5 : 0;
                                        for (g = 0; g < Y; g++) {
                                            Z = new Float32Array(257);
                                            var V = new Float32Array(257);
                                            for (t = d = 0; 256 > t; t++)
                                                (d += R[4 * t + g]), (Z[t] = d), (V[t] = R[4 * t + g]);
                                            V[256] = R[1024 + g];
                                            Z[256] = d + R[1024 + g];
                                            var T = this.functionArguments.minPercent * d / 100;
                                            if (C) {
                                                for (n = 0; 256 > n; n++)
                                                    if (Z[n] > T) {
                                                        a[g] = v[0] + (C[0] - v[0]) / 256 * (n + U);
                                                        break;
                                                    }
                                                T = (1 - this.functionArguments.maxPercent / 100) * d;
                                                for (n = 254; 0 <= n; n--)
                                                    if (Z[n] < T) {
                                                        b[g] = v[0] + (C[0] - v[0]) / 256 * (n + 2 - U);
                                                        break;
                                                    }
                                            }
                                        }
                                    }
                                    return { histogram: R, minCutOff: a, maxCutOff: b };
                                } catch (ca) {}
                        },
                        _setupHistTexture: function(a) {
                            if (a instanceof WebGLTexture) return a;
                            var b = (this.originalHistTexture = this._createTexture()),
                                c = this.gl;
                            a = a.pixelBlock;
                            var d = a.width,
                                e = a.height;
                            c.getExtension('OES_texture_float');
                            this.rgbaFloatData = a.getAsRGBAFloat();
                            c.texImage2D(
                                c.TEXTURE_2D,
                                0,
                                c.RGBA,
                                d,
                                e,
                                0,
                                c.RGBA,
                                c.FLOAT,
                                this.rgbaFloatData
                            );
                            return b;
                        },
                    });
                }
            );
        },
        'esri/layers/rasterLib/function/RemapFunction': function() {
            define(
                'dojo/_base/declare dojo/_base/lang ../../../renderers/colorRampGenerator ./RasterFunctionX ./pixelShaders ./RasterFunctionWebGLMixin ./rasterUtils'.split(
                    ' '
                ),
                function(c, g, f, b, e, h, d) {
                    return c([b, h], {
                        declaredClass: 'esri.layers.rasterLib.function.RemapFunction',
                        functionName: 'Remap',
                        pixelType: 'U8',
                        renderTexture: !1,
                        supportWebGL: !0,
                        support2D: !0,
                        constructor: function(a) {
                            this.functionArguments = this.mixinIgnoreCase({
                                    inputRanges: null,
                                    outputValues: null,
                                    outputColors: null,
                                    colorBreaks: null,
                                    raster: null,
                                },
                                a
                            );
                        },
                        bind: function(a) {
                            a = this.getSourceRasterInfo(a);
                            if (!a.raster)
                                return Error('The raster input is not available.');
                            var b = !(!this.functionArguments.outputColors &&
                                !this.functionArguments.colorBreaks);
                            this.rasterInfo = g.mixin(a.raster, {
                                bandCount: b ? 3 : 1,
                                pixelType: this._calculatePixelType(this.pixelType, 'U8'),
                                statistics: null,
                                histograms: null,
                            });
                            this.rasterInfo.keyProperties = this.rasterInfo
                                .keyProperties || {};
                            this.rasterInfo.keyProperties.DataType = b ?
                                'Processed' :
                                'Thematic';
                            return !0;
                        },
                        read2D: function(a) {
                            return this._remap(a.raster);
                        },
                        readGL: function(a) {
                            return this._remapGL(a.raster);
                        },
                        _remap: function(a) {
                            this._performance.start();
                            var b = d.remapColor(
                                a.pixelBlock,
                                this.functionArguments.colorBreaks
                            );
                            this._addPerformanceMetric(this._performance.elapsed());
                            return { extent: a.extent, pixelBlock: b };
                        },
                        _remapGL: function(a) {
                            this._performance.start();
                            this._initializeProgram({
                                fragment: e.remap,
                                fragmentName: 'Remap',
                            });
                            var b = [],
                                c = this.functionArguments.colorBreaks;
                            c.forEach(function(a) {
                                b.push(a.mappedColor[0]);
                                b.push(a.mappedColor[1]);
                                b.push(a.mappedColor[2]);
                                b.push(
                                    1 >= a.mappedColor[3] ?
                                    255 * a.mappedColor[3] :
                                    a.mappedColor[3]
                                );
                            });
                            var d = new Float32Array(16);
                            c.forEach(function(a, b) {
                                d[b] = a.value;
                            });
                            d[15] = c[c.length - 1].value;
                            this._clrTexture ||
                                (this._clrTexture = this._setupColormapTexture(b));
                            var c = this._clrTexture,
                                h = this.bindFrameBuffer();
                            a = this._setupTextureData(a);
                            this._setUniforms({
                                u_indexedColormapOffset: 0,
                                u_indexedColormapMaxIndex: b.length / 4 - 1,
                                u_breaks: d,
                            });
                            this._bindTexture(c, 'u_image1');
                            this._bindTexture(a.texture, 'u_image');
                            this._drawGL();
                            return { extent: a.extent, texture: h.texture };
                        },
                        _setupColormapTexture: function(a) {
                            var b = this._createTexture(),
                                c = a.length / 4,
                                d = new Float32Array(a.length),
                                e = this.renderTexture ? 255 : 1,
                                h,
                                f = this.gl;
                            for (h = 0; h < a.length; h++)
                                d[h] = a[h] / e;
                            f.getExtension('OES_texture_float');
                            f.texImage2D(
                                f.TEXTURE_2D,
                                0,
                                f.RGBA,
                                c,
                                1,
                                0,
                                f.RGBA,
                                f.FLOAT,
                                d
                            );
                            return b;
                        },
                    });
                }
            );
        },
        'esri/layers/rasterLib/function/IdentityFunction': function() {
            define(
                [
                    'dojo/_base/declare',
                    'dojo/_base/lang',
                    './pixelShaders',
                    './RasterFunctionX',
                    './RasterFunctionWebGLMixin',
                ],
                function(c, g, f, b, e) {
                    return c([b, e], {
                        declaredClass: 'esri.layers.rasterLib.function.IdentityFunction',
                        functionName: 'Identity',
                        supportWebGL: !0,
                        support2D: !0,
                        constructor: function(b) {
                            this.functionArguments = { raster: null };
                        },
                        bind: function(b) {
                            b = this.getSourceRasterInfo(b);
                            if (!b.raster)
                                return Error(
                                    'The raster input to identity function is invalid.'
                                );
                            this.rasterInfo = g.mixin(b.raster, {});
                            return !0;
                        },
                        read2D: function(b) {
                            return b.raster;
                        },
                        readGL: function(b) {
                            this._initializeProgram({
                                fragment: f.identity,
                                fragmentName: 'identity',
                            });
                            b = this._setupTextureData(b.raster);
                            var c = this.bindFrameBuffer();
                            this._bindTexture(b.texture, 'u_image');
                            this._drawGL();
                            return { extent: b.extent, texture: c.texture };
                        },
                    });
                }
            );
        },
        'esri/layers/rasterLib/function/ResampleFunction': function() {
            define(
                [
                    'dojo/_base/declare',
                    'dojo/_base/lang',
                    './pixelShaders',
                    './RasterFunctionX',
                    './RasterFunctionWebGLMixin',
                ],
                function(c, g, f, b, e) {
                    return c([b, e], {
                        declaredClass: 'esri.layers.rasterLib.function.ResampleFunction',
                        renderTexture: !0,
                        resamplingType: 0,
                        resamplingOrigin: null,
                        resamplingRatio: null,
                        zFactor: 1,
                        functionName: 'Resample',
                        supportWebGL: !0,
                        support2D: !1,
                        constructor: function(b) {},
                        readGL: function(b) {
                            this._performance.start();
                            this._initializeProgram({
                                fragment: f.mask,
                                fragmentName: 'Mask',
                            });
                            var c = this._setupTextureData(b.raster),
                                a = this.bindFrameBuffer(),
                                e = this.gl;
                            e.bindTexture(e.TEXTURE_2D, c.texture);
                            var h, g = e.drawingBufferWidth,
                                e = e.drawingBufferHeight;
                            h = b.raster;
                            void 0 !== h.pixelBlock ?
                                ((c = c || this._setupTextureData(h)), (b =
                                    h.pixelBlock.width), (h = h.pixelBlock.height)) :
                                ((c = c || h), (b = g), (h = e));
                            this._setUniforms({
                                u_resamplingRatio: this.resamplingRatio || [b / g, h / e],
                                u_anchor: this.resamplingOrigin || [0, 1],
                                u_resamplingType: this.resamplingType,
                                u_resolution: [1 / g, 1 / e],
                            });
                            this._drawGL();
                            this._addPerformanceMetric(this._performance.elapsed());
                            return { extent: c.extent, texture: a.texture };
                        },
                    });
                }
            );
        },
        'esri/layers/rasterLib/renderer/rasterRendererHelper': function() {
            define(
                'dojo/_base/declare dojo/_base/lang ../../PixelBlock ./RasterColormapRenderer ./RasterUniqueValueRenderer ./RasterRGBRenderer ./RasterStretchColorRampRenderer ./RasterClassBreaksRenderer ./RasterShadedReliefRenderer'.split(
                    ' '
                ),
                function(c, g, f, b, e, h, d, a, k) {
                    var n = (function() {
                        function c(a) {
                            f[a.prototype.rendererName] = a;
                        }
                        var f = {};
                        c(b);
                        c(h);
                        c(d);
                        c(e);
                        c(a);
                        c(k);
                        return f;
                    })();
                    return {
                        wellKnownRenderers: n,
                        isSupported: function(a) {
                            if (!a) return !1;
                            var b = !0;
                            n[a.rendererName] || (b = !1);
                            return b;
                        },
                        create: function(a) {
                            if (!a) return null;
                            var b;
                            a.rendererName ?
                                ((b = a.rendererName), (a = a.rendererArguments)) :
                                ((b = 'uniqueValue rasterStretch rasterShadedRelief rgb rasterColormap classBreaks'
                                        .split(' ')
                                        .indexOf(
                                            a.type
                                        )), (b = 'UniqueValue Stretch ShadedRelief RGB Colormap ClassBreaks'.split(
                                        ' '
                                    )[b]), 'rasterStretch' === a.type &&
                                    a.bandIndex &&
                                    1 < a.bandIndex.length &&
                                    (b = 'RGB'));
                            return (b = n[b]) ? new b(a) : null;
                        },
                        createDefaultRenderer: function(a) {
                            if (a && a.raster) {
                                var b = a.raster.rasterInfo,
                                    c = a.raster.dataType;
                                if (b) {
                                    var f = a.raster.rasterFunction,
                                        g = ['Stretch', 'Colormap', 'ContrastAndBrightness'];
                                    if (
                                        f &&
                                        'U8' === b.pixelType &&
                                        -1 < g.indexOf(f.functionName)
                                    )
                                        f.renderTexture = !0;
                                    else if (
                                        'Processed' !== c ||
                                        !((a.useWebGL && f && f.renderTexture) ||
                                            (!a.useWebGL && 'U8' === b.pixelType))
                                    ) {
                                        f && (b = f.rasterInfo);
                                        var f = b.bandCount,
                                            k = b.colormap,
                                            l = b.vat,
                                            g = b.histograms,
                                            n;
                                        g && 0 === g.length && (g = null);
                                        var C =
                                            b.statistics &&
                                            b.statistics.map(function(a) {
                                                return [a.min, a.max, a.mean, a.stddev];
                                            }),
                                            z =
                                            b.keyProperties &&
                                            (b.keyProperties.bandProperties ||
                                                b.keyProperties.BandProperties);
                                        if (1 === f && k && 0 < k.length)
                                            n = this._getDefaultColormapRenderer(l, k);
                                        else if (
                                            1 === f &&
                                            l &&
                                            l.features &&
                                            0 < l.features.length
                                        )
                                            n = new e({});
                                        else {
                                            k = 0;
                                            l = !1;
                                            c ||
                                                !a.raster ||
                                                !a.raster.tileInfo ||
                                                (void 0 !== a.raster.tileInfo.tileType &&
                                                    'Map' !== a.raster.tileInfo.tileType) ?
                                                'U8' === b.pixelType && 'Processed' === c ?
                                                ((k = 5), (C = C || [
                                                    [0, 255, 0, 0],
                                                    [0, 255, 0, 0],
                                                    [0, 255, 0, 0],
                                                ]), (l = !1)) :
                                                'U8' === b.pixelType || 'Elevation' === c ?
                                                ((k = 5), (l = C ? !1 : !0)) :
                                                'Scientific' === c ?
                                                ((k = 5), (l = C ?
                                                    !1 :
                                                    !0), (n = this._getDefaultScientificColorRamp())) :
                                                g && 0 < g.length ?
                                                ((k = 6), (l = !1)) :
                                                C ?
                                                ((k = 5), (l = !1)) :
                                                ((k = 6), (l = !0)) :
                                                ((C = [
                                                    [0, 255, 0, 0],
                                                    [0, 255, 0, 0],
                                                    [0, 255, 0, 0],
                                                ]), (k = 5), (l = !1));
                                            C || ((k = 5), (l = !0));
                                            var y, x, w, A;
                                            if (
                                                3 <= f &&
                                                z &&
                                                !(a.bandIds ||
                                                    (a.raster &&
                                                        a.raster.imageServiceParams &&
                                                        a.raster.imageServiceParams.bandIds))
                                            ) {
                                                for (a = 0; a < z.length; a++)
                                                    z[a].BandName &&
                                                    'red' === z[a].BandName.toLowerCase() &&
                                                    (x = a), z[a].BandName &&
                                                    'green' === z[a].BandName.toLowerCase() &&
                                                    (w = a), z[a].BandName &&
                                                    'blue' === z[a].BandName.toLowerCase() &&
                                                    (A = a);
                                                void 0 !== x &&
                                                    void 0 !== w &&
                                                    void 0 !== A &&
                                                    (y = [x, w, A]);
                                            }
                                            2 === f && (y = [0, 0, 0]);
                                            y &&
                                                (C = y.map(function(a) {
                                                    return C[a];
                                                }));
                                            y = {
                                                stretchType: k,
                                                min: 0,
                                                max: 255,
                                                dra: l,
                                                minPercent: 0.25,
                                                maxPercent: 0.25,
                                                useGamma: !1,
                                                computeGamma: !1,
                                                statistics: C,
                                                histograms: g,
                                                numberOfStandardDeviations: 2.5,
                                                bandIndex: y,
                                            };
                                            1 === f ?
                                                (n &&
                                                    ((y.colorRamp = n), (y.invert = !0)), (n = new d(
                                                        y
                                                    ))) :
                                                (n = new h(y));
                                        }
                                        return n;
                                    }
                                }
                            }
                        },
                        _getDefaultColormapRenderer: function(a, c) {
                            if (c || c.length) {
                                var d = [],
                                    e = this._ratContainsColormap(a);
                                if (e) var f = this._getRATValueClassNameMap(a);
                                c.forEach(function(a) {
                                    var b = f ? f[a[0]] : a[0];
                                    d.push({
                                        color: [a[1], a[2], a[3]],
                                        value: a[0],
                                        label: e ? (null != b ? b : '') : a[0],
                                    });
                                });
                                return new b({ colormapInfos: d });
                            }
                        },
                        _ratContainsColormap: function(a) {
                            if (!a || !a.fields) return !1;
                            var b, c, d;
                            return a.fields.some(function(a) {
                                a &&
                                    a.name &&
                                    ((a = a.name.toLowerCase()), 'red' === a &&
                                        (b = !0), 'green' === a && (c = !0), 'blue' === a &&
                                        (d = !0));
                                return b && c && d;
                            });
                        },
                        _getRATValueClassNameMap: function(a) {
                            if (!a || !a.fields) return null;
                            var b = {},
                                c, d;
                            a.fields.forEach(function(a) {
                                if (
                                    'classname' === a.name.toLowerCase() ||
                                    'class_name' === a.name.toLowerCase()
                                )
                                    c = a.name;
                                'value' === a.name.toLowerCase() && (d = a.name);
                            });
                            a.features.forEach(function(a) {
                                a = a.attributes;
                                b[a[d]] = c ? a[c] : a[d];
                            });
                            return b;
                        },
                        _getDefaultScientificColorRamp: function() {
                            return {
                                type: 'multipart',
                                colorRamps: [
                                    { fromColor: [255, 0, 0], toColor: [255, 255, 0] },
                                    { fromColor: [255, 255, 0], toColor: [0, 255, 255] },
                                    { fromColor: [0, 255, 255], toColor: [0, 0, 255] },
                                ],
                            };
                        },
                    };
                }
            );
        },
        'esri/layers/rasterLib/renderer/RasterColormapRenderer': function() {
            define(
                [
                    'dojo/_base/declare',
                    'dojo/_base/lang',
                    './RasterRenderer',
                    '../function/ColormapFunction',
                ],
                function(c, g, f, b) {
                    return c([f], {
                        declaredClass: 'esri.layers.rasterLib.renderer.RasterColormapRenderer',
                        rendererName: 'Colormap',
                        renderTexture: !0,
                        constructor: function(c) {
                            c &&
                                c.colormapInfos &&
                                (c.colormap = c.colormapInfos.map(function(b) {
                                    return [b.value].concat(b.color);
                                }));
                            this._function = new b(c);
                            this._function.outputPixelType = 'U8';
                            this._function.renderTexture = !0;
                        },
                        draw2D: function(b) {
                            this._updateColormapParameters();
                            b = this._clonePixelData(b);
                            return (b = this._function._colorize(b));
                        },
                        drawGL: function(b) {
                            this._updateColormapParameters();
                            this._function._colorizeGL(b);
                        },
                        toJson: function() {
                            var b = this._function.toJson().rasterFunctionArguments;
                            return { rendererName: this.rendererName, rendererArguments: b };
                        },
                        toCommonRendererJson: function() {
                            return {
                                type: 'rasterColormap',
                                colormapInfos: this.colormapInfos ||
                                    this.colormap.map(function(b) {
                                        return { value: b[0], color: b.slice(1), label: b[0] };
                                    }),
                            };
                        },
                        _updateColormapParameters: function() {
                            var b = this._function.functionArguments;
                            b.colormap = this.colormap;
                            b.colormapName = this.colormapName;
                            b.colorRamp = this.colorRamp;
                            b.colorRampName = this.colorRampName;
                        },
                    });
                }
            );
        },
        'esri/layers/rasterLib/renderer/RasterRenderer': function() {
            define(
                [
                    'dojo/_base/declare',
                    'dojo/_base/lang',
                    '../../../geometry/Extent',
                    '../../PixelBlock',
                ],
                function(c, g, f, b) {
                    return c(null, {
                        declaredClass: 'esri.layers.rasterLib.renderer.RasterRenderer',
                        raster: null,
                        constructor: function(b) {
                            b = b || {};
                            this.raster = b.raster || b.Raster || this.raster;
                            this.draw = g.hitch(this, this.draw);
                            this.bind = g.hitch(this, this.bind);
                            b = g.clone(b);
                            Object.keys(b).forEach(function(c) {
                                null == b[c] && delete b[c];
                            });
                            g.mixin(this, b);
                        },
                        bind: function(b) {
                            if (!b) throw 'failed to bind without options';
                            var c = b;
                            b.layer &&
                                ((b = b.layer), (c = {
                                    id: b.id,
                                    rawRasterInfo: b.raster.rasterInfo,
                                    glSetting: b._glSetting,
                                    xformSetting: b.tileManager && b.tileManager.xformSetting,
                                    useWebGL: b.useWebGL,
                                    resampling: b.tileMode &&
                                        b.tileManager &&
                                        b.tileManager.xformSetting.requireProjection &&
                                        !b._hasTilingEffects &&
                                        'Thematic' !== b.raster.dataType ?
                                        1 :
                                        0,
                                    tileMode: b.tileMode,
                                }));
                            this._rawRasterInfo = c.rawRasterInfo;
                            this.useWebGL = c.useWebGL;
                            this._function &&
                                this._function.setProcessingContext(
                                    g.mixin({ useProcessedData: !0 }, c)
                                );
                            this._processingContext = c;
                        },
                        hasTilingEffects: function() {},
                        draw: function(b) {
                            return this.useWebGL ? this.drawGL(b) : this.draw2D(b);
                        },
                        toJson: function() {},
                        _clonePixelData: function(c) {
                            if (null == c) return c;
                            var e = {};
                            c.extent &&
                                (e.extent = new f(
                                    c.extent.xmin,
                                    c.extent.ymin,
                                    c.extent.xmax,
                                    c.extent.ymax,
                                    c.extent.spatialReference
                                ));
                            c = c.processedPixelBlock || c.pixelBlock;
                            if (null == c) return e;
                            e.pixelBlock = c.clone ? c.clone() : b.prototype.clone(c);
                            return e;
                        },
                    });
                }
            );
        },
        'esri/layers/rasterLib/renderer/RasterUniqueValueRenderer': function() {
            define(
                [
                    'dojo/_base/declare',
                    'dojo/_base/lang',
                    './RasterRenderer',
                    '../function/ColormapFunction',
                    '../../../renderers/colorRampGenerator',
                ],
                function(c, g, f, b, e) {
                    return c([f], {
                        declaredClass: 'esri.layers.rasterLib.renderer.RasterUniqueValueRenderer',
                        rendererName: 'UniqueValue',
                        field: '',
                        alias: '',
                        uniqueValueInfos: null,
                        constructor: function(c) {
                            c &&
                                c.colormap &&
                                ((this.colormap = c.colormap), (this._function = new b(
                                    c
                                )), (this._function.outputPixelType =
                                    'U8'), (this._function.renderTexture = !0));
                        },
                        bind: function(c) {
                            this.inherited(arguments);
                            if (!this._function) {
                                var d = ((this.raster && this.raster.rasterInfo) ||
                                    this._rawRasterInfo).vat;
                                if (!d)
                                    throw 'uv renderer requires data source to have raster attribute table';
                                var a = this.attributeField || this.field1 || this.field,
                                    f = this.infos || this.uniqueValueInfos;
                                this.defaultColor =
                                    this.defaultColor ||
                                    (this.defaultSymbol && this.defaultSymbol.color);
                                var h,
                                    g = d.fields.filter(function(a) {
                                        return 'value' === a.name.toLowerCase();
                                    })[0];
                                g && (h = g.name);
                                a ||
                                    ((a = d.fields.filter(function(a) {
                                            return (-1 < ['classname', 'category'].indexOf(a.name.toLowerCase()));
                                        })[0]) ||
                                        (a = d.fields.filter(function(a) {
                                            return 'esriFieldTypeString' === a.type;
                                        })[0]), (this.alias =
                                            ((this.field = a = (a && a.name) || h) && a.alias) || h));
                                var m = [],
                                    p, r, u, t, q, v;
                                if (!f) {
                                    f = [];
                                    u = d.fields.filter(function(a) {
                                        return 'alpha' === a.name.toLowerCase();
                                    })[0];
                                    t = d.fields.filter(function(a) {
                                        return 'red' === a.name.toLowerCase();
                                    })[0];
                                    q = d.fields.filter(function(a) {
                                        return 'green' === a.name.toLowerCase();
                                    })[0];
                                    v = d.fields.filter(function(a) {
                                        return 'blue' === a.name.toLowerCase();
                                    })[0];
                                    for (g = 0; g < d.features.length; g++)
                                        (r = d.features[g].attributes), (p = f.some(function(b) {
                                            b.value === r[a];
                                        })) ||
                                        (u && t && q && v ?
                                            f.push({
                                                value: r[a],
                                                alias: r[a],
                                                color: [r[t.name], r[q.name], r[v.name], r[u.name]],
                                            }) :
                                            t && q && v ?
                                            f.push({
                                                value: r[a],
                                                alias: r[a],
                                                color: [r[t.name], r[q.name], r[v.name]],
                                            }) :
                                            f.push({ value: r[a], alias: r[a] }));
                                    if (!(t && q && v))
                                        for (
                                            (p = e.createRandomColorRamp({ size: f.length })), (g = 0); g < f.length; g++
                                        )
                                            f[g].color = p[g];
                                    this.uniqueValueInfos = f;
                                }
                                if (f)
                                    f.forEach(function(b) {
                                        m = m.concat(
                                            d.features
                                            .filter(function(c) {
                                                return b.value == c.attributes[a];
                                            })
                                            .map(function(a) {
                                                return [a.attributes[h]].concat(
                                                    b.color || (b.symbol && b.symbol.color)
                                                );
                                            })
                                        );
                                    }), this.defaultColor &&
                                    d.features.filter(function(a) {
                                        m.some(function(b) {
                                                return b[0] === a.attributes[h];
                                            }) ||
                                            m.push([a.attributes[h]].concat(this.defaultColor));
                                    });
                                else throw 'missing uniqueValueInfos property';
                                this._function = new b({ colormap: m });
                                this.colormap = m;
                                this._function.outputPixelType = 'U8';
                                this._function.renderTexture = !0;
                                this._function.setProcessingContext(this._processingContext);
                            }
                        },
                        draw2D: function(b) {
                            b = this._clonePixelData(b);
                            return (b = this._function._colorize(b));
                        },
                        drawGL: function(b) {
                            this._function._colorizeGL(b);
                        },
                        toJson: function(b) {
                            var c = {
                                field: this.field,
                                uniqueValueInfos: this.uniqueValueInfos,
                                defaultColor: this.defaultColor,
                            };
                            b && (c.colormap = this.colormap);
                            return { rendererName: this.rendererName, rendererArguments: c };
                        },
                        toCommonRendererJson: function() {
                            var b = this.attributeField || this.field1 || this.field,
                                c = (this.infos || this.uniqueValueInfos).map(function(a) {
                                    return {
                                        value: a.value,
                                        label: a.alias,
                                        symbol: {
                                            color: 3 === a.color.length ?
                                                a.color.concat([255]) :
                                                a.color,
                                            type: 'esriSFS',
                                            style: 'esriSFSSolid',
                                        },
                                    };
                                });
                            return { type: 'uniqueValue', field1: b, uniqueValueInfos: c };
                        },
                    });
                }
            );
        },
        'esri/layers/rasterLib/renderer/RasterRGBRenderer': function() {
            define(
                'dojo/_base/declare dojo/_base/lang ./RasterRenderer ../function/StretchFunction ../function/ContrastBrightnessFunction ../function/rasterUtils'.split(
                    ' '
                ),
                function(c, g, f, b, e, h) {
                    return c([f], {
                        declaredClass: 'esri.layers.rasterLib.renderer.RasterRGBRenderer',
                        rendererName: 'RGB',
                        bandIndex: null,
                        stretchType: 0,
                        min: 0,
                        max: 255,
                        numberOfStandardDeviations: 2,
                        statistics: null,
                        histograms: null,
                        dra: !1,
                        minPercent: 0.25,
                        maxPercent: 0.5,
                        useGamma: !1,
                        gamma: null,
                        computeGamma: !1,
                        sigmoidStrengthLevel: 1,
                        constructor: function(c) {
                            this.stretchType = 'number' === typeof this.stretchType ?
                                this.stretchType :
                                'none   standardDeviation histogramEqualization minMax percentClip   sigmoid'
                                .split(' ')
                                .indexOf(this.stretchType);
                            c = g.mixin({}, c, { stretchType: this.stretchType });
                            this._function = new b(c);
                            this._function.outputPixelType = 'U8';
                            this._function.renderTexture = !1;
                            this.bandIndex = c.bandIndex || c.BandIndex;
                            this._cbFunction = new e(c);
                            this._cbFunction.functionArguments.raster = this._function;
                            this._cbFunction.renderTexture = !0;
                        },
                        hasTilingEffects: function() {
                            return this._function.hasTilingEffects();
                        },
                        draw2D: function(b) {
                            this._updateStretchParameters();
                            b = this._clonePixelData(b);
                            if (
                                'U8' === b.pixelBlock.pixelType &&
                                !this.contrastOffset &&
                                !this.brightnessOffset
                            )
                                return b;
                            this._function._stretch(b);
                            var a = b.pixelBlock,
                                c = this.bandIndex,
                                d = Math.max.apply(null, c);
                            a &&
                                a.pixels.length > d &&
                                c &&
                                ((a.pixels = c.map(function(b) {
                                        return a.pixels[b];
                                    })), a.statistics &&
                                    (a.statistics = c.map(function(b) {
                                        return a.statistics[b];
                                    })));
                            if (this.contrastOffset || this.brightnessOffset)
                                b.pixelBlock = h.contrastBrightnessStretch(b.pixelBlock, {
                                    contrastOffset: this.contrastOffset,
                                    brightnessOffset: this.brightnessOffset,
                                });
                            return b;
                        },
                        drawGL: function(b) {
                            this._updateStretchParameters();
                            b.pixelBlock && (b = this._clonePixelData(b));
                            var a = b.pixelBlock,
                                c = this.bandIndex,
                                d = Math.max.apply(null, c),
                                e = this.statistics && 0 < this.statistics.length ?
                                this.statistics :
                                this._function && this._function.srcStatistics,
                                f = this.histograms && 0 < this.histograms.length ?
                                this.histograms :
                                this._function && this._function.srcHistograms,
                                h,
                                g;
                            a &&
                                a.pixels.length > d &&
                                c &&
                                ((a.pixels = c.map(function(b) {
                                        return a.pixels[b];
                                    })), a.statistics &&
                                    (a.statistics = c.map(function(b) {
                                        return a.statistics[b];
                                    })), e &&
                                    0 < e.length &&
                                    e.length !== c.length &&
                                    (h = c.map(function(a) {
                                        return e[a];
                                    })), f &&
                                    0 < f.length &&
                                    f.length !== c.length &&
                                    (g = c.map(function(a) {
                                        return f[a];
                                    })));
                            this._function.functionArguments.statistics = h || e;
                            this._function.functionArguments.histograms = g || f;
                            this.contrastOffset || this.brightnessOffset ?
                                ((this._function.renderTexture = !1), (this._cbFunction.renderTexture = !0), (b = this._function._stretchGL(
                                    b
                                )), this._cbFunction._cbGL(b)) :
                                ((this._function.renderTexture = !0), this._function._stretchGL(
                                    b
                                ));
                        },
                        toJson: function() {
                            var b = this._function.toJson().rasterFunctionArguments;
                            b.bandIndex = this.bandIndex;
                            b.contrastOffset = this.contrastOffset;
                            b.brightnessOffset = this.brightnessOffset;
                            return { rendererName: this.rendererName, rendererArguments: b };
                        },
                        toCommonRendererJson: function() {
                            return {
                                type: 'rasterStretch',
                                stretchType: 'none   standardDeviation histogramEqualization minMax percentClip   sigmoid'.split(
                                    ' '
                                )[this.stretchType] || 'minMax',
                                min: this.min,
                                max: this.max,
                                numberOfStandardDeviations: this.numberOfStandardDeviations,
                                statistics: g.clone(this.statistics),
                                dra: this.dra,
                                minPercent: this.minPercent,
                                maxPercent: this.maxPercent,
                                useGamma: this.useGamma,
                                gamma: g.clone(this.gamma),
                                computeGamma: this.computeGamma,
                                sigmoidStrengthLevel: this.sigmoidStrengthLevel,
                            };
                        },
                        _updateStretchParameters: function() {
                            var b = this._function.functionArguments;
                            b.stretchType = this.stretchType;
                            b.min = this.min;
                            b.max = this.max;
                            b.numberOfStandardDeviations = this.numberOfStandardDeviations;
                            b.statistics = this.statistics;
                            b.histograms = this.histograms;
                            b.dra = this.dra;
                            b.minPercent = this.minPercent;
                            b.maxPercent = this.maxPercent;
                            b.useGamma = this.useGamma;
                            b.gamma = this.gamma;
                            b.computeGamma = this.computeGamma;
                        },
                    });
                }
            );
        },
        'esri/layers/rasterLib/renderer/RasterStretchColorRampRenderer': function() {
            define(
                'dojo/_base/declare dojo/_base/lang ./RasterRenderer ../function/StretchFunction ../function/ContrastBrightnessFunction ../function/ColormapFunction ../function/rasterUtils'.split(
                    ' '
                ),
                function(c, g, f, b, e, h, d) {
                    return c([f], {
                        declaredClass: 'esri.layers.rasterLib.renderer.RasterStretchColorRampRenderer',
                        rendererName: 'Stretch',
                        bandIndex: [0],
                        colorRamp: null,
                        invert: !1,
                        stretchType: 0,
                        min: 0,
                        max: 255,
                        numberOfStandardDeviations: 2,
                        statistics: null,
                        histograms: null,
                        dra: !1,
                        minPercent: 0.25,
                        maxPercent: 0.5,
                        useGamma: !1,
                        gamma: null,
                        computeGamma: !1,
                        sigmoidStrengthLevel: 1,
                        constructor: function(a) {
                            this.stretchType = 'number' === typeof this.stretchType ?
                                this.stretchType :
                                'none   standardDeviation histogramEqualization minMax percentClip   sigmoid'
                                .split(' ')
                                .indexOf(this.stretchType);
                            a = g.mixin({}, a, { stretchType: this.stretchType });
                            Object.keys(a).forEach(function(b) {
                                null == a[b] && delete a[b];
                            });
                            this._function = new e(a);
                            this._stretchFunction = new b(a);
                            this._stretchFunction.outputPixelType = 'U8';
                            this._stretchFunction.renderTexture = !1;
                            this._clrFunction = new h(a);
                            this._clrFunction.functionArguments.raster = this._stretchFunction;
                            this._clrFunction.renderTexture = !1;
                            this._function.functionArguments.raster = this._clrFunction;
                        },
                        hasTilingEffects: function() {
                            return this._stretchFunction.hasTilingEffects();
                        },
                        draw2D: function(a) {
                            this._updateStretchParameters();
                            a = this._clonePixelData(a);
                            if (
                                'U8' === a.pixelBlock.pixelType &&
                                !(this.contrastOffset ||
                                    this.brightnessOffset ||
                                    this.colorRamp)
                            )
                                return a;
                            this._stretchFunction._stretch(a);
                            var b = a.pixelBlock,
                                c = this.bandIndex ? this.bandIndex[0] : 0;
                            b &&
                                1 < b.pixels.length &&
                                b.pixels.length > c &&
                                ((b.pixels = [b.pixels[c]]), b.statistics &&
                                    (b.statistics = [b.statistics[c]]));
                            this.colorRamp && (a = this._clrFunction._colorize(a));
                            if (this.contrastOffset || this.brightnessOffset)
                                a.pixelBlock = d.contrastBrightnessStretch(a.pixelBlock, {
                                    contrastOffset: this.contrastOffset,
                                    brightnessOffset: this.brightnessOffset,
                                });
                            return a;
                        },
                        drawGL: function(a) {
                            this._updateStretchParameters();
                            var b = a.pixelBlock,
                                c = this.bandIndex ? this.bandIndex[0] || 0 : 0,
                                d = this.statistics && 0 < this.statistics.length ?
                                this.statistics :
                                this._stretchFunction &&
                                this._stretchFunction.srcStatistics,
                                e = this.histograms && 0 < this.histograms.length ?
                                this.histograms :
                                this._stretchFunction &&
                                this._stretchFunction.srcHistograms,
                                f,
                                h;
                            b &&
                                1 < b.pixels.length &&
                                b.pixels.length > c &&
                                ((b.pixels = [b.pixels[c]]), b.statistics &&
                                    (b.statistics = [b.statistics[c]]), d &&
                                    d.length > c &&
                                    (f = [d[c]]), e && e.length > c && (h = [e[c]]));
                            this._stretchFunction.functionArguments.statistics = f || d;
                            this._stretchFunction.functionArguments.histograms = h || e;
                            b = !!this.colorRamp;
                            this.contrastOffset || this.brightnessOffset ?
                                ((this._stretchFunction.renderTexture = !1), (this._clrFunction.renderTexture = !1), (this._function.renderTexture = !0), (a = this._stretchFunction._stretchGL(
                                        a
                                    )), b &&
                                    (a = this._clrFunction._colorizeGL(
                                        a
                                    )), this._function._cbGL(a)) :
                                b ?
                                ((this._stretchFunction.renderTexture = !1), (this._clrFunction.renderTexture = !0), (a = this._stretchFunction._stretchGL(
                                    a
                                )), this._clrFunction._colorizeGL(a)) :
                                ((this._stretchFunction.renderTexture = !0), this._stretchFunction._stretchGL(
                                    a
                                ));
                        },
                        toJson: function() {
                            var a = this._stretchFunction.toJson().rasterFunctionArguments;
                            a.colorRamp = this.colorRamp || '';
                            this.invert && (a.invert = !0);
                            a.contrastOffset = this.contrastOffset;
                            a.brightnessOffset = this.brightnessOffset;
                            return { rendererName: this.rendererName, rendererArguments: a };
                        },
                        toCommonRendererJson: function() {
                            return {
                                type: 'rasterStretch',
                                stretchType: 'none   standardDeviation histogramEqualization minMax percentClip   sigmoid'.split(
                                    ' '
                                )[this.stretchType] || 'minMax',
                                colorRamp: this.colorRamp && this.colorRamp.toJson ?
                                    this.colorRamp.toJson() :
                                    this.colorRamp,
                                min: this.min,
                                max: this.max,
                                numberOfStandardDeviations: this.numberOfStandardDeviations,
                                statistics: g.clone(this.statistics),
                                dra: this.dra,
                                minPercent: this.minPercent,
                                maxPercent: this.maxPercent,
                                useGamma: this.useGamma,
                                gamma: g.clone(this.gamma),
                                computeGamma: this.computeGamma,
                                sigmoidStrengthLevel: this.sigmoidStrengthLevel,
                            };
                        },
                        _updateStretchParameters: function() {
                            var a = this._stretchFunction.functionArguments;
                            a.stretchType = this.stretchType;
                            a.min = this.min;
                            a.max = this.max;
                            a.numberOfStandardDeviations = this.numberOfStandardDeviations;
                            a.statistics = this.statistics;
                            a.histograms = this.histograms;
                            a.dra = this.dra;
                            a.minPercent = this.minPercent;
                            a.maxPercent = this.maxPercent;
                            a.useGamma = this.useGamma;
                            a.gamma = this.gamma;
                            a.computeGamma = this.computeGamma;
                        },
                    });
                }
            );
        },
        'esri/layers/rasterLib/renderer/RasterClassBreaksRenderer': function() {
            define(
                [
                    'dojo/_base/declare',
                    'dojo/_base/lang',
                    './RasterRenderer',
                    '../function/ColormapFunction',
                    '../function/RemapFunction',
                ],
                function(c, g, f, b, e) {
                    return c([f], {
                        declaredClass: 'esri.layers.rasterLib.renderer.RasterClassBreaksRenderer',
                        rendererName: 'ClassBreaks',
                        renderTexture: !0,
                        constructor: function(b) {
                            b = b || {};
                            this._function = new e(b);
                            this._function.outputPixelType = 'U8';
                            var c = b.classBreakInfos;
                            b = b.minValue;
                            null != b &&
                                c &&
                                (this._function.functionArguments.colorBreaks = this._getSortedColorBreaks(
                                    b,
                                    c
                                ));
                        },
                        bind: function(c) {
                            this.inherited(arguments);
                            this.isColormapFunction = !1;
                            var d =
                                (this.raster && this.raster.rasterInfo) || this._rawRasterInfo,
                                a = d && d.vat;
                            if (
                                a &&
                                'u8' === d.pixelType.toLowerCase() &&
                                this.classBreakInfos
                            ) {
                                var e, f = this.field;
                                if (
                                    (d = a.fields.filter(function(a) {
                                        return 'value' === a.name.toLowerCase();
                                    })[0])
                                )
                                    e = d.name;
                                var h = a.features.sort(function(a, b) {
                                    return (
                                        parseFloat(a.attributes[f]) - parseFloat(b.attributes[f])
                                    );
                                })[0].attributes[f];
                                this.isColormapFunction = !0;
                                var m = [],
                                    p = this.field,
                                    r = this.classBreakInfos;
                                r.forEach(function(b, c) {
                                    a.features.forEach(function(a) {
                                        var d = (r[c - 1] && r[c - 1].classMaxValue) || h;
                                        a.attributes[p] <= b.classMaxValue &&
                                            (a.attributes[p] > d || a.attributes[p] === h) &&
                                            ((d = b.symbol.color), m.some(function(b) {
                                                return b[0] === a.attributes[e];
                                            }) || m.push([a.attributes[e]].concat(d)));
                                    });
                                });
                                this._function = new b({ colormap: m });
                                this.colormap = m;
                                this._function.outputPixelType = 'U8';
                                this._function.renderTexture = !0;
                            }
                            this._function &&
                                this._function.setProcessingContext(
                                    g.mixin({ useProcessedData: !0 }, this._processingContext)
                                );
                        },
                        draw2D: function(b) {
                            if (this.isColormapFunction)
                                return this._updateColormapParameters(), (b = this._clonePixelData(
                                    b
                                )), (b = this._function._colorize(b));
                            this._updateRemapParameters();
                            return this._function._remap(b);
                        },
                        drawGL: function(b) {
                            this.isColormapFunction ?
                                (this._updateColormapParameters(), this._function._colorizeGL(
                                    b
                                )) :
                                ((this._function.renderTexture = !0), this._updateRemapParameters(), this._function._remapGL(
                                    b
                                ));
                        },
                        toJson: function() {
                            var b = this._function.toJson().rasterFunctionArguments;
                            return { rendererName: this.rendererName, rendererArguments: b };
                        },
                        toCommonRendererJson: function() {
                            var b, c = this.classBreakInfos,
                                a = this.colorBreaks;
                            if (null == c && a)
                                for ((c = []), (b = 0); b < a.length - 1; b++)
                                    c.push({
                                        classMaxValue: a[b + 1].value,
                                        symbol: {
                                            color: a[b].mappedColor,
                                            type: 'esriSFS',
                                            style: 'esriSFSSolid',
                                        },
                                        label: a[b].value + ' - ' + a[b + 1].value,
                                    });
                            return {
                                type: 'classBreaks',
                                field: 'Value',
                                minValue: null != this.minValue ? this.minValue : a[0].value,
                                classBreakInfos: c,
                            };
                        },
                        _updateRemapParameters: function() {
                            var b = this.classBreakInfos,
                                c = this.minValue;
                            null != c &&
                                b &&
                                (this._function.functionArguments.colorBreaks = this._getSortedColorBreaks(
                                    c,
                                    b
                                ));
                        },
                        _getSortedColorBreaks: function(b, c) {
                            c = c
                                .map(function(a) {
                                    return {
                                        maxValue: a.classMaxValue,
                                        color: a.symbol.color,
                                    };
                                })
                                .sort(function(a, b) {
                                    return a.maxValue - b.maxValue;
                                });
                            var a = [{ value: b, mappedColor: c[0].color }];
                            for (b = 0; b < c.length; b++)
                                a.push({
                                    value: c[b].maxValue,
                                    mappedColor: b === c.length - 1 ? c[b].color : c[b + 1].color,
                                });
                            return a;
                        },
                        _updateColormapParameters: function() {
                            this._function.functionArguments.colormap = this.colormap;
                        },
                    });
                }
            );
        },
        'esri/layers/rasterLib/renderer/RasterShadedReliefRenderer': function() {
            define(
                'dojo/_base/declare dojo/_base/lang ./RasterRenderer ../function/HillshadeFunction ../function/ContrastBrightnessFunction ../function/ColormapFunction ../function/rasterUtils'.split(
                    ' '
                ),
                function(c, g, f, b, e, h, d) {
                    return c([f], {
                        declaredClass: 'esri.layers.rasterLib.renderer.RasterShadedReliefRenderer',
                        rendererName: 'ShadedRelief',
                        hillshadeType: null,
                        azimuth: 315,
                        altitude: 45,
                        zFactor: 1,
                        slopeType: null,
                        psPower: 0.664,
                        psFactor: 0.024,
                        raster: null,
                        constructor: function(a) {
                            this.hillshadeType = 'number' === typeof this.hillshadeType ?
                                this.hillshadeType :
                                ['traditional', 'multi-directional'].indexOf(
                                    this.hillshadeType
                                );
                            a &&
                                a.scalingType &&
                                (this.slopeType = 'adjusted' === a.scalingType ? 3 : 1);
                            a && a.pixelSizePower && (this.psPower = a.pixelSizePower);
                            a && a.pixelSizeFactor && (this.psFactor = a.pixelSizeFactor);
                            a = g.mixin({}, a, {
                                hillshadeType: this.hillshadeType,
                                psPower: this.psPower,
                                psFactor: this.psFactor,
                                slopeType: this.slopeType,
                            });
                            Object.keys(a).forEach(function(b) {
                                null == a[b] && delete a[b];
                            });
                            this._function = new e(a);
                            this._hillshadeFunction = new b(a);
                            this._hillshadeFunction.outputPixelType = 'U8';
                            this._hillshadeFunction.renderTexture = !1;
                            this._function.functionArguments.raster = this._hillshadeFunction;
                        },
                        hasTilingEffects: function() {
                            return this._hillshadeFunction.hasTilingEffects();
                        },
                        draw2D: function(a) {
                            this._updateHillshadeParameters();
                            a = this._clonePixelData(a);
                            a = this._hillshadeFunction.read2D({ raster: a });
                            if (this.contrastOffset || this.brightnessOffset)
                                a.pixelBlock = d.contrastBrightnessStretch(a.pixelBlock, {
                                    contrastOffset: this.contrastOffset,
                                    brightnessOffset: this.brightnessOffset,
                                });
                            return a;
                        },
                        drawGL: function(a) {
                            this._updateHillshadeParameters();
                            this.contrastOffset || this.brightnessOffset ?
                                ((this._hillshadeFunction.renderTexture = !1), (this._function.renderTexture = !0), (a = this._hillshadeFunction.readGL({ raster: a })), this._function._cbGL(a)) :
                                ((this._hillshadeFunction.renderTexture = !0), this._hillshadeFunction.readGL({ raster: a }));
                        },
                        toJson: function() {
                            var a = this._hillshadeFunction.toJson().rasterFunctionArguments;
                            a.colorRamp = this.colorRamp || '';
                            this.invert && (a.invert = !0);
                            a.contrastOffset = this.contrastOffset;
                            a.brightnessOffset = this.brightnessOffset;
                            return { rendererName: this.rendererName, rendererArguments: a };
                        },
                        toCommonRendererJson: function() {
                            return {
                                type: 'rasterShadedRelief',
                                hillshadeType: ['traditional', 'multi-directional'][
                                    this.hillshadeType
                                ] || 'traditional',
                                azimuth: this.azimuth,
                                altitude: this.altitude,
                                zFactor: this.zFactor,
                                scalingType: 3 === this.slopeType ? 'adjusted' : 'none',
                                pixelSizePower: this.psPower,
                                pixelSizeFactor: this.psFactor,
                                colorRamp: this.colorRamp && this.colorRamp.toJson ?
                                    this.colorRamp.toJson() :
                                    this.colorRamp,
                            };
                        },
                        _updateHillshadeParameters: function() {
                            var a = this._hillshadeFunction.functionArguments;
                            a.hillshadeType = this.hillshadeType;
                            a.azimuth = this.azimuth;
                            a.altitude = this.altitude;
                            a.zFactor = this.zFactor;
                            a.slopeType = this.slopeType;
                            a.psPower = this.psPower;
                            a.psFactor = this.psFactor;
                        },
                    });
                }
            );
        },
        'esri/layers/rasterLib/raster/rasterProjectionHelper': function() {
            define(
                'dojo/_base/declare dojo/_base/lang dojo/_base/Deferred dojo/sniff ../../../kernel ../../../geometry/Extent ../../../geometry/projection ../../../geometry/webMercatorUtils ../../../SpatialReference ../../../geometry/Point'.split(
                    ' '
                ),
                function(c, g, f, b, e, h, d, a, k, n) {
                    c = {
                        requirePE: function(a, b) {
                            return !(a.equals(b) || a._canProject(b));
                        },
                        load: function() {
                            var a = new f();
                            if (!this._loadPromise)
                                if (d.isSupported()) this._loadPromise = d.load();
                                else {
                                    var b = new f();
                                    b.reject(
                                        'projection engine is not supported on this version of the browser, please try with a modern browser'
                                    );
                                    this._loadPromise = b.promise;
                                }
                            this._loadPromise.isFulfilled() ?
                                this._loadPromise.isResolved() ?
                                a.resolve() :
                                this._loadPromise.isRejected() && a.resolve() :
                                ((this._pendingdfds = this
                                    ._pendingdfds || []), this._pendingdfds.push(
                                    a
                                ), this._loadPromise.then(
                                    g.hitch(this, function() {
                                        this._pendingdfds.forEach(function(a) {
                                            a.isFulfilled() || a.resolve();
                                        });
                                    }),
                                    g.hitch(this, function() {
                                        this._pendingdfds.forEach(function(a) {
                                            a.isFulfilled() || a.reject();
                                        });
                                    })
                                ));
                            return a.promise;
                        },
                        computeError: function(a, b) {
                            return [
                                Math.abs(
                                    (a[0] + a[4] + a[4 * b.rows] + a[4 * b.rows + 4]) / 4 -
                                    a[2 * b.rows + 2]
                                ),
                                Math.abs(
                                    (a[1] + a[5] + a[4 * b.rows + 1] + a[4 * b.rows + 5]) / 4 -
                                    a[2 * b.rows + 3]
                                ),
                            ];
                        },
                        project: function(b, c) {
                            if (!c || b.spatialReference.equals(c)) return b;
                            var e = d.isLoaded() ? d : a;
                            'esri.geometry.Extent' === b.declaredClass ?
                                (b = new h(b.toJson())) :
                                'esri.geometry.Point' === b.declaredClass &&
                                (b = new n(b.toJson()));
                            c = new k(c.toJson());
                            (b = e.project(b, c)) &&
                            'esri.geometry.Extent' === b.declaredClass ?
                                (b = new h(b.toJson())) :
                                b &&
                                'esri.geometry.Point' === b.declaredClass &&
                                (b = new n(b.toJson()));
                            return b;
                        },
                        projectResolution: function(a, b, c) {
                            var d = c.xmin + (c.xmax - c.xmin) / 2;
                            c = c.ymin + (c.ymax - c.ymin) / 2;
                            a = new h(d, c, d + a.x, c + a.y, a.spatialReference);
                            a = this.project(a, b);
                            return new n(a.xmax - a.xmin, a.ymax - a.ymin, b);
                        },
                        getProjectionOffsetGrid: function(b, c, e, f, h, g) {
                            null == g && (g = [32, 32]);
                            var k = b.xmin,
                                l = b.ymin;
                            f = b.xmax;
                            h = b.ymax;
                            var p = b.spatialReference,
                                m = c.spatialReference,
                                t = d.isLoaded() ? d : a,
                                r = c.spatialReference._getInfo(),
                                u = r && r.valid[0],
                                A = r && r.valid[1],
                                E = g[0] * e.x,
                                B = g[1] * e.y;
                            e = {
                                cols: Math.ceil((f - k) / E) + 1,
                                rows: Math.ceil((h - l) / B) + 1,
                            };
                            var D;
                            b = [];
                            var H, G;
                            for (f = 0; f < e.cols; f++)
                                for ((H = G), (G = []), (h = 0); h < e.rows; h++) {
                                    D = new n({ x: k + E * f, y: l + B * h, spatialReference: p });
                                    D = t.project(D, m);
                                    if (!D) return null;
                                    G.push(D);
                                    0 < f && r && D.x < H[h].x && (D.x += A - u);
                                    b.push((D.x - c.xmin) / (c.xmax - c.xmin));
                                    b.push((D.y - c.ymin) / (c.ymax - c.ymin));
                                }
                            c = this.computeError(b, e);
                            G = new Float32Array((e.cols - 1) * (e.rows - 1) * 12);
                            k = new Float32Array([-0, -1, 1, -1, 1, -0, 1, -0, -0]);
                            l = new Float32Array([-1, 1, 0, 0, -1, 1, 1, 0, 0]);
                            for (f = 0; f < e.cols - 1; f++)
                                for (h = 0; h < e.rows - 1; h++) {
                                    B = f * e.rows * 2 + 2 * h;
                                    p = b[B];
                                    m = b[B + 1];
                                    t = b[B + 2];
                                    r = b[B + 3];
                                    B += 2 * e.rows;
                                    u = b[B];
                                    A = b[B + 1];
                                    E = b[B + 2];
                                    H = b[B + 3];
                                    D = 0;
                                    for (var F = 12 * (h * (e.cols - 1) + f), B = 0; 3 > B; B++)
                                        G[F++] = k[D++] * p + k[D++] * t + k[D++] * E;
                                    for (B = D = 0; 3 > B; B++)
                                        G[F++] = k[D++] * m + k[D++] * r + k[D++] * H;
                                    for (B = D = 0; 3 > B; B++)
                                        G[F++] = l[D++] * p + l[D++] * u + l[D++] * E;
                                    for (B = D = 0; 3 > B; B++)
                                        G[F++] = l[D++] * m + l[D++] * A + l[D++] * H;
                                }
                            return {
                                offsets: b,
                                error: c,
                                coefficients: G,
                                spacing: g,
                                size: [e.cols - 1, e.rows - 1],
                            };
                        },
                    };
                    g.setObject('layers.rasterLib.raster.rasterProjectionHelper', c, e);
                    return c;
                }
            );
        },
        'esri/geometry/projection': function() {
            define(
                'require exports dojo/Deferred ./pe ../SpatialReference ./GeographicTransformation'.split(
                    ' '
                ),
                function(c, g, f, b, e, h) {
                    function d(b, c, d, f, g) {
                        void 0 === f && (f = null);
                        void 0 === g && (g = !1);
                        if (null === f) {
                            var q = h.cacheKey(c, d);
                            void 0 !== l[q] ?
                                (f = l[q]) :
                                ((f = a(c, d, null)), null === f && (f = new h()), (l[
                                    q
                                ] = f));
                        }
                        return k._project(
                            b,
                            c,
                            d instanceof e || !1 === g ? d : new e(d),
                            f,
                            g
                        );
                    }

                    function a(a, b, c) {
                        void 0 === c && (c = null);
                        a = k._getTransformation(a, b, c);
                        return null !== a ? h.fromGE(a) : null;
                    }
                    Object.defineProperty(g, '__esModule', { value: !0 });
                    var k = null;
                    g.isLoaded = function() {
                        return !!k && b.isLoaded();
                    };
                    g.isSupported = function() {
                        return b.isSupported();
                    };
                    var n = null;
                    g.load = function() {
                        if (n) return n.promise;
                        n = new f();
                        var a = b.load();
                        c(['./geometryEngine'], function(c) {
                            k = c;
                            a.then(
                                function() {
                                    k._enableProjection(b);
                                    n.resolve();
                                },
                                function(a) {
                                    n.reject(a);
                                }
                            );
                        });
                        return n.promise;
                    };
                    g.project = function(a, b, c) {
                        void 0 === c && (c = null);
                        return a instanceof Array ?
                            0 === a.length ? [] : d(a, a[0].spatialReference, b, c) :
                            d([a], a.spatialReference, b, c)[0];
                    };
                    var l = {};
                    g.projectMany = d;
                    g.getTransformation = a;
                    g.getTransformations = function(a, b, c) {
                        void 0 === c && (c = null);
                        a = k._getTransformationBySuitability(a, b, c);
                        if (null !== a) {
                            b = [];
                            for (c = 0; c < a.length; c++)
                                b.push(h.fromGE(a[c]));
                            return b;
                        }
                        return [];
                    };
                }
            );
        },
        'esri/geometry/pe': function() {
            define(
                [
                    'require',
                    'exports',
                    '../core/tsSupport/extendsHelper',
                    'dojo/Deferred',
                    '../core/sniff',
                ],
                function(c, g, f, b, e) {
                    function h(a) {
                        function b(a, b, c) {
                            a[b] = c(a[b]);
                        }
                        g._pe = a;
                        m.init();
                        p.init();
                        r.init();
                        u.init();
                        t.init();
                        g.PeGCSExtent = (function(a) {
                            function b() {
                                return (null !== a && a.apply(this, arguments)) || this;
                            }
                            f(b, a);
                            b.prototype.destroy = function() {
                                g._pe.destroy(this);
                            };
                            return b;
                        })(g._pe.PeGCSExtent);
                        for (
                            var c = 0,
                                d = [
                                    g._pe.PeDatum,
                                    g._pe.PeGeogcs,
                                    g._pe.PeGeogtran,
                                    g._pe.PeObject,
                                    g._pe.PeParameter,
                                    g._pe.PePrimem,
                                    g._pe.PeProjcs,
                                    g._pe.PeSpheroid,
                                    g._pe.PeUnit,
                                ]; c < d.length; c++
                        )
                            (a = d[c]), b(a.prototype, 'getName', function(a) {
                                return function() {
                                    return a.call(this, Array(m.PE_NAME_MAX));
                                };
                            });
                        c = 0;
                        for (d = [g._pe.PeGeogtran, g._pe.PeProjcs]; c < d.length; c++)
                            (a = d[c]), b(a.prototype, 'getParameters', function(a) {
                                return function() {
                                    for (
                                        var b = Array(m.PE_PARM_MAX), c = a.call(this), d = 0; d < b.length; d++
                                    ) {
                                        var e = g._pe.getValue(c, '*');
                                        b[d] = e ? g._pe.wrapPointer(e, g._pe.PeParameter) : null;
                                        c += Int32Array.BYTES_PER_ELEMENT;
                                    }
                                    return b;
                                };
                            });
                        b(g._pe.PeHorizon.prototype, 'getCoord', function(a) {
                            return function() {
                                var b = this.getSize();
                                if (!b) return null;
                                var c = [],
                                    d = a.call(this);
                                n(c, b, d);
                                return c;
                            };
                        });
                        b(g._pe.PeGTlistExtendedEntry.prototype, 'getEntries', function(
                            a
                        ) {
                            var b = g._pe._pe_getPeGTlistExtendedGTsSize();
                            return function() {
                                var c = null,
                                    d = a.call(this);
                                if (!g._pe.compare(d, g._pe.NULL)) {
                                    var c = [d],
                                        e = this.getSteps();
                                    if (1 < e)
                                        for (var d = g._pe.getPointer(d), f = 1; f < e; f++)
                                            c.push(
                                                g._pe.wrapPointer(d + b * f, g._pe.PeGTlistExtendedGTs)
                                            );
                                }
                                return c;
                            };
                        });
                        var e = g._pe._pe_getPeHorizonSize();
                        a = function(a) {
                            return function() {
                                var b = this._cache;
                                b || (this._cache = b = new Map());
                                if (b.has(a)) return b.get(a);
                                var c = null,
                                    d = a.call(this);
                                if (!g._pe.compare(d, g._pe.NULL)) {
                                    var c = [d],
                                        f = d.getNump();
                                    if (1 < f)
                                        for (var d = g._pe.getPointer(d), h = 1; h < f; h++)
                                            c.push(g._pe.wrapPointer(d + e * h, g._pe.PeHorizon));
                                }
                                b.set(a, c);
                                return c;
                            };
                        };
                        b(g._pe.PeProjcs.prototype, 'horizonGcsGenerate', a);
                        b(g._pe.PeProjcs.prototype, 'horizonPcsGenerate', a);
                        g._pe.PeObject.prototype.toString = function(a) {
                            void 0 === a && (a = m.PE_STR_OPTS_NONE);
                            g._pe.ensureCache.prepare();
                            var b = g._pe.getPointer(this),
                                c = g._pe.ensureInt8(Array(m.PE_BUFFER_MAX));
                            return g._pe.UTF8ToString(
                                g._pe._pe_object_to_string_ext(b, a, c)
                            );
                        };
                    }

                    function d(a) {
                        if (a) {
                            var b = g._pe.getClass(a);
                            b &&
                                (b = g._pe.getCache(b)) &&
                                (a = g._pe.getPointer(a)) &&
                                delete b[a];
                        }
                    }

                    function a(a, b) {
                        var c = [];
                        b = Array(b);
                        for (var d = 0; d < a; d++)
                            c.push(g._pe.ensureInt8(b));
                        return c;
                    }

                    function k(a) {
                        var b;
                        Array.isArray(a[0]) ?
                            ((b = []), a.forEach(function(a) {
                                b.push(a[0], a[1]);
                            })) :
                            (b = a);
                        return b;
                    }

                    function n(a, b, c, d) {
                        void 0 === d && (d = !1);
                        if (d)
                            for (d = 0; d < 2 * b; d++)
                                a[d] = g._pe.getValue(
                                    c + d * Float64Array.BYTES_PER_ELEMENT,
                                    'double'
                                );
                        else {
                            var e = 0 === a.length;
                            for (d = 0; d < b; d++)
                                e && (a[d] = Array(2)), (a[d][0] = g._pe.getValue(
                                    c,
                                    'double'
                                )), (a[d][1] = g._pe.getValue(
                                    c + Float64Array.BYTES_PER_ELEMENT,
                                    'double'
                                )), (c += 2 * Float64Array.BYTES_PER_ELEMENT);
                        }
                    }
                    Object.defineProperty(g, '__esModule', { value: !0 });
                    var l;
                    g._pe = null;
                    g.isLoaded = function() {
                        return !!g._pe;
                    };
                    g.isSupported = function() {
                        return !!e('esri-wasm');
                    };
                    g.load = function() {
                        if (l) return l.promise;
                        l = new b();
                        c(['./support/pe-wasm'], function(a) {
                            a({
                                locateFile: function(a) {
                                    return c.toUrl('./support/' + a);
                                },
                                onAbort: function(a) {
                                    l.reject(Error(a));
                                },
                            }).then(function(a) {
                                h(a);
                                l.resolve();
                            });
                        });
                        return l.promise;
                    };
                    (function(a) {
                        function b(a, b, c) {
                            g._pe.ensureCache.prepare();
                            var d = k(c),
                                e = c === d,
                                d = g._pe.ensureFloat64(d);
                            (a = g._pe._pe_geog_to_proj(g._pe.getPointer(a), b, d)) &&
                            n(c, b, d, e);
                            return a;
                        }

                        function c(a, b, c) {
                            return d(a, b, c, 0);
                        }

                        function d(a, b, c, d) {
                            g._pe.ensureCache.prepare();
                            var e = k(c),
                                f = c === e,
                                e = g._pe.ensureFloat64(e);
                            (a = g._pe._pe_proj_to_geog_center(
                                g._pe.getPointer(a),
                                b,
                                e,
                                d
                            )) && n(c, b, e, f);
                            return a;
                        }
                        a.geogToProj = b;
                        a.projGeog = function(a, d, e, f) {
                            switch (f) {
                                case m.PE_TRANSFORM_P_TO_G:
                                    return c(a, d, e);
                                case m.PE_TRANSFORM_G_TO_P:
                                    return b(a, d, e);
                            }
                            return 0;
                        };
                        a.projToGeog = c;
                        a.projToGeogCenter = d;
                    })(g.PeCSTransformations || (g.PeCSTransformations = {}));
                    var m;
                    (function(a) {
                        a.init = function() {
                            a.PE_BUFFER_MAX = g._pe.PeDefs.prototype.PE_BUFFER_MAX;
                            a.PE_NAME_MAX = g._pe.PeDefs.prototype.PE_NAME_MAX;
                            a.PE_MGRS_MAX = g._pe.PeDefs.prototype.PE_MGRS_MAX;
                            a.PE_USNG_MAX = g._pe.PeDefs.prototype.PE_USNG_MAX;
                            a.PE_DD_MAX = g._pe.PeDefs.prototype.PE_DD_MAX;
                            a.PE_DDM_MAX = g._pe.PeDefs.prototype.PE_DDM_MAX;
                            a.PE_DMS_MAX = g._pe.PeDefs.prototype.PE_DMS_MAX;
                            a.PE_UTM_MAX = g._pe.PeDefs.prototype.PE_UTM_MAX;
                            a.PE_PARM_MAX = g._pe.PeDefs.prototype.PE_PARM_MAX;
                            a.PE_TYPE_NONE = g._pe.PeDefs.prototype.PE_TYPE_NONE;
                            a.PE_TYPE_GEOGCS = g._pe.PeDefs.prototype.PE_TYPE_GEOGCS;
                            a.PE_TYPE_PROJCS = g._pe.PeDefs.prototype.PE_TYPE_PROJCS;
                            a.PE_TYPE_GEOGTRAN = g._pe.PeDefs.prototype.PE_TYPE_GEOGTRAN;
                            a.PE_TYPE_COORDSYS = g._pe.PeDefs.prototype.PE_TYPE_COORDSYS;
                            a.PE_TYPE_UNIT = g._pe.PeDefs.prototype.PE_TYPE_UNIT;
                            a.PE_STR_OPTS_NONE = g._pe.PeDefs.prototype.PE_STR_OPTS_NONE;
                            a.PE_STR_AUTH_NONE = g._pe.PeDefs.prototype.PE_STR_AUTH_NONE;
                            a.PE_STR_AUTH_TOP = g._pe.PeDefs.prototype.PE_STR_AUTH_TOP;
                            a.PE_STR_NAME_CANON = g._pe.PeDefs.prototype.PE_STR_NAME_CANON;
                            a.PE_PARM_X0 = g._pe.PeDefs.prototype.PE_PARM_X0;
                            a.PE_PARM_ND = g._pe.PeDefs.prototype.PE_PARM_ND;
                            a.PE_TRANSFORM_1_TO_2 =
                                g._pe.PeDefs.prototype.PE_TRANSFORM_1_TO_2;
                            a.PE_TRANSFORM_2_TO_1 =
                                g._pe.PeDefs.prototype.PE_TRANSFORM_2_TO_1;
                            a.PE_TRANSFORM_P_TO_G =
                                g._pe.PeDefs.prototype.PE_TRANSFORM_P_TO_G;
                            a.PE_TRANSFORM_G_TO_P =
                                g._pe.PeDefs.prototype.PE_TRANSFORM_G_TO_P;
                            a.PE_HORIZON_RECT = g._pe.PeDefs.prototype.PE_HORIZON_RECT;
                            a.PE_HORIZON_POLY = g._pe.PeDefs.prototype.PE_HORIZON_POLY;
                            a.PE_HORIZON_LINE = g._pe.PeDefs.prototype.PE_HORIZON_LINE;
                            a.PE_HORIZON_DELTA = g._pe.PeDefs.prototype.PE_HORIZON_DELTA;
                        };
                    })((m = g.PeDefs || (g.PeDefs = {})));
                    (function(a) {
                        function b(a, b) {
                            var e = null,
                                f = d[a];
                            f || ((f = {}), (d[a] = f));
                            f.hasOwnProperty(String(b)) ?
                                (e = f[b]) :
                                ((a = g._pe.PeFactory.prototype.factoryByType(
                                    a,
                                    b
                                )), g._pe.compare(a, g._pe.NULL) || ((e = a), (f[b] = e)));
                            return (e = c(e));
                        }

                        function c(a) {
                            if (a) {
                                var b = a.getType();
                                switch (b) {
                                    case m.PE_TYPE_GEOGCS:
                                        a = g._pe.castObject(a, g._pe.PeGeogcs);
                                        break;
                                    case m.PE_TYPE_PROJCS:
                                        a = g._pe.castObject(a, g._pe.PeProjcs);
                                        break;
                                    case m.PE_TYPE_GEOGTRAN:
                                        a = g._pe.castObject(a, g._pe.PeGeogtran);
                                        break;
                                    default:
                                        b & m.PE_TYPE_UNIT &&
                                            (a = g._pe.castObject(a, g._pe.PeUnit));
                                }
                            }
                            return a;
                        }
                        var d = {},
                            e = {};
                        a.initialize = function() {
                            g._pe.PeFactory.prototype.initialize(null);
                        };
                        a.coordsys = function(a) {
                            return b(m.PE_TYPE_COORDSYS, a);
                        };
                        a.factoryByType = b;
                        a.fromString = function(a, b) {
                            var d = null,
                                f = e[a];
                            f || ((f = {}), (e[a] = f));
                            f.hasOwnProperty(b) ?
                                (d = f[b]) :
                                ((a = g._pe.PeFactory.prototype.fromString(
                                    a,
                                    b
                                )), g._pe.compare(a, g._pe.NULL) || ((d = a), (f[b] = d)));
                            return (d = c(d));
                        };
                        a.geogcs = function(a) {
                            return b(m.PE_TYPE_GEOGCS, a);
                        };
                        a.geogtran = function(a) {
                            return b(m.PE_TYPE_GEOGTRAN, a);
                        };
                        a.getCode = function(a) {
                            return g._pe.PeFactory.prototype.getCode(a);
                        };
                        a.projcs = function(a) {
                            return b(m.PE_TYPE_PROJCS, a);
                        };
                        a.unit = function(a) {
                            return b(m.PE_TYPE_UNIT, a);
                        };
                    })(g.PeFactory || (g.PeFactory = {}));
                    g.PeGCSExtent = null;
                    var p;
                    (function(a) {
                        var b;
                        a.init = function() {
                            a.PE_GTLIST_OPTS_COMMON =
                                g._pe.PeGTlistExtended.prototype.PE_GTLIST_OPTS_COMMON;
                            b = g._pe._pe_getPeGTlistExtendedEntrySize();
                        };
                        a.getGTlist = function(a, c, d, e, f, h) {
                            var k = null,
                                l = new g._pe.PeInteger(h);
                            try {
                                var p = g._pe.PeGTlistExtended.prototype.getGTlist(
                                    a,
                                    c,
                                    d,
                                    e,
                                    f,
                                    l
                                );
                                if ((h = l.val))
                                    if (((k = [p]), 1 < h)) {
                                        var q = g._pe.getPointer(p);
                                        for (a = 1; a < h; a++)
                                            k.push(
                                                g._pe.wrapPointer(
                                                    q + b * a,
                                                    g._pe.PeGTlistExtendedEntry
                                                )
                                            );
                                    }
                            } finally {
                                g._pe.destroy(l);
                            }
                            return k;
                        };
                    })((p = g.PeGTlistExtended || (g.PeGTlistExtended = {})));
                    (function(a) {
                        a.destroy = function(a) {
                            if (a && a.length) {
                                for (var b = 0; b < a.length; b++) {
                                    var c = a[b];
                                    d(c);
                                    c.getEntries().forEach(function(a) {
                                        d(a);
                                        a = a.getGeogtran();
                                        d(a);
                                        a.getParameters().forEach(d);
                                        [a.getGeogcs1(), a.getGeogcs2()].forEach(function(a) {
                                            d(a);
                                            var b = a.getDatum();
                                            d(b);
                                            d(b.getSpheroid());
                                            d(a.getPrimem());
                                            d(a.getUnit());
                                        });
                                    });
                                }
                                g._pe.PeGTlistExtendedEntry.prototype.Delete(a[0]);
                            }
                        };
                    })(g.PeGTlistExtendedEntry || (g.PeGTlistExtendedEntry = {}));
                    (function(a) {
                        a.geogToGeog = function(a, b, c, d, e) {
                            g._pe.ensureCache.prepare();
                            var f = k(c),
                                h = c === f,
                                f = g._pe.ensureFloat64(f),
                                l = 0;
                            d && (l = g._pe.ensureFloat64(d));
                            (a = g._pe._pe_geog_to_geog(g._pe.getPointer(a), b, f, l, e)) &&
                            n(c, b, f, h);
                            return a;
                        };
                    })(g.PeGTTransformations || (g.PeGTTransformations = {}));
                    (function(b) {
                        function c(b, c, d, e, f, h) {
                            g._pe.ensureCache.prepare();
                            var l, p;
                            switch (b) {
                                case 'dd':
                                    l = g._pe._pe_geog_to_dd;
                                    p = m.PE_DD_MAX;
                                    break;
                                case 'ddm':
                                    l = g._pe._pe_geog_to_ddm;
                                    p = m.PE_DDM_MAX;
                                    break;
                                case 'dms':
                                    (l = g._pe._pe_geog_to_dms), (p = m.PE_DMS_MAX);
                            }
                            b = 0;
                            c && (b = g._pe.getPointer(c));
                            c = k(e);
                            c = g._pe.ensureFloat64(c);
                            p = a(d, p);
                            e = g._pe.ensureInt32(p);
                            if ((f = l(b, d, c, f, e)))
                                for (l = 0; l < d; l++)
                                    h[l] = g._pe.UTF8ToString(p[l]);
                            return f;
                        }

                        function d(a, b, c, d, e) {
                            g._pe.ensureCache.prepare();
                            var f;
                            switch (a) {
                                case 'dd':
                                    f = g._pe._pe_dd_to_geog;
                                    break;
                                case 'ddm':
                                    f = g._pe._pe_ddm_to_geog;
                                    break;
                                case 'dms':
                                    f = g._pe._pe_dms_to_geog;
                            }
                            a = 0;
                            b && (a = g._pe.getPointer(b));
                            b = d.map(function(a) {
                                return g._pe.ensureString(a);
                            });
                            d = g._pe.ensureInt32(b);
                            b = g._pe.ensureFloat64(Array(2 * c));
                            (f = f(a, c, d, b)) && n(e, c, b);
                            return f;
                        }
                        b.geog_to_dms = function(a, b, d, e, f) {
                            return c('dms', a, b, d, e, f);
                        };
                        b.dms_to_geog = function(a, b, c, e) {
                            return d('dms', a, b, c, e);
                        };
                        b.geog_to_ddm = function(a, b, d, e, f) {
                            return c('ddm', a, b, d, e, f);
                        };
                        b.ddm_to_geog = function(a, b, c, e) {
                            return d('ddm', a, b, c, e);
                        };
                        b.geog_to_dd = function(a, b, d, e, f) {
                            return c('dd', a, b, d, e, f);
                        };
                        b.dd_to_geog = function(a, b, c, e) {
                            return d('dd', a, b, c, e);
                        };
                    })(g.PeNotationDms || (g.PeNotationDms = {}));
                    var r;
                    (function(b) {
                        b.init = function() {
                            b.PE_MGRS_STYLE_NEW =
                                g._pe.PeNotationMgrs.prototype.PE_MGRS_STYLE_NEW;
                            b.PE_MGRS_STYLE_OLD =
                                g._pe.PeNotationMgrs.prototype.PE_MGRS_STYLE_OLD;
                            b.PE_MGRS_STYLE_AUTO =
                                g._pe.PeNotationMgrs.prototype.PE_MGRS_STYLE_AUTO;
                            b.PE_MGRS_180_ZONE_1_PLUS =
                                g._pe.PeNotationMgrs.prototype.PE_MGRS_180_ZONE_1_PLUS;
                            b.PE_MGRS_ADD_SPACES =
                                g._pe.PeNotationMgrs.prototype.PE_MGRS_ADD_SPACES;
                        };
                        b.geog_to_mgrs_extended = function(b, c, d, e, f, h, l) {
                            g._pe.ensureCache.prepare();
                            var p = 0;
                            b && (p = g._pe.getPointer(b));
                            b = k(d);
                            d = g._pe.ensureFloat64(b);
                            b = a(c, m.PE_MGRS_MAX);
                            var q = g._pe.ensureInt32(b);
                            if ((e = g._pe._pe_geog_to_mgrs_extended(p, c, d, e, f, h, q)))
                                for (f = 0; f < c; f++)
                                    l[f] = g._pe.UTF8ToString(b[f]);
                            return e;
                        };
                        b.mgrs_to_geog_extended = function(a, b, c, d, e) {
                            g._pe.ensureCache.prepare();
                            var f = 0;
                            a && (f = g._pe.getPointer(a));
                            a = c.map(function(a) {
                                return g._pe.ensureString(a);
                            });
                            c = g._pe.ensureInt32(a);
                            a = g._pe.ensureFloat64(Array(2 * b));
                            (d = g._pe._pe_mgrs_to_geog_extended(f, b, c, d, a)) &&
                            n(e, b, a);
                            return d;
                        };
                    })((r = g.PeNotationMgrs || (g.PeNotationMgrs = {})));
                    (function(b) {
                        b.geog_to_usng = function(b, c, d, e, f, h, l) {
                            g._pe.ensureCache.prepare();
                            var p = 0;
                            b && (p = g._pe.getPointer(b));
                            b = k(d);
                            d = g._pe.ensureFloat64(b);
                            b = a(c, m.PE_MGRS_MAX);
                            var q = g._pe.ensureInt32(b);
                            if ((e = g._pe._pe_geog_to_usng(p, c, d, e, f, h, q)))
                                for (f = 0; f < c; f++)
                                    l[f] = g._pe.UTF8ToString(b[f]);
                            return e;
                        };
                        b.usng_to_geog = function(a, b, c, d) {
                            g._pe.ensureCache.prepare();
                            var e = 0;
                            a && (e = g._pe.getPointer(a));
                            a = c.map(function(a) {
                                return g._pe.ensureString(a);
                            });
                            c = g._pe.ensureInt32(a);
                            a = g._pe.ensureFloat64(Array(2 * b));
                            (e = g._pe._pe_usng_to_geog(e, b, c, a)) && n(d, b, a);
                            return e;
                        };
                    })(g.PeNotationUsng || (g.PeNotationUsng = {}));
                    var u;
                    (function(b) {
                        b.init = function() {
                            b.PE_UTM_OPTS_NONE =
                                g._pe.PeNotationUtm.prototype.PE_UTM_OPTS_NONE;
                            b.PE_UTM_OPTS_ADD_SPACES =
                                g._pe.PeNotationUtm.prototype.PE_UTM_OPTS_ADD_SPACES;
                            b.PE_UTM_OPTS_NS = g._pe.PeNotationUtm.prototype.PE_UTM_OPTS_NS;
                        };
                        b.geog_to_utm = function(b, c, d, e, f) {
                            g._pe.ensureCache.prepare();
                            var h = 0;
                            b && (h = g._pe.getPointer(b));
                            b = k(d);
                            d = g._pe.ensureFloat64(b);
                            b = a(c, m.PE_UTM_MAX);
                            var l = g._pe.ensureInt32(b);
                            if ((e = g._pe._pe_geog_to_utm(h, c, d, e, l)))
                                for (h = 0; h < c; h++)
                                    f[h] = g._pe.UTF8ToString(b[h]);
                            return e;
                        };
                        b.utm_to_geog = function(a, b, c, d, e) {
                            g._pe.ensureCache.prepare();
                            var f = 0;
                            a && (f = g._pe.getPointer(a));
                            a = c.map(function(a) {
                                return g._pe.ensureString(a);
                            });
                            c = g._pe.ensureInt32(a);
                            a = g._pe.ensureFloat64(Array(2 * b));
                            (d = g._pe._pe_utm_to_geog(f, b, c, d, a)) && n(e, b, a);
                            return d;
                        };
                    })((u = g.PeNotationUtm || (g.PeNotationUtm = {})));
                    var t;
                    (function(a) {
                        var b = new Map();
                        a.init = function() {
                            a.PE_PCSINFO_OPTION_NONE =
                                g._pe.PePCSInfo.prototype.PE_PCSINFO_OPTION_NONE;
                            a.PE_PCSINFO_OPTION_DOMAIN =
                                g._pe.PePCSInfo.prototype.PE_PCSINFO_OPTION_DOMAIN;
                            a.PE_POLE_OUTSIDE_BOUNDARY =
                                g._pe.PePCSInfo.prototype.PE_POLE_OUTSIDE_BOUNDARY;
                            a.PE_POLE_POINT = g._pe.PePCSInfo.prototype.PE_POLE_POINT;
                        };
                        a.generate = function(c, d) {
                            void 0 === d && (d = a.PE_PCSINFO_OPTION_DOMAIN);
                            var e, f;
                            b.has(c) && ((f = b.get(c)), f[d] && (e = f[d]));
                            e ||
                                ((e = g._pe.PePCSInfo.prototype.generate(c, d)), f ||
                                    ((f = []), b.set(c, f)), (f[d] = e));
                            return e;
                        };
                    })((t = g.PePCSInfo || (g.PePCSInfo = {})));
                    (function(a) {
                        a.version_string = function() {
                            return g._pe.PeVersion.prototype.version_string();
                        };
                    })(g.PeVersion || (g.PeVersion = {}));
                    g._init = h;
                }
            );
        },
        'esri/core/tsSupport/extendsHelper': function() {
            define([], function() {
                return (function() {
                    var c =
                        Object.setPrototypeOf ||
                        ({ __proto__: [] }
                            instanceof Array &&
                            function(c, f) {
                                c.__proto__ = f;
                            }) ||
                        function(c, f) {
                            for (var b in f)
                                f.hasOwnProperty(b) && (c[b] = f[b]);
                        };
                    return function(g, f) {
                        function b() {
                            this.constructor = g;
                        }
                        c(g, f);
                        g.prototype = null === f ?
                            Object.create(f) :
                            ((b.prototype = f.prototype), new b());
                    };
                })();
            });
        },
        'esri/geometry/GeographicTransformation': function() {
            define(
                ['require', 'exports', './GeographicTransformationStep'],
                function(c, g, f) {
                    return (function() {
                        function b(b) {
                            this.steps = [];
                            this._cached_projection = {};
                            this._chain = '';
                            this._gtlistentry = null;
                            if (b && b.steps) {
                                var c = 0;
                                for (b = b.steps; c < b.length; c++) {
                                    var d = b[c];
                                    d instanceof f
                                        ?
                                        this.steps.push(d) :
                                        this.steps.push(
                                            new f({
                                                wkid: d.wkid,
                                                wkt: d.wkt,
                                                isInverse: d.isInverse,
                                            })
                                        );
                                }
                            }
                        }
                        b.cacheKey = function(b, c) {
                            return [
                                void 0 !== b.wkid && null !== b.wkid ?
                                b.wkid.toString() :
                                '-1',
                                void 0 !== b.wkt && null !== b.wkt ? b.wkt.toString() : '',
                                void 0 !== c.wkid && null !== c.wkid ?
                                c.wkid.toString() :
                                '-1',
                                void 0 !== c.wkt && null !== c.wkt ? c.wkt.toString() : '',
                            ].join();
                        };
                        b.fromGE = function(c) {
                            var e = new b(),
                                d = '',
                                a = 0;
                            for (c = c.steps; a < c.length; a++) {
                                var g = f.fromGE(c[a]);
                                e.steps.push(g);
                                d += g.uid.toString() + ',';
                            }
                            e._cached_projection = {};
                            e._gtlistentry = null;
                            e._chain = d;
                            return e;
                        };
                        b.prototype.getInverse = function() {
                            var c = new b();
                            c.steps = [];
                            for (var f = this.steps.length - 1; 0 <= f; f--)
                                c.steps.push(this.steps[f].getInverse());
                            return c;
                        };
                        b.prototype.getGTListEntry = function() {
                            for (var b = '', c = 0, d = this.steps; c < d.length; c++)
                                b += d[c].uid.toString() + ',';
                            b !== this._chain &&
                                ((this._gtlistentry = null), (this._cached_projection = {}), (this._chain = b));
                            return this._gtlistentry;
                        };
                        b.prototype.assignCachedGe = function(c, f, d) {
                            this._cached_projection[b.cacheKey(c, f)] = d;
                        };
                        b.prototype.getCachedGeTransformation = function(c, f) {
                            for (var d = '', a = 0, e = this.steps; a < e.length; a++)
                                d += e[a].uid.toString() + ',';
                            d !== this._chain &&
                                ((this._gtlistentry = null), (this._cached_projection = {}), (this._chain = d));
                            c = this._cached_projection[b.cacheKey(c, f)];
                            return void 0 === c ? null : c;
                        };
                        return b;
                    })();
                }
            );
        },
        'esri/geometry/GeographicTransformationStep': function() {
            define(['require', 'exports'], function(c, g) {
                var f = 0;
                return (function() {
                    function b(b) {
                        void 0 === b && (b = null);
                        this.uid = f++;
                        b
                            ?
                            ((this._wkt = void 0 !== b.wkt ?
                                b.wkt :
                                null), (this._wkid = void 0 !== b.wkid ?
                                b.wkid :
                                -1), (this._isInverse = void 0 !== b.isInverse ?
                                !0 === b.isInverse :
                                !1)) :
                            ((this._wkt = null), (this._wkid = -1), (this._isInverse = !1));
                    }
                    b.fromGE = function(c) {
                        var e = new b();
                        e._wkt = c.wkt;
                        e._wkid = c.wkid;
                        e._isInverse = c.isInverse;
                        return e;
                    };
                    Object.defineProperty(b.prototype, 'wkt', {
                        get: function() {
                            return this._wkt;
                        },
                        set: function(b) {
                            this._wkt = b;
                            this.uid = f++;
                        },
                        enumerable: !0,
                        configurable: !0,
                    });
                    Object.defineProperty(b.prototype, 'wkid', {
                        get: function() {
                            return this._wkid;
                        },
                        set: function(b) {
                            this._wkid = b;
                            this.uid = f++;
                        },
                        enumerable: !0,
                        configurable: !0,
                    });
                    Object.defineProperty(b.prototype, 'isInverse', {
                        get: function() {
                            return this._isInverse;
                        },
                        set: function(b) {
                            this._isInverse = b;
                            this.uid = f++;
                        },
                        enumerable: !0,
                        configurable: !0,
                    });
                    b.prototype.getInverse = function() {
                        var c = new b();
                        c._wkt = this.wkt;
                        c._wkid = this._wkid;
                        c._isInverse = !this.isInverse;
                        return c;
                    };
                    return b;
                })();
            });
        },
        'esri/layers/rasterLib/raster/TileServiceRaster': function() {
            define(
                'require dojo/_base/declare dojo/_base/lang dojo/_base/Deferred dojo/_base/array dojo/_base/config dojo/_base/json dojo/sniff dojo/DeferredList dojo/when ../../../kernel ../../../Evented ../../../request ../../../geometry/Extent ../../../geometry/Point ../../../SpatialReference ../../../deferredUtils ../../../urlUtils ../../PixelBlock ../../rasterFormats/rasterCodec ../tile/RasterTileInfo ./RasterInfo ./BasicRaster'.split(
                    ' '
                ),
                function(
                    c,
                    g,
                    f,
                    b,
                    e,
                    h,
                    d,
                    a,
                    k,
                    n,
                    l,
                    m,
                    p,
                    r,
                    u,
                    t,
                    q,
                    v,
                    C,
                    z,
                    y,
                    x,
                    w
                ) {
                    c = g([w], {
                        declaredClass: 'esri.layers.rasterLib.raster.TileServiceRaster',
                        constructor: function(a) {},
                        open: function() {
                            var a = new b(),
                                c = this.serviceInfo || this._getServiceInfo(null),
                                d = f.hitch(this, function(b) {
                                    this.serviceInfo = b;
                                    this.version = b.currentVersion;
                                    this.rasterInfo = this._parseRasterInfo(b);
                                    this.loaded = !0;
                                    this._getRasterIdentifier();
                                    a.resolve(this);
                                }),
                                e = f.hitch(this, function(b) {
                                    this.loaded = !0;
                                    this._getRasterIdentifier();
                                    a.reject(b);
                                });
                            n(c, d, e);
                            return a.promise;
                        },
                        read: function(a) {
                            var b = this.url + '/tile/' + a.level + '/' + a.row + '/' + a.col,
                                c = {
                                    width: this.tileInfo.cols,
                                    height: this.tileInfo.rows,
                                    planes: null,
                                    pixelType: null,
                                    format: null,
                                    decodeFunc: null,
                                    isPoint: 'elevation' === this.tileType.toLowerCase() ?
                                        !0 :
                                        !1,
                                };
                            return this._requestPixels({
                                url: b +
                                    (this.disableClientCaching ?
                                        '?_ts\x3d ' + new Date().getTime() :
                                        ''),
                                payload: {},
                                decodeParams: c,
                                tileOptions: a,
                            });
                        },
                        identify: function(a, c) {
                            null == c &&
                                (c = this.tileInfo.lods[this.tileInfo.lods.length - 1].level);
                            var d =
                                (a.x - this.tileInfo.origin.x) /
                                this.tileInfo.lods[c].resolution /
                                this.tileInfo.cols;
                            a =
                                (this.tileInfo.origin.y - a.y) /
                                this.tileInfo.lods[c].resolution /
                                this.tileInfo.rows;
                            var e = Math.floor(d),
                                f = Math.floor(a),
                                h = Math.floor((d - e) * this.tileInfo.cols),
                                h = Math.min(h, this.tileInfo.cols - 1),
                                g = Math.floor((a - f) * this.tileInfo.rows),
                                g = Math.min(g, this.tileInfo.rows - 1),
                                k = new b();
                            this.read({ level: c, row: f, col: e }).then(
                                function(a) {
                                    var b = g * a.width + h;
                                    a && a.pixels && 0 < a.pixels.length ?
                                        ((a = a.mask ?
                                            a.mask[b] ?
                                            a.pixels.map(function(a) {
                                                return a[b];
                                            }) :
                                            null :
                                            a.pixels.map(function(a) {
                                                return a[b];
                                            })), k.resolve(a)) :
                                        k.reject('no valid data');
                                },
                                function(a) {
                                    k.reject(a);
                                }
                            );
                            return k.promise;
                        },
                        setFetchParameters: function(a, b) {},
                        _getRasterIdentifier: function() {
                            this._rasterId ||
                                (this._rasterId = this.url
                                    .replace('http:', '')
                                    .replace('https:', ''));
                            return this._rasterId;
                        },
                        _getServiceInfo: function() {
                            var a = this.url,
                                c = new b(q._dfdCanceller);
                            c._pendingDfd = p({
                                url: a,
                                content: { f: 'json' },
                                handleAs: 'json',
                                callbackParamName: 'callback',
                            });
                            c._pendingDfd.then(
                                function(a) {
                                    c.callback(a);
                                },
                                function(a) {
                                    c.errback(a);
                                }
                            );
                            return c;
                        },
                        _parseRasterInfo: function(a) {
                            var b = new x();
                            b.extent = new r(a.fullExtent);
                            b.spatialReference = new t(a.spatialReference);
                            this.tileType = a.cacheType || 'Map';
                            switch (this.tileType) {
                                case 'Map':
                                    b.bandCount = 3;
                                    b.pixelType = 'U8';
                                    this.dataType = 'Processed';
                                    break;
                                case 'Elevation':
                                    b.bandCount = 1;
                                    b.pixelType = a.pixelType || 'F32';
                                    this.dataType = 'Elevation';
                                    break;
                                case 'Raster':
                                    (b.bandCount = null), (b.pixelType = null), (this.dataType =
                                        (a.serviceDataType &&
                                            a.serviceDataType.replace(
                                                'esriImageServiceDataType',
                                                ''
                                            )) ||
                                        'Generic');
                            }
                            var c = a.tileInfo;
                            b.width = Math.floor(
                                (a.fullExtent.xmax - a.fullExtent.xmin) /
                                c.lods[c.lods.length - 1].resolution +
                                0.5
                            );
                            b.height = Math.floor(
                                (a.fullExtent.ymax - a.fullExtent.ymin) /
                                c.lods[c.lods.length - 1].resolution +
                                0.5
                            );
                            b.cellSize = new u({
                                x: c.lods[c.lods.length - 1].resolution,
                                y: c.lods[c.lods.length - 1].resolution,
                                spatialReference: a.spatialReference,
                            });
                            this.tileInfo = new y(c);
                            this.tileInfo.tileType = this.tileType;
                            return b;
                        },
                    });
                    f.setObject('layers.rasterLib.raster.TileServiceRaster', c, l);
                    return c;
                }
            );
        },
        'esri/layers/rasterLib/raster/TileRaster': function() {
            define(
                'require dojo/_base/declare dojo/_base/lang dojo/_base/Deferred dojo/_base/array dojo/_base/config dojo/_base/json dojo/sniff dojo/DeferredList dojo/when ../../../kernel ../../../Evented ../../../request ../../../geometry/Extent ../../../geometry/Point ../../../SpatialReference ../../../deferredUtils ../../../urlUtils ../../PixelBlock ../../rasterFormats/rasterCodec ../tile/RasterTileInfo ./RasterInfo ./BasicRaster'.split(
                    ' '
                ),
                function(
                    c,
                    g,
                    f,
                    b,
                    e,
                    h,
                    d,
                    a,
                    k,
                    n,
                    l,
                    m,
                    p,
                    r,
                    u,
                    t,
                    q,
                    v,
                    C,
                    z,
                    y,
                    x,
                    w
                ) {
                    c = g([w], {
                        declaredClass: 'esri.layers.rasterLib.raster.TileRaster',
                        sourceType: 'TileCache',
                        _RECORD_SIZE: 8,
                        constructor: function(a) {
                            this._cloudBlobStorage = a && a._cloudBlobStorage;
                        },
                        open: function() {
                            var a = new b(),
                                c = this.datasetInfo || this._getDatasetInfo(null),
                                d = f.hitch(this, function(b) {
                                    this.datasetInfo = b;
                                    this.rasterInfo = b = this._parseRasterInfo(b);
                                    this.tileType = 'Cache/LERC' === b.format ?
                                        'Elevation' :
                                        'Cache/MIXED' === b.format ||
                                        'Cache/JPEG' === b.format ||
                                        'Cache/PNG' === b.format ?
                                        'Map' :
                                        'Raster';
                                    this.tileInfo = b.tileInfo;
                                    this.dataType = ['Generic', 'Elevation', 'Processed'][
                                        ['Raster', 'Elevation', 'Map'].indexOf(this.tileType)
                                    ];
                                    this._HEADER_SIZE =
                                        b.packetSize * b.packetSize * this._RECORD_SIZE + 64;
                                    this.loaded = !0;
                                    this._cloudBlobStorage =
                                        this._cloudBlobStorage ||
                                        -1 < this.url.toLowerCase().indexOf('s3.amazonaws.com') ||
                                        -1 < this.url.toLowerCase().indexOf('windows.net') ||
                                        -1 < this.url.toLowerCase().indexOf('googleapis.com');
                                    this._getRasterIdentifier();
                                    a.resolve(this);
                                }),
                                e = f.hitch(this, function(b) {
                                    this.loaded = !0;
                                    this._getRasterIdentifier();
                                    a.reject(b);
                                });
                            n(c, d, e);
                            return a.promise;
                        },
                        read: function(a) {
                            var c = new b(),
                                d = a.level,
                                e = a.row,
                                h = a.col,
                                g = this._buildCacheFilePath(this.url, d, e, h),
                                k = this._getIndexRecordFromBundle(d, e, h);
                            p({
                                url: g,
                                content: {},
                                headers: {
                                    Range: 'bytes\x3d0-' + (this._HEADER_SIZE - 1).toString(),
                                },
                                handleAs: 'arraybuffer',
                            }).then(
                                f.hitch(this, function(b, d) {
                                    c.isCanceled() ||
                                        ((b = new Uint8Array(
                                            b
                                        )), (b = this._getTileEndAndContentType(b, k)), (d = {
                                            width: this.tileInfo.cols,
                                            height: this.tileInfo.rows,
                                            planes: null,
                                            pixelType: null,
                                            format: null,
                                            decodeFunc: null,
                                            isPoint: 'elevation' === this.tileType.toLowerCase() ?
                                                !0 :
                                                !1,
                                        }), this._requestPixels({
                                            url: g +
                                                (this.disableClientCaching ?
                                                    '?_ts\x3d ' + new Date().getTime() :
                                                    ''),
                                            payload: {},
                                            headers: {
                                                Range: 'bytes\x3d' +
                                                    b.position.toString() +
                                                    '-' +
                                                    (b.position + b.recordSize).toString(),
                                            },
                                            decodeParams: d,
                                            tileOptions: a,
                                        }).then(
                                            function(a) {
                                                c.isCanceled() || c.resolve(a);
                                            },
                                            function(a) {
                                                c.isCanceled() || c.reject(a);
                                            }
                                        ));
                                })
                            );
                            return c.promise;
                        },
                        identify: function() {
                            return null;
                        },
                        setFetchParameters: function(a, b) {},
                        toJson: function() {
                            return {
                                url: this.url,
                                tileInfo: this.tileInfo.toJson(),
                                rasterInfo: this.rasterInfo.toJson(),
                                datasetInfo: this.datasetInfo,
                                sourceType: this.sourceType,
                                tileType: this.tileType,
                                _rasterId: this._rasterId,
                            };
                        },
                        _getDatasetInfo: function() {
                            return p({
                                url: this.url + '/conf.json',
                                handleAs: 'json',
                                content: {},
                            });
                        },
                        _parseRasterInfo: function(a) {
                            var b = new x(),
                                c;
                            switch (a.pixelType) {
                                case 1:
                                    c = 'U1';
                                    break;
                                case 1:
                                    c = 'U2';
                                    break;
                                case 2:
                                    c = 'U4';
                                    break;
                                case 3:
                                    c = 'U8';
                                    break;
                                case 4:
                                    c = 'S8';
                                    break;
                                case 5:
                                    c = 'U16';
                                    break;
                                case 6:
                                    c = 'S16';
                                    break;
                                case 7:
                                    c = 'U32';
                                    break;
                                case 8:
                                    c = 'S32';
                                    break;
                                case 9:
                                    c = 'F32';
                                    break;
                                default:
                                    c = 'F32';
                            }
                            var d, e = [],
                                f = a.LODInfos;
                            for (d = 0; d < f.levels.length; d++)
                                e.push({
                                    level: f.levels[d],
                                    resolution: f.resolutions[d],
                                    scale: 96 / 0.0254 * f.resolutions[d],
                                });
                            d = new t(
                                a.extent.spatialReference || a.geodataXform.spatialReference
                            );
                            e = new y({
                                rows: a.blockHeight,
                                cols: a.blockWidth,
                                dpi: 96,
                                format: a.format,
                                compressionQuality: 0,
                                origin: a.origin,
                                spatialReference: d,
                                lods: e,
                            });
                            b.pixelType = c;
                            b.bandCount = a.bandCount;
                            b.spatialReference = d;
                            b.extent = new r({
                                xmin: a.extent.xmin,
                                ymin: a.extent.ymin,
                                xmax: a.extent.xmax,
                                ymax: a.extent.ymax,
                                spatialReference: d,
                            });
                            b.cellSize = new u({
                                x: a.pixelSizeX,
                                y: a.pixelSizeY,
                                spatialReference: d,
                            });
                            b.width = Math.floor(
                                (b.extent.xmax - b.extent.xmin) / b.cellSize.x + 0.5
                            );
                            b.height = Math.floor(
                                (b.extent.ymax - b.extent.ymin) / b.cellSize.y + 0.5
                            );
                            b.statistics = a.statistics.map(function(a) {
                                Object.keys(a).forEach(function(b) {
                                    isNaN(a[b]) && (a[b] = null);
                                });
                                return a;
                            });
                            b.histograms = a.histograms;
                            b.geodataXform = a.geodataXform;
                            b.packetSize = a.packetSize;
                            b.format = a.format;
                            b.compressionQuality = a.compressionQuality;
                            b.tileInfo = e;
                            return b;
                        },
                        _getRasterIdentifier: function() {
                            this._rasterId ||
                                (this._rasterId = this.url
                                    .replace('http:', '')
                                    .replace('https:', ''));
                            return this._rasterId;
                        },
                        _buildCacheFilePath: function(a, b, c, d) {
                            var e = this.rasterInfo.packetSize;
                            d = Math.floor(d / e) * e;
                            c =
                                'R' +
                                this._toHexString4(Math.floor(c / e) * e) +
                                'C' +
                                this._toHexString4(d);
                            e = 'L';
                            e = 10 <= b ? e + b.toString() : e + ('0' + b.toString());
                            return this._cloudBlobStorage ?
                                a + '/_alllayers/' + e + '/' + c + '.bundle' :
                                a + '/' + e + '_' + c + '/bundle';
                        },
                        _getIndexRecordFromBundle: function(a, b, c) {
                            a = this.rasterInfo.packetSize;
                            b = b % a * a + c % a;
                            if (0 > b) throw 'Invalid level / row / col';
                            return b * this._RECORD_SIZE + 64;
                        },
                        _getTileEndAndContentType: function(a, b) {
                            a = a.subarray(b, b + 8);
                            b = 0;
                            var c;
                            for (c = 0; 5 > c; c++)
                                b |= (a[c] & 255) << (8 * c);
                            var d = b & 0xffffffffff;
                            b = 0;
                            for (c = 5; 8 > c; c++)
                                b |= (a[c] & 255) << (8 * (c - 5));
                            return { position: d, recordSize: b & 0xffffffffff };
                        },
                        _toHexString4: function(a) {
                            a = a.toString(16);
                            if (4 != a.length)
                                for (var b = 4 - a.length; 0 < b--;)
                                    a = '0' + a;
                            return a;
                        },
                    });
                    f.setObject('layers.rasterLib.raster.TileRaster', c, l);
                    return c;
                }
            );
        },
        'esri/layers/rasterLib/raster/FunctionRaster': function() {
            define(
                'require dojo/_base/declare dojo/_base/lang dojo/_base/Deferred dojo/_base/array dojo/_base/config dojo/_base/json dojo/sniff ../DeferredList2 dojo/when ../../../kernel ../../../Evented ../../../request ../../../deferredUtils ../../../geometry/Extent ../../../geometry/Point ../../../SpatialReference ../../../deferredUtils ../../../urlUtils ../../rasterFormats/rasterCodec ./RasterInfo ./BasicRaster ../../rasterLib/function/rasterFunctionHelper'.split(
                    ' '
                ),
                function(
                    c,
                    g,
                    f,
                    b,
                    e,
                    h,
                    d,
                    a,
                    k,
                    n,
                    l,
                    m,
                    p,
                    r,
                    u,
                    t,
                    q,
                    v,
                    C,
                    z,
                    y,
                    x,
                    w
                ) {
                    c = g([x], {
                        declaredClass: 'esri.layers.rasterLib.raster.FunctionRaster',
                        rasterFunction: null,
                        sourceType: 'Function',
                        constructor: function(a) {
                            a && a.rasterFx && this._init(a.rasterFx, a.rasterFxArgs);
                        },
                        open: function() {
                            var a = this.getMemberRasters().map(function(a) {
                                return a.open();
                            });
                            this.identifiers = this.getMemberRasters().map(function(a) {
                                return a._rasterId;
                            });
                            var c = new b();
                            new k(a, null, null, !0).then(
                                function(a) {
                                    a.some(function(a) {
                                            return !a[0];
                                        }) ?
                                        c.reject(a) :
                                        (this.rasterFunction.bind(), (this.rasterInfo = this.rasterFunction.rasterInfo), (this.dataType =
                                            (this.rasterInfo.keyProperties &&
                                                this.rasterInfo.keyProperties.DataType) ||
                                            'Generic'), (this.tileInfo =
                                            a[0][1].tileInfo), c.resolve(this));
                                }.bind(this)
                            );
                            return c.promise;
                        },
                        getProjectedFullExtent: function(a) {
                            var c = new b();
                            this.getMemberRasters()[0].getProjectedFullExtent(a).then(
                                f.hitch(this, function(a) {
                                    this.projectedFullExtent = a;
                                    c.resolve(a);
                                })
                            );
                            return c.promise;
                        },
                        setProcessingContext: function(a) {
                            var b = a;
                            a.layer &&
                                ((a = a.layer), (b = {
                                    id: a.id,
                                    rawRasterInfo: a.raster.rasterInfo,
                                    glSetting: a._glSetting,
                                    xformSetting: a.tileManager && a.tileManager.xformSetting,
                                    useWebGL: a.useWebGL,
                                    resampling: a.tileMode &&
                                        a.tileManager &&
                                        a.tileManager.xformSetting.requireProjection &&
                                        !a._hasTilingEffects &&
                                        'Thematic' !== a.raster.dataType ?
                                        1 :
                                        0,
                                    tileMode: a.tileMode,
                                }));
                            this.rasterFunction.setProcessingContext(b);
                            this._layerOptions = b;
                        },
                        alterDefinition: function(a) {
                            if ((a = a || this.rasterFunction))
                                1 === this.memberRasters.length &&
                                !a._bindComplete &&
                                (this.rasterFunction = w.create(a, {
                                    raster: this.memberRasters[0],
                                })) &&
                                (this.rasterFunction.bind(), (this.rasterInfo = this.rasterFunction.rasterInfo), (this.dataType =
                                    (this.rasterInfo.keyProperties &&
                                        this.rasterInfo.keyProperties.DataType) ||
                                    'Generic'), this.rasterFunction.setProcessingContext(
                                    this._layerOptions
                                )), this._rasterHandler &&
                                this._rasterHandler._connected &&
                                this.rasterFunction &&
                                this._rasterHandler.setRasterFunction({
                                    layerId: this._layerOptions.id,
                                    data: this.rasterFunction.toJson(!0),
                                });
                        },
                        setFetchParameters: function(a, b) {
                            var c = this.getMemberRasters();
                            c && 1 === c.length && c[0].setFetchParameters(a, b);
                        },
                        getMemberRasters: function() {
                            this.memberRasters ||
                                ((this.memberRasters = []), this._getMemberRasters(
                                    this.rasterFunction.functionArguments,
                                    this.memberRasters
                                ));
                            return this.memberRasters;
                        },
                        read: function(a) {
                            var c = new b(r._dfdCanceller),
                                d;
                            if (a.src)
                                return (d = this.rasterFunction.read(a)), c.resolve(
                                    d
                                ), c.promise;
                            var e = this.getMemberRasters().map(function(b) {
                                    return b.read(a);
                                }),
                                e = new k(e),
                                h,
                                g,
                                l = this.identifiers;
                            c._pendingDfd = e;
                            e.then(
                                f.hitch(this, function(b) {
                                    if (
                                        (h = b.some(function(a) {
                                            return a[0];
                                        }))
                                    )
                                        (g = {}), b.forEach(function(a, b) {
                                            g[l[b]] = a[0] ? a[1] : null;
                                        });
                                    d = g ?
                                        this.rasterFunction.read({ extent: a.extent, src: g }) :
                                        null;
                                    d.srcData = g;
                                    c.resolve(d);
                                })
                            );
                            return c;
                        },
                        _init: function(a, b) {
                            if ((this.rasterFunction = w.create(a, b)))
                                this.rasterFunction._bindComplete = !0;
                            else
                                throw 'Cannot initialize a function raster without a raster function';
                        },
                        _getMemberRasters: function(a, b) {
                            var c = Object.keys(a),
                                d, e, f, h;
                            for (d = 0; d < c.length; d++)
                                if ((f = a[c[d]]))
                                    for (
                                        (h = f instanceof Array ? f : [f]), (e = 0); e < h.length; e++
                                    )
                                        (f = h[e]) &&
                                        ('function' === typeof f || 'object' === typeof f) &&
                                        f.read &&
                                        (f.functionArguments ?
                                            this._getMemberRasters(f.functionArguments, b) :
                                            f.sourceType &&
                                            'Function' !== f.sourceType &&
                                            ((f._identifier = f._getRasterIdentifier()), b.some(
                                                function(a) {
                                                    return a._identifier === f._identifier;
                                                }
                                            ) || b.push(f)));
                            return b;
                        },
                    });
                    f.setObject('layers.rasterLib.raster.FunctionRaster', c, l);
                    return c;
                }
            );
        },
        'esri/layers/rasterLib/DeferredList2': function() {
            define(['dojo/DeferredList'], function(c) {
                return function(g, f, b, e, h) {
                    this.list = g;
                    f = new c(g, f, b, e, h);
                    var d = f.resolve.bind(f),
                        a = f.cancel.bind(f);
                    f.cancel = function() {
                        g &&
                            g.forEach(function(a) {
                                a.cancel && a.cancel();
                            });
                        a.apply(this, arguments);
                    }.bind(f);
                    f.resolve = function() {
                        this.isFulfilled() || d.apply(this, arguments);
                    }.bind(f);
                    return f;
                };
            });
        },
        'esri/layers/rasterLib/tile/RasterTileManager': function() {
            define(
                'dojo/_base/declare dojo/_base/lang dojo/Deferred dojo/when ../DeferredList2 ../../../geometry/Extent ../../../SpatialReference ../../../geometry/Point ../../PixelBlock ./RasterTileInfo ../raster/rasterProjectionHelper'.split(
                    ' '
                ),
                function(c, g, f, b, e, h, d, a, k, n, l) {
                    var m = function(a, b) {
                        var c;
                        for (c = 0; c < a.length; c++)
                            if (b(a[c])) return c;
                        return -1;
                    };
                    return c(null, {
                        declaredClass: 'esri.layers.rasterLib.tile.RasterTileManager',
                        count: null,
                        fullBoundary: null,
                        tileBoundary: null,
                        tiles: null,
                        resolution: null,
                        virtual: !0,
                        prefetchBufferSize: 0,
                        _progressiveGlobal: !1,
                        _MAX_TILES: 128,
                        _defaultMatrixResolution: 20,
                        constructor: function(a) {
                            this.tiles = [];
                            this.tileInfo = a && a.tileInfo;
                            this.mapSpatialReference = a && a.mapSR;
                            this.virtual = this.tileInfo.virtual;
                            this.layer = a && a.layer;
                            this.identifiers = this.layer.raster.rasterFunction ?
                                this.layer.raster.getMemberRasters().map(function(a) {
                                    return a._rasterId;
                                }) :
                                [this.layer.raster._rasterId];
                            a = !this.virtual &&
                                !this.mapSpatialReference.equals(
                                    this.tileInfo.spatialReference
                                );
                            var b = l.requirePE(
                                this.mapSpatialReference,
                                this.tileInfo.spatialReference
                            );
                            this.xformSetting = {
                                requireProjection: a,
                                requirePE: b,
                                meshSize: a ?
                                    [
                                        this._defaultMatrixResolution,
                                        this._defaultMatrixResolution,
                                    ] :
                                    [1, 1],
                            };
                        },
                        setTileInfo: function(a) {
                            this.tileInfo = a;
                            this.virtual = a.virtual;
                            this.mapResolution = null;
                            this.tiles.length = 0;
                            this.xformSetting.requireProjection = !this.virtual &&
                                !this.mapSpatialReference.equals(
                                    this.tileInfo.spatialReference
                                );
                            this.xformSetting.requirePE = l.requirePE(
                                this.mapSpatialReference,
                                this.tileInfo.spatialReference
                            );
                            this.xformSetting.meshSize = this.xformSetting.requireProjection ?
                                [this._defaultMatrixResolution, this._defaultMatrixResolution] :
                                [1, 1];
                        },
                        updateResolution: function(b, c) {
                            if (!(this.mapResolution &&
                                    b &&
                                    this._resolutionEqual(this.mapResolution.x, b.x) &&
                                    this._resolutionEqual(this.mapResolution.y, b.y))) {
                                this.tiles.forEach(
                                    g.hitch(this, function(a) {
                                        a.fetch && !a.fetch.isCanceled() && a.fetch.cancel();
                                        a.update && !a.update.isCanceled() && a.update.cancel();
                                    })
                                );
                                this.tiles.length = 0;
                                var d = this.xformSetting.requireProjection;
                                this.mapResolution = this.resolution = b;
                                d &&
                                    (this.resolution = l.projectResolution(
                                        b,
                                        this.tileInfo.spatialReference,
                                        this.layer.projectedFullExtent || c
                                    ));
                                this._resolution = this.resolution;
                                var e;
                                b = this.resolution;
                                if (!this.tileInfo.virtual) {
                                    d = 0.75 * Math.min(b.x, b.y) + 0.25 * Math.max(b.x, b.y);
                                    if (d >= this.tileInfo.lods[0].resolution)
                                        (e = this.tileInfo.lods[0]), (this.ooe = !0);
                                    else {
                                        if (
                                            d <=
                                            this.tileInfo.lods[this.tileInfo.lods.length - 1]
                                            .resolution
                                        )
                                            e = this.tileInfo.lods[this.tileInfo.lods.length - 1];
                                        else
                                            for (b = 0; b < this.tileInfo.lods.length - 1; b++)
                                                if (
                                                    ((e = this.tileInfo.lods[b]), (c = this.tileInfo.lods[
                                                        b + 1
                                                    ]), e.resolution >= d && c.resolution <= d)
                                                ) {
                                                    e.resolution - d > d - c.resolution && (e = c);
                                                    break;
                                                }
                                        this.ooe = !1;
                                    }
                                    this.level = e && e.level;
                                    b = this.resolution = new a({
                                        x: e.resolution,
                                        y: e.resolution,
                                        spatialReference: this.tileInfo.spatialReference,
                                    });
                                }
                                c = this.layer.raster.rasterInfo.extent;
                                d = this.tileInfo.origin;
                                e = this.tileInfo.cols;
                                var f = this.tileInfo.rows;
                                this.fullBoundary = {
                                    rowStart: Math.floor((d.y - c.ymax) / b.y / f),
                                    rowEnd: Math.ceil((d.y - c.ymin - b.y) / b.y / f),
                                    colStart: Math.floor((c.xmin - d.x) / b.x / e),
                                    colEnd: Math.ceil((c.xmax - d.x - b.x) / b.x / e),
                                };
                                if ((c = c.spatialReference._getInfo()))
                                    this.fullBoundary.colRange = Math.round(
                                        (c.valid[1] - c.valid[0]) / b.x / e
                                    );
                                this.hasNewData = !0;
                            }
                        },
                        getXformGrid: function() {
                            var a = this.mapExtent,
                                b = this.layer._hasTilingEffects ?
                                this.extent :
                                this.fullExtent,
                                c = this.layer.getCurrentResolution(),
                                d = JSON.stringify(a.toJson()) + JSON.stringify(b.toJson());
                            (this._cachedExtentString && this._cachedExtentString === d) ||
                            ((this._cachedExtentString = d), (this._xformGrid = a = l.getProjectionOffsetGrid(
                                a,
                                b,
                                c
                            )));
                            a = this._xformGrid;
                            this.xformSetting.meshSize = a && a.size;
                            return a;
                        },
                        updateExtent: function(a, b) {
                            this.mapExtent = this.extent = a;
                            var c = this.xformSetting.requireProjection;
                            if (c) {
                                this.extent = l.project(a, this.tileInfo.spatialReference);
                                if (!this.extent) return;
                                this.extent.spatialReference = new d(
                                    this.extent.spatialReference.toJson()
                                );
                            }
                            this.updateResolution(b, a);
                            a = this.extent;
                            var e = this.tileInfo,
                                f = e.cols,
                                k = e.rows;
                            b = this.resolution;
                            var p = a,
                                c = c ?
                                this.layer.raster.rasterInfo.extent :
                                this.layer.raster.projectedFullExtent;
                            this.ooe && (p = this._getIntersect(a, c));
                            var n = p.xmin,
                                c = p.xmax;
                            if (c < n) {
                                var r = a.spatialReference._getInfo();
                                r &&
                                    (c +=
                                        Math.ceil((n - c) / (r.valid[1] - r.valid[0])) *
                                        (r.valid[1] - r.valid[0]));
                                p.xmax = c;
                            }
                            var n =
                                Math.floor((n - e.origin.x) / b.x / f) -
                                this.prefetchBufferSize,
                                r =
                                Math.floor((c - e.origin.x) / b.x / f) +
                                this.prefetchBufferSize,
                                x =
                                Math.floor((e.origin.y - p.ymax) / b.y / k) -
                                this.prefetchBufferSize,
                                w =
                                Math.floor((e.origin.y - p.ymin) / b.y / k) +
                                this.prefetchBufferSize;
                            this.tileBoundary = {
                                rowStart: x,
                                rowEnd: w,
                                colStart: n,
                                colEnd: r,
                            };
                            var A, E, B;
                            if (
                                (w - x + 1) * (r - n + 1) > this._MAX_TILES ||
                                (!this.virtual &&
                                    this._resolution.x > 8 * this.tileInfo.lods[0].resolution)
                            )
                                this.tiles.forEach(
                                    g.hitch(this, function(a) {
                                        a.fetch && !a.fetch.isCanceled() && a.fetch.cancel();
                                        a.update && !a.update.isCanceled() && a.update.cancel();
                                    })
                                ), (this.tiles.length = 0);
                            else {
                                var c = this.tiles,
                                    p = !1,
                                    D = this.fullBoundary && this.fullBoundary.colRange,
                                    H = 0;
                                D &&
                                    (0 > n || r > D) &&
                                    (this.wrapTimes = H = 0 > n ?
                                        -1 - Math.floor(-n / D) :
                                        Math.floor(r / D));
                                for (A = c.length - 1; 0 <= A; A--)
                                    if (
                                        ((E = c[A].row), (B = c[A].col), H &&
                                            D &&
                                            (0 > n || r > D) &&
                                            (B = B > r ? H * D + B : B < n ? H * D + B : B), E < x ||
                                            E > w ||
                                            B < n ||
                                            B > r)
                                    )
                                        c[A].fetch &&
                                        !c[A].fetch.isCanceled() &&
                                        c[A].fetch.cancel(), c[A].update &&
                                        !c[A].update.isCanceled() &&
                                        c[A].update.cancel(), c.splice(A, 1), (p = !0);
                                var G;
                                for (A = x; A <= w; A++)
                                    for (x = n; x <= r; x++)
                                        (E = new h(
                                            e.origin.x + b.x * f * x,
                                            e.origin.y - b.y * k * (A + 1),
                                            e.origin.x + b.x * f * (x + 1),
                                            e.origin.y - b.y * k * A,
                                            a.spatialReference
                                        )), (G = D ?
                                            0 <= x ? x % D : D - -x % D :
                                            x), (B = m(c, function(a) {
                                            return a.row === A && a.col === G;
                                        })), -1 === B &&
                                        (c.push({
                                            row: A,
                                            col: G,
                                            cellsizeX: b.x,
                                            cellsizeY: b.y,
                                            width: f,
                                            height: k,
                                            extent: E,
                                            normalizedExtent: this._wrapExtent(E),
                                            pixelBlock: null,
                                            virtual: this.virtual,
                                            level: this.level,
                                            tileType: this.tileInfo.tileType || 'Raster',
                                        }), (p = !0));
                                p && this._sortTiles();
                                b =
                                    this.tileInfo.rows *
                                    (this.tileBoundary.rowEnd - this.tileBoundary.rowStart + 1);
                                this.width =
                                    this.tileInfo.cols *
                                    (this.tileBoundary.colEnd - this.tileBoundary.colStart + 1);
                                this.height = b;
                                this.count = c.length;
                                b = Math.min.apply(
                                    null,
                                    c.map(function(a) {
                                        return a.extent.xmin;
                                    })
                                );
                                e = Math.max.apply(
                                    null,
                                    c.map(function(a) {
                                        return a.extent.xmax;
                                    })
                                );
                                f = Math.min.apply(
                                    null,
                                    c.map(function(a) {
                                        return a.extent.ymin;
                                    })
                                );
                                k = Math.max.apply(
                                    null,
                                    c.map(function(a) {
                                        return a.extent.ymax;
                                    })
                                );
                                b = this.fullExtent = new h(b, f, e, k, a.spatialReference);
                                if (this.layer.roaming || this.layer.useWebGL)
                                    this.layer._hasTilingEffects ?
                                    ((this.xformSetting.offset = [
                                        0,
                                        0,
                                    ]), (this.xformSetting.scale = [1, 1])) :
                                    (p &&
                                        (this._tilesChanged = !0), (this.xformSetting.offset = [
                                            (a.xmin - b.xmin) / (b.xmax - b.xmin), -(b.ymin - a.ymin) / (b.ymax - b.ymin),
                                        ]), (this.xformSetting.scale = [
                                            (a.xmax - a.xmin) / (b.xmax - b.xmin),
                                            (a.ymax - a.ymin) / (b.ymax - b.ymin),
                                        ]));
                            }
                        },
                        fetchTiles: function(a) {
                            (this._tilesChanged || a) && this._fetchTiles(a);
                        },
                        _fetchTiles: function(a) {
                            this._fetchCounter = 0;
                            var b = this.extent;
                            this.fetchAllCompleted = a ? new f() : null;
                            (this._tilesChanged || (a && this.layer._hasTilingEffects)) &&
                            this.tiles.forEach(
                                g.hitch(this, function(a) {
                                    a.updateCompleted = !1;
                                })
                            );
                            var c = {};
                            !this.layer.roaming && this.layer._hasTilingEffects && a ?
                                (this.identifiers.forEach(
                                    function(a, b) {
                                        c[a] = {
                                            extent: this.extent,
                                            pixelBlock: new k({
                                                width: this.layer._map.width,
                                                height: this.layer._map.height,
                                                pixels: [],
                                                pixelType: '',
                                                mask: null,
                                                statistics: [],
                                            }),
                                        };
                                    }.bind(this)
                                ), (this.originalPixelData = {
                                    extent: this.extent,
                                    src: c,
                                    isEmpty: !0,
                                })) :
                                this._tilesChanged &&
                                (this.identifiers.forEach(
                                    function(a, b) {
                                        c[a] = {
                                            extent: this.fullExtent,
                                            pixelBlock: new k({
                                                width: 128,
                                                height: 128,
                                                pixels: [],
                                                pixelType: '',
                                                mask: null,
                                                statistics: [],
                                            }),
                                        };
                                    }.bind(this)
                                ), (this.originalPixelData = {
                                    extent: this.fullExtent,
                                    src: c,
                                    isEmpty: !0,
                                }));
                            this.tiles.forEach(
                                g.hitch(this, function(c) {
                                    if (c.fetch) c.update || (c.update = this.updateTile(c));
                                    else {
                                        if (this._isTileOutSide(c, b)) {
                                            c.updateCompleted = !0;
                                            return;
                                        }
                                        this._requestTile(c);
                                    }
                                    this.layer.roaming && this.layer.useWebGL ?
                                        this._fillPixelData(c) :
                                        c.src &&
                                        a &&
                                        (this.layer._hasTilingEffects || this.layer.useWebGL) &&
                                        (this._fillPixelData(c), this.layer
                                            ._hasTilingEffects &&
                                            (c.updateCompleted = !0), (c.processedPixelBlock = null), (c.renderedPixelBlock = null));
                                })
                            );
                            0 === this._fetchCounter && (this._fetched = !0);
                            this._tilesChanged = !1;
                            a && this._updateFetchStatus();
                        },
                        updateTile: function(a, c) {
                            var d = new f();
                            if (!a.src && !a.fetch) return d.resolve(a), d.promise;
                            b(
                                a.src || a._fetched || a.fetch,
                                g.hitch(this, function() {
                                    var b =
                                        this.layer.tileMode &&
                                        this.layer._rasterHandler &&
                                        !(this.layer._hasTilingEffects || this.layer.useWebGL),
                                        e = this.layer._drawTile,
                                        f = this._validateRawPixelBlocks(a);
                                    this.layer._hasTilingEffects &&
                                        !this.layer.useWebGL &&
                                        (e = e && (this._progressiveGlobal || c));
                                    if ((c || (!c && f)) && (b || e || this.layer.roaming)) {
                                        if (
                                            this.xformSetting.requireProjection &&
                                            this.layer.useWebGL &&
                                            ((this.xformSetting.gridConfig = this.getXformGrid()), null ==
                                                this.xformSetting.gridConfig)
                                        )
                                            return d.cancel(), d.promise;
                                        this._processTile(a, c).then(
                                            g.hitch(this, function(a) {
                                                d.isCanceled() ||
                                                    this._renderTile(a, c).then(
                                                        g.hitch(this, function(a) {
                                                            this.hasNewData = !1;
                                                            d.isCanceled() || d.resolve(a);
                                                        })
                                                    );
                                            })
                                        );
                                    } else
                                        c || f || (a.updateCompleted = !0), this.layer.useWebGL ||
                                        this.layer._hasTilingEffects ?
                                        d.resolve(this.originalPixelData) :
                                        d.resolve();
                                })
                            );
                            return d.promise;
                        },
                        setLayer: function(a) {
                            this.layer = a;
                        },
                        fillupTiles: function() {
                            this.tiles.forEach(
                                g.hitch(this, function(a) {
                                    a.update &&
                                        a.updateCompleted &&
                                        !a.filled &&
                                        ((a.updateCompleted = !1), this._fillPixelData(
                                            a
                                        ), (a.updateCompleted = !0));
                                })
                            );
                        },
                        _validateRawPixelBlocks: function(a) {
                            return (
                                a &&
                                a.src &&
                                !this.identifiers.some(function(b) {
                                    return !(a.src[b].pixelBlock &&
                                        0 !== a.src[b].pixelBlock.validPixelCount &&
                                        a.src[b].pixelBlock.pixels &&
                                        0 < a.src[b].pixelBlock.pixels.length);
                                })
                            );
                        },
                        _wrapExtent: function(a) {
                            var b = a.spatialReference._getInfo(),
                                c;
                            if (b) {
                                var d = b.valid[0],
                                    b = b.valid[1];
                                if (
                                    a.xmin < d - this.resolution.x ||
                                    a.xmax > b + this.resolution.y
                                )
                                    (c = new h(
                                        (a.xmin - d) % (b - d),
                                        a.ymin,
                                        (a.xmax - b) % (b - d),
                                        a.ymax,
                                        a.spatialReference
                                    )), c.xmax < c.xmin && (c = null);
                            }
                            return c || a;
                        },
                        _getIntersect: function(a, b) {
                            return new h(
                                Math.max(a.xmin, b.xmin),
                                Math.max(a.ymin, b.ymin),
                                Math.min(a.xmax, b.xmax),
                                Math.min(a.ymax, b.ymax),
                                a.spatialReference
                            );
                        },
                        _isTileOutSide: function(a, b) {
                            var c = !1,
                                d, e;
                            a.virtual ?
                                ((e = a.normalizedExtent), (b =
                                        b ||
                                        (this.xformSetting.requireProjection ?
                                            this.layer.raster.rasterInfo.extent :
                                            this.layer.raster.projectedFullExtent)) ?
                                    ((a =
                                        e.xmin -
                                        this.prefetchBufferSize *
                                        this.tileInfo.cols *
                                        this.resolution.x), (c =
                                        e.ymin -
                                        this.prefetchBufferSize *
                                        this.tileInfo.rows *
                                        this.resolution.y), (d =
                                        e.xmax +
                                        this.prefetchBufferSize *
                                        this.tileInfo.cols *
                                        this.resolution.x), (e =
                                        e.ymax +
                                        this.prefetchBufferSize *
                                        this.tileInfo.rows *
                                        this.resolution.y), (c =
                                        d <= b.xmin ||
                                        a >= b.xmax ||
                                        e <= b.ymin ||
                                        c >= b.ymax)) :
                                    (c = !1)) :
                                (c =
                                    0 > a.level ||
                                    a.row < this.fullBoundary.rowStart ||
                                    a.row > this.fullBoundary.rowEnd ||
                                    a.col < this.fullBoundary.colStart ||
                                    a.col > this.fullBoundary.colEnd);
                            return c;
                        },
                        _resolutionEqual: function(a, b) {
                            return a === b ||
                                (a && b && Math.abs(a - b) < Math.abs(b / 1e4)) ?
                                !0 :
                                !1;
                        },
                        _requestTile: function(a) {
                            var c, d = this.identifiers,
                                h;
                            this._isTileOutSide(a) ?
                                ((c = new f()), (a.updateCompleted = !0), c.resolve(
                                    null
                                ), (c = c.promise)) :
                                (c = this.layer.raster.rasterFunction ?
                                    new e(
                                        this.layer.raster
                                        .getMemberRasters()
                                        .map(function(b) {
                                            return b.read(a);
                                        })
                                    ) :
                                    new e([this.layer.raster.read(a)]));
                            a.fetch = c;
                            this._fetchCounter++;
                            b(
                                a.src || a._fetched || c,
                                g.hitch(this, function(b) {
                                    if (
                                        (h =
                                            b &&
                                            b.some(function(a) {
                                                return a[0];
                                            }))
                                    ) {
                                        var c = {};
                                        b.forEach(function(a, b) {
                                            c[d[b]] = a[0] && a[1] ?
                                                {
                                                    extent: a[1].extent,
                                                    pixelBlock: a[1].pixelBlock,
                                                    width: a[1].width,
                                                    height: a[1].height,
                                                } :
                                                null;
                                        });
                                        a.src = c;
                                    } else a.src = null;
                                    this._fetchCounter--;
                                    0 === this._fetchCounter && (this._fetched = !0);
                                    a._fetched = !0;
                                    this._updateFetchStatus();
                                }),
                                g.hitch(this, function() {
                                    this._fetchCounter--;
                                    0 === this._fetchCounter && (this._fetched = !0);
                                    a._fetched = !0;
                                    this._updateFetchStatus();
                                })
                            );
                            a.update = this.updateTile(a);
                        },
                        _updateFetchStatus: function() {
                            this.layer._drawTile &&
                                this.fetchAllCompleted &&
                                !this.fetchAllCompleted.isResolved() &&
                                !this.tiles.some(function(a) {
                                    return !a._fetched;
                                }) &&
                                (this.tiles.forEach(
                                    g.hitch(this, function(a) {
                                        this._fillPixelData(a);
                                    })
                                ), this.fetchAllCompleted.resolve());
                        },
                        _fillPixelData: function(a, b) {
                            if (a && !a.updateCompleted)
                                if (
                                    Math.abs(a.cellsizeX - this.resolution.x) >
                                    a.cellsizeX / 10
                                )
                                    a.updateCompleted = !0;
                                else if (!1 === this._validateRawPixelBlocks(a))
                                a.updateCompleted = !0;
                            else {
                                var c = a.extent,
                                    d, e, f;
                                this.layer.roaming ||
                                    (this.layer.useWebGL && !this.layer._hasTilingEffects) ?
                                    ((d = this.fullExtent), (e =
                                            this.tileInfo.cols *
                                            (this.tileBoundary.colEnd -
                                                this.tileBoundary.colStart +
                                                1)), (f =
                                            this.tileInfo.rows *
                                            (this.tileBoundary.rowEnd -
                                                this.tileBoundary.rowStart +
                                                1)), b ?
                                        this.originalPixelData.renderedPixelBlock ||
                                        (this.originalPixelData.renderedPixelBlock = new k({
                                            width: e,
                                            height: f,
                                            pixels: [],
                                            pixelType: '',
                                            mask: null,
                                            statistics: [],
                                        })) :
                                        this.identifiers.forEach(
                                            g.hitch(this, function(a) {
                                                this.originalPixelData.src[
                                                    a
                                                ].pixelBlock.width = e;
                                                this.originalPixelData.src[
                                                    a
                                                ].pixelBlock.height = f;
                                            })
                                        )) :
                                    ((d = this.extent), (e = this.layer._map.width), (f = this
                                            .layer._map.height), b ?
                                        this.originalPixelData.renderedPixelBlock ||
                                        (this.originalPixelData.renderedPixelBlock = new k({
                                            width: e,
                                            height: f,
                                            pixels: [],
                                            pixelType: '',
                                            mask: null,
                                            statistics: [],
                                        })) :
                                        this.identifiers.forEach(
                                            g.hitch(this, function(a) {
                                                this.originalPixelData.src[
                                                    a
                                                ].pixelBlock.width = e;
                                                this.originalPixelData.src[
                                                    a
                                                ].pixelBlock.height = f;
                                            })
                                        ));
                                if (
                                    d.xmax <= c.xmin ||
                                    d.xmin >= c.xmax ||
                                    d.ymax <= c.ymin ||
                                    d.ymin >= c.ymax
                                )
                                    return null;
                                var h = (this.originalPixelData.isEmpty = !1);
                                this.identifiers.forEach(
                                    g.hitch(this, function(b) {
                                        a.src &&
                                            (this._fillPixelBlock(
                                                a.src[b],
                                                this.originalPixelData.src[b], { extent: d, width: e, height: f }, !1
                                            ), (h = !0));
                                    })
                                );
                                a.filled = h;
                                this.hasNewData = !0;
                            }
                        },
                        _fillPixelBlock: function(a, b, c, d) {
                            var e = a.extent,
                                f = c.extent;
                            d = c.width;
                            c = c.height;
                            if (
                                a.pixelBlock &&
                                a.pixelBlock.pixels &&
                                a.pixelBlock.pixels[0]
                            ) {
                                var h = (e.xmax - e.xmin) / a.width,
                                    g = Math.max(e.xmin, f.xmin),
                                    k = Math.min(e.ymax, f.ymax),
                                    l = Math.round((g - e.xmin) / h),
                                    m =
                                    a.width -
                                    Math.round(
                                        Math.abs(e.xmax - Math.min(e.xmax, f.xmax)) / h
                                    ),
                                    n = Math.round(Math.abs(e.ymax - k) / h),
                                    e =
                                    a.height -
                                    Math.round((Math.max(e.ymin, f.ymin) - e.ymin) / h),
                                    g = Math.round((g - f.xmin) / h),
                                    f = Math.round(Math.abs(f.ymax - k) / h),
                                    p,
                                    t,
                                    r,
                                    u,
                                    h = a.pixelBlock.pixels.length;
                                b = b.pixelBlock;
                                var k = a.width,
                                    G = b.mask || new Uint8Array(d * c),
                                    F = a.pixelBlock,
                                    K = F.mask,
                                    L = 0;
                                for (t = 0; t < h; t++) {
                                    r = F.pixels[t];
                                    u = b.pixels[t] || new r.constructor(d * c);
                                    for (a = n; a < e; a++)
                                        for ((L = (f + a - n) * d + g), (p = l); p < m; p++)
                                            u[L + p - l] = r[a * k + p];
                                    b.pixels[t] = u;
                                }
                                if (K)
                                    for (a = n; a < e; a++)
                                        for ((L = (f + a - n) * d + g), (p = l); p < m; p++)
                                            G[L + p - l] = K[a * k + p];
                                else
                                    for (a = n; a < e; a++)
                                        for ((L = (f + a - n) * d + g), (p = l); p < m; p++)
                                            G[L + p - l] = 1;
                                b.pixelType = b.pixelType || F.pixelType;
                                b.mask = G;
                                if (!(b.statistics && 0 < b.statistics.length))
                                    for (
                                        (b.statistics = []), (a = 0); a < F.statistics.length; a++
                                    )
                                        b.statistics[a] = {
                                            minValue: F.statistics[a].minValue,
                                            maxValue: F.statistics[a].maxValue,
                                        };
                                else if (F.statistics && b.statistics)
                                    for (a = 0; a < b.statistics.length; a++)
                                        (b.statistics[a].minValue = Math.min(
                                            F.statistics[a].minValue,
                                            b.statistics[a].minValue
                                        )), (b.statistics[a].maxValue = Math.max(
                                            F.statistics[a].maxValue,
                                            b.statistics[a].maxValue
                                        ));
                            }
                        },
                        _processTile: function(a, b) {
                            var c = new f(),
                                d,
                                e = this.layer._hasTilingEffects,
                                h = this.layer.useWebGL,
                                g = e || h,
                                k =
                                this.layer.raster.rasterFunction &&
                                a &&
                                (e || h || !a.processedPixelBlock);
                            b
                                ?
                                (d = a) :
                                (this._fillPixelData(a), (d = g ?
                                    this.originalPixelData :
                                    a));
                            this.xformSetting.hasNewTexture = this.hasNewData;
                            var l;
                            k
                                ?
                                (this.identifiers.forEach(function(a) {
                                        if (
                                            0 === d.src[a].pixelBlock.pixels.length ||
                                            0 === d.src[a].pixelBlock.pixels[0].length
                                        )
                                            l = !0;
                                    }), l ?
                                    c.resolve({
                                        extent: d.extent,
                                        processedPixelBlock: d.src[this.identifiers[0]],
                                        pixelBlock: d.src[this.identifiers[0]],
                                    }) :
                                    h ?
                                    ((this.processedPixelData = this.layer.raster.rasterFunction.read(
                                        d
                                    )), c.resolve(this.processedPixelData)) :
                                    this.layer._rasterHandler ?
                                    this.layer._rasterHandler
                                    .process({
                                        extent: d.extent,
                                        src: d.src,
                                    })
                                    .then(function(b) {
                                        e
                                            ?
                                            ((this.processedPixelData = b), c.resolve(
                                                this.processedPixelData
                                            )) :
                                            ((a.processedPixelBlock =
                                                b.pixelBlock), c.resolve(a));
                                    }) :
                                    ((b = this.layer.raster.rasterFunction.read(
                                        a
                                    )), (a.processedPixelBlock =
                                        b.pixelBlock), c.resolve(a))) :
                                g ?
                                c.resolve(d.src[this.identifiers[0]]) :
                                ((a.pixelBlock =
                                    d.src[this.identifiers[0]] &&
                                    d.src[this.identifiers[0]].pixelBlock), c.resolve(a));
                            return c.promise;
                        },
                        _renderTile: function(a) {
                            var b = new f(),
                                c = this.layer._hasTilingEffects,
                                d = this.layer.useWebGL,
                                e =
                                Math.abs(
                                    (a.extent.xmax - a.extent.xmin) / a.width -
                                    this.layer.getCurrentResolution().x
                                ) >
                                this.resolution.x / 10,
                                e =
                                this.layer.useWebGL &&
                                (e || this._isTileOutSide(a, this.layer._map.extent));
                            this.xformSetting.hasNewTexture = this.hasNewData;
                            this.layer._rasterRenderer &&
                                a &&
                                (a.texture || a.src || a.pixelBlock || a.processedPixelBlock) ?
                                d && !e ?
                                ((this.layer.raster.rasterFunction &&
                                        this.layer.raster.rasterFunction.renderTexture) ||
                                    this.layer._rasterRenderer.draw(a), b.resolve(a)) :
                                this.layer._rasterHandler ?
                                this.layer._rasterHandler
                                .render({
                                    extent: a.extent,
                                    pixelBlock: a.processedPixelBlock || a.pixelBlock,
                                })
                                .then(
                                    function(d) {
                                        c
                                            ?
                                            ((d.renderedPixelBlock =
                                                d.pixelBlock), b.resolve(d)) :
                                            ((a.renderedPixelBlock =
                                                d.pixelBlock), b.resolve(a));
                                    }.bind(this)
                                ) :
                                ((a.renderedPixelBlock = this.layer._rasterRenderer.draw(
                                    a
                                ).pixelBlock), b.resolve(a)) :
                                ((a.renderedPixelBlock =
                                    a.processedPixelBlock || a.pixelBlock), b.resolve(a));
                            return b.promise;
                        },
                        _sortTiles: function() {
                            this.tiles.sort(function(a, b) {
                                return a.row < b.row || (a.row == b.row && a.col < b.col) ?
                                    -1 :
                                    1;
                            });
                        },
                    });
                }
            );
        },
        'esri/virtualearth/VETiledLayer': function() {
            define(
                'dojo/_base/declare dojo/_base/lang dojo/_base/json dojo/_base/array dojo/_base/config dojo/has dojo/string dojo/_base/Deferred ../kernel ../urlUtils ../SpatialReference ../layers/TileInfo ../layers/TiledMapServiceLayer ../geometry/Extent ../request'.split(
                    ' '
                ),
                function(c, g, f, b, e, h, d, a, k, n, l, m, p, r, u) {
                    c = c(p, {
                        declaredClass: 'esri.virtualearth.VETiledLayer',
                        constructor: function(a) {
                            try {
                                if (
                                    ((a = g.mixin({ bingMapsKey: null, culture: 'en-US' },
                                        a || {}
                                    )), (this.url =
                                        n.getProtocolForWebResource() +
                                        '//dev.virtualearth.net/REST/v1'), (this._url = n.urlToObject(
                                        this.url
                                    )), (this.spatialReference = new l({
                                        wkid: 102100,
                                    })), (this.tileInfo = new m({
                                        rows: 256,
                                        cols: 256,
                                        dpi: 96,
                                        origin: { x: -2.0037508342787e7, y: 2.0037508342787e7 },
                                        spatialReference: { wkid: 102100 },
                                        lods: [{
                                                level: 1,
                                                resolution: 78271.5169639999,
                                                scale: 2.95828763795777e8,
                                            },
                                            {
                                                level: 2,
                                                resolution: 39135.7584820001,
                                                scale: 1.47914381897889e8,
                                            },
                                            {
                                                level: 3,
                                                resolution: 19567.8792409999,
                                                scale: 7.3957190948944e7,
                                            },
                                            {
                                                level: 4,
                                                resolution: 9783.93962049996,
                                                scale: 3.6978595474472e7,
                                            },
                                            {
                                                level: 5,
                                                resolution: 4891.96981024998,
                                                scale: 1.8489297737236e7,
                                            },
                                            {
                                                level: 6,
                                                resolution: 2445.98490512499,
                                                scale: 9244648.868618,
                                            },
                                            {
                                                level: 7,
                                                resolution: 1222.99245256249,
                                                scale: 4622324.434309,
                                            },
                                            {
                                                level: 8,
                                                resolution: 611.49622628138,
                                                scale: 2311162.217155,
                                            },
                                            {
                                                level: 9,
                                                resolution: 305.748113140558,
                                                scale: 1155581.108577,
                                            },
                                            {
                                                level: 10,
                                                resolution: 152.874056570411,
                                                scale: 577790.554289,
                                            },
                                            {
                                                level: 11,
                                                resolution: 76.4370282850732,
                                                scale: 288895.277144,
                                            },
                                            {
                                                level: 12,
                                                resolution: 38.2185141425366,
                                                scale: 144447.638572,
                                            },
                                            {
                                                level: 13,
                                                resolution: 19.1092570712683,
                                                scale: 72223.819286,
                                            },
                                            {
                                                level: 14,
                                                resolution: 9.55462853563415,
                                                scale: 36111.909643,
                                            },
                                            {
                                                level: 15,
                                                resolution: 4.77731426794937,
                                                scale: 18055.954822,
                                            },
                                            {
                                                level: 16,
                                                resolution: 2.38865713397468,
                                                scale: 9027.977411,
                                            },
                                            {
                                                level: 17,
                                                resolution: 1.19432856685505,
                                                scale: 4513.988705,
                                            },
                                            {
                                                level: 18,
                                                resolution: 0.597164283559817,
                                                scale: 2256.994353,
                                            },
                                            {
                                                level: 19,
                                                resolution: 0.298582141647617,
                                                scale: 1128.497176,
                                            },
                                            {
                                                level: 20,
                                                resolution: 0.1492910708238085,
                                                scale: 564.248588,
                                            },
                                        ],
                                    })), (this.initialExtent = this.fullExtent = new r(-2.0037508342787e7, -2.003750834278e7,
                                        2.003750834278e7,
                                        2.0037508342787e7,
                                        new l({ wkid: 102100 })
                                    )), g.mixin(
                                        this,
                                        a
                                    ), (this.hasAttributionData = this.showAttribution), (this._initLayer = g.hitch(
                                        this,
                                        this._initLayer
                                    )), (this._errorHandler = g.hitch(
                                        this,
                                        this._errorHandler
                                    )), (this._getTileInfo = g.hitch(
                                        this,
                                        this._getTileInfo
                                    )), this.bingMapsKey)
                                )
                                    this._getTileInfo();
                                else throw Error('BingMapsKey must be provided.');
                            } catch (q) {
                                throw (this.onError(q), q);
                            }
                        },
                        _unsetMap: function(a, b) {
                            this.inherited('_unsetMap', arguments);
                        },
                        _getTileInfo: function() {
                            if (this.mapStyle) {
                                var a = this._url.path + '/Imagery/Metadata/' + this.mapStyle,
                                    b = window.location.protocol;
                                if (this.bingMapsKey) {
                                    var c = this.resourceInfo;
                                    !this.loaded && c ?
                                        this._initLayer(c) :
                                        u({
                                            url: a,
                                            content: g.mixin({}, {
                                                uriScheme: 'https:' === b ? 'https' : 'http',
                                                key: this.bingMapsKey,
                                                ss: !0,
                                                c: this.culture,
                                                include: this.hasAttributionData ?
                                                    'imageryProviders' :
                                                    null,
                                            }),
                                            callbackParamName: 'jsonp',
                                            load: this._initLayer,
                                            error: this._errorHandler,
                                        });
                                }
                            }
                        },
                        _initLayer: function(a, c) {
                            if (200 !== a.statusCode)
                                (c = Error()), (c.code = a.statusCode), (c.message =
                                    a.statusDescription), (c.details =
                                    a.errorDetails), (c.authenticationResultCode =
                                    a.authenticationResultCode), this.onError(c);
                            else
                                try {
                                    this.resourceInfo = f.toJson(a);
                                    var e = a.resourceSets[0].resources[0],
                                        h = e.imageUrl.replace('{', '${');
                                    this.tileServers = b.map(e.imageUrlSubdomains, function(a) {
                                        var b = n.getProtocolForWebResource();
                                        return d
                                            .substitute(h, { subdomain: a })
                                            .replace('http:', b);
                                    });
                                    this._tsLength = this.tileServers.length;
                                    if (this.loaded) this.refresh(), this.onMapStyleChange();
                                    else {
                                        this.copyright =
                                            this.copyright ||
                                            '\x26copy; 2017 Microsoft Corporation and its data suppliers';
                                        this.loaded = !0;
                                        this.onLoad(this);
                                        var g = this.loadCallback;
                                        g && (delete this.loadCallback, g(this));
                                    }
                                } catch (y) {
                                    this.onError(y);
                                }
                        },
                        getAttributionData: function() {
                            var b = new a(),
                                c = f.fromJson(this.resourceInfo),
                                d;
                            this.hasAttributionData &&
                                c &&
                                (d = g.getObject(
                                    'resourceSets.0.resources.0.imageryProviders', !1,
                                    c
                                ));
                            d
                                ?
                                b.callback({ contributors: d }) :
                                ((c = Error(
                                    'Layer does not have attribution data'
                                )), (c.log = e.isDebug), b.errback(c));
                            return b;
                        },
                        getTileUrl: function(a, b, c) {
                            return d.substitute(
                                this.tileServers[b % this._tsLength].replace(/\{/g, '${'), {
                                    quadkey: this._getQuadKey(a, b, c),
                                    culture: this.culture,
                                    token: this.bingMapsKey,
                                }
                            );
                        },
                        _getQuadKey: function(a, b, c) {
                            var d = '',
                                e, f;
                            for (f = a; 0 < f; f--)
                                (a = '0'), (e = 1 << (f - 1)), 0 != (c & e) && a++, 0 !=
                                (b & e) && (a++, a++), (d += a);
                            return d;
                        },
                        setMapStyle: function(a) {
                            this.mapStyle = a;
                            this._getTileInfo();
                        },
                        setCulture: function(a) {
                            this.culture = a;
                            this._getTileInfo();
                        },
                        setBingMapsKey: function(a) {
                            this.bingMapsKey = a;
                        },
                        onMapStyleChange: function() {},
                    });
                    g.mixin(c, {
                        MAP_STYLE_AERIAL: 'aerial',
                        MAP_STYLE_AERIAL_WITH_LABELS: 'aerialWithLabelsOnDemand',
                        MAP_STYLE_ROAD: 'roadOnDemand',
                    });
                    g.setObject('virtualearth.VETiledLayer', c, k);
                    return c;
                }
            );
        },
        'esri/dijit/Attribution': function() {
            define(
                'dojo/_base/declare dojo/_base/lang dojo/_base/array dojo/_base/connect dojo/_base/kernel dojo/has dojo/query dojo/dom dojo/dom-attr dojo/dom-construct dojo/dom-style dojo/dom-class dojo/dom-geometry ../kernel ../lang ../SpatialReference ../geometry/webMercatorUtils ../geometry/Extent'.split(
                    ' '
                ),
                function(c, g, f, b, e, h, d, a, k, n, l, m, p, r, u, t, q, v) {
                    c = c(null, {
                        declaredClass: 'esri.dijit.Attribution',
                        itemDelimiter: ' | ',
                        listClass: 'esriAttributionList',
                        itemClass: 'esriAttributionItem',
                        lastItemClass: 'esriAttributionLastItem',
                        delimiterClass: 'esriAttributionDelim',
                        constructor: function(c, d) {
                            try {
                                g.mixin(this, c);
                                this._attributions = {};
                                this._pendingDfds = {};
                                this._activeLayers = [];
                                this._sharedLayers = [];
                                this._layerHandles = {};
                                var f = (this.domNode = a.byId(d)),
                                    h = this.map,
                                    l =
                                    "\x3cspan class\x3d'" +
                                    this.listClass +
                                    "'\x3e\x3c/span\x3e";
                                f &&
                                    (k.set(f, 'innerHTML', l), (this.listNode = e.query(
                                        '.esriAttributionList',
                                        f
                                    )[0]), (this.itemNodes = {}));
                                this._eventConnections = [
                                    b.connect(h, 'onLayerAdd', this, this._onLayerAdd),
                                    b.connect(h, 'onLayerRemove', this, this._onLayerRemove),
                                    b.connect(h, 'onLayerSuspend', this, this._onLayerSuspend),
                                    b.connect(h, 'onLayerResume', this, this._onLayerResume),
                                    b.connect(h, 'onResize', this, this._adjustFocus),
                                    b.connect(h, 'onExtentChange', this, this._onExtentChange),
                                ];
                                if (h.loaded) {
                                    var m = h.layerIds.concat(h.graphicsLayerIds),
                                        n,
                                        q,
                                        p = m.length;
                                    for (q = 0; q < p; q++)
                                        (n = h.getLayer(m[q])), n.loaded && this._onLayerAdd(n);
                                }
                            } catch (H) {}
                        },
                        startup: function() {},
                        destroy: function() {
                            f.forEach(this._eventConnections, b.disconnect);
                            n.destroy(this.listNode);
                            var a = this._layerHandles,
                                c;
                            for (c in a)
                                a[c] && a[c].remove();
                            this.map = this.domNode = this._eventConnections = this.listNode = this._attributions = this._pendingDfds = this.itemNodes = this._activeLayers = this._lastItem = this._sharedLayers = this._layerHandles = null;
                        },
                        _onLayerAdd: function(a) {
                            try {
                                var b = this._attributions,
                                    c = a.id;
                                if (!u.isDefined(b[c]) && a.showAttribution) {
                                    if (a.hasAttributionData) {
                                        var d = a.getAttributionData();
                                        this._pendingDfds[c] = 1;
                                        b[c] = d;
                                        d.addBoth(g.partial(this._onAttributionLoad, this, a));
                                    } else
                                        (b[c] = a.copyright || a.copyrightText || ''), b[c] ?
                                        (a.suspended ||
                                            this._activeLayers.push(c), this._createNode(c)) :
                                        this._onLayerRemove(a); -
                                    1 <
                                        a.declaredClass.toLowerCase().indexOf('vetiledlayer') &&
                                        (this._layerHandles[c] = a.on(
                                            'map-style-change',
                                            g.hitch(this, function() {
                                                this._onLayerRemove(a);
                                                this._onLayerAdd(a);
                                            })
                                        ));
                                }
                            } catch (w) {}
                        },
                        _onAttributionLoad: function(a, b, c) {
                            var d = a._attributions,
                                e = a._pendingDfds,
                                f = b.id;
                            if (e && e[f]) {
                                delete e[f];
                                if (!c || c instanceof Error) c = '';
                                d[f] = c ?
                                    a._createIndexByLevel(
                                        c, -1 !==
                                        b.declaredClass.toLowerCase().indexOf('vetiledlayer')
                                    ) :
                                    b.copyright || b.copyrightText || '';
                                d[f] ?
                                    (b.suspended || a._activeLayers.push(f), a._createNode(f)) :
                                    a._onLayerRemove(b);
                            }
                        },
                        _onLayerRemove: function(a) {
                            try {
                                var b = a.id,
                                    c = this.itemNodes,
                                    d, e = -1;
                                this._onLayerSuspend(a);
                                this._layerHandles[b] && this._layerHandles[b].remove();
                                delete this._attributions[b];
                                delete this._pendingDfds[b];
                                delete this._layerHandles[b];
                                d = this._getGroupIndex(b); -
                                1 !== d &&
                                    ((e = f.indexOf(this._sharedLayers[d], b)), -1 !== e &&
                                        (this._sharedLayers[d].splice(e, 1), 1 >=
                                            this._sharedLayers[d].length &&
                                            this._sharedLayers.splice(d, 1)));
                                c[b] && -1 === e && n.destroy(c[b]);
                                delete c[b];
                                this._updateLastItem();
                            } catch (A) {}
                        },
                        _onLayerSuspend: function(a) {
                            try {
                                var b = a.id;
                                if (this._attributions[b]) {
                                    var c = f.indexOf(this._activeLayers, b),
                                        d = this.itemNodes[b]; -
                                    1 !== c && this._activeLayers.splice(c, 1);
                                    d && this._toggleItem(d, !1, this._getGroupIndex(b));
                                }
                            } catch (w) {}
                        },
                        _adjustFocus: function() {
                            var a = this.domNode.scrollWidth > this.domNode.clientWidth,
                                b = m.contains(this.domNode, 'esriAttributionOpen');
                            k.set(this.domNode, 'tabIndex', a || b ? '0' : '');
                        },
                        _onLayerResume: function(a) {
                            try {
                                var b = a.id,
                                    c = this._attributions[b],
                                    d = this.itemNodes[b];
                                if (
                                    c &&
                                    (-1 === f.indexOf(this._activeLayers, b) &&
                                        this._activeLayers.push(b), d)
                                ) {
                                    var e = g.isString(c) ?
                                        c :
                                        this._getContributorsList(
                                            c,
                                            this.map.extent,
                                            this.map.getLevel()
                                        );
                                    g.isString(c) ||
                                        k.set(d, 'innerHTML', e ? e + this._getDelimiter() : '');
                                    e && this._toggleItem(d, !0, this._getGroupIndex(b));
                                }
                            } catch (A) {}
                        },
                        _onExtentChange: function(a, b, c, d) {
                            try {
                                var e = this._activeLayers,
                                    f = this._attributions,
                                    h = this.itemNodes,
                                    l,
                                    m,
                                    n,
                                    q,
                                    p = e.length || 0;
                                for (q = 0; q < p; q++)
                                    if (((m = e[q]), (n = f[m]), (l = h[m]) && !g.isString(n))) {
                                        var t = this._getContributorsList(n, a, d ? d.level : -1);
                                        k.set(l, 'innerHTML', t ? t + this._getDelimiter() : '');
                                        this._toggleItem(l, !!t, -1);
                                    }
                            } catch (L) {}
                            this._adjustCursorStyle();
                        },
                        _createNode: function(a) {
                            if (this.domNode) {
                                var b = this._checkShareInfo(a),
                                    c = b && b.sharedWith,
                                    c = c && this.itemNodes[c],
                                    d = this.map,
                                    e = this._attributions[a],
                                    e = g.isString(e) ?
                                    e :
                                    this._getContributorsList(e, d.extent, d.getLevel()),
                                    d = !!e && !d.getLayer(a).suspended;
                                c
                                    ?
                                    ((this.itemNodes[a] = c), this._toggleItem(c, d, b.index)) :
                                    ((a = this.itemNodes[a] = n.create(
                                        'span', {
                                            class: this.itemClass,
                                            innerHTML: e ? e + this._getDelimiter() : '',
                                            style: { display: d ? 'inline' : 'none' },
                                        },
                                        this.listNode
                                    )), d && this._setLastItem(a));
                                this._adjustCursorStyle();
                            }
                        },
                        _checkShareInfo: function(a) {
                            var b = this._attributions,
                                c, d, e = -1,
                                h = b[a],
                                k;
                            if (h && g.isString(h)) {
                                for (d in b)
                                    if (
                                        ((c = b[d]), d !== a &&
                                            c &&
                                            g.isString(c) &&
                                            c.length === h.length &&
                                            c.toLowerCase() === h.toLowerCase())
                                    ) {
                                        k = d;
                                        break;
                                    }
                                b = this._sharedLayers;
                                c = b.length;
                                if (k) {
                                    for (d = 0; d < c; d++)
                                        if (((h = b[d]), -1 !== f.indexOf(h, k))) {
                                            e = d;
                                            h.push(a);
                                            break;
                                        } -
                                    1 === e && (e = b.push([k, a]) - 1);
                                }
                            }
                            return -1 < e ? { index: e, sharedWith: k } : null;
                        },
                        _getGroupIndex: function(a) {
                            var b = this._sharedLayers,
                                c, d = b.length,
                                e = -1;
                            for (c = 0; c < d; c++)
                                if (-1 !== f.indexOf(b[c], a)) {
                                    e = c;
                                    break;
                                }
                            return e;
                        },
                        _getDelimiter: function() {
                            var a = this.itemDelimiter;
                            return a ?
                                "\x3cspan class\x3d'" +
                                this.delimiterClass +
                                "'\x3e" +
                                a +
                                '\x3c/span\x3e' :
                                '';
                        },
                        _toggleItem: function(a, b, c) {
                            if (-1 < c && !b) {
                                c = this._sharedLayers[c];
                                var d, e = c.length,
                                    h = this._activeLayers;
                                for (d = 0; d < e; d++)
                                    if (-1 !== f.indexOf(h, c[d])) return;
                            }
                            l.set(a, 'display', b ? 'inline' : 'none');
                            this._updateLastItem();
                        },
                        _updateLastItem: function() {
                            var a = this.listNode.childNodes,
                                b;
                            b = a.length;
                            var c;
                            if (b)
                                for (--b; 0 <= b; b--)
                                    if (((c = a[b]), 'none' !== l.get(c, 'display'))) {
                                        this._setLastItem(c);
                                        break;
                                    }
                            this._adjustCursorStyle();
                        },
                        _setLastItem: function(a) {
                            var b = this.itemClass,
                                c = this.lastItemClass;
                            this._lastItem && m.replace(this._lastItem, b, c);
                            a && (m.replace(a, c, b), (this._lastItem = a));
                        },
                        _createIndexByLevel: function(a, b) {
                            a = a.contributors;
                            var c,
                                d,
                                e,
                                f,
                                h = a ? a.length : 0,
                                g,
                                k,
                                l = new t(4326),
                                m = {},
                                n;
                            for (f = 0; f < h; f++)
                                for (
                                    (c = a[f]), (k = (d = c.coverageAreas) ?
                                        d.length :
                                        0), (g = 0); g < k; g++
                                )
                                    for (
                                        (e = d[g]), (n = e.bbox), (n = {
                                            extent: q.geographicToWebMercator(
                                                new v(n[1], n[0], n[3], n[2], l)
                                            ),
                                            attribution: c.attribution || '',
                                            zoomMin: e.zoomMin - (b && e.zoomMin ? 1 : 0),
                                            zoomMax: e.zoomMax - (b && e.zoomMax ? 1 : 0),
                                            score: u.isDefined(e.score) ? e.score : 100,
                                            objectId: f,
                                        }), (e = n.zoomMin); e <= n.zoomMax; e++
                                    )
                                        (m[e] = m[e] || []), m[e].push(n);
                            return m;
                        },
                        _getContributorsList: function(a, b, c) {
                            var d = '';
                            if (b && u.isDefined(c) && -1 < c) {
                                a = a[c];
                                c = b.getCenter().normalize();
                                for (
                                    var e = a ? a.length : 0, f = [], h = {}, d = 0; d < e; d++
                                )
                                    (b = a[d]), !h[b.objectId] &&
                                    b.extent.contains(c) &&
                                    ((h[b.objectId] = 1), f.push(b));
                                f.sort(function(a, b) {
                                    return b.score - a.score || a.objectId - b.objectId;
                                });
                                e = f.length;
                                for (d = 0; d < e; d++)
                                    f[d] = f[d].attribution;
                                d = f.join(', ');
                            }
                            return d;
                        },
                        _adjustCursorStyle: function() {
                            var a = p.position(this.listNode.parentNode, !0).h;
                            m.contains(this.listNode.parentNode, 'esriAttributionOpen') ?
                                (m.remove(
                                        this.listNode.parentNode,
                                        'esriAttributionOpen'
                                    ), a > p.position(this.listNode.parentNode, !0).h ?
                                    (l.set(
                                        this.listNode.parentNode,
                                        'cursor',
                                        'pointer'
                                    ), m.add(
                                        this.listNode.parentNode,
                                        'esriAttributionOpen'
                                    )) :
                                    l.set(this.listNode.parentNode, 'cursor', 'default')) :
                                (m.add(this.listNode.parentNode, 'esriAttributionOpen'), a <
                                    p.position(this.listNode.parentNode, !0).h ?
                                    l.set(this.listNode.parentNode, 'cursor', 'pointer') :
                                    l.set(
                                        this.listNode.parentNode,
                                        'cursor',
                                        'default'
                                    ), m.remove(
                                        this.listNode.parentNode,
                                        'esriAttributionOpen'
                                    ));
                            this._adjustFocus();
                        },
                    });
                    g.setObject('dijit.Attribution', c, r);
                    return c;
                }
            );
        },
        'esri/dijit/TimeSlider': function() {
            define(
                'dojo/_base/declare dojo/_base/lang dojo/_base/connect dojo/_base/kernel dojo/has dojo/dom-class dojo/dom-construct dojo/dom-style dojo/dom-geometry dijit/_Widget dijit/_Templated dijit/form/HorizontalSlider dijit/form/HorizontalRule dijit/form/HorizontalRuleLabels dojox/timing/_base dojox/form/RangeSlider dojo/text!dojox/form/resources/HorizontalRangeSlider.html ../kernel ../lang ../TimeExtent ./_EventedWidget dojo/text!./templates/TimeSlider.html dojo/i18n!../nls/jsapi'.split(
                    ' '
                ),
                function(
                    c,
                    g,
                    f,
                    b,
                    e,
                    h,
                    d,
                    a,
                    k,
                    n,
                    l,
                    m,
                    p,
                    r,
                    u,
                    t,
                    q,
                    v,
                    C,
                    z,
                    y,
                    x,
                    w
                ) {
                    e = c([y, n, l], {
                        declaredClass: 'esri.dijit.TimeSlider',
                        widgetsInTemplate: !0,
                        templateString: x,
                        intermediateChanges: !1,
                        _slideDuration: 1e3,
                        _defaultCount: 10,
                        _eventMap: {
                            'time-extent-change': !0,
                            play: !0,
                            pause: !0,
                            next: !0,
                            previous: !0,
                        },
                        constructor: function(a, b) {
                            g.mixin(this, w.widgets.timeSlider);
                            this._iconClass = 'tsButton tsPlayButton';
                            this.loop = this.playing = !1;
                            this.thumbCount = 1;
                            this.thumbMovingRate = 1e3;
                            this._createTimeInstants = !1;
                            this._options = g.mixin({
                                    excludeDataAtTrailingThumb: !1,
                                    excludeDataAtLeadingThumb: !1,
                                },
                                a.options || {}
                            );
                        },
                        postCreate: function() {
                            this.inherited(arguments);
                        },
                        startup: function() {
                            this.inherited(arguments);
                            this._timer = new u.Timer();
                            this._timer.setInterval(this.thumbMovingRate);
                            this._timer.onTick = g.hitch(this, '_bumpSlider', 1);
                            this._createSlider();
                        },
                        destroy: function() {
                            this._timer.stop();
                            this.timeStops = this._timer = null;
                            this._slider.destroy();
                            this._slider = null;
                            this._hTicks &&
                                (this._hTicks.destroyRecursive(), (this._hTicks = null));
                            this._hLabels &&
                                (this._hLabels.destroyRecursive(), (this._hLabels = null));
                            this.inherited(arguments);
                        },
                        onTimeExtentChange: function() {},
                        onPlay: function() {},
                        onPause: function() {},
                        onNext: function() {},
                        onPrevious: function() {},
                        _onHorizontalChange: function() {
                            var a = this._sliderToTimeExtent();
                            this.onTimeExtentChange(a);
                        },
                        _onPlay: function() {
                            this.playing = !this.playing;
                            this._updateUI();
                            this.playing ?
                                (this._timer.start(), this.onPlay(
                                    this._sliderToTimeExtent()
                                )) :
                                (this._timer.stop(), this.onPause(
                                    this._sliderToTimeExtent()
                                ));
                            var a = this._getSliderValue();
                            this._offset = g.isArray(a) ? a[1] - a[0] : 0;
                        },
                        _onNext: function() {
                            this.playing ||
                                (this._bumpSlider(1), this.onNext(
                                    this._sliderToTimeExtent()
                                ));
                        },
                        _onPrev: function() {
                            this.playing ||
                                (this._bumpSlider(-1), this.onPrevious(
                                    this._sliderToTimeExtent()
                                ));
                        },
                        createTimeStopsByCount: function(a, b) {
                            a &&
                                a.startTime &&
                                a.endTime &&
                                ((b =
                                    b || this._defaultCount), this.createTimeStopsByTimeInterval(
                                    a,
                                    Math.ceil((a.endTime - a.startTime) / (b - 1)),
                                    'esriTimeUnitsMilliseconds'
                                ));
                        },
                        createTimeStopsByTimeInterval: function(a, b, c, d) {
                            if (a && a.startTime && a.endTime) {
                                this.fullTimeExtent = new z(a.startTime, a.endTime);
                                d &&
                                    !0 === d.resetStartTime &&
                                    this._resetStartTime(this.fullTimeExtent, c);
                                this._timeIntervalUnits = c;
                                d = this.fullTimeExtent.startTime;
                                for (var e = []; d <= a.endTime;)
                                    e.push(d), (d = a._getOffsettedDate(d, b, c));
                                0 < e.length && e[e.length - 1] < a.endTime && e.push(d);
                                this.setTimeStops(e);
                            }
                        },
                        getCurrentTimeExtent: function() {
                            return this._sliderToTimeExtent();
                        },
                        setTimeStops: function(a) {
                            this.timeStops = a || [];
                            this._numTicks = this._numStops = this.timeStops.length;
                            !1 === C.isDefined(this.fullTimeExtent) &&
                                (this.fullTimeExtent = new z(a[0], a[a.length - 1]));
                        },
                        setLoop: function(a) {
                            this.loop = a;
                        },
                        setThumbCount: function(a) {
                            this.thumbCount = a;
                            this.singleThumbAsTimeInstant(this._createTimeInstants);
                            this._slider && this._createSlider();
                        },
                        setThumbIndexes: function(a) {
                            this.thumbIndexes = g.clone(a) || [0, 1];
                            this._initializeThumbs();
                        },
                        setThumbMovingRate: function(a) {
                            this.thumbMovingRate = a;
                            this._timer && this._timer.setInterval(this.thumbMovingRate);
                        },
                        setLabels: function(a) {
                            this.labels = a;
                            this._slider && this._createSlider();
                        },
                        setTickCount: function(a) {
                            this._numTicks = a;
                            this._slider && this._createSlider();
                        },
                        singleThumbAsTimeInstant: function(a) {
                            this._createTimeInstants = a && 1 === this.thumbCount;
                        },
                        next: function() {
                            this._onNext();
                        },
                        pause: function() {
                            this.playing = !1;
                            this._updateUI();
                            this._timer.stop();
                        },
                        play: function() {
                            !0 !== this.playing && ((this.playing = !1), this._onPlay());
                        },
                        previous: function() {
                            this._onPrev();
                        },
                        _setIntermediateChangesAttr: function(a) {
                            this.intermediateChanges = !!a;
                            this._slider && this._slider.set('intermediateChanges', !!a);
                        },
                        _updateUI: function() {
                            h.remove(this.playPauseBtn.iconNode, this._iconClass);
                            this._iconClass = this.playing ?
                                'tsButton tsPauseButton' :
                                'tsButton tsPlayButton';
                            h.add(this.playPauseBtn.iconNode, this._iconClass);
                            this.previousBtn.set('disabled', this.playing);
                            this.nextBtn.set('disabled', this.playing);
                        },
                        _createSlider: function() {
                            this._slider && (this._slider.destroy(), (this._slider = null));
                            for (var c = this.domNode; c.parentNode && !c.dir;)
                                c = c.parentNode;
                            c = {
                                onChange: g.hitch(this, '_onHorizontalChange'),
                                showButtons: !1,
                                discreteValues: this._numStops,
                                slideDuration: this._slideDuration,
                                class: 'ts',
                                dir: 'ltr',
                                intermediateChanges: this.intermediateChanges,
                            };
                            this._ts = d.create(
                                'div', {},
                                b.query('.tsTmp', this.domNode)[0],
                                'first'
                            );
                            this._timeSliderTicks = d.create('div', {}, this._ts, 'first');
                            this._timeSliderLabels = d.create('div', {}, this._ts);
                            2 === this.thumbCount ?
                                this._createRangeSlider(c) :
                                this._createSingleSlider(c);
                            this.thumbIndexes = this.thumbIndexes || [0, 1];
                            this._createHorizRule();
                            this._createLabels();
                            !0 === this._createTimeInstants &&
                                b
                                .query(
                                    '.dijitSliderProgressBarH, .dijitSliderLeftBumper, .dijitSliderRightBumper',
                                    this._ts
                                )
                                .forEach(function(b) {
                                    a.set(b, { background: 'none' });
                                });
                            this._initializeThumbs();
                            f.disconnect(this._onChangeConnect);
                            this._onChangeConnect = f.connect(
                                this._slider,
                                'onChange',
                                g.hitch(this, '_updateThumbIndexes')
                            );
                        },
                        _createRangeSlider: function(a) {
                            this._isRangeSlider = !0;
                            this._slider = new(c([m, t], { templateString: q }))(
                                a,
                                this._ts
                            );
                        },
                        _createSingleSlider: function(a) {
                            this._isRangeSlider = !1;
                            this._slider = new m(a, this._ts);
                        },
                        _createHorizRule: function() {
                            this._hTicks &&
                                (this._hTicks.destroyRecursive(), (this._hTicks = null));
                            2 > this._numTicks ||
                                (this._hTicks = new p({
                                        container: 'topDecoration',
                                        ruleStyle: '',
                                        class: 'tsTicks',
                                        count: this._numTicks,
                                    },
                                    this._timeSliderTicks
                                ));
                        },
                        _createLabels: function() {
                            this._hLabels &&
                                (this._hLabels.destroyRecursive(), (this._hLabels = null));
                            this.labels &&
                                0 < this.labels.length &&
                                (this._hLabels = new r({ labels: this.labels, labelStyle: '', class: 'tsLabels' },
                                    this._timeSliderLabels
                                ));
                        },
                        _initializeThumbs: function() {
                            if (this._slider) {
                                this._offset = this._toSliderValue(this.thumbIndexes[1]) || 0;
                                var a = this._toSliderValue(this.thumbIndexes[0]),
                                    a = a > this._slider.maximum || a < this._slider.minimum ?
                                    this._slider.minimum :
                                    a;
                                if (!0 === this._isRangeSlider) {
                                    var b = this._toSliderValue(this.thumbIndexes[1]),
                                        b = b > this._slider.maximum || b < this._slider.minimum ?
                                        this._slider.maximum :
                                        b;
                                    this._setSliderValue([a, b < a ? a : b]);
                                } else this._setSliderValue(a);
                                this._onHorizontalChange();
                            }
                        },
                        _bumpSlider: function(a) {
                            var b = this._getSliderValue(),
                                c = b,
                                d = c,
                                e = a;
                            g.isArray(b) &&
                                ((d = b[0]), (c = b[1]), (e = [
                                    { change: a, useMaxValue: !0 },
                                    { change: a, useMaxValue: !1 },
                                ]));
                            (1e-10 > Math.abs(d - this._slider.minimum) && 0 > a) ||
                            (1e-10 > Math.abs(c - this._slider.maximum) && 0 < a) ?
                            this._timer.isRunning &&
                                (this.loop ?
                                    (this._timer.stop(), this._setSliderValue(
                                        this._getSliderMinValue()
                                    ), (a = this._sliderToTimeExtent()), this.onTimeExtentChange(
                                        a
                                    ), this._timer.start(), (this.playing = !0)) :
                                    this.pause()): this._slider._bumpValue(e);
                        },
                        _updateThumbIndexes: function() {
                            var a = this._getSliderValue();
                            g.isArray(a) ?
                                ((this.thumbIndexes[0] = this._toSliderIndex(
                                    a[0]
                                )), (this.thumbIndexes[1] = this._toSliderIndex(a[1]))) :
                                (this.thumbIndexes[0] = this._toSliderIndex(a));
                        },
                        _sliderToTimeExtent: function() {
                            if (this.timeStops && 0 !== this.timeStops.length) {
                                var a = new z(),
                                    b = this._getSliderValue(),
                                    c, d;
                                g.isArray(b) ?
                                    (b[0] > b[1] ?
                                        ((d = b[0]), (c = b[1])) :
                                        ((c = b[0]), (d = b[1])), (a.startTime = new Date(
                                            this.timeStops[this._toSliderIndex(c)]
                                        )), (a.endTime = new Date(
                                            this.timeStops[this._toSliderIndex(d)]
                                        )), this._adjustTimeExtent(a)) :
                                    ((a.startTime = !0 === this._createTimeInstants ?
                                        new Date(this.timeStops[this._toSliderIndex(b)]) :
                                        new Date(
                                            this.fullTimeExtent.startTime
                                        )), (a.endTime = !0 === this._createTimeInstants ?
                                        a.startTime :
                                        new Date(this.timeStops[this._toSliderIndex(b)])));
                                return a;
                            }
                        },
                        _adjustTimeExtent: function(a) {
                            if (
                                (!1 !== this._options.excludeDataAtTrailingThumb ||
                                    !1 !== this._options.excludeDataAtLeadingThumb) &&
                                a.startTime.getTime() !== a.endTime.getTime()
                            ) {
                                if (this._options.excludeDataAtTrailingThumb) {
                                    var b = a.startTime;
                                    b.setUTCSeconds(b.getUTCSeconds() + 1);
                                }
                                this._options.excludeDataAtLeadingThumb &&
                                    ((a = a.endTime), a.setUTCSeconds(a.getUTCSeconds() - 1));
                            }
                        },
                        _resetStartTime: function(a, b) {
                            switch (b) {
                                case 'esriTimeUnitsSeconds':
                                    a.startTime.setUTCMilliseconds(0);
                                    break;
                                case 'esriTimeUnitsMinutes':
                                    a.startTime.setUTCSeconds(0, 0, 0);
                                    break;
                                case 'esriTimeUnitsHours':
                                    a.startTime.setUTCMinutes(0, 0, 0);
                                    break;
                                case 'esriTimeUnitsDays':
                                    a.startTime.setUTCHours(0, 0, 0, 0);
                                    break;
                                case 'esriTimeUnitsWeeks':
                                    a.startTime.setUTCDate(
                                        a.startTime.getUTCDate() - a.startTime.getUTCDay()
                                    );
                                    break;
                                case 'esriTimeUnitsMonths':
                                    a.startTime.setUTCDate(1);
                                    a.startTime.setUTCHours(0, 0, 0, 0);
                                    break;
                                case 'esriTimeUnitsDecades':
                                    a.startTime.setUTCFullYear(
                                        a.startTime.getUTCFullYear() -
                                        a.startTime.getUTCFullYear() % 10
                                    );
                                    break;
                                case 'esriTimeUnitsCenturies':
                                    a.startTime.setUTCFullYear(
                                        a.startTime.getUTCFullYear() -
                                        a.startTime.getUTCFullYear() % 100
                                    );
                            }
                        },
                        _getSliderMinValue: function() {
                            return this._isRangeSlider ?
                                [this._slider.minimum, this._slider.minimum + this._offset] :
                                this._slider.minimum;
                        },
                        _toSliderIndex: function(a) {
                            a = Math.floor(
                                (a - this._slider.minimum) *
                                this._numStops /
                                (this._slider.maximum - this._slider.minimum)
                            );
                            0 > a && (a = 0);
                            a >= this._numStops && (a = this._numStops - 1);
                            return a;
                        },
                        _toSliderValue: function(a) {
                            return (
                                a *
                                (this._slider.maximum - this._slider.minimum) /
                                (this._numStops - 1) +
                                this._slider.minimum
                            );
                        },
                        _getSliderValue: function() {
                            return this._slider.get('value');
                        },
                        _setSliderValue: function(a) {
                            this._slider._setValueAttr(a, !1, !1);
                        },
                    });
                    g.setObject('dijit.TimeSlider', e, v);
                    return e;
                }
            );
        },
        'esri/dijit/MultidimensionalSlider': function() {
            define(
                'dojo/_base/declare dojo/_base/lang dojo/has dojo/on dojo/json dijit/form/VerticalSlider dojox/form/VerticalRangeSlider dijit/form/VerticalRule dijit/form/VerticalRuleLabels dijit/form/HorizontalSlider dojox/form/HorizontalRangeSlider dijit/form/HorizontalRule dijit/form/HorizontalRuleLabels dijit/_Widget dijit/_Templated dojox/timing/_base dojo/_base/array dojo/Deferred dojo/DeferredList ../layers/MosaicRule ../layers/DimensionalDefinition ../kernel ../lang ./_EventedWidget dojo/text!./templates/MultidimensionalSlider_vertical.html dojo/text!./templates/MultidimensionalSlider_horizontal.html dojo/i18n!../nls/jsapi dojo/dom-class dojo/dom-style dojo/dom-geometry dojo/touch dojo/query dojo/dom-construct dojo/_base/sniff'.split(
                    ' '
                ),
                function(
                    c,
                    g,
                    f,
                    b,
                    e,
                    h,
                    d,
                    a,
                    k,
                    n,
                    l,
                    m,
                    p,
                    r,
                    u,
                    t,
                    q,
                    v,
                    C,
                    z,
                    y,
                    x,
                    w,
                    A,
                    E,
                    B,
                    D,
                    H,
                    G,
                    F,
                    K,
                    L,
                    Q
                ) {
                    var O = {
                        LAYOUT_VERTICAL: 'vertical',
                        LAYOUT_HORIZONTAL: 'horizontal',
                    };
                    r = c([A, r, u], {
                        declaredClass: 'esri.dijit.MultidimensionalSlider',
                        widgetsInTemplate: !0,
                        templateString: E,
                        nLabels: 10,
                        _thumbCount: 1,
                        useRanges: void 0,
                        loop: !0,
                        useLayersDimSlices: !0,
                        prefetch: !0,
                        prefetchedValues: {},
                        showPlayButton: !0,
                        prefetchFactor: 2,
                        _hasUnitConflict: !1,
                        _update: !0,
                        useDefaults: !1,
                        playDirectionAscending: !0,
                        unitSymbols: { meter: 'm', pascal: 'Pa' },
                        _eventMap: {
                            'dimension-value-change': !0,
                            play: !0,
                            pause: !0,
                            next: !0,
                            previous: !0,
                            change: !0,
                            'dimension-array-create': !0,
                        },
                        onChange: function() {},
                        onPlay: function() {},
                        onPause: function() {},
                        onDimensionValueChange: function() {},
                        _onPlay: function() {
                            this.playing = !this.playing;
                            this._updateUI();
                            this.playing ?
                                (this._timer.start(), this.onPlay()) :
                                (this._timer.stop(), this.onPause());
                        },
                        constructor: function(a, b) {
                            c.safeMixin(this, a);
                            this.playing = !1;
                            this._iconClass = 'mdsButton mdsPlayButton';
                            this.map && this._getImageLayers();
                            this.layout === O.LAYOUT_HORIZONTAL && (this.templateString = B);
                            this.thumbMovingRate = this.thumbMovingRate || 3e3;
                            this._i18n = D;
                            this.prefetchImgNodes = {};
                        },
                        postCreate: function() {
                            this.inherited(arguments);
                        },
                        startup: function() {
                            this.inherited(arguments);
                            var a = this;
                            this._getAllLayersMDInfo().then(function() {
                                a._sortDimensionValues();
                                a.dimensionValues = a.dimensionValues &&
                                    a.dimensionValues.length &&
                                    !a.useLayersDimSlices ?
                                    a.dimensionValues :
                                    a._mapSortedDimensionValues;
                                a.getUnit();
                                a._setupSlider();
                            });
                            this._timer = new t.Timer();
                            this._timer.setInterval(this.thumbMovingRate);
                            this._timer.onTick = g.hitch(this, function() {
                                this.playDirectionAscending ?
                                    this._bumpSlider(1) :
                                    this._bumpSlider(-1);
                            });
                            this.layout === O.LAYOUT_VERTICAL &&
                                (this.computeSliderStyle(), this.on(
                                    'resize',
                                    g.hitch(this, 'computeSliderStyle')
                                ));
                            this._setupHandles();
                        },
                        _insertPassiveLabels: function() {
                            var a = L(
                                '.dijitSliderMoveable.dijitSliderMoveableV',
                                this.domNode
                            );
                            this._passiveLbl1 = Q.create('div');
                            H.add(this._passiveLbl1, 'esriMdSliderPassiveLbl');
                            Q.place(this._passiveLbl1, a[0]);
                            2 === this._thumbCount &&
                                ((this._passiveLbl2 = Q.create('div')), H.add(
                                    this._passiveLbl2,
                                    'esriMdSliderPassiveLbl'
                                ), Q.place(this._passiveLbl2, a[1]));
                        },
                        _setupHandles: function() {
                            this._eventHandles = [];
                            this._eventHandles.push(
                                b(this.domNode, 'mouseover', g.hitch(this, 'activateSlider'))
                            );
                            this._eventHandles.push(
                                b(
                                    this.domNode,
                                    'mouseleave',
                                    g.hitch(this, 'deactivateSlider')
                                )
                            );
                            this._eventHandles.push(
                                b(this.domNode, K.press, g.hitch(this, 'activateSlider'))
                            );
                            this._eventHandles.push(
                                b(this.domNode, K.release, g.hitch(this, 'deactivateSlider'))
                            );
                            this._eventHandles.push(
                                b(
                                    this.prevBtn.domNode,
                                    K.press,
                                    g.hitch(this, 'activateSlider')
                                )
                            );
                            this._eventHandles.push(
                                b(
                                    this.playPauseBtn.domNode,
                                    K.press,
                                    g.hitch(this, 'activateSlider')
                                )
                            );
                            this._eventHandles.push(
                                b(
                                    this.nextBtn.domNode,
                                    K.press,
                                    g.hitch(this, 'activateSlider')
                                )
                            );
                            var a = L(
                                '.dijitSliderImageHandle.dijitSliderImageHandleV',
                                this.domNode
                            );
                            q.forEach(
                                a,
                                function(a) {
                                    this._eventHandles.push(
                                        b(a, K.press, g.hitch(this, 'activateSlider'))
                                    );
                                    this._eventHandles.push(
                                        b(a, K.release, g.hitch(this, 'deactivateSlider'))
                                    );
                                },
                                this
                            );
                        },
                        _removeHandles: function() {
                            q.forEach(this._eventHandles, function(a) {
                                a && a.remove();
                            });
                        },
                        activateSlider: function() {
                            9 > f('ie') && G.set(this.domNode, 'background', '#fff');
                            this.sliderActive = !0;
                            this.deactivateTimer && clearTimeout(this.deactivateTimer);
                            H.remove(this.domNode, 'esriMdSliderPassive');
                            H.add(this.domNode, 'esriMdSliderActive');
                            G.set(this._passiveLbl1, 'display', 'none');
                            this._passiveLbl2 && G.set(this._passiveLbl2, 'display', 'none');
                        },
                        deactivateSlider: function() {
                            if (!(10 > f('ie'))) {
                                var a = this;
                                this.deactivateTimer = setTimeout(function() {
                                    a.sliderActive = !1;
                                    a.updatePassiveLabels();
                                    H.remove(a.domNode, 'esriMdSliderActive');
                                    H.add(a.domNode, 'esriMdSliderPassive');
                                    a._showPassiveLabels();
                                }, 2500);
                            }
                        },
                        updatePassiveLabels: function() {
                            this._slider &&
                                w.isDefined(this._slider.value) &&
                                ((this._passiveLbl1.innerHTML = this.value.length ?
                                        this.value[0] :
                                        this.value), this._slider.value.length &&
                                    (this._passiveLbl2.innerHTML = this.value[1]), this
                                    .sliderActive || this._showPassiveLabels());
                        },
                        _showPassiveLabels: function() {
                            w.isDefined(this.value) &&
                                (G.set(this._passiveLbl1, 'display', 'inline-block'), this
                                    .value.length ?
                                    G.set(this._passiveLbl2, 'display', 'inline-block') :
                                    this._passiveLbl2 &&
                                    G.set(this._passiveLbl2, 'display', 'none'));
                        },
                        increment: function() {
                            var a = 1;
                            !this.playDirectionAscending && this.playing && (a = -1);
                            this._bumpSlider(a);
                        },
                        decrement: function() {
                            var a = -1;
                            !this.playDirectionAscending && this.playing && (a = 1);
                            this._bumpSlider(a);
                        },
                        _setDimensionAttr: function(a) {
                            this._slider &&
                                (a.dimension &&
                                    (this.dimension =
                                        a.dimension), (this.dimensionValues = a.dimensionValues &&
                                        a.dimensionValues.length ?
                                        a.dimensionValues :
                                        []), this.update());
                        },
                        update: function() {
                            var a = this;
                            this._mapSortedDimensionValues = [];
                            this._getImageLayers();
                            this.value = this.dimensionValues[this._slider.value];
                            this._getAllLayersMDInfo().then(function() {
                                a._sortDimensionValues();
                                a.getUnit();
                                (a.dimensionValues &&
                                    a.dimensionValues.length &&
                                    !a.useLayersDimSlices) ||
                                (a.dimensionValues = a._mapSortedDimensionValues);
                                a._setupSlider();
                            });
                        },
                        pause: function() {
                            this.playing = !1;
                            this._updateUI();
                            this._timer.stop();
                        },
                        play: function(a) {
                            !0 !== this.playing && ((this.playing = !1), this._onPlay());
                        },
                        _setupSlider: function() {
                            this._destroySlider();
                            this.dimensionValues &&
                                this.dimensionValues.length &&
                                ((this.sliderNode = document.createElement(
                                        'div'
                                    )), this._getDimensionAlias(), this._layers &&
                                    this._layers.length &&
                                    1 === this._layers.length &&
                                    this._readMosaicRule(), this._createRule(), this._createLabels(), this._createSlider(), this._insertPassiveLabels(), this._slider.onChange(
                                        this._slider.value
                                    ));
                        },
                        _createLabels: function() {
                            this.layout === O.LAYOUT_HORIZONTAL ?
                                this._createHorizontalLabels() :
                                this._createVerticalLabels();
                        },
                        _createRule: function() {
                            this.layout === O.LAYOUT_HORIZONTAL ?
                                this._createHorizontalRule() :
                                this._createVerticalRule();
                        },
                        _createVerticalLabels: function() {
                            this.labelsNode = document.createElement('div');
                            this.sliderNode.appendChild(this.labelsNode);
                            this._sliderLabels = new k({
                                    labels: this._filterLabels(),
                                    labelStyle: 'font-size: 83%; padding-left: 5px;',
                                },
                                this.labelsNode
                            );
                        },
                        _createVerticalRule: function() {
                            this.rulesNode = document.createElement('div');
                            this.sliderNode.appendChild(this.rulesNode);
                            100 >= this.dimensionValues.length &&
                                ((this._sliderRules = new a({
                                        count: this.dimensionValues.length,
                                        style: 'width:5px;',
                                    },
                                    this.rulesNode
                                )), this._sliderRules.startup());
                        },
                        _createHorizontalLabels: function() {
                            this.labelsNode = document.createElement('div');
                            this.sliderNode.appendChild(this.labelsNode);
                            this._sliderLabels = new p({ labels: this._filterLabels(), labelStyle: 'font-size: 83%' },
                                this.labelsNode
                            );
                        },
                        _createHorizontalRule: function() {
                            this.rulesNode = document.createElement('div');
                            this.sliderNode.appendChild(this.rulesNode);
                            100 >= this.dimensionValues.length &&
                                ((this._sliderRules = new m({
                                        count: this.dimensionValues.length,
                                        style: 'height:5px;',
                                    },
                                    this.rulesNode
                                )), this._sliderRules.startup());
                        },
                        _createHorizontalSingleSlider: function(a) {
                            a = a ?
                                a :
                                this.playDirectionAscending ?
                                0 :
                                this.dimensionValues.length - 1;
                            this._slider = new n({
                                    name: 'horizontal',
                                    minimum: 0,
                                    maximum: this.dimensionValues.length - 1,
                                    intermediateChanges: !1,
                                    discreteValues: this.dimensionValues.length,
                                    style: 'width: 100%;',
                                    increment: g.hitch(this, 'increment'),
                                    decrement: g.hitch(this, 'decrement'),
                                    value: a || 0,
                                    onChange: g.hitch(this, this._onSingleSliderChange),
                                    showButtons: !1,
                                },
                                this.sliderNode
                            );
                            this._slider.startup();
                        },
                        _createHorizontalRangeSlider: function(a) {
                            a = a ?
                                a :
                                this.playDirectionAscending ?
                                [0, 1] :
                                [
                                    this.dimensionValues.length - 2,
                                    this.dimensionValues.length - 1,
                                ];
                            this._slider = new l({
                                    name: 'horizontal',
                                    minimum: 0,
                                    maximum: this.dimensionValues.length - 1,
                                    intermediateChanges: !1,
                                    discreteValues: this.dimensionValues.length,
                                    style: 'width:100%;',
                                    increment: g.hitch(this, 'increment'),
                                    decrement: g.hitch(this, 'decrement'),
                                    value: a || [0, 1],
                                    onChange: g.hitch(this, this._onRangeSliderChange),
                                    showButtons: !1,
                                },
                                this.sliderNode
                            );
                            this._slider.startup();
                            b(this._slider.incrementButton, 'click', this._slider.increment);
                            b(this._slider.decrementButton, 'click', this._slider.decrement);
                            this._slider._typematicCallback = function() {};
                        },
                        _createVerticalSingleSlider: function(a) {
                            a = w.isDefined(a) ?
                                a :
                                this.playDirectionAscending ?
                                0 :
                                this.dimensionValues.length - 1;
                            this._slider = new h({
                                    name: 'vertical',
                                    minimum: 0,
                                    maximum: this.dimensionValues.length - 1,
                                    intermediateChanges: !1,
                                    discreteValues: this.dimensionValues.length,
                                    style: this.computeSliderStyle(),
                                    increment: g.hitch(this, 'increment'),
                                    decrement: g.hitch(this, 'decrement'),
                                    value: a || 0,
                                    onChange: g.hitch(this, this._onSingleSliderChange),
                                    showButtons: !1,
                                },
                                this.sliderNode
                            );
                            this._slider.startup();
                        },
                        _createVerticalRangeSlider: function(a) {
                            a = a ?
                                a :
                                this.playDirectionAscending ?
                                [0, 1] :
                                [
                                    this.dimensionValues.length - 2,
                                    this.dimensionValues.length - 1,
                                ];
                            this._slider = new d({
                                    name: 'vertical',
                                    minimum: 0,
                                    maximum: this.dimensionValues.length - 1,
                                    intermediateChanges: !1,
                                    discreteValues: this.dimensionValues.length,
                                    style: this.computeSliderStyle(),
                                    increment: g.hitch(this, 'increment'),
                                    decrement: g.hitch(this, 'decrement'),
                                    value: a || [0, 1],
                                    onChange: g.hitch(this, this._onRangeSliderChange),
                                    showButtons: !1,
                                },
                                this.sliderNode
                            );
                            this._slider.startup();
                            this._slider._typematicCallback = function() {};
                        },
                        _onSingleSliderChange: function(a) {
                            var b = this.dimensionValues[a];
                            this.setDimensionInfoText(b);
                            q.forEach(
                                this._layers,
                                function(c) {
                                    this._updateMosaicRule(c, b);
                                    this.prefetch && this.playing && this._prefetchData(a, c);
                                },
                                this
                            );
                            this._oldValue = a;
                            this.value = b;
                            this.updatePassiveLabels();
                            this.onChange(b);
                        },
                        _onRangeSliderChange: function(a) {
                            if (this._update) {
                                this._snap && (a = this._snapToNearestRange(a));
                                var b = [
                                    this.dimensionValues[a[1]],
                                    this.dimensionValues[a[0]],
                                ];
                                b.sort(this._sortCompareFunction);
                                this.value = b;
                                this.setDimensionInfoText(b);
                                this.updatePassiveLabels();
                                q.forEach(
                                    this._layers,
                                    function(c) {
                                        this._updateMosaicRule(c, b);
                                        this.prefetch && this.playing && this._prefetchData(a, c);
                                    },
                                    this
                                );
                                this._update = !0;
                                this._oldValue = g.clone(a);
                                this.onChange(b);
                            }
                        },
                        destroy: function() {
                            this.inherited(arguments);
                            this._timer.stop();
                            this._destroySlider();
                            this._removeHandles();
                        },
                        _destroySlider: function() {
                            if (this._slider)
                                try {
                                    this._slider.destroy();
                                } catch (P) {
                                    this._slider.domNode && Q.destroy(this._slider.domNode);
                                } finally {
                                    this._slider = null;
                                }
                        },
                        _createSlider: function() {
                            var a, b;
                            this.mdSliderCell.appendChild(this.sliderNode);
                            this.value &&
                                this.value.length &&
                                0 <= q.indexOf(this.dimensionValues, this.value[0]) &&
                                0 <= q.indexOf(this.dimensionValues, this.value[1]) ?
                                (a = [
                                    q.indexOf(this.dimensionValues, this.value[0]),
                                    q.indexOf(this.dimensionValues, this.value[1]),
                                ]) :
                                w.isDefined(this.value) &&
                                ((b = q.indexOf(this.dimensionValues, this.value)), 0 <=
                                    b && (a = b));
                            w.isDefined(a) || (a = this._getDefaultSliderValue());
                            this.useDefaults &&
                                w.isDefined(a) &&
                                (a === this.dimensionValues.length - 1 ||
                                    (a.length &&
                                        0 <= q.indexOf(a, this.dimensionValues.length - 1))) &&
                                (this.playDirectionAscending = !1);
                            2 === this._thumbCount ?
                                this.layout === O.LAYOUT_HORIZONTAL ?
                                this._createHorizontalRangeSlider(a) :
                                this._createVerticalRangeSlider(a) :
                                this.layout === O.LAYOUT_HORIZONTAL ?
                                this._createHorizontalSingleSlider(a) :
                                this._createVerticalSingleSlider(a);
                        },
                        _getDefaultSliderValue: function() {
                            if (this.dimensionValues && this.dimensionValues.length) {
                                var a, b, c = Infinity,
                                    d = 1,
                                    e, f;
                                if (this.dimension && 'stdz' === this.dimension.toLowerCase())
                                    for (
                                        e = 0; e < this.dimensionValues.length &&
                                        ((f = this.dimensionValues[e]), (b = Math.abs(f - 0)), b <
                                            c && ((c = b), (a = f)), 0 !== b); e++
                                    );
                                else a = this.dimensionValues[0];
                                a = q.indexOf(this.dimensionValues, a);
                                a = 0 > a ? 0 : a;
                                2 === this._thumbCount &&
                                    (a === this.dimensionValues.length - 1 && (d = -1), (a = [
                                        a,
                                        a + d,
                                    ]));
                                return a;
                            }
                        },
                        _getMultidimensionalInfo: function(a) {
                            function b() {
                                a.getMultidimensionalInfo().then(
                                    function(b) {
                                        a.multidimensionalInfo = b;
                                        c.resolve(a);
                                    },
                                    function(a) {
                                        c.reject(a);
                                    }
                                );
                            }
                            var c = new v();
                            if (a.multidimensionalInfo) c.resolve(a);
                            else if (a.loaded) b();
                            else
                                a.on('load', function() {
                                    b();
                                });
                            return c;
                        },
                        _getAllLayersMDInfo: function() {
                            var a = [];
                            q.forEach(
                                this._layers,
                                function(b) {
                                    a.push(this._getMultidimensionalInfo(b));
                                },
                                this
                            );
                            return new C(a);
                        },
                        _getImageLayers: function() {
                            var a = this.map.layerIds.concat(this.map.graphicsLayerIds),
                                b;
                            this._layers = [];
                            q.forEach(
                                a,
                                function(a) {
                                    b = this.map.getLayer(a);
                                    ('esri.layers.ArcGISImageServiceLayer' !== b.declaredClass &&
                                        'esri.layers.ArcGISImageServiceVectorLayer' !==
                                        b.declaredClass &&
                                        'esri.layers.RasterLayer' !== b.declaredClass &&
                                        'esri.layers.WCSLayer' !== b.declaredClass) ||
                                    this._layers.push(b);
                                },
                                this
                            );
                            return this._layers;
                        },
                        _sortCompareFunction: function(a, b) {
                            return w.isDefined(a) && w.isDefined(b) ? a - b : !1;
                        },
                        _getDimensionObjects: function() {
                            function a(a) {
                                if (a && a.values && a.hasRanges) {
                                    var d = [];
                                    q.forEach(
                                        a.values,
                                        function(a) {
                                            a.length ?
                                                (d = b(d, a)) :
                                                d.push.apply(
                                                    b(d.sort(this._sortCompareFunction), [a])
                                                );
                                        },
                                        this
                                    );
                                    d = d.sort(c._sortCompareFunction);
                                    a.decodedValues = d;
                                }
                                return a;
                            }
                            var b = this._merge,
                                c = this;
                            this._allRangeValues = !0;
                            this._thumbCount = 1;
                            this._snap = !1;
                            this._dimensionObjects = [];
                            this._layers = this._filterLayers();
                            q.forEach(
                                this._layers,
                                function(a) {
                                    a.multidimensionalInfo &&
                                        q.some(
                                            a.multidimensionalInfo.variables,
                                            function(a) {
                                                q.some(
                                                    a.dimensions,
                                                    function(a) {
                                                        a.name !== this.dimension ||
                                                            a.hasRanges ||
                                                            (this._allRangeValues = !1);
                                                    },
                                                    this
                                                );
                                            },
                                            this
                                        );
                                },
                                this
                            );
                            this.useRanges ?
                                ((this._thumbCount = 2), (this._snap = !1)) :
                                this._allRangeValues && this.useLayersDimSlices ?
                                ((this._thumbCount = 2), (this._snap = !0)) :
                                (this._snap = !1);
                            q.forEach(
                                this._layers,
                                function(b) {
                                    b.multidimensionalInfo &&
                                        q.some(
                                            b.multidimensionalInfo.variables,
                                            function(b) {
                                                q.some(
                                                    b.dimensions,
                                                    function(b) {
                                                        b.name === this.dimension &&
                                                            ((this._allRangeValues && b.hasRanges) ||
                                                                this.useRanges ?
                                                                this._dimensionObjects.push(a(g.clone(b))) :
                                                                this._dimensionObjects.push(g.clone(b)));
                                                    },
                                                    this
                                                );
                                            },
                                            this
                                        );
                                },
                                this
                            );
                        },
                        _merge: function(a, b) {
                            for (var c = [], d = 0, e = 0; d < a.length && e < b.length;)
                                a[d] < b[e] ?
                                c.push(a[d++]) :
                                a[d] > b[e] ? c.push(b[e++]) : (c.push(b[e++]), d++);
                            c = c.concat(a.slice(d)).concat(b.slice(e));
                            return (c = q.filter(c, function(a, b, c) {
                                return c.indexOf(a) === b;
                            }));
                        },
                        _mergeRangeArrays: function(a, b) {
                            for (var c = [], d = 0, e = 0; d < a.length && e < b.length;)
                                a[d][0] < b[e][0] || (a[d][0] === b[e][0] && a[d][1] < b[e][1]) ?
                                c.push(a[d++]) :
                                a[d][0] > b[e][0] ||
                                (a[d][0] === b[e][0] && a[d][1] > b[e][1]) ?
                                c.push(b[e++]) :
                                (c.push(b[e++]), d++);
                            c = c.concat(a.slice(d)).concat(b.slice(e));
                            return (c = q.filter(
                                c,
                                function(a, b, c) {
                                    return c.indexOf(a) === b;
                                },
                                this
                            ));
                        },
                        _sortDimensionValues: function() {
                            var a = 0,
                                b = this._merge,
                                c = this._mergeRangeArrays;
                            this._getDimensionObjects();
                            1 <= this._dimensionObjects.length &&
                                ((this._mapSortedDimensionValues =
                                        this._dimensionObjects[0].decodedValues ||
                                        this._dimensionObjects[0].values), this._allRangeValues &&
                                    (this._dimensionRangeValues = this._dimensionObjects[0].values));
                            if (1 < this._dimensionObjects.length)
                                for (a = 1; a < this._dimensionObjects.length; a++)
                                    (this._mapSortedDimensionValues = b(
                                        this._mapSortedDimensionValues,
                                        this._dimensionObjects[a].decodedValues ||
                                        this._dimensionObjects[a].values
                                    )), this._allRangeValues &&
                                    (this._dimensionRangeValues = c(
                                        this._dimensionRangeValues,
                                        this._dimensionObjects[a].values
                                    ));
                        },
                        _createDimensionalDefinition: function(a, b) {
                            a = [a];
                            return new y({
                                variableName: b,
                                dimensionName: this.dimension,
                                values: a,
                                isSlice: 1 === a.length,
                            });
                        },
                        _updateMosaicRule: function(a, b) {
                            var c = !1,
                                d =
                                a.mosaicRule ||
                                a.defaultMosaicRule ||
                                new z({ multidimensionalDefinition: [] }),
                                e = 'esri.layers.WCSLayer' === a.declaredClass,
                                f = (e ?
                                    a.multidimensionalDefinition :
                                    d.multidimensionalDefinition) || [];
                            b.length && b.sort(this._sortCompareFunction);
                            q.forEach(
                                f,
                                function(a) {
                                    a.dimensionName === this.dimension &&
                                        ((a.values = [b]), (a.isSlice = !this.useRanges), (c = !0));
                                },
                                this
                            );
                            if (!c) {
                                var h = '',
                                    g = q.filter(
                                        a.multidimensionalInfo.variables,
                                        function(a) {
                                            return q.some(
                                                f,
                                                function(b) {
                                                    return (
                                                        b.variableName &&
                                                        b.variableName.toLowerCase() ===
                                                        a.name.toLowerCase()
                                                    );
                                                },
                                                this
                                            );
                                        },
                                        this
                                    );
                                0 === g.length && (g = a.multidimensionalInfo.variables);
                                q.some(
                                        g,
                                        function(a) {
                                            if (
                                                q.some(
                                                    a.dimensions,
                                                    function(b) {
                                                        if (b.name === this.dimension)
                                                            return e && (h = a.name), !0;
                                                    },
                                                    this
                                                )
                                            )
                                                return !0;
                                        },
                                        this
                                    ) &&
                                    (f.push(this._createDimensionalDefinition(b, h)), (c = !0));
                            }
                            c &&
                                (e ?
                                    a.setMultidimensionalDefinition(f) :
                                    ((d.multidimensionalDefinition = f), a.setMosaicRule(d)));
                        },
                        _prefetchData: function(a, b) {
                            if (b && (b.mosaicRule || b.multidimensionalDefinition)) {
                                var c, d, f, h, k = !1,
                                    l, m = this,
                                    n;
                                this.prefetchedValues[b.id] ||
                                    (this.prefetchedValues[b.id] = []);
                                this.prefetchImgNodes[b.id] = [];
                                d = g.clone(b._params);
                                h =
                                    ((f = g.clone(b.mosaicRule)) &&
                                        f.multidimensionalDefinition) ||
                                    g.clone(b.multidimensionalDefinition);
                                for (c = 1; c <= this.prefetchFactor; c++)
                                    (k = !1), q.forEach(
                                        h,
                                        function(d) {
                                            d.dimensionName === this.dimension &&
                                                (this.playDirectionAscending ?
                                                    a.length ?
                                                    (this.snap ?
                                                        ((l =
                                                            this._getNextRangeIndex(a) ||
                                                            a), (d.values = [
                                                            this.dimensionValues[l[0]],
                                                            this.dimensionValues[l[1]],
                                                        ])) :
                                                        (d.values = [
                                                            this.dimensionValues[
                                                                (a[0] + c) % this.dimensionValues.length
                                                            ],
                                                            this.dimensionValues[
                                                                (a[1] + c) % this.dimensionValues.length
                                                            ],
                                                        ]), d.values.sort(
                                                            this._sortCompareFunction
                                                        )) :
                                                    (d.values = [
                                                        this.dimensionValues[
                                                            (a + c) % this.dimensionValues.length
                                                        ],
                                                    ]) :
                                                    a.length ?
                                                    (this.snap ?
                                                        ((l =
                                                            this._getNextRangeIndex(a, -1) ||
                                                            a), (d.values = [
                                                            this.dimensionValues[l[0]],
                                                            this.dimensionValues[l[1]],
                                                        ])) :
                                                        (d.values = [
                                                            this.dimensionValues[
                                                                (this.dimensionValues.length +
                                                                    a[0] -
                                                                    c) %
                                                                this.dimensionValues.length
                                                            ],
                                                            this.dimensionValues[
                                                                (this.dimensionValues.length +
                                                                    a[1] -
                                                                    c) %
                                                                this.dimensionValues.length
                                                            ],
                                                        ]), d.values.sort(
                                                            this._sortCompareFunction
                                                        )) :
                                                    (d.values = [
                                                        this.dimensionValues[
                                                            (this.dimensionValues.length + a - c) %
                                                            this.dimensionValues.length
                                                        ],
                                                    ]), q.some(
                                                        this.prefetchedValues[b.id],
                                                        function(a) {
                                                            if (e.stringify(a) === e.stringify(d.values))
                                                                return !0;
                                                        }
                                                    ) ||
                                                    ((k = !0), this.prefetchedValues[b.id].push(
                                                        d.values
                                                    )));
                                        },
                                        this
                                    ), k &&
                                    'esri.layers.WCSLayer' !== b.declaredClass &&
                                    ((d.mosaicRule = e.stringify(f.toJson())), b.getImageUrl(
                                        this.map.extent,
                                        this.map.width,
                                        this.map.height,
                                        function(a) {
                                            n = new Image();
                                            m.prefetchImgNodes[b.id].push(n);
                                            n.src = a;
                                        },
                                        d
                                    ));
                            }
                        },
                        setDimensionInfoText: function(a) {
                            if (w.isDefined(a)) {
                                var b = this.unitSymbol || this.unit;
                                if ('number' !== typeof a) {
                                    a = g.clone(a.sort(this._sortCompareFunction));
                                    if (0 !== a[0] % 1 || 0 !== a[1] % 1)
                                        (a[0] = parseFloat(a[0].toFixed(2))), (a[1] = parseFloat(
                                            a[1].toFixed(2)
                                        ));
                                    a = '[' + a[0] + ', ' + a[1] + ']';
                                } else 0 !== a % 1 && (a = a.toFixed(2));
                                this.dimensionInfo.innerHTML = this.unitSymbol ?
                                    "\x3clabel style\x3d'font-weight:700;'\x3e" +
                                    this.dimensionAlias +
                                    ' (' +
                                    b +
                                    ')\x3c/label\x3e' :
                                    "\x3clabel style\x3d'font-weight:700;'\x3e" +
                                    this.dimensionAlias +
                                    '\x3c/label\x3e';
                                this.dimensionInfo.innerHTML = this.layout ===
                                    O.LAYOUT_HORIZONTAL ?
                                    this.dimensionInfo.innerHTML + (': ' + a) :
                                    this.dimensionInfo.innerHTML + ('\x3cbr/\x3e ' + a);
                            }
                        },
                        setLabels: function(a) {},
                        _filterLabels: function() {
                            if (
                                this.nLabels &&
                                this.dimensionValues &&
                                this.dimensionValues.length
                            ) {
                                var a = Math.ceil(this.dimensionValues.length / this.nLabels);
                                return q.map(
                                    this.dimensionValues,
                                    function(b, c) {
                                        return 0 === c % a || c === this.dimensionValues.length - 1 ?
                                            (0 !== b % 1 && (b = parseFloat(b.toFixed(2))), b) :
                                            '';
                                    },
                                    this
                                );
                            }
                        },
                        _filterLayers: function() {
                            return q.filter(
                                this._layers,
                                function(a) {
                                    if (
                                        a.multidimensionalInfo &&
                                        a.visible &&
                                        a.useMapDimensionValue &&
                                        q.some(
                                            a.multidimensionalInfo.variables,
                                            function(a) {
                                                if (
                                                    q.some(
                                                        a.dimensions,
                                                        function(a) {
                                                            if (a.name === this.dimension) return !0;
                                                        },
                                                        this
                                                    )
                                                )
                                                    return !0;
                                            },
                                            this
                                        )
                                    )
                                        return !0;
                                },
                                this
                            );
                        },
                        _updateUI: function() {
                            H.remove(this.playPauseBtn.iconNode, this._iconClass);
                            this._iconClass = this.playing ?
                                'mdsButton mdsPauseButton' :
                                'mdsButton mdsPlayButton';
                            H.add(this.playPauseBtn.iconNode, this._iconClass);
                        },
                        _bumpSlider: function(a) {
                            var b = this._slider.value;
                            if (0 <= a)
                                !this._snap &&
                                (0 > b ||
                                    b >= this.dimensionValues.length - 1 ||
                                    b[0] >= this.dimensionValues.length - 1 ||
                                    b[1] >= this.dimensionValues.length - 1) ?
                                this._timer.isRunning &&
                                (this.loop ?
                                    (this._timer.stop(), (this.prefetchedValues = {}), (this.prefetchImgNodes = {}), 2 ===
                                        this._thumbCount ?
                                        this._snap ?
                                        this._slider.set(
                                            'value',
                                            this._getNextRangeIndex(b)
                                        ) :
                                        this._slider.set('value', [
                                            0,
                                            Math.abs(b[0] - b[1]),
                                        ]) :
                                        this._slider.set(
                                            'value',
                                            0
                                        ), this._timer.start(), (this.playing = !0)) :
                                    this.pause()) :
                                2 === this._thumbCount &&
                                !this._snap &&
                                b[0] < this.dimensionValues.length - 1 &&
                                b[1] < this.dimensionValues.length - 1 ?
                                this._slider.set('value', [b[0] + 1, b[1] + 1]) :
                                1 === this._thumbCount &&
                                b < this.dimensionValues.length - 1 ?
                                this._slider.set('value', b + 1) :
                                this._snap &&
                                this._slider.set(
                                    'value',
                                    this._getNextRangeIndex(b)
                                );
                            else if (0 >= b || 0 >= b[0] || 0 >= b[1])
                                this._timer.isRunning &&
                                (this.loop ?
                                    (this._timer.stop(), (this.prefetchedValues = {}), 2 ===
                                        this._thumbCount ?
                                        this._snap ?
                                        this._slider.set(
                                            'value',
                                            this._getNextRangeIndex(b, -1)
                                        ) :
                                        this._slider.set('value', [
                                            this.dimensionValues.length - 1,
                                            this.dimensionValues.length -
                                            1 -
                                            Math.abs(b[0] - b[1]),
                                        ]) :
                                        this._slider.set(
                                            'value',
                                            this.dimensionValues.length - 1
                                        ), this._timer.start(), (this.playing = !0)) :
                                    this.pause());
                            else if (0 <= b || 0 <= b[1])
                                2 === this._thumbCount && 0 < b[1] && 0 < b[0] ?
                                this._snap ?
                                this._slider.set(
                                    'value',
                                    this._getNextRangeIndex(b, -1)
                                ) :
                                this._slider.set('value', [b[0] - 1, b[1] - 1]) :
                                1 === this._thumbCount &&
                                0 < b &&
                                this._slider.set('value', b - 1);
                        },
                        setThumbMovingRate: function(a) {
                            this.thumbMovingRate = a;
                            this._timer && this._timer.setInterval(this.thumbMovingRate);
                        },
                        getFullDimensionRange: function(a) {
                            a = a || this.dimension;
                            var b, c;
                            q.forEach(
                                this._layers,
                                function(d) {
                                    d.multidimensionalInfo &&
                                        d.multidimensionalInfo.variables &&
                                        q.forEach(
                                            d.multidimensionalInfo.variables,
                                            function(d) {
                                                q.forEach(
                                                    d.dimensions,
                                                    function(d) {
                                                        if (
                                                            d.name === a &&
                                                            d.extent &&
                                                            d.extent.length &&
                                                            1 < d.extent.length
                                                        ) {
                                                            if (!w.isDefined(b) || d.extent[0] < b)
                                                                b = d.extent[0];
                                                            if (!w.isDefined(c) || d.extent[1] > c)
                                                                c = d.extent[1];
                                                        }
                                                    },
                                                    this
                                                );
                                            },
                                            this
                                        );
                                },
                                this
                            );
                            return [b, c];
                        },
                        setThumbCount: function(a) {
                            this._thumbCount = 2 == a ? 2 : 1;
                            this.value = this.dimensionValues[this._slider.value];
                            this._setupSlider();
                        },
                        clearDimensionalDefinition: function(a) {
                            var b, c = [],
                                d;
                            a &&
                                a.mosaicRule &&
                                a.mosaicRule.multidimensionalDefinition &&
                                ((d = a.mosaicRule), (b =
                                    d.multidimensionalDefinition), q.forEach(
                                    b,
                                    function(a) {
                                        a.dimensionName !== this.dimension && c.push(a);
                                    },
                                    this
                                ), (d.multidimensionalDefinition = c), a.setMosaicRule(d));
                        },
                        getUnit: function() {
                            var a = null,
                                b = !1;
                            this.unit = null;
                            q.forEach(
                                this._layers,
                                function(c) {
                                    c.multidimensionalInfo &&
                                        q.forEach(
                                            c.multidimensionalInfo.variables,
                                            function(c) {
                                                q.forEach(
                                                    c.dimensions,
                                                    function(c) {
                                                        c.name === this.dimension &&
                                                            c.unit &&
                                                            (null != a || b ?
                                                                w.isDefined(c.unit) &&
                                                                c.unit
                                                                .replace('esri', '')
                                                                .toLowerCase() !== a.toLowerCase() &&
                                                                ((a = null), (b = !0)) :
                                                                (a = c.unit.replace('esri', '')));
                                                    },
                                                    this
                                                );
                                            },
                                            this
                                        );
                                },
                                this
                            );
                            a && (a = a.replace('esri', ''));
                            this.unit = a;
                            this.unitSymbol = this.getUnitSymbol();
                            this._hasUnitConflict = b;
                            return a;
                        },
                        _getDimensionAlias: function() {
                            this.dimensionAlias = this.dimension;
                            q.some(
                                this._layers,
                                function(a) {
                                    if (
                                        a.fields &&
                                        a.fields.length &&
                                        q.some(
                                            a.fields,
                                            function(a) {
                                                if (a.name && a.name === this.dimension && a.alias)
                                                    return (this.dimensionAlias = a.alias), !0;
                                            },
                                            this
                                        )
                                    )
                                        return !0;
                                },
                                this
                            );
                        },
                        _readMosaicRule: function() {
                            var a;
                            q.forEach(
                                this._layers,
                                function(b) {
                                    (b =
                                        (b.mosaicRule && b.mosaicRule.multidimensionalDefinition) ||
                                        b.multidimensionalDefinition) &&
                                    q.forEach(
                                        b,
                                        function(b) {
                                            b &&
                                                b.dimensionName === this.dimension &&
                                                b.values &&
                                                (a = b.values.length &&
                                                    b.values[0] &&
                                                    b.values[0].length ?
                                                    b.values[0] :
                                                    b.values);
                                        },
                                        this
                                    );
                                },
                                this
                            );
                            this.useRanges = w.isDefined(this.useRanges) ?
                                this.useRanges :
                                a && 1 !== a.length ? !0 : !1;
                            a &&
                                (this.useRanges ?
                                    ((this._thumbCount = 2), (this.value = 1 === a.length ?
                                        [
                                            a[0],
                                            this.dimensionValues[this.dimensionValues.length - 1],
                                        ] :
                                        a)) :
                                    1 < a.length && this._snap ?
                                    ((this._thumbCount = 2), (this.value = a)) :
                                    ((this._thumbCount = 1), (this.useRanges = !1), (this.value =
                                        a[0])));
                        },
                        hasUnitConflict: function() {
                            this.getUnit();
                            return this._hasUnitConflict;
                        },
                        resizeSlider: function(a, b) {
                            G.set(this.domNode, { height: a + 'px', width: b + 'px' });
                            G.set(this.mdSliderTable, { height: a + 'px', width: b + 'px' });
                            this.computeSliderStyle();
                        },
                        computeSliderStyle: function() {
                            var a, b;
                            a =
                                F.getContentBox(this.domNode).h -
                                F.getContentBox(this.dimensionInfo).h -
                                (F.getContentBox(this.playPauseBtnRow).h + 20);
                            10 >= f('ie') && (a -= 53);
                            b = 'height: ' + a + 'px;';
                            this._slider &&
                                this._slider.domNode &&
                                G.set(this._slider.domNode, 'height', a + 'px');
                            return b;
                        },
                        getUnitSymbol: function() {
                            if (!w.isDefined(this.unit)) return null;
                            var a = this.unit.toLowerCase();
                            if ('meters' === a || 'meter' === a)
                                return this.unitSymbols.meter;
                            if ('pascal' === a || 'pascals' === a)
                                return this.unitSymbols.pascal;
                        },
                        _snapToNearestRange: function(a) {
                            if (a && a.length && this._snap) {
                                var b, c, d, e, f = this,
                                    h, k, l, m;
                                e = [this.dimensionValues[a[1]], this.dimensionValues[a[0]]];
                                e.sort(this._sortCompareFunction);
                                if (
                                    q.some(
                                        this._dimensionObjects,
                                        function(a) {
                                            if (
                                                q.some(a.values, function(a) {
                                                    if (a && a.length && a[0] === e[0] && a[1] === e[1])
                                                        return !0;
                                                })
                                            )
                                                return !0;
                                        },
                                        this
                                    )
                                )
                                    return a;
                                q.some(
                                        this._dimensionObjects,
                                        function(a) {
                                            if (
                                                q.some(
                                                    a.values,
                                                    function(a) {
                                                        if (a && a.length && a[0] === e[0])
                                                            return (b = g.clone(
                                                                a.sort(this._sortCompareFunction)
                                                            )), !0;
                                                    },
                                                    this
                                                )
                                            )
                                                return !0;
                                        },
                                        this
                                    ) &&
                                    (q.some(this.dimensionValues, function(a, e) {
                                        a === b[0] && (c = e);
                                        a === b[1] && (d = e);
                                    }), (l = Math.abs(a[0] - c)), (h = [c, d]));
                                q.some(
                                        this._dimensionObjects,
                                        function(a) {
                                            if (
                                                q.some(
                                                    a.values,
                                                    function(a) {
                                                        if (a && a.length && a[1] === e[1])
                                                            return (b = g.clone(
                                                                a.sort(this._sortCompareFunction)
                                                            )), !0;
                                                    },
                                                    this
                                                )
                                            )
                                                return !0;
                                        },
                                        this
                                    ) &&
                                    (q.some(this.dimensionValues, function(a, e) {
                                        a === b[1] && (d = e);
                                        a === b[0] && (c = e);
                                    }), (m = Math.abs(a[1] - d)), (k = [c, d]));
                                a = l && m ?
                                    this._oldValue &&
                                    this._oldValue.length &&
                                    this._arraysEqual(this._oldValue, h) ?
                                    k :
                                    this._oldValue &&
                                    this._oldValue.length &&
                                    this._arraysEqual(this._oldValue, k) ?
                                    h :
                                    l <= m ? h : k :
                                    h || k || a;
                                this._update = !1;
                                setTimeout(function() {
                                    f._slider.set('value', a);
                                }, 100);
                                return a;
                            }
                        },
                        _arraysEqual: function(a, b) {
                            var c;
                            if (!w.isDefined(a) || !w.isDefined(b)) return !1;
                            if (a === b) return !0;
                            if (a.length !== b.length) return !1;
                            a.sort(this._sortCompareFunction);
                            b.sort(this._sortCompareFunction);
                            for (c = 0; c < a.length; ++c)
                                if (a[c] !== b[c]) return !1;
                            return !0;
                        },
                        _getNextRangeIndex: function(a, b) {
                            if (!this._dimensionRangeValues ||
                                !this._dimensionRangeValues.length
                            )
                                return null;
                            var c, d, e, f;
                            b = w.isDefined(b) ? b : 1;
                            q.some(
                                this._dimensionRangeValues,
                                function(b, d) {
                                    if (
                                        this._arraysEqual(b, [
                                            this.dimensionValues[a[0]],
                                            this.dimensionValues[a[1]],
                                        ])
                                    )
                                        return (c = d), !0;
                                },
                                this
                            );
                            d = this._dimensionRangeValues[
                                0 < b ?
                                (c + 1) % this._dimensionRangeValues.length :
                                (this._dimensionRangeValues.length + c - 1) %
                                this._dimensionRangeValues.length
                            ];
                            q.some(
                                this.dimensionValues,
                                function(a, b) {
                                    a === d[0] && (e = b);
                                    a === d[1] && (f = b);
                                    if (e && f) return !0;
                                },
                                this
                            );
                            return [e, f];
                        },
                    });
                    g.mixin(r, O);
                    g.setObject('dijit.MultidimensionalSlider', r, x);
                    return r;
                }
            );
        },
        'esri/dijit/BasemapGallery': function() {
            define(
                'require dojo/_base/declare dojo/_base/array dojo/_base/connect dojo/_base/lang dojo/_base/kernel dojo/_base/sniff dojo/has dojo/query dojo/Deferred dojo/DeferredList dojo/dom dojo/dom-construct dojo/dom-class dijit/_Widget dijit/_Templated ../kernel ../lang ../urlUtils ../request ../geometry/Extent ../SpatialReference ../virtualearth/VETiledLayer ../layers/OpenStreetMapLayer ../layers/ArcGISTiledMapServiceLayer ../layers/ArcGISDynamicMapServiceLayer ../layers/WebTiledLayer ../layers/VectorTileLayer ../layers/TileInfo ../layers/ArcGISImageServiceLayer ../layers/ImageServiceParameters ../layers/ImageParameters ../layers/RasterXLayer ./Basemap ./_EventedWidget dojo/text!./templates/BasemapGallery.html'.split(
                    ' '
                ),
                function(
                    c,
                    g,
                    f,
                    b,
                    e,
                    h,
                    d,
                    a,
                    k,
                    n,
                    l,
                    m,
                    p,
                    r,
                    u,
                    t,
                    q,
                    v,
                    C,
                    z,
                    y,
                    x,
                    w,
                    A,
                    E,
                    B,
                    D,
                    H,
                    G,
                    F,
                    K,
                    L,
                    Q,
                    O,
                    P,
                    J
                ) {
                    g = g([P, u, t], {
                        declaredClass: 'esri.dijit.BasemapGallery',
                        widgetsInTemplate: !0,
                        templateString: J,
                        loaded: !1,
                        basemaps: [],
                        bingMapsKey: null,
                        flowContainer: null,
                        _hasUI: !1,
                        _supportsVTL: null,
                        _selectedBasemap: null,
                        _selectBasemapInProgress: !1,
                        _eventMap: {
                            load: !0,
                            'selection-change': !0,
                            add: ['basemap'],
                            remove: ['basemap'],
                            error: ['message'],
                        },
                        constructor: function(a, b) {
                            a = a || {};
                            this.map = a.map;
                            this._hasUI = b ? !0 : !1;
                            this.bingMapsKey = a.bingMapsKey && 0 < a.bingMapsKey.length ?
                                a.bingMapsKey :
                                null;
                            this.showArcGISBasemaps = !1 !== a.showArcGISBasemaps;
                            this.basemaps = a.basemaps || [];
                            this.basemapIds = a.basemapIds;
                            this.referenceIds = a.referenceIds;
                            this.basemapsGroup = a.basemapsGroup;
                            this.arcgisUrl = q.dijit._arcgisUrl;
                            a.portalUrl && (this.arcgisUrl = a.portalUrl + '/sharing/rest');
                            0 > this.arcgisUrl.indexOf('://') ?
                                (this.arcgisUrl =
                                    C.getProtocolForWebResource() + '//' + this.arcgisUrl) :
                                'https:' === window.location.protocol &&
                                (this.arcgisUrl = this.arcgisUrl.replace(
                                    'http:',
                                    'https:'
                                ));
                            this.init();
                        },
                        init: function() {
                            this.inherited(arguments);
                            this._checkVTLSupport().then(
                                e.hitch(this, function(a) {
                                    this._supportsVTL = a;
                                })
                            );
                            f.forEach(
                                this.basemaps,
                                function(a) {
                                    (a.id && 0 !== a.id.length) || (a.id = this._getUniqueId());
                                    f.forEach(
                                        a.layers,
                                        function(a) {
                                            a.opacity = 0 <= a.opacity ? a.opacity : 1;
                                            a.visibility = !0;
                                        },
                                        this
                                    );
                                },
                                this
                            );
                            this.basemapIds &&
                                0 < this.basemapIds.length &&
                                f.forEach(
                                    this.basemapIds,
                                    function(a) {
                                        this.map.getLayer(a)._basemapGalleryLayerType = 'basemap';
                                    },
                                    this
                                );
                            this.referenceIds &&
                                0 < this.referenceIds.length &&
                                f.forEach(
                                    this.referenceIds,
                                    function(a) {
                                        a = this.map.getLayer(a);
                                        a._basemapGalleryLayerType = 'reference';
                                        a.attr('data-reference', !0);
                                    },
                                    this
                                );
                            this.basemapsGroup &&
                                ((this.basemapsGroup.owner && this.basemapsGroup.title) ||
                                    this.basemapsGroup.id) ?
                                this._findCustomBasemapsGroup(
                                    e.hitch(this, '_handleArcGISBasemapsResponse')
                                ) :
                                this.showArcGISBasemaps ?
                                this._findArcGISBasemapsGroup(
                                    e.hitch(this, '_handleArcGISBasemapsResponse')
                                ) :
                                this._finishStartup();
                        },
                        startup: function() {
                            this.loaded ?
                                this._refreshUI() :
                                b.connect(
                                    this,
                                    'onLoad',
                                    e.hitch(this, function() {
                                        this._refreshUI();
                                    })
                                );
                        },
                        select: function(a) {
                            this._select(a);
                        },
                        getSelected: function() {
                            return this._selectedBasemap;
                        },
                        get: function(a) {
                            var b;
                            for (b = 0; b < this.basemaps.length; b++)
                                if (this.basemaps[b].id === a) return this.basemaps[b];
                            return null;
                        },
                        add: function(a) {
                            return a && !a.id ?
                                ((a.id = this._getUniqueId()), this.basemaps.push(
                                    a
                                ), this._refreshUI(), this.onAdd(a), !0) :
                                a && this._isUniqueId(a.id) ?
                                (this.basemaps.push(a), this._refreshUI(), this.onAdd(
                                    a
                                ), !0) :
                                !1;
                        },
                        remove: function(a) {
                            var b;
                            for (b = 0; b < this.basemaps.length; b++) {
                                var c = this.basemaps[b];
                                if (c.id === a)
                                    return this._selectedBasemap &&
                                        this._selectedBasemap.id === c.id &&
                                        (this._selectedBasemap = null), this.basemaps.splice(
                                            b,
                                            1
                                        ), this._refreshUI(), this.onRemove(c), c;
                            }
                            return null;
                        },
                        onLoad: function() {},
                        onSelectionChange: function() {},
                        onAdd: function(a) {},
                        onRemove: function(a) {},
                        onError: function(a) {},
                        _defaultBasemapGalleryGroupQuery: 'title:"ArcGIS Online Basemaps" AND owner:esri',
                        _basemapGalleryGroupQuery: null,
                        _finishStartup: function() {
                            this.loaded = !0;
                            this.onLoad();
                            0 === this.map.layerIds.length &&
                                0 < this.basemaps.length &&
                                !this._selectBasemapInProgress &&
                                this._select(this.basemaps[0].id);
                        },
                        _findCustomBasemapsGroup: function(a) {
                            this.basemapsGroup && this.basemapsGroup.id ?
                                this._findArcGISBasemaps(this.basemapsGroup.id, a) :
                                ((this._basemapGalleryGroupQuery =
                                    'title:"' +
                                    this.basemapsGroup.title +
                                    '" AND owner:' +
                                    this.basemapsGroup.owner), this._findArcGISBasemapsGroup(
                                    a
                                ));
                        },
                        _findArcGISBasemapsGroup: function(a) {
                            if (this._basemapGalleryGroupQuery)
                                this._findArcGISBasemapsGroupContent(a);
                            else {
                                var b = this.arcgisUrl + '/portals/self',
                                    c = { f: 'json' };
                                c.culture = h.locale;
                                z({
                                    url: b,
                                    content: c,
                                    callbackParamName: 'callback',
                                    load: e.hitch(this, function(b, c) {
                                        b && b.useVectorBasemaps && b.vectorBasemapGalleryGroupQuery ?
                                            this._checkVTLSupport().then(
                                                e.hitch(this, function(c) {
                                                    this._basemapGalleryGroupQuery = c ?
                                                        b.vectorBasemapGalleryGroupQuery :
                                                        b && b.basemapGalleryGroupQuery ?
                                                        b.basemapGalleryGroupQuery :
                                                        this._defaultBasemapGalleryGroupQuery;
                                                    this._findArcGISBasemapsGroupContent(a);
                                                })
                                            ) :
                                            ((this._basemapGalleryGroupQuery = b &&
                                                b.basemapGalleryGroupQuery ?
                                                b.basemapGalleryGroupQuery :
                                                this
                                                ._defaultBasemapGalleryGroupQuery), this._findArcGISBasemapsGroupContent(
                                                a
                                            ));
                                    }),
                                    error: e.hitch(this, function(a, b) {
                                        this._basemapGalleryGroupQuery = this._defaultBasemapGalleryGroupQuery;
                                    }),
                                });
                            }
                        },
                        _findArcGISBasemapsGroupContent: function(a) {
                            var b = e.hitch(this, '_findArcGISBasemaps'),
                                c = this.arcgisUrl + '/community/groups',
                                d = {};
                            d.q = this._basemapGalleryGroupQuery;
                            d.f = 'json';
                            z({
                                url: c,
                                content: d,
                                callbackParamName: 'callback',
                                load: e.hitch(this, function(c, d) {
                                    if (0 < c.results.length)
                                        b(
                                            c.results[0].id,
                                            a,
                                            c.results[0].sortField,
                                            c.results[0].sortOrder
                                        );
                                    else
                                        this.onError(
                                            'esri.dijit.BasemapGallery: could not find group for basemaps.'
                                        );
                                }),
                                error: e.hitch(this, function(a) {
                                    this.onError(
                                        'esri.dijit.BasemapGallery: could not find group for basemaps.'
                                    );
                                }),
                            });
                        },
                        _findArcGISBasemaps: function(a, b, c, d) {
                            var f = e.hitch(this, function(a, b, c, d) {
                                var f = this.arcgisUrl + '/search',
                                    h = {};
                                h.q =
                                    'group:' +
                                    a +
                                    ' AND type:"web map" NOT type:"web mapping application"';
                                h.sortField = c;
                                h.sortOrder = 'asc' === d ? 'desc' : 'asc';
                                h.num = 100;
                                h.f = 'json';
                                z({
                                    url: f,
                                    content: h,
                                    callbackParamName: 'callback',
                                    load: e.hitch(this, function(a, c) {
                                        if (0 < a.results.length) b(a.results);
                                        else
                                            this.onError(
                                                'esri.dijit.BasemapGallery: could not find group for basemaps.'
                                            );
                                    }),
                                    error: e.hitch(this, function(a, b) {
                                        this.onError(
                                            'esri.dijit.BasemapGallery: could not find group for basemaps.'
                                        );
                                    }),
                                });
                            });
                            c && d ?
                                f(a, b, c, d) :
                                z({
                                    url: this.arcgisUrl + '/community/groups/' + a,
                                    content: { f: 'json' },
                                    callbackParamName: 'callback',
                                    load: e.hitch(this, function(c, d) {
                                        c.sortField ?
                                            f(a, b, c.sortField, c.sortOrder) :
                                            f(a, b, 'name', 'desc');
                                    }),
                                    error: e.hitch(this, function(c, d) {
                                        f(a, b, 'name', 'desc');
                                    }),
                                });
                        },
                        _handleArcGISBasemapsResponse: function(a) {
                            0 < a.length &&
                                (f.forEach(
                                    a,
                                    function(a, b) {
                                        if (
                                            this.bingMapsKey ||
                                            (!this.bingMapsKey &&
                                                a.title &&
                                                -1 === a.title.indexOf('Bing Maps'))
                                        ) {
                                            b = {};
                                            b.id = this._getUniqueId();
                                            b.title = a.title;
                                            b.thumbnailUrl = '';
                                            if (
                                                a.thumbnail &&
                                                a.thumbnail.length &&
                                                ((b.thumbnailUrl =
                                                    this.arcgisUrl +
                                                    '/content/items/' +
                                                    a.id +
                                                    '/info/' +
                                                    a.thumbnail), q.id)
                                            ) {
                                                var c = q.id.findCredential(
                                                    C.urlToObject(this.arcgisUrl).path
                                                );
                                                c && (b.thumbnailUrl += '?token\x3d' + c.token);
                                            }
                                            b.itemId = a.id;
                                            a = new O(b, this);
                                            this.basemaps.splice(0, 0, a);
                                        }
                                    },
                                    this
                                ), this._finishStartup());
                        },
                        _refreshUI: function() {
                            this._hasUI &&
                                (p.empty(this.flowContainer), f.forEach(
                                    this.basemaps,
                                    function(a, b) {
                                        a.id || (a.id = 'basemap_' + b);
                                        this.flowContainer.appendChild(this._buildNodeLayout(a));
                                    },
                                    this
                                ), p.create(
                                    'br', { style: { clear: 'both' } },
                                    this.flowContainer
                                ), this._markSelected(this._selectedBasemap));
                        },
                        _buildNodeLayout: function(a) {
                            var d = p.create('div', {
                                    id: 'galleryNode_' + a.id,
                                    class: 'esriBasemapGalleryNode',
                                }),
                                f = p.create('a', { href: 'javascript:void(0);' }, d);
                            b.connect(f, 'onclick', e.hitch(this, '_onNodeClick', a));
                            var h = a.title || '';
                            a.thumbnailUrl ?
                                p.create(
                                    'img', {
                                        class: 'esriBasemapGalleryThumbnail',
                                        src: a.thumbnailUrl,
                                        title: h,
                                        alt: h,
                                    },
                                    f
                                ) :
                                p.create(
                                    'img', {
                                        class: 'esriBasemapGalleryThumbnail',
                                        src: c.toUrl('./images/transparent.gif'),
                                        title: h,
                                        alt: h,
                                    },
                                    f
                                );
                            a = p.create(
                                'div', { class: 'esriBasemapGalleryLabelContainer' },
                                d
                            );
                            p.create('span', { innerHTML: h, alt: h, title: h }, a);
                            return d;
                        },
                        _onNodeClick: function(a, b) {
                            b.preventDefault();
                            this._markSelected(a);
                            this.select(a.id);
                        },
                        _markSelected: function(a) {
                            a &&
                                (f.forEach(
                                        h.query('.esriBasemapGallerySelectedNode', this.domNode),
                                        function(a) {
                                            r.remove(a, 'esriBasemapGallerySelectedNode');
                                        }
                                    ), (a = m.byId('galleryNode_' + a.id)) &&
                                    r.add(a, 'esriBasemapGallerySelectedNode'));
                        },
                        _select: function(a) {
                            this._selectBasemapInProgress = !0;
                            var b = this.get(a);
                            b
                                ?
                                (b.layers ?
                                    this._getServiceInfos(b) :
                                    ((a = b.getLayers(this.arcgisUrl)), e.isArray(a) ?
                                        this._getServiceInfos(b) :
                                        a.addCallback(
                                            e.hitch(this, function(a) {
                                                this._getServiceInfos(b);
                                            })
                                        )), this._markSelected(b)) :
                                (this._selectBasemapInProgress = !1);
                        },
                        _getServiceInfos: function(a) {
                            'https:' === location.protocol &&
                                f.forEach(
                                    a.layers,
                                    function(a) {
                                        if (
                                            this._isAgolService(a.url) ||
                                            this._isHostedService(a.url)
                                        )
                                            a.url = a.url.replace('http:', 'https:');
                                    },
                                    this
                                );
                            this._selectedBasemap = a;
                            var b = [];
                            f.forEach(
                                a.layers,
                                function(a) {
                                    a.url &&
                                        0 < a.url.length &&
                                        !a.isReference &&
                                        !a.type &&
                                        ((a.deferredsPos = b.length), b.push(
                                            this._getServiceInfo(a.url)
                                        ));
                                },
                                this
                            );
                            0 < b.length ?
                                new l(b).addCallback(
                                    e.hitch(this, function(b) {
                                        var c = null;
                                        f.forEach(
                                            a.layers,
                                            function(a) {
                                                if (0 === a.deferredsPos || a.deferredsPos) {
                                                    a.serviceInfoResponse = b[a.deferredsPos][1];
                                                    var d = a.serviceInfoResponse.fullExtent;
                                                    d || (d = a.serviceInfoResponse.extent);
                                                    c = c ? c.union(new y(d)) : new y(d);
                                                }
                                            },
                                            this
                                        );
                                        this.map.extent &&
                                            5 > this._getIntersectionPercent(c, this.map.extent) &&
                                            this.map.setExtent(c, !0);
                                        this._switchBasemapLayers(a);
                                        this._updateReferenceLayer(a);
                                    })
                                ) :
                                (this._switchBasemapLayers(a), this._updateReferenceLayer(
                                    a
                                ));
                        },
                        _checkVTLSupport: function() {
                            var a = new n();
                            d('ie') ? a.resolve(!1) : a.resolve(H.supported());
                            return a;
                        },
                        _switchBasemapLayers: function(a) {
                            var c = a.layers,
                                d = !1,
                                h, g, k;
                            f.forEach(c, function(a) {
                                'VectorTileLayer' === a.type && (d = !0);
                            });
                            if (d && !0 !== this._supportsVTL)
                                this.onError(
                                    'esri.dijit.BasemapGallery: Unable to switch basemap because layer type is not supported by your current browser version.'
                                );
                            else if (
                                0 < this.map.layerIds.length &&
                                0 === this.map.getNumLevels() &&
                                ('OpenStreetMap' === c[0].type ||
                                    (c[0].type && -1 < c[0].type.indexOf('BingMaps')) ||
                                    'WebTiledLayer' === c[0].type ||
                                    'VectorTileLayer' === c[0].type)
                            )
                                this.onError(
                                    'esri.dijit.BasemapGallery: Unable to switch basemap because new basemap is a tiled service and cannot be loaded as a dynamic layer.'
                                );
                            else {
                                f.forEach(
                                    c,
                                    function(a) {
                                        if (!a.isReference &&
                                            a.type &&
                                            -1 < a.type.indexOf('BingMaps') &&
                                            !this.bingMapsKey
                                        )
                                            this.onError(
                                                'esri.dijit.BasemapGallery: Invalid Bing Maps key.'
                                            );
                                    },
                                    this
                                );
                                var l = 0;
                                f.forEach(
                                    c,
                                    function(a, d) {
                                        if (!a.isReference) {
                                            var f;
                                            if ('OpenStreetMap' === a.type) {
                                                if (
                                                    0 < this.map.layerIds.length &&
                                                    0 === this.map.getNumLevels()
                                                ) {
                                                    this.onError(
                                                        'esri.dijit.BasemapGallery: Unable to switch basemap because new basemap is a tiled service and cannot be loaded as a dynamic layer.'
                                                    );
                                                    return;
                                                }
                                                f = new A({
                                                    id: 'layer_osm',
                                                    opacity: a.opacity,
                                                });
                                            } else if (a.type && -1 < a.type.indexOf('BingMaps')) {
                                                if (
                                                    0 < this.map.layerIds.length &&
                                                    0 === this.map.getNumLevels()
                                                ) {
                                                    this.onError(
                                                        'esri.dijit.BasemapGallery: Unable to switch basemap because new basemap is a tiled service and cannot be loaded as a dynamic layer.'
                                                    );
                                                    return;
                                                }
                                                f = w.MAP_STYLE_AERIAL_WITH_LABELS;
                                                'BingMapsAerial' === a.type ?
                                                    (f = w.MAP_STYLE_AERIAL) :
                                                    'BingMapsRoad' === a.type && (f = w.MAP_STYLE_ROAD);
                                                f = new w({
                                                    id: 'layer_bing',
                                                    bingMapsKey: this.bingMapsKey,
                                                    mapStyle: f,
                                                    opacity: a.opacity,
                                                });
                                            } else if ('WebTiledLayer' === a.type) {
                                                if (
                                                    0 < this.map.layerIds.length &&
                                                    0 === this.map.getNumLevels()
                                                ) {
                                                    this.onError(
                                                        'esri.dijit.BasemapGallery: Unable to switch basemap because new basemap is a tiled service and cannot be loaded as a dynamic layer.'
                                                    );
                                                    return;
                                                }
                                                f = a.initialExtent || a.fullExtent;
                                                f = new D(a.templateUrl || a.url, {
                                                    visible: a.visibility,
                                                    opacity: a.opacity,
                                                    copyright: a.copyright,
                                                    fullExtent: a.fullExtent && new y(a.fullExtent),
                                                    initialExtent: f && new y(f),
                                                    subDomains: a.subDomains,
                                                    tileInfo: a.tileInfo ? new G(a.tileInfo) : null,
                                                    tileServers: a.tileServers,
                                                });
                                            } else if ('VectorTileLayer' === a.type) {
                                                f = new H(a.styleUrl, {
                                                    visible: a.visibility,
                                                    opacity: a.opacity,
                                                });
                                                0 === d && 1 < c.length && this._removeBasemapLayers();
                                                var m = this;
                                                b.connect(
                                                    f,
                                                    'onLoad',
                                                    e.hitch(
                                                        this,
                                                        function(a, b, d) {
                                                            var e;
                                                            e = m._sameSpatialReference(
                                                                d.spatialReference,
                                                                m.map.spatialReference
                                                            );
                                                            if (m.map.spatialReference && !e)
                                                                m.onError(
                                                                    'esri.dijit.BasemapGallery: Unable to switch basemap because new basemap has a different spatial reference.'
                                                                );
                                                            else {
                                                                if (0 < m.map.getNumLevels()) {
                                                                    if (
                                                                        ((e = m._sameTilingScheme(
                                                                            d.tileInfo,
                                                                            m.map.__tileInfo
                                                                        )), !e)
                                                                    ) {
                                                                        m.onError(
                                                                            'esri.dijit.BasemapGallery: Unable to switch basemap because new basemap has a different tiling scheme.'
                                                                        );
                                                                        return;
                                                                    }
                                                                } else if (m.map.loaded) {
                                                                    m.onError(
                                                                        'esri.dijit.BasemapGallery: Unable to switch basemap because new basemap is a vector tile layer and cannot be loaded as a dynamic layer.'
                                                                    );
                                                                    return;
                                                                }
                                                                0 === b &&
                                                                    1 === c.length &&
                                                                    m._removeBasemapLayers();
                                                                d._basemapGalleryLayerType = 'basemap';
                                                                m.map.addLayer(d, a);
                                                            }
                                                        },
                                                        l,
                                                        d
                                                    )
                                                );
                                            } else if (
                                                a.serviceInfoResponse &&
                                                a.serviceInfoResponse.mapName
                                            ) {
                                                h = new x(a.serviceInfoResponse.spatialReference);
                                                g = this._sameSpatialReference(
                                                    h,
                                                    this.map.spatialReference
                                                );
                                                if (this.map.spatialReference && !g) {
                                                    this.onError(
                                                        'esri.dijit.BasemapGallery: Unable to switch basemap because new basemap has a different spatial reference.'
                                                    );
                                                    return;
                                                }
                                                if (!0 === a.serviceInfoResponse.singleFusedMapCache &&
                                                    0 < this.map.getNumLevels()
                                                ) {
                                                    if (
                                                        ((k = this._sameTilingScheme(
                                                            a.serviceInfoResponse.tileInfo,
                                                            this.map.__tileInfo
                                                        )), !k)
                                                    ) {
                                                        this.onError(
                                                            'esri.dijit.BasemapGallery: Unable to switch basemap because new basemap has a different tiling scheme.'
                                                        );
                                                        return;
                                                    }
                                                } else if (!0 === a.serviceInfoResponse.singleFusedMapCache &&
                                                    -1 <
                                                    a.serviceInfoResponse.capabilities
                                                    .toLowerCase()
                                                    .indexOf('tilesonly') &&
                                                    this.map.loaded &&
                                                    0 === this.map.getNumLevels()
                                                ) {
                                                    this.onError(
                                                        'esri.dijit.BasemapGallery: Unable to switch basemap because new basemap is a tiled service and cannot be loaded as a dynamic layer.'
                                                    );
                                                    return;
                                                }
                                                f = (0 === this.map.layerIds.length ||
                                                        0 < this.map.getNumLevels()) &&
                                                    !0 === a.serviceInfoResponse.singleFusedMapCache ?
                                                    this._loadAsCached(a) :
                                                    this._loadAsDynamic(a);
                                            } else if (
                                                a.serviceInfoResponse &&
                                                a.serviceInfoResponse.pixelSizeX
                                            ) {
                                                h = new x(a.serviceInfoResponse.spatialReference);
                                                g = this._sameSpatialReference(
                                                    h,
                                                    this.map.spatialReference
                                                );
                                                if (this.map.spatialReference && !g) {
                                                    this.onError(
                                                        'esri.dijit.BasemapGallery: Unable to switch basemap because new basemap has a different spatial reference.'
                                                    );
                                                    return;
                                                }
                                                if (!0 === a.serviceInfoResponse.singleFusedMapCache &&
                                                    0 < this.map.getNumLevels() &&
                                                    ((k = this._sameTilingScheme(
                                                        a.serviceInfoResponse.tileInfo,
                                                        this.map.__tileInfo
                                                    )), !k)
                                                ) {
                                                    this.onError(
                                                        'esri.dijit.BasemapGallery: Unable to switch basemap because new basemap has a different tiling scheme.'
                                                    );
                                                    return;
                                                }
                                                a.serviceInfoResponse.singleFusedMapCache &&
                                                    'ArcGISImageServiceLayer' !== a.type ?
                                                    (f = 'Raster' === a.serviceInfoResponse.cacheType ?
                                                        new Q(a.url, {
                                                            serviceInfo: a.serviceInfoResponse,
                                                            opacity: a.opacity,
                                                            visible: a.visibility,
                                                            bandIds: a.bandIds && 0 < a.bandIds.length ?
                                                                a.bandIds :
                                                                null,
                                                        }) :
                                                        new E(a.url, {
                                                            resourceInfo: a.serviceInfoResponse,
                                                            opacity: a.opacity,
                                                            visible: a.visibility,
                                                        })) :
                                                    a.serviceInfoResponse.pixelSizeX ?
                                                    ((f = new K()), (f.bandIds =
                                                            a.bandIds), !a.bandIds &&
                                                        a.serviceInfoResponse.bandCount &&
                                                        3 <
                                                        parseInt(
                                                            a.serviceInfoResponse.bandCount,
                                                            10
                                                        ) &&
                                                        (f.bandIds = [0, 1, 2]), (f = new F(a.url, {
                                                            resourceInfo: a.serviceInfoResponse,
                                                            opacity: a.opacity,
                                                            visible: a.visibility,
                                                            imageServiceParameters: f,
                                                        }))) :
                                                    ((f = new L()), (f.format = 'png24'), a
                                                        .serviceInfoResponse
                                                        .supportedImageFormatTypes &&
                                                        -1 <
                                                        a.serviceInfoResponse.supportedImageFormatTypes.indexOf(
                                                            'PNG32'
                                                        ) &&
                                                        (f.format = 'png32'), (f = new B(a.url, {
                                                            resourceInfo: a.serviceInfoResponse,
                                                            opacity: a.opacity,
                                                            visible: a.visibility,
                                                            imageParameters: f,
                                                        })));
                                            }
                                            'VectorTileLayer' === a.type ?
                                                l++
                                                :
                                                f &&
                                                (0 === d &&
                                                    this._removeBasemapLayers(), (f._basemapGalleryLayerType =
                                                        'basemap'), this.map.addLayer(f, l), l++);
                                        }
                                    },
                                    this
                                );
                                this._selectBasemapInProgress = !1;
                                this.onSelectionChange();
                            }
                        },
                        _removeBasemapLayers: function() {
                            var a = this.map.layerIds,
                                b = [];
                            f.forEach(
                                a,
                                function(a) {
                                    a = this.map.getLayer(a);
                                    'basemap' === a._basemapGalleryLayerType && b.push(a);
                                },
                                this
                            );
                            0 === b.length &&
                                0 < a.length &&
                                b.push(this.map.getLayer(a[0]));
                            0 < b.length &&
                                f.forEach(
                                    b,
                                    function(a) {
                                        this.map.removeLayer(a);
                                    },
                                    this
                                );
                        },
                        _updateReferenceLayer: function(a) {
                            var b;
                            this._removeReferenceLayer();
                            for (b = 0; b < a.layers.length; b++)
                                !0 === a.layers[b].isReference &&
                                this._addReferenceLayer(a.layers[b]);
                        },
                        _removeReferenceLayer: function() {
                            var a;
                            for (a = this.map.layerIds.length - 1; 0 <= a; a--) {
                                var b = this.map.getLayer(this.map.layerIds[a]);
                                'reference' === b._basemapGalleryLayerType &&
                                    this.map.removeLayer(b);
                            }
                        },
                        _addReferenceLayer: function(a) {
                            'VectorTileLayer' === a.type ?
                                this._handleReferenceServiceInfoResponse(a) :
                                this._getServiceInfo(
                                    a.url,
                                    e.hitch(this, '_handleReferenceServiceInfoResponse', a)
                                );
                        },
                        _handleReferenceServiceInfoResponse: function(a, b, c) {
                            var d;
                            a.serviceInfoResponse = b;
                            'VectorTileLayer' === a.type ?
                                (d = new H(a.styleUrl, {
                                    visible: a.visibility,
                                    opacity: a.opacity,
                                })) :
                                b && b.mapName ?
                                (d = !0 === b.singleFusedMapCache ?
                                    this._loadAsCached(a) :
                                    this._loadAsDynamic(a)) :
                                b &&
                                b.pixelSizeX &&
                                (a.serviceInfoResponse.singleFusedMapCache ?
                                    (d = new E(a.url, {
                                        resourceInfo: a.serviceInfoResponse,
                                        opacity: a.opacity,
                                        visible: a.visibility,
                                    })) :
                                    a.serviceInfoResponse.pixelSizeX ?
                                    ((c = new K()), (c.bandIds =
                                            a.bandIds), !a.bandIds &&
                                        b.bandCount &&
                                        3 < parseInt(b.bandCount, 10) &&
                                        (c.bandIds = [0, 1, 2]), (d = new F(a.url, {
                                            resourceInfo: b,
                                            opacity: a.opacity,
                                            visible: a.visibility,
                                            imageServiceParameters: c,
                                        }))) :
                                    ((b = new L()), (b.format = 'png24'), a
                                        .serviceInfoResponse
                                        .supportedImageFormatTypes &&
                                        -1 <
                                        a.serviceInfoResponse.supportedImageFormatTypes.indexOf(
                                            'PNG32'
                                        ) &&
                                        (b.format =
                                            'png32'), (b.transparent = !0), (d = new B(
                                            a.url, {
                                                resourceInfo: a.serviceInfoResponse,
                                                opacity: a.opacity,
                                                visible: a.visibility,
                                                imageParameters: b,
                                            }
                                        ))));
                            d &&
                                ((d._basemapGalleryLayerType = 'reference'), d.attr(
                                    'data-reference', !0
                                ), this.map.addLayer(d));
                        },
                        _getServiceInfo: function(a, b) {
                            return z({
                                url: a,
                                content: { f: 'json' },
                                callbackParamName: 'callback',
                                load: function(a, c) {
                                    b && b(a, c);
                                },
                                error: e.hitch(this, function(a, b) {
                                    this.onError(
                                        'esri.dijit.BasemapGallery: service not accessible.'
                                    );
                                }),
                            });
                        },
                        _loadAsCached: function(a) {
                            var b = [];
                            a.displayLevels ||
                                (b = f.map(a.serviceInfoResponse.tileInfo.lods, function(a) {
                                    return a.level;
                                }));
                            var c = null;
                            a.exclusionAreas &&
                                a.exclusionAreas.length &&
                                ((c = []), f.forEach(a.exclusionAreas, function(a) {
                                    c.push({
                                        minZoom: a.minZoom,
                                        maxZoom: a.maxZoom,
                                        minScale: a.minScale,
                                        maxScale: a.maxScale,
                                        geometry: new y(a.geometry),
                                    });
                                }));
                            return new E(a.url, {
                                resourceInfo: a.serviceInfoResponse,
                                opacity: a.opacity,
                                visible: a.visibility,
                                exclusionAreas: c,
                                displayLevels: a.displayLevels || b,
                            });
                        },
                        _loadAsDynamic: function(a) {
                            var b = new B(a.url, {
                                resourceInfo: a.serviceInfoResponse,
                                opacity: a.opacity,
                                visible: a.visibility,
                            });
                            a.visibleLayers && b.setVisibleLayers(a.visibleLayers);
                            return b;
                        },
                        _getIntersectionPercent: function(a, b) {
                            return (a = b.intersects(a)) ?
                                ((a = a.getWidth() * a.getHeight()), (b =
                                    b.getWidth() * b.getHeight()), a / b * 100) :
                                0;
                        },
                        _getIds: function() {
                            var a = [];
                            f.forEach(
                                this.basemaps,
                                function(b) {
                                    a.push(b.id);
                                },
                                this
                            );
                            return a;
                        },
                        _getUniqueId: function() {
                            for (var a = ',' + this._getIds().toString() + ',', b = 0;;)
                                if (-1 < a.indexOf(',basemap_' + b + ',')) b++;
                                else return 'basemap_' + b;
                        },
                        _isUniqueId: function(a) {
                            return -1 ===
                                (',' + this._getIds().toString() + ',').indexOf(
                                    ',' + a + ','
                                ) ?
                                !0 :
                                !1;
                        },
                        _isAgolService: function(a) {
                            return a ?
                                -1 !== a.indexOf('/services.arcgisonline.com/') ||
                                -1 !== a.indexOf('/server.arcgisonline.com/') :
                                !1;
                        },
                        _isHostedService: function(a) {
                            return a ? -1 !== a.indexOf('.arcgis.com/') : !1;
                        },
                        _sameSpatialReference: function(a, b) {
                            return (a &&
                                    b &&
                                    a.wkt == b.wkt &&
                                    (a.wkid === b.wkid ||
                                        (v.isDefined(a.latestWkid) && a.latestWkid === b.wkid) ||
                                        (v.isDefined(b.latestWkid) && a.wkid === b.latestWkid) ||
                                        (v.isDefined(a.latestWkid) &&
                                            a.latestWkid === b.latestWkid))) ||
                                (a && b && a.isWebMercator() && b.isWebMercator()) ?
                                !0 :
                                !1;
                        },
                        _sameTilingScheme: function(a, b) {
                            var c = this.map,
                                c = c.width > c.height ? c.width : c.height,
                                d = !1,
                                e = !1,
                                f,
                                h;
                            for (f = 0; f < a.lods.length; f++) {
                                var g = a.lods[f].scale;
                                a.dpi !== b.dpi && (g = a.lods[f].scale / a.dpi);
                                for (h = 0; h < b.lods.length; h++) {
                                    var k = b.lods[h].scale;
                                    a.dpi !== b.dpi && (k = b.lods[h].scale / b.dpi);
                                    if (Math.abs(k - g) / k < 1 / c)
                                        if (d) {
                                            e = !0;
                                            break;
                                        } else d = !0;
                                    if (k < g) break;
                                }
                                if (e) break;
                            }
                            return e || (d && (1 === a.lods.length || 1 === b.lods.length)) ?
                                !0 :
                                !1;
                        },
                    });
                    e.setObject('dijit.BasemapGallery', g, q);
                    return g;
                }
            );
        },
        'esri/layers/WebTiledLayer': function() {
            define(
                'dojo/_base/declare dojo/_base/lang dojo/_base/array dojo/_base/url dojo/sniff dojo/string ../config ../kernel ../request ../urlUtils ../SpatialReference ../geometry/Extent ./TiledMapServiceLayer ./TileInfo'.split(
                    ' '
                ),
                function(c, g, f, b, e, h, d, a, k, n, l, m, p, r) {
                    function u(a, b) {
                        var c = [],
                            d;
                        if (a && b && (b.customLayerParameters || b.customParameters)) {
                            d = g.clone(b.customParameters || {});
                            g.mixin(d, b.customLayerParameters || {});
                            a = n.urlToObject(a);
                            for (var e in a.query)
                                d.hasOwnProperty(e) || c.push(e + '\x3d' + a.query[e]);
                            a = a.path + (c.length ? '?' + c.join('\x26') : '');
                        }
                        return a;
                    }
                    c = c(p, {
                        declaredClass: 'esri.layers.WebTiledLayer',
                        constructor: function(a, c) {
                            c || (c = {});
                            this.urlTemplate = a = u(a, c.wmtsInfo);
                            var q = new m(-2.0037508342787e7, -2.003750834278e7,
                                    2.003750834278e7,
                                    2.0037508342787e7,
                                    new l({ wkid: 102100 })
                                ),
                                p = new m(-2.0037508342787e7, -2.003750834278e7,
                                    2.003750834278e7,
                                    2.0037508342787e7,
                                    new l({ wkid: 102100 })
                                );
                            this.initialExtent = c.initialExtent || q;
                            this.fullExtent = c.fullExtent || p;
                            this.tileInfo = c.tileInfo ?
                                c.tileInfo :
                                new r({
                                    dpi: 96,
                                    rows: 256,
                                    cols: 256,
                                    origin: { x: -2.0037508342787e7, y: 2.0037508342787e7 },
                                    spatialReference: { wkid: 102100 },
                                    lods: [{
                                            level: 0,
                                            resolution: 156543.033928,
                                            scale: 5.91657527591555e8,
                                        },
                                        {
                                            level: 1,
                                            resolution: 78271.5169639999,
                                            scale: 2.95828763795777e8,
                                        },
                                        {
                                            level: 2,
                                            resolution: 39135.7584820001,
                                            scale: 1.47914381897889e8,
                                        },
                                        {
                                            level: 3,
                                            resolution: 19567.8792409999,
                                            scale: 7.3957190948944e7,
                                        },
                                        {
                                            level: 4,
                                            resolution: 9783.93962049996,
                                            scale: 3.6978595474472e7,
                                        },
                                        {
                                            level: 5,
                                            resolution: 4891.96981024998,
                                            scale: 1.8489297737236e7,
                                        },
                                        {
                                            level: 6,
                                            resolution: 2445.98490512499,
                                            scale: 9244648.868618,
                                        },
                                        {
                                            level: 7,
                                            resolution: 1222.99245256249,
                                            scale: 4622324.434309,
                                        },
                                        {
                                            level: 8,
                                            resolution: 611.49622628138,
                                            scale: 2311162.217155,
                                        },
                                        {
                                            level: 9,
                                            resolution: 305.748113140558,
                                            scale: 1155581.108577,
                                        },
                                        {
                                            level: 10,
                                            resolution: 152.874056570411,
                                            scale: 577790.554289,
                                        },
                                        {
                                            level: 11,
                                            resolution: 76.4370282850732,
                                            scale: 288895.277144,
                                        },
                                        {
                                            level: 12,
                                            resolution: 38.2185141425366,
                                            scale: 144447.638572,
                                        },
                                        {
                                            level: 13,
                                            resolution: 19.1092570712683,
                                            scale: 72223.819286,
                                        },
                                        {
                                            level: 14,
                                            resolution: 9.55462853563415,
                                            scale: 36111.909643,
                                        },
                                        {
                                            level: 15,
                                            resolution: 4.77731426794937,
                                            scale: 18055.954822,
                                        },
                                        {
                                            level: 16,
                                            resolution: 2.38865713397468,
                                            scale: 9027.977411,
                                        },
                                        {
                                            level: 17,
                                            resolution: 1.19432856685505,
                                            scale: 4513.988705,
                                        },
                                        {
                                            level: 18,
                                            resolution: 0.597164283559817,
                                            scale: 2256.994353,
                                        },
                                        {
                                            level: 19,
                                            resolution: 0.298582141647617,
                                            scale: 1128.497176,
                                        },
                                        {
                                            level: 20,
                                            resolution: 0.14929107082380833,
                                            scale: 564.248588,
                                        },
                                        {
                                            level: 21,
                                            resolution: 0.07464553541190416,
                                            scale: 282.124294,
                                        },
                                        {
                                            level: 22,
                                            resolution: 0.03732276770595208,
                                            scale: 141.062147,
                                        },
                                        {
                                            level: 23,
                                            resolution: 0.01866138385297604,
                                            scale: 70.5310735,
                                        },
                                    ],
                                });
                            this.spatialReference = new l(
                                this.tileInfo.spatialReference.toJson()
                            );
                            this.copyright = c.copyright || '';
                            var t = new b(a),
                                q = t.scheme + '://' + t.authority + '/';
                            this.urlPath = a.substring(q.length);
                            this.tileServers = c.tileServers || []; -
                            1 === t.authority.indexOf('{subDomain}') &&
                                this.tileServers.push(q);
                            if (
                                c.subDomains &&
                                0 < c.subDomains.length &&
                                1 < t.authority.split('.').length
                            ) {
                                this.subDomains = c.subDomains;
                                var y;
                                f.forEach(
                                    c.subDomains,
                                    function(a) {
                                        -1 < t.authority.indexOf('${subDomain}') ?
                                            (y =
                                                t.scheme +
                                                '://' +
                                                h.substitute(t.authority, { subDomain: a }) +
                                                '/') :
                                            -1 < t.authority.indexOf('{subDomain}') &&
                                            (y =
                                                t.scheme +
                                                '://' +
                                                t.authority.replace(/\{subDomain\}/gi, a) +
                                                '/');
                                        this.tileServers.push(y);
                                    },
                                    this
                                );
                            }
                            this.tileServers = f.map(this.tileServers, function(a) {
                                '/' !== a.charAt(a.length - 1) && (a += '/');
                                return a;
                            });
                            this._levelToLevelValue = [];
                            var x = 0;
                            f.forEach(
                                this.tileInfo.lods,
                                function(a, b) {
                                    this._levelToLevelValue[a.level] = a.levelValue || a.level;
                                    0 === b && (x = this._levelToLevelValue[a.level]);
                                },
                                this
                            );
                            this._wmtsInfo = c.wmtsInfo;
                            var w = g.hitch(this, function() {
                                this.loaded = !0;
                                this.onLoad(this);
                            });
                            e('chrome') ?
                                ((a = this.getTileUrl(x, 0, 0)), (c =
                                        d.defaults.io), (q = 'with-credentials' === c.useCors ?
                                        n.canUseXhr(a, !0) :
                                        -1), (c = -1 < q ? c.corsEnabledServers[q] : null) &&
                                    c.withCredentials ?
                                    k({
                                        url: a,
                                        handleAs: 'arraybuffer',
                                    }).addBoth(function() {
                                        w();
                                    }) :
                                    w()) :
                                w();
                        },
                        getTileUrl: function(a, b, c) {
                            a = this._levelToLevelValue[a];
                            var d =
                                this.tileServers[b % this.tileServers.length] +
                                h.substitute(this.urlPath, { level: a, col: c, row: b }),
                                d = d
                                .replace(/\{level\}/gi, a)
                                .replace(/\{row\}/gi, b)
                                .replace(/\{col\}/gi, c),
                                d = this._appendCustomLayerParameters(d),
                                d = this.addTimestampToURL(d);
                            return n.addProxy(d);
                        },
                        _appendCustomLayerParameters: function(a) {
                            var b, c;
                            if (
                                this._wmtsInfo &&
                                (this._wmtsInfo.customLayerParameters ||
                                    this._wmtsInfo.customParameters)
                            )
                                for (b in ((c = g.clone(
                                        this._wmtsInfo.customParameters || {}
                                    )), g.mixin(c, this._wmtsInfo.customLayerParameters || {}), c))
                                    a +=
                                    (-1 === a.indexOf('?') ? '?' : '\x26') +
                                    b +
                                    '\x3d' +
                                    encodeURIComponent(c[b]);
                            return a;
                        },
                    });
                    g.setObject('layers.WebTiledLayer', c, a);
                    return c;
                }
            );
        },
        'esri/dijit/Basemap': function() {
            define(
                'dojo/_base/declare dojo/_base/array dojo/_base/lang dojo/has ../kernel ../request ./BasemapLayer'.split(
                    ' '
                ),
                function(c, g, f, b, e, h, d) {
                    c = c(null, {
                        declaredClass: 'esri.dijit.Basemap',
                        id: null,
                        title: '',
                        thumbnailUrl: null,
                        layers: null,
                        itemId: null,
                        basemapGallery: null,
                        constructor: function(a, b) {
                            a = a || {};
                            this.id = a.id;
                            this.itemId = a.itemId;
                            this.layers = a.layers;
                            this.title = a.title || '';
                            this.thumbnailUrl = a.thumbnailUrl;
                            this.basemapGallery = b;
                        },
                        getLayers: function(a) {
                            if (this.layers) return this.layers;
                            if (this.itemId)
                                return (a = h({
                                    url: (a || e.dijit._arcgisUrl) +
                                        '/content/items/' +
                                        this.itemId +
                                        '/data',
                                    content: { f: 'json' },
                                    callbackParamName: 'callback',
                                    error: f.hitch(this, function(a, b) {
                                        if (this.basemapGallery)
                                            this.basemapGallery.onError(
                                                'esri.dijit.Basemap: could not access basemap item.'
                                            );
                                    }),
                                })), a.addCallback(
                                    f.hitch(this, function(a, b) {
                                        if (a.baseMap)
                                            return (this.layers = []), g.forEach(
                                                a.baseMap.baseMapLayers,
                                                function(a) {
                                                    this.layers.push(new d(a));
                                                },
                                                this
                                            ), this.layers;
                                        if (this.basemapGallery)
                                            this.basemapGallery.onError(
                                                'esri.dijit.Basemap: could not access basemap item.'
                                            );
                                        return [];
                                    })
                                ), a;
                        },
                    });
                    f.setObject('dijit.Basemap', c, e);
                    return c;
                }
            );
        },
        'esri/dijit/BasemapLayer': function() {
            define(
                ['dojo/_base/declare', 'dojo/_base/lang', 'dojo/has', '../kernel'],
                function(c, g, f, b) {
                    c = c(null, {
                        declaredClass: 'esri.dijit.BasemapLayer',
                        constructor: function(b) {
                            b = b || {};
                            this.url = b.url;
                            this.type = b.type;
                            this.isReference = !0 === b.isReference ? !0 : !1;
                            this.opacity = b.opacity;
                            this.visibleLayers = b.visibleLayers;
                            this.displayLevels = b.displayLevels;
                            this.exclusionAreas = b.exclusionAreas;
                            this.bandIds = b.bandIds;
                            this.templateUrl = b.templateUrl;
                            this.copyright = b.copyright;
                            this.subDomains = b.subDomains;
                            this.fullExtent = b.fullExtent;
                            this.initialExtent = b.initialExtent;
                            this.tileInfo = b.tileInfo;
                            this.tileServers = b.tileServers;
                            this.styleUrl = b.styleUrl;
                        },
                    });
                    g.setObject('dijit.BasemapLayer', c, b);
                    return c;
                }
            );
        },
        'esri/dijit/HomeButton': function() {
            define(
                'dojo/Evented dojo/_base/declare dojo/_base/lang dojo/has ../kernel dijit/_WidgetBase dijit/a11yclick dijit/_TemplatedMixin dojo/on dojo/Deferred dojo/text!./templates/HomeButton.html dojo/i18n!../nls/jsapi dojo/dom-class dojo/dom-style'.split(
                    ' '
                ),
                function(c, g, f, b, e, h, d, a, k, n, l, m, p, r) {
                    c = g('esri.dijit.HomeButton', [h, a, c], {
                        templateString: l,
                        options: {
                            theme: 'HomeButton',
                            map: null,
                            extent: null,
                            fit: !1,
                            visible: !0,
                        },
                        constructor: function(a, b) {
                            a = f.mixin({}, this.options, a);
                            this.domNode = b;
                            this._i18n = m;
                            this.set('map', a.map);
                            this.set('theme', a.theme);
                            this.set('visible', a.visible);
                            this.set('extent', a.extent);
                            this.set('fit', a.fit);
                            this.watch('theme', this._updateThemeWatch);
                            this.watch('visible', this._visible);
                            this._css = {
                                container: 'homeContainer',
                                home: 'home',
                                loading: 'loading',
                            };
                        },
                        postCreate: function() {
                            this.inherited(arguments);
                            this.own(k(this._homeNode, d, f.hitch(this, this.home)));
                        },
                        startup: function() {
                            this.inherited(arguments);
                            this.map || this.destroy();
                            if (this.map.loaded) this._init();
                            else
                                k.once(
                                    this.map,
                                    'load',
                                    f.hitch(this, function() {
                                        this._init();
                                    })
                                );
                        },
                        destroy: function() {
                            this.inherited(arguments);
                        },
                        home: function() {
                            var a = new n(),
                                b = this.get('extent');
                            this._showLoading();
                            var c = { extent: b };
                            b
                                ?
                                this.map.extent !== b ?
                                this.map.setExtent(b, this.get('fit')).then(
                                    f.hitch(this, function() {
                                        this._hideLoading();
                                        this.emit('home', c);
                                        a.resolve(c);
                                    }),
                                    f.hitch(this, function(b) {
                                        b ||
                                            (b = Error(
                                                'HomeButton::Error setting map extent'
                                            ));
                                        c.error = b;
                                        this.emit('home', c);
                                        a.reject(b);
                                    })
                                ) :
                                (this._hideLoading(), this.emit('home', c), a.resolve(
                                    c
                                )) :
                                (this._hideLoading(), (b = Error(
                                    'HomeButton::home extent is undefined'
                                )), (c.error = b), this.emit('home', c), a.reject(b));
                            return a.promise;
                        },
                        show: function() {
                            this.set('visible', !0);
                        },
                        hide: function() {
                            this.set('visible', !1);
                        },
                        _init: function() {
                            this._visible();
                            this.get('extent') || this.set('extent', this.map.extent);
                            this.set('loaded', !0);
                            this.emit('load', {});
                        },
                        _showLoading: function() {
                            p.add(this._homeNode, this._css.loading);
                        },
                        _hideLoading: function() {
                            p.remove(this._homeNode, this._css.loading);
                        },
                        _updateThemeWatch: function(a, b, c) {
                            p.remove(this.domNode, b);
                            p.add(this.domNode, c);
                        },
                        _visible: function() {
                            this.get('visible') ?
                                r.set(this.domNode, 'display', 'block') :
                                r.set(this.domNode, 'display', 'none');
                        },
                    });
                    f.setObject('dijit.HomeButton', c, e);
                    return c;
                }
            );
        },
        'esri/dijit/LocateButton': function() {
            define(
                'require dojo/Evented dojo/_base/declare dojo/_base/lang dojo/has ../kernel ../config dijit/_WidgetBase dijit/a11yclick dijit/_TemplatedMixin dojo/on dojo/Deferred dojo/text!./templates/LocateButton.html dojo/i18n!../nls/jsapi dojo/dom-class dojo/dom-style dojo/dom-attr ../geometry/webMercatorUtils ../geometry/Point ../SpatialReference ../graphic ../symbols/PictureMarkerSymbol ../tasks/ProjectParameters'.split(
                    ' '
                ),
                function(
                    c,
                    g,
                    f,
                    b,
                    e,
                    h,
                    d,
                    a,
                    k,
                    n,
                    l,
                    m,
                    p,
                    r,
                    u,
                    t,
                    q,
                    v,
                    C,
                    z,
                    y,
                    x,
                    w
                ) {
                    c = f('esri.dijit.LocateButton', [a, n, g], {
                        templateString: p,
                        options: {
                            theme: 'LocateButton',
                            map: null,
                            visible: !0,
                            highlightLocation: !0,
                            symbol: new x(c.toUrl('./images/sdk_gps_location.png'), 28, 28),
                            infoTemplate: null,
                            scale: null,
                            useTracking: !1,
                            clearOnTrackingStop: !1,
                            setScale: !0,
                            centerAt: !0,
                            timeout: 15e3,
                            graphicsLayer: null,
                            geolocationOptions: {
                                maximumAge: 0,
                                timeout: 15e3,
                                enableHighAccuracy: !0,
                            },
                        },
                        constructor: function(a, c) {
                            a = b.mixin({}, this.options, a);
                            this.domNode = c;
                            this._i18n = r;
                            c = navigator.geolocation;
                            var d = window.hasOwnProperty('isSecureContext');
                            (((d && window.isSecureContext) ||
                                    (!d && 'https:' === window.location.protocol)) &&
                                c) ||
                            (a.visible = !1);
                            this.set('map', a.map);
                            this.set('theme', a.theme);
                            this.set('visible', a.visible);
                            this.set('scale', a.scale);
                            this.set('highlightLocation', a.highlightLocation);
                            this.set('symbol', a.symbol);
                            this.set('infoTemplate', a.infoTemplate);
                            this.set('geolocationOptions', a.geolocationOptions);
                            this.set('useTracking', a.useTracking);
                            this.set('setScale', a.setScale);
                            this.set('centerAt', a.centerAt);
                            this.set('timeout', a.timeout);
                            this.set('graphicsLayer', a.graphicsLayer);
                            this.set('clearOnTrackingStop', a.clearOnTrackingStop);
                            this.watch('theme', this._updateThemeWatch);
                            this.watch('visible', this._visible);
                            this.watch('tracking', this._locate);
                            this.watch(
                                'useTracking',
                                b.hitch(this, function() {
                                    this.get('tracking') &&
                                        !this.get('useTracking') &&
                                        this._stopTracking();
                                    this._setTitle();
                                })
                            );
                            this._css = {
                                container: 'locateContainer',
                                locate: 'zoomLocateButton',
                                loading: 'loading',
                                tracking: 'tracking',
                            };
                        },
                        postCreate: function() {
                            this.inherited(arguments);
                            this.own(l(this._locateNode, k, b.hitch(this, this.locate)));
                        },
                        startup: function() {
                            this.inherited(arguments);
                            this.get('map') || this.set('visible', !1);
                            if (this.get('map').loaded) this._init();
                            else
                                l.once(
                                    this.get('map'),
                                    'load',
                                    b.hitch(this, function() {
                                        this._init();
                                    })
                                );
                        },
                        destroy: function() {
                            this.clear();
                            this._graphicsEvent && this._graphicsEvent.remove();
                            this._removeWatchPosition();
                            this.inherited(arguments);
                        },
                        clear: function() {
                            var a = this.get('highlightGraphic'),
                                b = this.get('graphicsLayer');
                            a &&
                                (b ?
                                    b.remove(a) :
                                    this.get('map').graphics.remove(a), this.set(
                                        'highlightGraphic',
                                        null
                                    ));
                        },
                        locate: function() {
                            this.get('useTracking') &&
                                this.set('tracking', !this.get('tracking'));
                            return this._locate();
                        },
                        show: function() {
                            this.set('visible', !0);
                        },
                        hide: function() {
                            this.set('visible', !1);
                        },
                        _setTitle: function() {
                            this.get('useTracking') ?
                                this.get('tracking') ?
                                q.set(
                                    this._locateNode,
                                    'title',
                                    this._i18n.widgets.locateButton.locate.stopTracking
                                ) :
                                q.set(
                                    this._locateNode,
                                    'title',
                                    this._i18n.widgets.locateButton.locate.tracking
                                ) :
                                q.set(
                                    this._locateNode,
                                    'title',
                                    this._i18n.widgets.locateButton.locate.title
                                );
                        },
                        _removeWatchPosition: function() {
                            this.get('watchId') &&
                                (navigator.geolocation.clearWatch(
                                    this.get('watchId')
                                ), this.set('watchId', null));
                            this._removePrivateVars();
                        },
                        _stopTracking: function() {
                            u.remove(this._locateNode, this._css.tracking);
                            this._removeWatchPosition();
                            this.get('clearOnTrackingStop') && this.clear();
                            this._hideLoading();
                        },
                        _positionToObject: function(a) {
                            return a ?
                                { coords: b.mixin({}, a.coords), timestamp: a.timestamp } :
                                {};
                        },
                        _startTracking: function() {
                            u.add(this._locateNode, this._css.tracking);
                            this._removeWatchPosition();
                            var a = navigator.geolocation.watchPosition(
                                b.hitch(this, function(a) {
                                    a = this._positionToObject(a);
                                    this._setPosition(a).then(
                                        b.hitch(this, function(a) {
                                            this._locateEvent(a);
                                        }),
                                        b.hitch(this, function(a) {
                                            a ||
                                                (a = Error(
                                                    'LocateButton::Error setting the position.'
                                                ));
                                            this._locateError(a);
                                        })
                                    );
                                }),
                                b.hitch(this, function(a) {
                                    this.set('tracking', !1);
                                    a ||
                                        (a = Error(
                                            'LocateButton::Could not get tracking position.'
                                        ));
                                    this._locateError(a);
                                }),
                                this.get('geolocationOptions')
                            );
                            this.set('watchId', a);
                        },
                        _removePrivateVars: function() {
                            this._scale = this._position = this._graphic = null;
                        },
                        _getCurrentPosition: function() {
                            var a = new m();
                            this._removePrivateVars();
                            var c = setTimeout(
                                b.hitch(this, function() {
                                    clearTimeout(c);
                                    a.reject(
                                        Error('LocateButton::time expired for getting location.')
                                    );
                                }),
                                this.get('timeout')
                            );
                            navigator.geolocation.getCurrentPosition(
                                b.hitch(this, function(d) {
                                    d = this._positionToObject(d);
                                    clearTimeout(c);
                                    this._setPosition(d).then(
                                        b.hitch(this, function(b) {
                                            a.resolve(b);
                                        }),
                                        b.hitch(this, function(b) {
                                            b ||
                                                (b = Error(
                                                    'LocateButton::Error setting map position.'
                                                ));
                                            a.reject(b);
                                        })
                                    );
                                }),
                                b.hitch(this, function(b) {
                                    b ||
                                        (b = Error(
                                            'LocateButton::Could not get current position.'
                                        ));
                                    a.reject(b);
                                }),
                                this.get('geolocationOptions')
                            );
                            return a.promise;
                        },
                        _locate: function() {
                            var a = new m();
                            this._showLoading();
                            if (navigator.geolocation)
                                this.get('useTracking') ?
                                this.get('tracking') ?
                                (this._startTracking(), a.resolve({ tracking: !0 })) :
                                (this._stopTracking(), a.resolve({ tracking: !1 })) :
                                this._getCurrentPosition().then(
                                    b.hitch(this, function(b) {
                                        this._locateEvent(b);
                                        a.resolve(b);
                                    }),
                                    b.hitch(this, function(b) {
                                        b ||
                                            (b = Error(
                                                'LocateButton::Could not get current position.'
                                            ));
                                        this._locateError(b);
                                        a.reject(b);
                                    })
                                );
                            else {
                                var c = Error('LocateButton::geolocation unsupported');
                                this._locateError(c);
                                a.reject(c);
                            }
                            this._setTitle();
                            return a.promise;
                        },
                        _projectPoint: function(a) {
                            var c = new m(),
                                e = this.get('map').spatialReference,
                                f = e.wkid;
                            e.isWebMercator() ?
                                ((a = v.geographicToWebMercator(a)), c.resolve(a)) :
                                d.defaults.geometryService && 4326 !== f ?
                                ((f = new w()), (f.geometries = [
                                        a,
                                    ]), (f.outSR = e), d.defaults.geometryService
                                    .project(f)
                                    .then(
                                        b.hitch(this, function(a) {
                                            a && a.length ?
                                                c.resolve(a[0]) :
                                                c.reject(
                                                    Error(
                                                        'LocateButton::Point was not projected.'
                                                    )
                                                );
                                        }),
                                        function(a) {
                                            a ||
                                                (a = Error(
                                                    'LocateButton::please specify a geometry service on esri/config to project.'
                                                ));
                                            c.reject(a);
                                        }
                                    )) :
                                c.resolve(a);
                            return c.promise;
                        },
                        _getScale: function(a) {
                            var b = this.get('scale');
                            return a && a.coords ? b || a.coords.accuracy || 5e4 : b || 5e4;
                        },
                        _createPoint: function(a) {
                            var b;
                            a &&
                                a.coords &&
                                (b = new C(
                                    [a.coords.longitude, a.coords.latitude],
                                    new z({ wkid: 4326 })
                                ));
                            return b;
                        },
                        _setPosition: function(a) {
                            var c = new m(),
                                d, e;
                            this._removePrivateVars();
                            if ((this._position = a) && a.coords) {
                                if ((d = this._createPoint(a)))
                                    this._graphic = e = this._createGraphic(d, a);
                                var f = this._getScale(a);
                                this._scale = f;
                                d
                                    ?
                                    this._projectPoint(d).then(
                                        b.hitch(this, function(d) {
                                            this._graphic = e = this._createGraphic(d, a);
                                            var h = { graphic: e, scale: f, position: a };
                                            this.get('setScale') && this.get('map').setScale(f);
                                            this.get('centerAt') ?
                                                this.get('map').centerAt(d).then(
                                                    b.hitch(this, function() {
                                                        c.resolve(h);
                                                    }),
                                                    b.hitch(this, function(a) {
                                                        a ||
                                                            (a = Error(
                                                                'LocateButton::Could not center map.'
                                                            ));
                                                        c.reject(a);
                                                    })
                                                ) :
                                                c.resolve(h);
                                        }),
                                        b.hitch(this, function(a) {
                                            a ||
                                                (a = Error('LocateButton::Error projecting point.'));
                                            c.reject(a);
                                        })
                                    ) :
                                    ((d = Error('LocateButton::Invalid point')), c.reject(d));
                            } else
                                (d = Error('LocateButton::Invalid position')), c.reject(d);
                            return c.promise;
                        },
                        _createGraphic: function(a, b) {
                            var c;
                            a &&
                                ((b = { position: b }), (c = new y(
                                    a,
                                    this.get('symbol'),
                                    b,
                                    this.get('infoTemplate')
                                )));
                            return c;
                        },
                        _locateEvent: function(a) {
                            if (a.graphic) {
                                var b = this.get('highlightGraphic'),
                                    c = this.get('graphicsLayer');
                                b
                                    ?
                                    (b.setGeometry(a.graphic.geometry), b.setAttributes(
                                        a.graphic.attributes
                                    ), b.setInfoTemplate(a.graphic.infoTemplate), b.setSymbol(
                                        a.graphic.symbol
                                    )) :
                                    ((b = a.graphic), this.get('highlightLocation') &&
                                        (c ? c.add(b) : this.get('map').graphics.add(b)));
                                this.set('highlightGraphic', b);
                            }
                            this._hideLoading();
                            this.emit('locate', a);
                        },
                        _locateError: function(a) {
                            a = {
                                graphic: this._graphic,
                                scale: this._scale,
                                position: this._position,
                                error: a,
                            };
                            this._hideLoading();
                            this.emit('locate', a);
                        },
                        _showLoading: function() {
                            this.get('useTracking') ||
                                u.add(this._locateNode, this._css.loading);
                        },
                        _hideLoading: function() {
                            this.get('useTracking') ||
                                u.remove(this._locateNode, this._css.loading);
                        },
                        _init: function() {
                            this._visible();
                            this._setTitle();
                            this.get('tracking') &&
                                this.get('useTracking') &&
                                this._locate();
                            this.set('loaded', !0);
                            this.emit('load', {});
                        },
                        _updateThemeWatch: function(a, b, c) {
                            u.remove(this.domNode, b);
                            u.add(this.domNode, c);
                        },
                        _visible: function() {
                            this.get('visible') ?
                                t.set(this.domNode, 'display', 'block') :
                                t.set(this.domNode, 'display', 'none');
                        },
                    });
                    b.setObject('dijit.LocateButton', c, h);
                    return c;
                }
            );
        },
        'esri/layers/graphics': function() {
            define(['./GraphicsLayer', '../graphic', '../renderer'], function() {
                return {};
            });
        },
        'esri/renderer': function() {
            define(
                './renderers/Renderer ./renderers/SimpleRenderer ./renderers/UniqueValueRenderer ./renderers/ClassBreaksRenderer ./renderers/TemporalRenderer ./renderers/SymbolAger ./renderers/TimeClassBreaksAger ./renderers/TimeRampAger ./renderers/StretchRenderer ./renderers/jsonUtils'.split(
                    ' '
                ),
                function(c, g, f, b, e, h, d, a, k, n) {
                    return {
                        Renderer: c,
                        SimpleRenderer: g,
                        UniqueValueRenderer: f,
                        ClassBreaksRenderer: b,
                        TemporalRenderer: e,
                        SymbolAger: h,
                        TimeClassBreaksAger: d,
                        TimeRampAger: a,
                        StretchRenderer: k,
                        jsonUtils: n,
                    };
                }
            );
        },
        'esri/layers/agstiled': function() {
            define(['./agscommon', './ArcGISTiledMapServiceLayer'], function() {
                return {};
            });
        },
        'esri/layers/agsdynamic': function() {
            define(
                ['./agscommon', './ArcGISDynamicMapServiceLayer', '../_time'],
                function() {
                    return {};
                }
            );
        },
        'esri/_time': function() {
            define(['./TimeExtent'], function() {
                return {};
            });
        },
        'esri/layers/agsimageservice': function() {
            define(
                './agscommon ./ArcGISImageServiceLayer ./ImageServiceParameters ./MosaicRule ./RasterFunction ../utils'.split(
                    ' '
                ),
                function() {
                    return {};
                }
            );
        },
        'esri/layers/KMLLayer': function() {
            define(
                'dojo/_base/kernel dojo/_base/declare dojo/_base/connect dojo/_base/lang dojo/_base/array dojo/_base/json dojo/_base/sniff dojo/io-query dojo/dom-construct dojo/dom-style ../kernel ../config ../lang ../request ../urlUtils ../SpatialReference ../geometry/webMercatorUtils ../dijit/PopupTemplate ./layer ./KMLFolder ./KMLGroundOverlay ./MapImageLayer ./FeatureLayer'.split(
                    ' '
                ),
                function(
                    c,
                    g,
                    f,
                    b,
                    e,
                    h,
                    d,
                    a,
                    k,
                    n,
                    l,
                    m,
                    p,
                    r,
                    u,
                    t,
                    q,
                    v,
                    C,
                    z,
                    y,
                    x,
                    w
                ) {
                    var A = g([C], {
                        declaredClass: 'esri.layers.KMLLayer',
                        serviceUrl: u.getProtocolForWebResource() +
                            '//utility.arcgis.com/sharing/kml',
                        constructor: function(a, c) {
                            this._url = u.urlToObject((this.url = a));
                            this._outSR = (c && c.outSR) || new t({ wkid: 4326 });
                            this._options = b.mixin({}, c);
                            m.defaults.kmlService &&
                                (this.serviceUrl = m.defaults.kmlService);
                            if ((a = this.linkInfo = c && c.linkInfo))
                                (this.visible = !!a.visibility), (this._waitingForMap = !!a.viewFormat);
                            (!a || (a && a.visibility && !this._waitingForMap)) &&
                            this._parseKml();
                            this.refresh = b.hitch(this, this.refresh);
                            this.registerConnectEvents('esri.layers.KMLLayer', !0);
                        },
                        getFeature: function(a) {
                            if (a) {
                                var c = a.type,
                                    d = a.id,
                                    f;
                                switch (c) {
                                    case 'esriGeometryPoint':
                                    case 'esriGeometryPolyline':
                                    case 'esriGeometryPolygon':
                                        (a = this['_' + c]) &&
                                        (f = b.getObject('_mode._featureMap.' + d, !1, a));
                                        break;
                                    case 'GroundOverlay':
                                        if ((a = this._groundLyr)) {
                                            var h = a.getImages(),
                                                c = h.length;
                                            for (a = 0; a < c; a++)
                                                if (h[a].id === d) {
                                                    f = h[a];
                                                    break;
                                                }
                                        }
                                        break;
                                    case 'NetworkLink':
                                        e.some(this._links, function(a) {
                                            return a.linkInfo && a.linkInfo.id === d ?
                                                ((f = a), !0) :
                                                !1;
                                        });
                                        break;
                                    case 'Folder':
                                        for (
                                            (c = (h = this.folders) ? h.length : 0), (a = 0); a < c; a++
                                        )
                                            if (h[a].id === d) {
                                                f = h[a];
                                                break;
                                            }
                                }
                                return f;
                            }
                        },
                        getLayers: function() {
                            var a = [];
                            this._groundLyr && a.push(this._groundLyr);
                            this._fLayers && (a = a.concat(this._fLayers));
                            this._links &&
                                e.forEach(this._links, function(b) {
                                    b.declaredClass && a.push(b);
                                });
                            return a;
                        },
                        setFolderVisibility: function(a, b) {
                            a &&
                                (this._fireUpdateStart(), (a.visible = b) &&
                                    (b = this._areLocalAncestorsVisible(a)), this._setState(
                                        a,
                                        b
                                    ), this._fireUpdateEnd());
                        },
                        _eventMap: { 'network-link-error': ['error'] },
                        onRefresh: function() {},
                        onOpacityChange: function() {},
                        onNetworkLinkError: function() {},
                        _parseKml: function(a) {
                            var c = this;
                            this._fireUpdateStart();
                            this._io = r({
                                url: this.serviceUrl,
                                content: {
                                    url: this._url.path + this._getQueryParameters(a),
                                    model: 'simple',
                                    folders: '',
                                    refresh: this.loaded ? !0 : void 0,
                                    outSR: h.toJson(this._outSR.toJson()),
                                },
                                callbackParamName: 'callback',
                                load: function(a) {
                                    c._io = null;
                                    c._initLayer(a);
                                },
                                error: function(a) {
                                    c._io = null;
                                    a = b.mixin(Error(), a);
                                    a.message = 'Unable to load KML: ' + (a.message || '');
                                    c._fireUpdateEnd(a);
                                    c._errorHandler(a);
                                },
                            });
                        },
                        _initLayer: function(a) {
                            var c;
                            this.loaded &&
                                ((c = []), e.forEach(this.folders, function(a) {
                                    a.visible && c.push(a.id);
                                }), (this._options.minScale = this.minScale), (this._options.maxScale = this.maxScale), (this._options.opacity = this.opacity), this._removeInternalLayers());
                            this.name = a.name;
                            this.description = a.description;
                            this.snippet = a.snippet;
                            this.visibility = a.visibility;
                            this.featureInfos = a.featureInfos;
                            var d, f, h = (this.folders = a.folders),
                                g = [],
                                k;
                            if (h)
                                for ((f = h.length), (d = 0); d < f; d++)
                                    (k = h[d] = new z(h[d])), -1 === k.parentFolderId &&
                                    g.push(k);
                            var h = (this._links = a.networkLinks),
                                l;
                            f = h ? h.length : 0;
                            for (d = 0; d < f; d++)
                                (h[d].viewRefreshMode &&
                                    -1 !==
                                    h[d].viewRefreshMode.toLowerCase().indexOf('onregion')) ||
                                ((l = b.mixin({}, this._options)), (l.linkInfo =
                                    h[d]), l.id && (l.id = l.id + '_' + d), (k = h[d] = new A(
                                    h[d].href,
                                    l
                                )), (k._parentLayer = this), (k._parentFolderId = this._getLinkParentId(
                                    k.linkInfo.id
                                )), (k._linkErrorHandle = k.on(
                                    'error,network-link-error',
                                    b.hitch(k, function(a) {
                                        this._parentLayer.onNetworkLinkError(a.error);
                                    })
                                )));
                            if ((h = a.groundOverlays) && 0 < h.length)
                                for (
                                    (l = b.mixin({}, this._options)), l.id &&
                                    (l.id += '_mapImage'), (k = this._groundLyr = new x(
                                        l
                                    )), (f = h.length), (d = 0); d < f; d++
                                )
                                    k.addImage(new y(h[d]));
                            (a = b.getObject('featureCollection.layers', !1, a)) &&
                            0 < a.length &&
                                ((this._fLayers = []), e.forEach(
                                    a,
                                    function(a, c) {
                                        var d = b.getObject('featureSet.features', !1, a);
                                        d &&
                                            0 < d.length &&
                                            ((l = b.mixin({
                                                        outFields: ['*'],
                                                        infoTemplate: a.popupInfo ?
                                                            new v(a.popupInfo) :
                                                            null,
                                                        editable: !1,
                                                    },
                                                    this._options
                                                )), l.id &&
                                                (l.id =
                                                    l.id +
                                                    '_' +
                                                    c), (l.webgl = !1), (a.layerDefinition.capabilities =
                                                    'Query,Data'), (a = new w(a, l)), a.geometryType &&
                                                (this['_' + a.geometryType] = a), this._fLayers.push(
                                                    a
                                                ));
                                    },
                                    this
                                ), 0 === this._fLayers.length && delete this._fLayers);
                            if (!this.loaded)
                                for ((f = g.length), (d = 0); d < f; d++)
                                    (k = g[d]), this._setState(k, k.visible);
                            this._fireUpdateEnd();
                            this.loaded ?
                                (this._addInternalLayers(), e.forEach(
                                    this.folders,
                                    function(a) {
                                        -1 < e.indexOf(c, a.id) ?
                                            this.setFolderVisibility(a, !0) :
                                            this.setFolderVisibility(a, !1);
                                    },
                                    this
                                ), this.onRefresh()) :
                                ((this.loaded = !0), this.onLoad(this));
                        },
                        _addInternalLayers: function() {
                            var a = this._map;
                            this._fireUpdateStart();
                            this._links &&
                                e.forEach(this._links, function(b) {
                                    b.declaredClass &&
                                        (a.addLayer(b), b._waitingForMap &&
                                            ((b._waitingForMap = null), b.visible ?
                                                b._parseKml(a) :
                                                (b._wMap = a)));
                                });
                            var b = a.spatialReference,
                                c = this._outSR,
                                d;
                            if (!b.equals(c))
                                if (b.isWebMercator() && 4326 === c.wkid)
                                    d = q.geographicToWebMercator;
                                else if (c.isWebMercator() && 4326 === b.wkid)
                                d = q.webMercatorToGeographic;
                            else return;
                            this._groundLyr &&
                                (d &&
                                    e.forEach(this._groundLyr.getImages(), function(a) {
                                        a.extent = d(a.extent);
                                    }), a.addLayer(this._groundLyr));
                            (b = this._fLayers) &&
                            0 < b.length &&
                                e.forEach(b, function(b) {
                                    if (d) {
                                        var c = b.graphics,
                                            e, f, h = c ? c.length : 0;
                                        for (e = 0; e < h; e++)
                                            (f = c[e].geometry) && c[e].setGeometry(d(f));
                                    }
                                    a.addLayer(b);
                                });
                            this.onVisibilityChange(this.visible);
                        },
                        _removeInternalLayers: function() {
                            var a = this._map;
                            this._links &&
                                e.forEach(this._links, function(a) {
                                    a.declaredClass && a._io && a._io.cancel();
                                    a._linkErrorHandle &&
                                        (a._linkErrorHandle.remove(), (a._linkErrorHandle = null));
                                });
                            a && e.forEach(this.getLayers(), a.removeLayer, a);
                        },
                        _setState: function(a, b) {
                            a = a.featureInfos;
                            var c, d, e, f = a ? a.length : 0,
                                h = b ? 'show' : 'hide';
                            for (e = 0; e < f; e++)
                                if (((c = a[e]), (d = this.getFeature(c))))
                                    if ('Folder' === c.type) this._setState(d, b && d.visible);
                                    else if ('NetworkLink' === c.type)
                                this._setInternalVisibility(d, b);
                            else d[h]();
                        },
                        _areLocalAncestorsVisible: function(a) {
                            var b = a.parentFolderId;
                            for (a = a.visible; a && -1 !== b;)
                                (b = this.getFeature({ type: 'Folder', id: b })), (a =
                                    a && b.visible), (b = b.parentFolderId);
                            return a;
                        },
                        _setInternalVisibility: function(a, b) {
                            var c = a._parentLayer,
                                d = a._parentFolderId;
                            for (b = b && a.visible; b && c;)
                                (b = b && c.visible), -1 < d &&
                                (b =
                                    b &&
                                    c._areLocalAncestorsVisible(
                                        c.getFeature({
                                            type: 'Folder',
                                            id: d,
                                        })
                                    )), (d = c._parentFolderId), (c = c._parentLayer);
                            this._setIntState(a, b);
                        },
                        _setIntState: function(a, b) {
                            a &&
                                e.forEach(a.getLayers(), function(c) {
                                    c.linkInfo ?
                                        a._setIntState(
                                            c,
                                            b &&
                                            c.visible &&
                                            a._areLocalAncestorsVisible(
                                                a.getFeature({
                                                    type: 'Folder',
                                                    id: c._parentFolderId,
                                                })
                                            )
                                        ) :
                                        c.setVisibility(b);
                                });
                        },
                        _getLinkParentId: function(a) {
                            var b = -1;
                            this.folders &&
                                e.some(this.folders, function(c) {
                                    return c.networkLinkIds &&
                                        -1 !== e.indexOf(c.networkLinkIds, a) ?
                                        ((b = c.id), !0) :
                                        !1;
                                });
                            return b;
                        },
                        _checkAutoRefresh: function() {
                            var a = this.linkInfo;
                            if (a)
                                if (this.visible) {
                                    if (this.loaded && this._map) {
                                        var b = a.refreshMode,
                                            c = a.refreshInterval,
                                            d = a.viewRefreshMode,
                                            a = a.viewRefreshTime;
                                        b &&
                                            -1 !== b.toLowerCase().indexOf('oninterval') &&
                                            0 < c &&
                                            (this._stopAutoRefresh(), (this._timeoutHandle = setTimeout(
                                                this.refresh,
                                                1e3 * c
                                            )));
                                        d &&
                                            -1 !== d.toLowerCase().indexOf('onstop') &&
                                            0 < a &&
                                            !this._extChgHandle &&
                                            (this._extChgHandle = f.connect(
                                                this._map,
                                                'onExtentChange',
                                                this,
                                                this._extentChanged
                                            ));
                                    }
                                } else
                                    this._stopAutoRefresh(), f.disconnect(
                                        this._extChgHandle
                                    ), delete this._extChgHandle;
                        },
                        _stopAutoRefresh: function() {
                            clearTimeout(this._timeoutHandle);
                            this._timeoutHandle = null;
                        },
                        _getQueryParameters: function(d) {
                            d = d || this._map;
                            var e = {},
                                f = this.linkInfo,
                                h = d && d.extent,
                                g;
                            this._url.query &&
                                (b.mixin(e, this._url.query), (g = !!this._url.query.token));
                            l.id &&
                                !g &&
                                (g = l.id.findCredential(this._url.path)) &&
                                (e.token = g.token);
                            if (f) {
                                g = f.viewFormat;
                                var k = f.httpQuery,
                                    f = f.viewBoundScale;
                                if (h && g) {
                                    var m = h,
                                        n = h,
                                        t = h.spatialReference;
                                    t &&
                                        (t.isWebMercator() ?
                                            (m = q.webMercatorToGeographic(h)) :
                                            4326 === t.wkid && (n = q.geographicToWebMercator(h)));
                                    h = m.getCenter();
                                    n = Math.max(n.getWidth(), n.getHeight());
                                    f && (m = m.expand(f));
                                    g = g
                                        .replace(/\[bboxWest\]/gi, m.xmin)
                                        .replace(/\[bboxEast\]/gi, m.xmax)
                                        .replace(/\[bboxSouth\]/gi, m.ymin)
                                        .replace(/\[bboxNorth\]/gi, m.ymax)
                                        .replace(/\[lookatLon\]/gi, h.x)
                                        .replace(/\[lookatLat\]/gi, h.y)
                                        .replace(/\[lookatRange\]/gi, n)
                                        .replace(/\[lookatTilt\]/gi, 0)
                                        .replace(/\[lookatHeading\]/gi, 0)
                                        .replace(/\[lookatTerrainLon\]/gi, h.x)
                                        .replace(/\[lookatTerrainLat\]/gi, h.y)
                                        .replace(/\[lookatTerrainAlt\]/gi, 0)
                                        .replace(/\[cameraLon\]/gi, h.x)
                                        .replace(/\[cameraLat\]/gi, h.y)
                                        .replace(/\[cameraAlt\]/gi, n)
                                        .replace(/\[horizFov\]/gi, 60)
                                        .replace(/\[vertFov\]/gi, 60)
                                        .replace(/\[horizPixels\]/gi, d.width)
                                        .replace(/\[vertPixels\]/gi, d.height)
                                        .replace(/\[terrainEnabled\]/gi, 0);
                                    b.mixin(e, a.queryToObject(g));
                                }
                                k &&
                                    ((k = k
                                        .replace(/\[clientVersion\]/gi, l.version)
                                        .replace(/\[kmlVersion\]/gi, 2.2)
                                        .replace(/\[clientName\]/gi, 'ArcGIS API for JavaScript')
                                        .replace(/\[language\]/gi, c.locale)), b.mixin(
                                        e,
                                        a.queryToObject(k)
                                    ));
                            }
                            d = [];
                            for (var r in e)
                                p.isDefined(e[r]) && d.push(r + '\x3d' + e[r]);
                            return (d = d.join('\x26')) ? '?' + d : '';
                        },
                        setScaleRange: function(a, b) {
                            this.inherited(arguments);
                            e.forEach(this.getLayers(), function(c) {
                                c.setScaleRange(a, b);
                            });
                        },
                        setOpacity: function(a) {
                            this.opacity != a &&
                                (e.forEach(this.getLayers(), function(b) {
                                    b.setOpacity(a);
                                }), (this.opacity = a), this.onOpacityChange(a));
                        },
                        _setMap: function(a, b) {
                            this.inherited(arguments);
                            this._map = a;
                            var c = (this._div = k.create('div', null, b));
                            n.set(c, 'position', 'absolute');
                            this._addInternalLayers();
                            this.evaluateSuspension();
                            return c;
                        },
                        _unsetMap: function(a, b) {
                            this._io && this._io.cancel();
                            this._stopAutoRefresh();
                            f.disconnect(this._extChgHandle);
                            delete this._extChgHandle;
                            this._removeInternalLayers();
                            var c = this._div;
                            c && (b.removeChild(c), k.destroy(c));
                            this._wMap = this._div = null;
                            this.inherited(arguments);
                        },
                        onVisibilityChange: function(a) {
                            this.loaded ?
                                (this._fireUpdateStart(), this._setInternalVisibility(
                                    this,
                                    a
                                ), this._checkAutoRefresh(), this._fireUpdateEnd()) :
                                this.linkInfo &&
                                a &&
                                (this._waitingForMap || this._parseKml(this._wMap));
                        },
                        refresh: function() {
                            this.loaded &&
                                this._map &&
                                !this._io &&
                                this.visible &&
                                this._parseKml();
                        },
                        getFeatureCollection: function(a) {
                            var b, c = [];
                            (a = this.getFeature({ type: 'Folder', id: a })) &&
                            (b = e.map(
                                a.featureInfos,
                                function(a) {
                                    if (
                                        'esriGeometryPoint' === a.type ||
                                        'esriGeometryPolyline' === a.type ||
                                        'esriGeometryPolygon' === a.type
                                    )
                                        return a.id;
                                },
                                this
                            )) &&
                            0 < b.length &&
                                e.forEach(
                                    this._fLayers,
                                    function(a) {
                                        var d, f;
                                        d = a.toJson();
                                        d.featureSet.features &&
                                            0 < d.featureSet.features.length &&
                                            (f = e.filter(
                                                d.featureSet.features,
                                                function(c) {
                                                    if (-1 !== e.indexOf(b, c.attributes[a.objectIdField]))
                                                        return c;
                                                },
                                                this
                                            ));
                                        f &&
                                            0 < f.length &&
                                            ((d.featureSet.features = f), c.push(d));
                                    },
                                    this
                                );
                            return c;
                        },
                        getFeatureCount: function(a) {
                            a = this.getFeature({ type: 'Folder', id: a });
                            var b = { points: 0, polylines: 0, polygons: 0 };
                            a &&
                                e.forEach(a.featureInfos, function(a) {
                                    'esriGeometryPoint' === a.type && (b.points += 1);
                                    'esriGeometryPolyline' === a.type && (b.polylines += 1);
                                    'esriGeometryPolygon' === a.type && (b.polygons += 1);
                                });
                            return b;
                        },
                        _extentChanged: function() {
                            this._stopAutoRefresh();
                            this._timeoutHandle = setTimeout(
                                this.refresh,
                                1e3 * this.linkInfo.viewRefreshTime
                            );
                        },
                    });
                    b.setObject('layers.KMLLayer', A, l);
                    return A;
                }
            );
        },
        'esri/layers/KMLFolder': function() {
            define(
                [
                    'dojo/_base/declare',
                    'dojo/_base/lang',
                    'dojo/has',
                    '../kernel',
                    '../lang',
                ],
                function(c, g, f, b, e) {
                    c = c(null, {
                        declaredClass: 'esri.layers.KMLFolder',
                        constructor: function(b) {
                            g.mixin(this, b);
                            e.isDefined(this.visibility) &&
                                (this.visible = !!this.visibility);
                        },
                    });
                    g.setObject('layers.KMLFolder', c, b);
                    return c;
                }
            );
        },
        'esri/layers/KMLGroundOverlay': function() {
            define(
                'dojo/_base/declare dojo/_base/lang dojo/has ../kernel ../lang ./MapImage'.split(
                    ' '
                ),
                function(c, g, f, b, e, h) {
                    c = c([h], {
                        declaredClass: 'esri.layers.KMLGroundOverlay',
                        constructor: function(b) {
                            e.isDefined(this.visibility) &&
                                (this.visible = !!this.visibility);
                        },
                    });
                    g.setObject('layers.KMLGroundOverlay', c, b);
                    return c;
                }
            );
        },
        'esri/layers/osm': function() {
            define(['./OpenStreetMapLayer'], function() {
                return {};
            });
        },
        'esri/SnappingManager': function() {
            define(
                'dojo/_base/declare dojo/_base/connect dojo/_base/lang dojo/_base/array dojo/_base/Color dojo/_base/Deferred dojo/has dojo/keys ./kernel ./graphic ./geometry/ScreenPoint ./geometry/Extent ./symbols/SimpleMarkerSymbol ./symbols/SimpleLineSymbol ./tasks/query'.split(
                    ' '
                ),
                function(c, g, f, b, e, h, d, a, k, n, l, m, p, r, u) {
                    c = c(null, {
                        declaredClass: 'esri.SnappingManager',
                        constructor: function(b) {
                            b = b || {};
                            this.map = b.map;
                            this.tolerance = b.tolerance || 15;
                            this.layerInfos = [];
                            if (b.layerInfos) this.layerInfos = b.layerInfos;
                            else {
                                var c;
                                for (c = 0; c < this.map.graphicsLayerIds.length; c++) {
                                    var h = this.map.getLayer(this.map.graphicsLayerIds[c]);
                                    this.layerInfos.push({ layer: h });
                                }
                                if (this.map.loaded)
                                    this.layerInfos.push({ layer: this.map.graphics });
                                else
                                    var k = g.connect(this.map, 'onLoad', this, function(a) {
                                        g.disconnect(k);
                                        k = null;
                                        this.layerInfos.push({ layer: this.map.graphics });
                                        this.setLayerInfos(this.layerInfos);
                                    });
                            }
                            this.snapPointSymbol = b.snapPointSymbol ?
                                b.snapPointSymbol :
                                new p(
                                    p.STYLE_CROSS,
                                    15,
                                    new r(r.STYLE_SOLID, new e([0, 255, 255]), 1),
                                    new e([0, 255, 0, 0])
                                );
                            this.alwaysSnap = b.alwaysSnap ? b.alwaysSnap : !1;
                            this.snapKey = b.snapKey ?
                                b.snapKey :
                                d('mac') ? a.META : a.CTRL;
                            this._SelectionLyrQuery = new u();
                            this._SelectionLyrQuery.spatialRelationship =
                                u.SPATIAL_REL_INTERSECTS;
                            this._snappingGraphic = new n();
                            this.setLayerInfos(this.layerInfos);
                            this._currentGraphicOption = {
                                snapToPoint: !0,
                                snapToVertex: !0,
                                snapToEdge: !0,
                            };
                            this._snappingCallback = f.hitch(this, this._snappingCallback);
                        },
                        getSnappingPoint: function(a) {
                            var c = this.layers,
                                d = this.tolerance,
                                e = this.map,
                                g = this.layerOptions,
                                k = e.toMap(a.offset(-d, d)),
                                d = e.toMap(a.offset(d, -d)),
                                k = new m(k.x, k.y, d.x, d.y, e.spatialReference),
                                l = new u();
                            l.geometry = k;
                            l.spatialRelationship = u.SPATIAL_REL_INTERSECTS;
                            var n = [],
                                p = [],
                                r,
                                t = this._extractPointsAndLines,
                                D = new h(),
                                H = 0,
                                G,
                                d = k.xmin,
                                F = k.xmax;
                            b.forEach(c, function(a, b) {
                                a.visible &&
                                    a.loaded &&
                                    'esri.layers.FeatureLayer' === a.declaredClass &&
                                    a.mode !== a.constructor.MODE_SELECTION &&
                                    H++;
                            });
                            e.spatialReference._isWrappable() &&
                                ((d = m.prototype._normalizeX(
                                    k.xmin,
                                    e.spatialReference._getInfo()
                                ).x), (F = m.prototype._normalizeX(
                                    k.xmax,
                                    e.spatialReference._getInfo()
                                ).x));
                            var K = new m(d, k.ymin, F, k.ymax, e.spatialReference);
                            b.forEach(c, function(a, c) {
                                if (
                                    'esri.layers.GraphicsLayer' === a.declaredClass &&
                                    a.visible
                                ) {
                                    var d = [];
                                    b.forEach(a.graphics, function(a) {
                                        a && a.visible && K.intersects(a.geometry) && d.push(a);
                                    });
                                    a = t(d, g[c]);
                                    n = n.concat(a[0]);
                                    p = p.concat(a[1]);
                                }
                            });
                            var L = f.hitch(this, function(b) {
                                    H--;
                                    b instanceof Error ||
                                        ((b = t(b.features, g[G])), (n = n.concat(
                                            b[0]
                                        )), (p = p.concat(b[1])));
                                    H || ((r = this._getSnappingPoint(n, p, a)), D.callback(r));
                                }),
                                Q = !1;
                            b.forEach(c, function(a, b) {
                                a.visible &&
                                    a.loaded &&
                                    ((G = b), 'esri.layers.FeatureLayer' === a.declaredClass &&
                                        a.mode !== a.constructor.MODE_SELECTION &&
                                        ((Q = !0), a.queryFeatures(l, L, L)));
                            });
                            Q || ((r = this._getSnappingPoint(n, p, a)), D.callback(r));
                            return D;
                        },
                        setLayerInfos: function(a) {
                            this.layers = [];
                            this.layerOptions = [];
                            var c;
                            for (c = 0; c < a.length; c++)
                                this.layers.push(a[c].layer), this.layerOptions.push({
                                    snapToPoint: !0,
                                    snapToVertex: !0,
                                    snapToEdge: !0,
                                }), !1 === a[c].snapToPoint &&
                                (this.layerOptions[c].snapToPoint = a[c].snapToPoint), !1 ===
                                a[c].snapToVertex &&
                                (this.layerOptions[c].snapToVertex =
                                    a[c].snapToVertex), !1 === a[c].snapToEdge &&
                                (this.layerOptions[c].snapToEdge = a[c].snapToEdge);
                            this._featurePtsFromSelectionLayer = [];
                            this._featureLinesFromSelectionLayer = [];
                            this._selectionLayers = [];
                            this._selectionLayerOptions = [];
                            b.forEach(
                                this.layers,
                                function(a, b) {
                                    'esri.layers.FeatureLayer' === a.declaredClass &&
                                        a.mode === a.constructor.MODE_SELECTION &&
                                        (this._selectionLayers.push(
                                            a
                                        ), this._selectionLayerOptions.push(this.layerOptions[b]));
                                },
                                this
                            );
                            this.layerInfos = a;
                        },
                        destroy: function() {
                            g.disconnect(this._onExtentChangeConnect);
                            this._killOffSnapping();
                            this._featurePtsFromSelectionLayer = this._featureLinesFromSelectionLayer = this._currentFeaturePts = this._currentFeatureLines = this.layers = this.map = null;
                        },
                        _startSelectionLayerQuery: function() {
                            g.disconnect(this._onExtentChangeConnect);
                            this._mapExtentChangeHandler(
                                this._selectionLayers,
                                this._selectionLayerOptions,
                                this.map.extent
                            );
                            this._onExtentChangeConnect = g.connect(
                                this.map,
                                'onExtentChange',
                                f.hitch(
                                    this,
                                    '_mapExtentChangeHandler',
                                    this._selectionLayers,
                                    this._selectionLayerOptions
                                )
                            );
                        },
                        _stopSelectionLayerQuery: function() {
                            g.disconnect(this._onExtentChangeConnect);
                        },
                        _mapExtentChangeHandler: function(a, c, d) {
                            this._featurePtsFromSelectionLayer = [];
                            this._featureLinesFromSelectionLayer = [];
                            var e;
                            this._SelectionLyrQuery.geometry = d;
                            var h = f.hitch(this, function(a) {
                                a instanceof Error ||
                                    ((a = this._extractPointsAndLines(
                                        a.features,
                                        c[e]
                                    )), (this._featurePtsFromSelectionLayer = this._featurePtsFromSelectionLayer.concat(
                                        a[0]
                                    )), (this._featureLinesFromSelectionLayer = this._featureLinesFromSelectionLayer.concat(
                                        a[1]
                                    )));
                            });
                            b.forEach(
                                a,
                                function(a, b) {
                                    a.visible &&
                                        a.loaded &&
                                        ((e = b), a.queryFeatures(this._SelectionLyrQuery, h, h));
                                },
                                this
                            );
                        },
                        _extractPointsAndLines: function(a, c) {
                            var d = [],
                                e = [],
                                f, h;
                            b.forEach(a, function(a, b) {
                                if ((!a._graphicsLayer || a.visible) && a.geometry)
                                    if ('point' === a.geometry.type && c.snapToPoint)
                                        d.push(a.geometry);
                                    else if ('polyline' === a.geometry.type)
                                    for (f = 0; f < a.geometry.paths.length; f++) {
                                        e.push('lineStart');
                                        for (h = 0; h < a.geometry.paths[f].length; h++)
                                            (b = a.geometry.getPoint(f, h)), c.snapToVertex &&
                                            d.push(b), c.snapToEdge && e.push(b);
                                        e.push('lineEnd');
                                    }
                                else if ('polygon' === a.geometry.type)
                                    for (f = 0; f < a.geometry.rings.length; f++) {
                                        e.push('lineStart');
                                        for (h = 0; h < a.geometry.rings[f].length; h++)
                                            (b = a.geometry.getPoint(f, h)), c.snapToVertex &&
                                            d.push(b), c.snapToEdge && e.push(b);
                                        e.push('lineEnd');
                                    }
                            });
                            return [d, e];
                        },
                        _getSnappingPoint: function(a, c, d) {
                            var e,
                                f,
                                h = this.tolerance,
                                g = this.map,
                                k = this.map._getFrameWidth();
                            a = a.concat(this._featurePtsFromSelectionLayer);
                            c = c.concat(this._featureLinesFromSelectionLayer);
                            if (this._currentGraphic) {
                                var m = this._extractPointsAndLines(
                                    [this._currentGraphic],
                                    this._currentGraphicOption
                                );
                                a = a.concat(m[0]);
                                c = c.concat(m[1]);
                            }
                            var n, p;
                            b.forEach(a, function(a, b) {
                                a = g.toScreen(a, !0);
                                if (-1 !== k &&
                                    ((a.x %= k), 0 > a.x && (a.x += k), g.width > k)
                                )
                                    for (b = (g.width - k) / 2; a.x < b;)
                                        a.x += k;
                                e = Math.sqrt(
                                    (a.x - d.x) * (a.x - d.x) + (a.y - d.y) * (a.y - d.y)
                                );
                                e <= h && ((h = e), (n = a.x), (p = a.y));
                            });
                            if (n)(c = new l(n, p)), (f = c = g.toMap(c));
                            else {
                                var q, r, h = this.tolerance;
                                for (a = 0; a < c.length; a++)
                                    if ('lineStart' === c[a])
                                        for (m = a + 1; m < c.length; m++) {
                                            if (
                                                'lineEnd' !== c[m + 1] &&
                                                'lineStart' !== c[m + 1] &&
                                                'lineEnd' !== c[m] &&
                                                'lineStart' !== c[m]
                                            ) {
                                                var t = g.toScreen(c[m], !0),
                                                    u = g.toScreen(c[m + 1], !0),
                                                    v = t.x >= u.x ? t : u,
                                                    L = t.x >= u.x ? u : t; -
                                                1 !== k &&
                                                    ((v.x %= k), 0 > v.x && (v.x += k), (L.x %= k), 0 >
                                                        L.x && (L.x += k), L.x > v.x && (L.x -= k));
                                                var t = v.x,
                                                    v = v.y,
                                                    u = L.x,
                                                    L = L.y,
                                                    Q,
                                                    O,
                                                    P,
                                                    J,
                                                    I,
                                                    N;
                                                t === u ?
                                                    ((Q = t), (O = d.y), (P = J = t), (I = v <= L ?
                                                        v :
                                                        L), (N = v <= L ? L : v)) :
                                                    v === L ?
                                                    ((Q = d.x), (O = v), (P = t <= u ?
                                                        t :
                                                        u), (J = t <= u ? u : t), (I = N = v)) :
                                                    ((O = (L - v) / (u - t)), (P =
                                                        (v * u - t * L) / (u - t)), (Q =
                                                        (P -
                                                            (d.y * L - d.y * v - d.x * t + d.x * u) /
                                                            (L - v)) /
                                                        ((t - u) / (L - v) - O)), (O =
                                                        O * Q + P), (P = t <= u ? t : u), (J = t <= u ?
                                                        u :
                                                        t), (I = v <= L ? v : L), (N = v <= L ?
                                                        L :
                                                        v));
                                                Q >= P && Q <= J && O >= I && O <= N ?
                                                    ((t = Math.sqrt(
                                                        (d.x - Q) * (d.x - Q) + (d.y - O) * (d.y - O)
                                                    )), t <= h && ((h = t), (q = Q), (r = O))) :
                                                    ((Q = Math.sqrt(
                                                            (t - d.x) * (t - d.x) + (v - d.y) * (v - d.y)
                                                        )), (O = Math.sqrt(
                                                            (u - d.x) * (u - d.x) + (L - d.y) * (L - d.y)
                                                        )), Q <= O ?
                                                        ((P = Q), (Q = t), (O = v)) :
                                                        ((P = O), (Q = u), (O = L)), P <= h &&
                                                        ((h = P), (q = Q), (r = O)));
                                            }
                                            if ('lineEnd' === c[m]) {
                                                a = m;
                                                break;
                                            }
                                        }
                                q && ((c = new l(q, r)), (f = c = g.toMap(c)));
                            }
                            return f;
                        },
                        _setGraphic: function(a) {
                            this._currentGraphic = a;
                        },
                        _addSnappingPointGraphic: function() {
                            var a = this.map;
                            this._snappingGraphic.setSymbol(this.snapPointSymbol);
                            a.graphics.add(this._snappingGraphic);
                        },
                        _setUpSnapping: function() {
                            var a = this.map;
                            this._onSnapKeyDown_connect = g.connect(
                                a,
                                'onKeyDown',
                                this,
                                '_onSnapKeyDownHandler'
                            );
                            this._onSnapKeyUp_connect = g.connect(
                                a,
                                'onKeyUp',
                                this,
                                '_onSnapKeyUpHandler'
                            );
                            this._onSnappingMouseMove_connect = g.connect(
                                a,
                                'onMouseMove',
                                this,
                                '_onSnappingMouseMoveHandler'
                            );
                            this._onSnappingMouseDrag_connect = g.connect(
                                a,
                                'onMouseDrag',
                                this,
                                '_onSnappingMouseMoveHandler'
                            );
                            this.alwaysSnap && this._activateSnapping();
                        },
                        _killOffSnapping: function() {
                            g.disconnect(this._onSnapKeyDown_connect);
                            g.disconnect(this._onSnapKeyUp_connect);
                            g.disconnect(this._onSnappingMouseMove_connect);
                            g.disconnect(this._onSnappingMouseDrag_connect);
                            this._deactivateSnapping();
                        },
                        _onSnapKeyDownHandler: function(a) {
                            a.keyCode === this.snapKey &&
                                (g.disconnect(this._onSnapKeyDown_connect), this.alwaysSnap ?
                                    this._deactivateSnapping() :
                                    this._activateSnapping());
                        },
                        _activateSnapping: function() {
                            this._snappingActive = !0;
                            this._addSnappingPointGraphic();
                            this._currentLocation &&
                                this._onSnappingMouseMoveHandler(this._currentLocation);
                        },
                        _onSnapKeyUpHandler: function(a) {
                            a.keyCode === this.snapKey &&
                                ((this._onSnapKeyDown_connect = g.connect(
                                        this.map,
                                        'onKeyDown',
                                        this,
                                        '_onSnapKeyDownHandler'
                                    )), this.alwaysSnap ?
                                    this._activateSnapping() :
                                    this._deactivateSnapping());
                        },
                        _deactivateSnapping: function() {
                            this._snappingActive = !1;
                            this._snappingPoint = null;
                            this.map.graphics.remove(this._snappingGraphic);
                            this._snappingGraphic.setGeometry(null);
                        },
                        _onSnappingMouseMoveHandler: function(a) {
                            this._currentLocation = a;
                            this._snappingPoint = null;
                            this._snappingActive &&
                                (this._snappingGraphic.hide(), this.getSnappingPoint(
                                    a.screenPoint
                                ).addCallback(this._snappingCallback));
                        },
                        _snappingCallback: function(a) {
                            if ((this._snappingPoint = a))
                                this._snappingGraphic.show(), this._snappingGraphic.setGeometry(
                                    a
                                );
                        },
                    });
                    return (k.SnappingManager = c);
                }
            );
        },
        'esri/tasks/geometry': function() {
            define(
                './GeometryService ./TrimExtendParameters ./BufferParameters ./AreasAndLengthsParameters ./LengthsParameters ./RelationParameters ./DensifyParameters ./GeneralizeParameters ./OffsetParameters ./DistanceParameters ./ProjectParameters'.split(
                    ' '
                ),
                function() {
                    return {};
                }
            );
        },
        'esri/tasks/TrimExtendParameters': function() {
            define(
                'dojo/_base/declare dojo/_base/lang dojo/_base/array dojo/_base/json dojo/has ../kernel'.split(
                    ' '
                ),
                function(c, g, f, b, e, h) {
                    c = c(null, {
                        declaredClass: 'esri.tasks.TrimExtendParameters',
                        polylines: null,
                        trimExtendTo: null,
                        extendHow: null,
                        toJson: function() {
                            var c = f.map(this.polylines, function(a) {
                                    return a.toJson();
                                }),
                                a = {};
                            a.polylines = b.toJson(c);
                            a.trimExtendTo = b.toJson(this.trimExtendTo.toJson());
                            a.sr = b.toJson(this.polylines[0].spatialReference.toJson());
                            a.extendHow = this.extendHow || 0;
                            return a;
                        },
                    });
                    g.mixin(c, {
                        DEFAULT_CURVE_EXTENSION: 0,
                        RELOCATE_ENDS: 1,
                        KEEP_END_ATTRIBUTES: 2,
                        NO_END_ATTRIBUTES: 4,
                        NO_EXTEND_AT_FROM: 8,
                        NO_EXTEND_AT_TO: 16,
                    });
                    g.setObject('tasks.TrimExtendParameters', c, h);
                    return c;
                }
            );
        },
        'esri/tasks/BufferParameters': function() {
            define(
                'dojo/_base/declare dojo/_base/lang dojo/_base/array dojo/_base/json dojo/has ../kernel ../geometry/Polygon ../geometry/jsonUtils'.split(
                    ' '
                ),
                function(c, g, f, b, e, h, d, a) {
                    c = c(null, {
                        declaredClass: 'esri.tasks.BufferParameters',
                        geometries: null,
                        outSpatialReference: null,
                        bufferSpatialReference: null,
                        distances: null,
                        unit: null,
                        unionResults: !1,
                        geodesic: !1,
                        toJson: function() {
                            var c = {
                                    unit: this.unit,
                                    unionResults: this.unionResults,
                                    geodesic: this.geodesic,
                                },
                                e = this.distances,
                                h = this.outSpatialReference,
                                g = this.bufferSpatialReference,
                                p = f.map(
                                    this.geometries,
                                    function(a) {
                                        a = 'extent' === a.type ? d.fromExtent(a) : a;
                                        return a.toJson();
                                    },
                                    this
                                ),
                                r = this.geometries;
                            if (r && 0 < r.length) {
                                var u = 'extent' === r[0].type ?
                                    'esriGeometryPolygon' :
                                    a.getJsonType(r[0]);
                                c.geometries = b.toJson({ geometryType: u, geometries: p });
                                c.inSR = r[0].spatialReference.wkid ?
                                    r[0].spatialReference.wkid :
                                    b.toJson(r[0].spatialReference.toJson());
                            }
                            e && (c.distances = e.join(','));
                            h && (c.outSR = h.wkid ? h.wkid : b.toJson(h.toJson()));
                            g && (c.bufferSR = g.wkid ? g.wkid : b.toJson(g.toJson()));
                            return c;
                        },
                    });
                    g.setObject('tasks.BufferParameters', c, h);
                    return c;
                }
            );
        },
        'esri/tasks/RelationParameters': function() {
            define(
                'dojo/_base/declare dojo/_base/lang dojo/_base/array dojo/_base/json dojo/has ../kernel ../geometry/jsonUtils'.split(
                    ' '
                ),
                function(c, g, f, b, e, h, d) {
                    c = c(null, {
                        declaredClass: 'esri.tasks.RelationParameters',
                        geometries1: null,
                        geometries2: null,
                        relation: null,
                        relationParam: null,
                        toJson: function() {
                            var a = f.map(this.geometries1, function(a) {
                                    return a.toJson();
                                }),
                                c = f.map(this.geometries2, function(a) {
                                    return a.toJson();
                                }),
                                e = {},
                                h = this.geometries1;
                            h &&
                                0 < h.length &&
                                ((e.geometries1 = b.toJson({
                                    geometryType: d.getJsonType(h[0]),
                                    geometries: a,
                                })), (a = this.geometries1[0].spatialReference), (e.sr = a.wkid ?
                                    a.wkid :
                                    b.toJson(a.toJson())));
                            (a = this.geometries2) &&
                            0 < a.length &&
                                (e.geometries2 = b.toJson({
                                    geometryType: d.getJsonType(a[0]),
                                    geometries: c,
                                }));
                            this.relation && (e.relation = this.relation);
                            this.relationParam && (e.relationParam = this.relationParam);
                            return e;
                        },
                    });
                    g.mixin(c, {
                        SPATIAL_REL_CROSS: 'esriGeometryRelationCross',
                        SPATIAL_REL_DISJOINT: 'esriGeometryRelationDisjoint',
                        SPATIAL_REL_IN: 'esriGeometryRelationIn',
                        SPATIAL_REL_INTERIORINTERSECTION: 'esriGeometryRelationInteriorIntersection',
                        SPATIAL_REL_INTERSECTION: 'esriGeometryRelationIntersection',
                        SPATIAL_REL_COINCIDENCE: 'esriGeometryRelationLineCoincidence',
                        SPATIAL_REL_LINETOUCH: 'esriGeometryRelationLineTouch',
                        SPATIAL_REL_OVERLAP: 'esriGeometryRelationOverlap',
                        SPATIAL_REL_POINTTOUCH: 'esriGeometryRelationPointTouch',
                        SPATIAL_REL_TOUCH: 'esriGeometryRelationTouch',
                        SPATIAL_REL_WITHIN: 'esriGeometryRelationWithin',
                        SPATIAL_REL_RELATION: 'esriGeometryRelationRelation',
                    });
                    g.setObject('tasks.RelationParameters', c, h);
                    return c;
                }
            );
        },
        'esri/tasks/DensifyParameters': function() {
            define(
                'dojo/_base/declare dojo/_base/lang dojo/_base/array dojo/_base/json dojo/has ../kernel ../geometry/jsonUtils'.split(
                    ' '
                ),
                function(c, g, f, b, e, h, d) {
                    c = c(null, {
                        declaredClass: 'esri.tasks.DensifyParameters',
                        geometries: null,
                        geodesic: null,
                        lengthUnit: null,
                        maxSegmentLength: null,
                        toJson: function() {
                            var a = f.map(this.geometries, function(a) {
                                    return a.toJson();
                                }),
                                c = {};
                            this.geometries &&
                                0 < this.geometries.length &&
                                ((c.geometries = b.toJson({
                                    geometryType: d.getJsonType(this.geometries[0]),
                                    geometries: a,
                                })), (c.sr = b.toJson(
                                    this.geometries[0].spatialReference.toJson()
                                )));
                            this.geodesic && (c.geodesic = this.geodesic);
                            this.lengthUnit && (c.lengthUnit = this.lengthUnit);
                            this.maxSegmentLength &&
                                (c.maxSegmentLength = this.maxSegmentLength);
                            return c;
                        },
                    });
                    g.setObject('tasks.DensifyParameters', c, h);
                    return c;
                }
            );
        },
        'esri/tasks/GeneralizeParameters': function() {
            define(
                'dojo/_base/declare dojo/_base/lang dojo/_base/array dojo/_base/json dojo/has ../kernel ../geometry/jsonUtils'.split(
                    ' '
                ),
                function(c, g, f, b, e, h, d) {
                    c = c(null, {
                        declaredClass: 'esri.tasks.GeneralizeParameters',
                        geometries: null,
                        deviationUnit: null,
                        maxDeviation: null,
                        toJson: function() {
                            var a = f.map(this.geometries, function(a) {
                                    return a.toJson();
                                }),
                                c = {};
                            this.geometries &&
                                0 < this.geometries.length &&
                                ((c.geometries = b.toJson({
                                    geometryType: d.getJsonType(this.geometries[0]),
                                    geometries: a,
                                })), (c.sr = b.toJson(
                                    this.geometries[0].spatialReference.toJson()
                                )));
                            this.deviationUnit && (c.deviationUnit = this.deviationUnit);
                            this.maxDeviation && (c.maxDeviation = this.maxDeviation);
                            return c;
                        },
                    });
                    g.setObject('tasks.GeneralizeParameters', c, h);
                    return c;
                }
            );
        },
        'esri/tasks/OffsetParameters': function() {
            define(
                'dojo/_base/declare dojo/_base/lang dojo/_base/array dojo/_base/json dojo/has ../kernel ../geometry/jsonUtils'.split(
                    ' '
                ),
                function(c, g, f, b, e, h, d) {
                    c = c(null, {
                        declaredClass: 'esri.tasks.OffsetParameters',
                        geometries: null,
                        bevelRatio: null,
                        offsetDistance: null,
                        offsetHow: null,
                        offsetUnit: null,
                        toJson: function() {
                            var a = f.map(this.geometries, function(a) {
                                    return a.toJson();
                                }),
                                c = {};
                            this.geometries &&
                                0 < this.geometries.length &&
                                ((c.geometries = b.toJson({
                                    geometryType: d.getJsonType(this.geometries[0]),
                                    geometries: a,
                                })), (c.sr = b.toJson(
                                    this.geometries[0].spatialReference.toJson()
                                )));
                            this.bevelRatio && (c.bevelRatio = this.bevelRatio);
                            this.offsetDistance && (c.offsetDistance = this.offsetDistance);
                            this.offsetHow && (c.offsetHow = this.offsetHow);
                            this.offsetUnit && (c.offsetUnit = this.offsetUnit);
                            return c;
                        },
                    });
                    g.mixin(c, {
                        OFFSET_BEVELLED: 'esriGeometryOffsetBevelled',
                        OFFSET_MITERED: 'esriGeometryOffsetMitered',
                        OFFSET_ROUNDED: 'esriGeometryOffsetRounded',
                    });
                    g.setObject('tasks.OffsetParameters', c, h);
                    return c;
                }
            );
        },
        'esri/tasks/DistanceParameters': function() {
            define(
                'dojo/_base/declare dojo/_base/lang dojo/_base/json dojo/has ../kernel ../geometry/jsonUtils'.split(
                    ' '
                ),
                function(c, g, f, b, e, h) {
                    c = c(null, {
                        declaredClass: 'esri.tasks.DistanceParameters',
                        geometry1: null,
                        geometry2: null,
                        distanceUnit: null,
                        geodesic: null,
                        toJson: function() {
                            var b = {},
                                a = this.geometry1;
                            a &&
                                (b.geometry1 = f.toJson({
                                    geometryType: h.getJsonType(a),
                                    geometry: a,
                                }));
                            if ((a = this.geometry2))
                                b.geometry2 = f.toJson({
                                    geometryType: h.getJsonType(a),
                                    geometry: a,
                                });
                            b.sr = f.toJson(this.geometry1.spatialReference.toJson());
                            this.distanceUnit && (b.distanceUnit = this.distanceUnit);
                            this.geodesic && (b.geodesic = this.geodesic);
                            return b;
                        },
                    });
                    g.setObject('tasks.DistanceParameters', c, e);
                    return c;
                }
            );
        },
        'esri/tasks/identify': function() {
            define(
                ['./IdentifyTask', './IdentifyParameters', './IdentifyResult'],
                function() {
                    return {};
                }
            );
        },
        'esri/tasks/IdentifyTask': function() {
            define(
                'dojo/_base/declare dojo/_base/lang dojo/_base/array dojo/has ../kernel ../request ../geometry/normalizeUtils ./Task ./IdentifyResult'.split(
                    ' '
                ),
                function(c, g, f, b, e, h, d, a, k) {
                    c = c(a, {
                        declaredClass: 'esri.tasks.IdentifyTask',
                        _eventMap: { complete: ['results'] },
                        constructor: function(a, b) {
                            this._url.path += '/identify';
                            this._handler = g.hitch(this, this._handler);
                            this.gdbVersion = b && b.gdbVersion;
                            this.registerConnectEvents();
                        },
                        __msigns: [
                            { n: 'execute', c: 3, a: [{ i: 0, p: ['geometry'] }], e: 2 },
                        ],
                        _handler: function(a, b, c, d, e) {
                            try {
                                var h = [];
                                f.forEach(a.results, function(a, b) {
                                    h[b] = new k(a);
                                });
                                this._successHandler([h], 'onComplete', c, e);
                            } catch (t) {
                                this._errorHandler(t, d, e);
                            }
                        },
                        execute: function(a, b, c, d) {
                            var e = d.assembly;
                            a = this._encode(
                                g.mixin({}, this._url.query, { f: 'json' }, a.toJson(e && e[0]))
                            );
                            var f = this._handler,
                                k = this._errorHandler;
                            this.gdbVersion && (a.gdbVersion = this.gdbVersion);
                            return h({
                                url: this._url.path,
                                content: a,
                                callbackParamName: 'callback',
                                load: function(a, e) {
                                    f(a, e, b, c, d.dfd);
                                },
                                error: function(a) {
                                    k(a, c, d.dfd);
                                },
                            });
                        },
                        onComplete: function() {},
                    });
                    d._createWrappers(c);
                    g.setObject('tasks.IdentifyTask', c, e);
                    return c;
                }
            );
        },
        'esri/tasks/IdentifyResult': function() {
            define(
                'dojo/_base/declare dojo/_base/lang dojo/has ../kernel ../graphic ../geometry/jsonUtils'.split(
                    ' '
                ),
                function(c, g, f, b, e, h) {
                    c = c(null, {
                        declaredClass: 'esri.tasks.IdentifyResult',
                        constructor: function(b) {
                            g.mixin(this, b);
                            this.feature = new e(
                                b.geometry ? h.fromJson(b.geometry) : null,
                                null,
                                b.attributes
                            );
                            delete this.geometry;
                            delete this.attributes;
                        },
                    });
                    g.setObject('tasks.IdentifyResult', c, b);
                    return c;
                }
            );
        },
        'esri/tasks/IdentifyParameters': function() {
            define(
                'dojo/_base/declare dojo/_base/lang dojo/_base/array dojo/_base/json dojo/has ../kernel ../layerUtils ../geometry/jsonUtils ../geometry/scaleUtils'.split(
                    ' '
                ),
                function(c, g, f, b, e, h, d, a, k) {
                    var n = c(null, {
                        declaredClass: 'esri.tasks.IdentifyParameters',
                        constructor: function() {
                            this.layerOption = n.LAYER_OPTION_TOP;
                        },
                        geometry: null,
                        spatialReference: null,
                        layerIds: null,
                        tolerance: null,
                        returnGeometry: !1,
                        returnFieldName: !1,
                        returnUnformattedValues: !1,
                        mapExtent: null,
                        width: 400,
                        height: 400,
                        dpi: 96,
                        layerDefinitions: null,
                        timeExtent: null,
                        layerTimeOptions: null,
                        dynamicLayerInfos: null,
                        toJson: function(c) {
                            var e = (c && c.geometry) || this.geometry,
                                h = this.mapExtent,
                                g = this.spatialReference,
                                l = this.layerIds;
                            c = {
                                tolerance: this.tolerance,
                                returnGeometry: this.returnGeometry,
                                returnFieldName: this.returnFieldName,
                                returnUnformattedValues: this.returnUnformattedValues,
                                imageDisplay: this.width + ',' + this.height + ',' + this.dpi,
                                maxAllowableOffset: this.maxAllowableOffset,
                                geometryPrecision: this.geometryPrecision,
                            };
                            if (e) {
                                var n = e.toJson();
                                delete n.spatialReference;
                                c.geometry = b.toJson(n);
                                c.geometryType = a.getJsonType(e);
                            }
                            g
                                ?
                                (c.sr = g.wkid || b.toJson(g.toJson())) :
                                e && e.spatialReference ?
                                (c.sr =
                                    e.spatialReference.wkid ||
                                    b.toJson(e.spatialReference.toJson())) :
                                h &&
                                h.spatialReference &&
                                (c.sr =
                                    h.spatialReference.wkid ||
                                    b.toJson(h.spatialReference.toJson()));
                            h &&
                                (c.mapExtent =
                                    h.xmin + ',' + h.ymin + ',' + h.xmax + ',' + h.ymax);
                            c.layers = this.layerOption;
                            l && (c.layers += ':' + l.join(','));
                            c.layerDefs = d._serializeLayerDefinitions(
                                this.layerDefinitions, !0
                            );
                            e = this.timeExtent;
                            c.time = e ? e.toJson().join(',') : null;
                            c.layerTimeOptions = d._serializeTimeOptions(
                                this.layerTimeOptions
                            );
                            if (this.dynamicLayerInfos && 0 < this.dynamicLayerInfos.length) {
                                var h = k.getScale({
                                        extent: h,
                                        width: this.width,
                                        spatialReference: h.spatialReference,
                                    }),
                                    q = d._getLayersForScale(h, this.dynamicLayerInfos),
                                    v = [];
                                f.forEach(
                                    this.dynamicLayerInfos,
                                    function(a) {
                                        if (!a.subLayerIds) {
                                            var b = a.id;
                                            if (
                                                (!this.layerIds ||
                                                    (this.layerIds &&
                                                        -1 !== f.indexOf(this.layerIds, b))) &&
                                                -1 !== f.indexOf(q, b)
                                            ) {
                                                var c = { id: b };
                                                c.source = a.source && a.source.toJson();
                                                var d;
                                                this.layerDefinitions &&
                                                    this.layerDefinitions[b] &&
                                                    (d = this.layerDefinitions[b]);
                                                d && (c.definitionExpression = d);
                                                var e;
                                                this.layerTimeOptions &&
                                                    this.layerTimeOptions[b] &&
                                                    (e = this.layerTimeOptions[b]);
                                                e && (c.layerTimeOptions = e.toJson());
                                                v.push(c);
                                            }
                                        }
                                    },
                                    this
                                );
                                h = b.toJson(v);
                                '[]' === h && (h = '[{}]');
                                c.dynamicLayers = h;
                            }
                            return c;
                        },
                    });
                    g.mixin(n, {
                        LAYER_OPTION_TOP: 'top',
                        LAYER_OPTION_VISIBLE: 'visible',
                        LAYER_OPTION_ALL: 'all',
                    });
                    g.setObject('tasks.IdentifyParameters', n, h);
                    return n;
                }
            );
        },
        'esri/virtualearth/VEGeocoder': function() {
            define(
                'dojo/_base/declare dojo/_base/lang dojo/_base/array dojo/_base/Deferred dojo/has ../kernel ../urlUtils ../tasks/Task ./VEGeocodeResult ../deferredUtils ../request'.split(
                    ' '
                ),
                function(c, g, f, b, e, h, d, a, k, n, l) {
                    c = c(a, {
                        declaredClass: 'esri.virtualearth.VEGeocoder',
                        constructor: function(a) {
                            try {
                                if (
                                    ((a = g.mixin({ bingMapsKey: null }, a || {})), (this.url =
                                        d.getProtocolForWebResource() +
                                        '//serverapi.arcgisonline.com/veadaptor/production/services/geocode/geocode'), (this._url = d.urlToObject(
                                        this.url
                                    )), (this._queue = []), (this.bingMapsKey =
                                        a.bingMapsKey), (this.culture =
                                        a.culture || 'en-US'), (this._errorHandler = g.hitch(
                                        this,
                                        this._errorHandler
                                    )), (this._addressToLocationsHandler = g.hitch(
                                        this,
                                        this._addressToLocationsHandler
                                    )), !this.bingMapsKey)
                                )
                                    throw Error('BingMapsKey must be provided.');
                            } catch (p) {
                                throw (this.onError(p), p);
                            }
                        },
                        addressToLocations: function(a, c, d) {
                            if (this.bingMapsKey) {
                                var e = g.mixin({}, this._url.query, {
                                        query: a,
                                        token: this.bingMapsKey,
                                        culture: this.culture,
                                    }),
                                    f = this._addressToLocationsHandler,
                                    h = this._errorHandler,
                                    k = new b(n._dfdCanceller);
                                k._pendingDfd = l({
                                    url: this._url.path,
                                    content: e,
                                    callbackParamName: 'callback',
                                    load: function(a, b) {
                                        f(a, b, c, d, k);
                                    },
                                    error: function(a) {
                                        h(a, d, k);
                                    },
                                });
                                return k;
                            }
                            this._queue.push(arguments);
                        },
                        _addressToLocationsHandler: function(a, b, c, d, e) {
                            try {
                                f.forEach(a, function(b, c) {
                                    a[c] = new k(b);
                                }), this._successHandler(
                                    [a],
                                    'onAddressToLocationsComplete',
                                    c,
                                    e
                                );
                            } catch (q) {
                                this._errorHandler(q, d, e);
                            }
                        },
                        onAddressToLocationsComplete: function() {},
                        setBingMapsKey: function(a) {
                            this.bingMapsKey = a;
                        },
                        setCulture: function(a) {
                            this.culture = a;
                        },
                    });
                    g.setObject('virtualearth.VEGeocoder', c, h);
                    return c;
                }
            );
        },
        'esri/virtualearth/VEGeocodeResult': function() {
            define(
                'dojo/_base/declare dojo/_base/lang dojo/has ../kernel ../geometry/Point ../geometry/Extent ./VEAddress'.split(
                    ' '
                ),
                function(c, g, f, b, e, h, d) {
                    c = c(null, {
                        declaredClass: 'esri.virtualearth.VEGeocodeResult',
                        constructor: function(a) {
                            g.mixin(
                                this, {
                                    address: null,
                                    bestView: null,
                                    calculationMethod: null,
                                    confidence: null,
                                    displayName: null,
                                    entityType: null,
                                    location: null,
                                    matchCodes: null,
                                },
                                a
                            );
                            this.address && (this.address = new d(this.address));
                            this.bestView && (this.bestView = new h(this.bestView));
                            this.locationArray &&
                                ((this.calculationMethod = this.locationArray[0].calculationMethod), (this.location = new e(
                                    this.locationArray[0]
                                )));
                        },
                    });
                    g.setObject('virtualearth.VEGeocodeResult', c, b);
                    return c;
                }
            );
        },
        'esri/virtualearth/VEAddress': function() {
            define(
                ['dojo/_base/declare', 'dojo/_base/lang', 'dojo/has', '../kernel'],
                function(c, g, f, b) {
                    c = c(null, {
                        declaredClass: 'esri.virtualearth.VEAddress',
                        constructor: function(b) {
                            g.mixin(
                                this, {
                                    addressLine: null,
                                    adminDistrict: null,
                                    countryRegion: null,
                                    district: null,
                                    formattedAddress: null,
                                    locality: null,
                                    postalCode: null,
                                    postalTown: null,
                                },
                                b
                            );
                        },
                    });
                    g.setObject('virtualearth.VEAddress', c, b);
                    return c;
                }
            );
        },
        'esri/dijit/Geocoder': function() {
            define(
                'require dojo/_base/declare dojo/_base/lang dojo/Deferred dojo/_base/event dojo/dom-attr dojo/dom-class dojo/dom-style dojo/dom-construct dojo/keys dojo/on dojo/query dojo/i18n!../nls/jsapi dojo/text!./templates/Geocoder.html dojo/uacss dojo/_base/kernel dijit/a11yclick dijit/_TemplatedMixin dijit/focus dijit/_FocusMixin ../kernel ../urlUtils ../SpatialReference ../graphic ../symbols/PictureMarkerSymbol ./_EventedWidget ../geometry/Point ../geometry/Extent ../tasks/locator ../tasks/query ../tasks/QueryTask ../geometry/scaleUtils'.split(
                    ' '
                ),
                function(
                    c,
                    g,
                    f,
                    b,
                    e,
                    h,
                    d,
                    a,
                    k,
                    n,
                    l,
                    m,
                    p,
                    r,
                    u,
                    t,
                    q,
                    v,
                    C,
                    z,
                    y,
                    x,
                    w,
                    A,
                    E,
                    B,
                    D,
                    H,
                    G,
                    F,
                    K,
                    L
                ) {
                    g = g('esri.dijit.Geocoder', [B, v, z], {
                        templateString: r,
                        reHostedFS: /https?:\/\/services.*\.arcgis\.com/i,
                        _eventMap: {
                            select: ['result'],
                            'find-results': ['results'],
                            'auto-complete': ['results'],
                            'geocoder-select': ['geocoder'],
                            clear: !0,
                            'enter-key-select': !0,
                            load: !0,
                        },
                        constructor: function(a, b) {
                            t.deprecated(
                                'esri.dijit.Geocoder',
                                'Use esri.dijit.Search instead',
                                '4.0'
                            );
                            this._css = {
                                GeocoderContainerClass: 'esriGeocoderContainer',
                                GeocoderClass: 'esriGeocoder',
                                GeocoderMultipleClass: 'esriGeocoderMultiple',
                                GeocoderIconClass: 'esriGeocoderIcon',
                                GeocoderActiveClass: 'esriGeocoderActive',
                                GeocoderResultsOpenClass: 'esriGeocoderResultsOpen',
                                GeocoderMenuOpenClass: 'esriGeocoderMenuOpen',
                                loadingClass: 'esriGeocoderLoading',
                                resultsContainerClass: 'esriGeocoderResults',
                                resultsItemClass: 'esriGeocoderResult',
                                resultsItemEvenClass: 'esriGeocoderResultEven',
                                resultsItemOddClass: 'esriGeocoderResultOdd',
                                resultsItemFirstClass: 'esriGeocoderResultFirst',
                                resultsItemLastClass: 'esriGeocoderResultLast',
                                resultsPartialMatchClass: 'esriGeocoderResultPartial',
                                searchButtonClass: 'esriGeocoderSearch',
                                clearButtonClass: 'esriGeocoderReset',
                                hasValueClass: 'esriGeocoderHasValue',
                                geocoderMenuClass: 'esriGeocoderMenu',
                                geocoderMenuHeaderClass: 'esriGeocoderMenuHeader',
                                geocoderMenuCloseClass: 'esriGeocoderMenuClose',
                                activeMenuClass: 'esriGeocoderMenuActive',
                                geocoderMenuArrowClass: 'esriGeocoderMenuArrow',
                                geocoderSelectedClass: 'esriGeocoderSelected',
                                geocoderSelectedCheckClass: 'esriGeocoderSelectedCheck',
                                GeocoderClearClass: 'esriGeocoderClearFloat',
                            };
                            this.options = {
                                autoComplete: !1,
                                arcgisGeocoder: !0,
                                value: '',
                                theme: 'simpleGeocoder',
                                activeGeocoderIndex: 0,
                                maxLocations: 6,
                                minCharacters: 3,
                                searchDelay: 300,
                                geocoderMenu: !0,
                                autoNavigate: !0,
                                showResults: !0,
                                map: null,
                                activeGeocoder: null,
                                geocoders: null,
                                zoomScale: 1e4,
                                highlightLocation: !1,
                                symbol: new E(
                                    c.toUrl('./images/sdk_gps_location.png'),
                                    28,
                                    28
                                ),
                                graphicsLayer: null,
                            };
                            a = f.mixin({}, this.options, a);
                            this.set('autoComplete', a.autoComplete);
                            this.set('arcgisGeocoder', a.arcgisGeocoder);
                            this.set('value', a.value);
                            this.set('theme', a.theme);
                            this.set('activeGeocoderIndex', a.activeGeocoderIndex);
                            this.set('maxLocations', a.maxLocations);
                            this.set('minCharacters', a.minCharacters);
                            this.set('searchDelay', a.searchDelay);
                            this.set('geocoderMenu', a.geocoderMenu);
                            this.set('autoNavigate', a.autoNavigate);
                            this.set('showResults', a.showResults);
                            this.set('map', a.map);
                            this.set('activeGeocoder', a.activeGeocoder);
                            this.set('geocoders', a.geocoders);
                            this.set('zoomScale', a.zoomScale);
                            this.set('highlightLocation', a.highlightLocation);
                            this.set('symbol', a.symbol);
                            this.set('graphicsLayer', a.graphicsLayer);
                            this.set('results', []);
                            this._i18n = p;
                            this._deferreds = [];
                            this._defaultSR = new w(4326);
                            this.watch('value', this._updateValue);
                            this.watch('theme', this._updateTheme);
                            this.watch('activeGeocoder', this._setActiveGeocoder);
                            this.watch('activeGeocoderIndex', this._setActiveGeocoderIndex);
                            this.watch('geocoders', this._updateGeocoder);
                            this.watch('arcgisGeocoder', this._updateGeocoder);
                            this.watch('geocoderMenu', this._updateGeocoder);
                            this.watch('map', this._setupEvents);
                            this.domNode = b;
                        },
                        startup: function() {
                            this.inherited(arguments);
                            if (this._geocoders.length)
                                if (this.domNode)
                                    if (this.get('map'))
                                        if (this.get('map').loaded) this._init();
                                        else
                                            l.once(
                                                this.get('map'),
                                                'load',
                                                f.hitch(this, function() {
                                                    this._init();
                                                })
                                            );
                            else this._init();
                            else this.destroy();
                            else this.destroy();
                        },
                        postCreate: function() {
                            this.inherited(arguments);
                            this.own(
                                l(this.submitNode, q, f.hitch(this, this._findThenSelect))
                            );
                            this.own(
                                l(
                                    this.geocoderMenuArrowNode,
                                    q,
                                    f.hitch(this, this._toggleGeolocatorMenu)
                                )
                            );
                            this.own(
                                l(this.inputNode, q, f.hitch(this, this._inputClick))
                            );
                            this.own(l(this.clearNode, q, f.hitch(this, this.clear)));
                            this.own(
                                l(
                                    this.geocoderMenuCloseNode,
                                    q,
                                    f.hitch(this, this._hideGeolocatorMenu)
                                )
                            );
                            this._updateGeocoder();
                            this._setupEvents();
                            this.get('value') && this._checkStatus();
                            this._hideMenus();
                        },
                        destroy: function() {
                            this._removeEvents();
                            k.empty(this.domNode);
                            this.inherited(arguments);
                        },
                        clear: function() {
                            this.onClear();
                            var a = this.get('highlightGraphic'),
                                b = this.get('graphicsLayer');
                            a &&
                                (b ?
                                    b.remove(a) :
                                    this.get('map').graphics.remove(a), this.set(
                                        'highlightGraphic',
                                        null
                                    ));
                            h.set(this.inputNode, 'value', '');
                            this.set('value', '');
                            this.set('results', []);
                            d.remove(this.containerNode, this._css.hasValueClass);
                            h.set(this.clearNode, 'title', '');
                            this._hideMenus();
                            this._hideLoading();
                        },
                        show: function() {
                            a.set(this.domNode, 'display', 'block');
                        },
                        hide: function() {
                            a.set(this.domNode, 'display', 'none');
                        },
                        find: function(a) {
                            var c = new b();
                            if (a)
                                if ('string' === typeof a)
                                    this._findQuery(a).then(function(a) {
                                        c.resolve(a);
                                    });
                                else if (
                                'object' === typeof a &&
                                a.hasOwnProperty('geometry')
                            ) {
                                var d;
                                switch (a.geometry.type) {
                                    case 'extent':
                                        d = a.geometry.getCenter();
                                        break;
                                    case 'multipoint':
                                        d = a.geometry.getExtent().getCenter();
                                        break;
                                    case 'point':
                                        d = a.geometry;
                                        break;
                                    case 'polygon':
                                        d = a.geometry.getExtent().getCenter();
                                        break;
                                    case 'polyline':
                                        d = a.geometry.getExtent().getCenter();
                                }
                                d &&
                                    this._reverseGeocodePoint(d, a.geometry).then(
                                        function(b) {
                                            b.results[0] &&
                                                (a.hasOwnProperty('attributes') &&
                                                    b.results[0].feature.setAttributes(
                                                        f.mixin(
                                                            b.results[0].feature.attributes,
                                                            a.attributes
                                                        )
                                                    ), a.hasOwnProperty('infoTemplate') &&
                                                    b.results[0].feature.setInfoTemplate(
                                                        a.infoTemplate
                                                    ), a.hasOwnProperty('symbol') &&
                                                    b.results[0].feature.setSymbol(a.symbol));
                                            c.resolve(b);
                                        },
                                        function(a) {
                                            c.reject(a);
                                        }
                                    );
                            } else
                                'object' === typeof a && 'point' === a.type ?
                                this._reverseGeocodePoint(a).then(
                                    function(a) {
                                        c.resolve(a);
                                    },
                                    function(a) {
                                        c.reject(a);
                                    }
                                ) :
                                a instanceof Array && 2 === a.length ?
                                ((d = new D(
                                    a,
                                    new w({ wkid: 4326 })
                                )), this._reverseGeocodePoint(d).then(
                                    function(a) {
                                        c.resolve(a);
                                    },
                                    function(a) {
                                        c.reject(a);
                                    }
                                )) :
                                c.reject('Geocoder:: Invalid find type');
                            else
                                this._findQuery(this.get('value')).then(function(a) {
                                    c.resolve(a);
                                });
                            return c.promise;
                        },
                        focus: function() {
                            C.focus(this.inputNode);
                            var a = this.get('map');
                            a && a.disableKeyboardNavigation();
                        },
                        blur: function() {
                            C.curNode && C.curNode.blur();
                            this.inputNode.blur();
                            this._hideMenus();
                            var a = this.get('map');
                            a && a.enableKeyboardNavigation();
                        },
                        select: function(a) {
                            this.onSelect(a);
                            this._hideMenus();
                            this._hideLoading();
                            this.get('autoNavigate') &&
                                a &&
                                a.hasOwnProperty('extent') &&
                                this.get('map') &&
                                this.get('map').setExtent(a.extent);
                            if (a.feature) {
                                var b = this.get('highlightGraphic'),
                                    c = this.get('graphicsLayer'),
                                    d = this.get('symbol') || a.feature.symbol;
                                b
                                    ?
                                    (b.setGeometry(a.feature.geometry), b.setAttributes(
                                        a.feature.attributes
                                    ), b.setInfoTemplate(a.feature.infoTemplate), b.setSymbol(
                                        d
                                    )) :
                                    ((b = a.feature), this.get('highlightLocation') &&
                                        (b.setSymbol(d), c ?
                                            c.add(b) :
                                            this.get('map').graphics.add(b)));
                                this.set('highlightGraphic', b);
                            }
                        },
                        onSelect: function() {},
                        onFindResults: function() {},
                        onAutoComplete: function() {},
                        onGeocoderSelect: function() {},
                        onClear: function() {},
                        onEnterKeySelect: function() {},
                        onLoad: function() {},
                        _onFocus: function() {
                            this.focus();
                            this.inherited(arguments);
                        },
                        _onBlur: function() {
                            this.blur();
                            this.inherited(arguments);
                        },
                        _autoComplete: function() {
                            var a = this.get('activeGeocoder'),
                                b = this.reHostedFS.test(a.url);
                            ('query' !== a.type || b) &&
                            this._query({
                                delay: this.get('searchDelay'),
                                autoComplete: !0,
                                search: this.get('value'),
                            }).then(
                                f.hitch(this, function(a) {
                                    this.onAutoComplete(a);
                                    this.get('showResults') && this._showResults(a);
                                })
                            );
                        },
                        _init: function() {
                            this.set('loaded', !0);
                            this.onLoad();
                        },
                        _containsNonLatinCharacter: function(a) {
                            for (var b = 0; b < a.length; b++)
                                if (255 < a.charCodeAt(b)) return !0;
                            return !1;
                        },
                        _findQuery: function(a) {
                            var c = new b();
                            this._query({ delay: 0, search: a }).then(
                                f.hitch(this, function(a) {
                                    this.onFindResults(a);
                                    c.resolve(a);
                                }),
                                f.hitch(this, function(a) {
                                    this.onFindResults(a);
                                    c.reject(a);
                                })
                            );
                            return c.promise;
                        },
                        _reverseGeocodePoint: function(a, c) {
                            var d = new b();
                            if (a && this.get('activeGeocoder')) {
                                var e = c || a;
                                c = this.get('activeGeocoder').distance || 1500;
                                this._task.outSpatialReference = this._defaultSR;
                                this.get('map') &&
                                    (this._task.outSpatialReference = this.get(
                                        'map'
                                    ).spatialReference);
                                this._task.locationToAddress(
                                    a,
                                    c,
                                    f.hitch(this, function(a) {
                                        a = { results: [this._hydrateResult(a)], geometry: e };
                                        this.onFindResults(a);
                                        d.resolve(a);
                                    }),
                                    f.hitch(this, function(a) {
                                        d.reject(a);
                                    })
                                );
                            } else
                                d.reject('Geocoder:: no point or active geocoder defined');
                            return d.promise;
                        },
                        _setEsriGeocoder: function() {
                            this.get('arcgisGeocoder') ?
                                ('object' === typeof this.get('arcgisGeocoder') ?
                                    (this._arcgisGeocoder = this.get('arcgisGeocoder')) :
                                    (this._arcgisGeocoder = {}), this._arcgisGeocoder.hasOwnProperty(
                                        'suggest'
                                    ) ||
                                    (this._arcgisGeocoder.suggest = !0), this._arcgisGeocoder.hasOwnProperty(
                                        'singleLineFieldName'
                                    ) ||
                                    (this._arcgisGeocoder.singleLineFieldName =
                                        'SingleLine'), this._arcgisGeocoder.url ||
                                    (this._arcgisGeocoder.url =
                                        x.getProtocolForWebResource() +
                                        '//geocode.arcgis.com/arcgis/rest/services/World/GeocodeServer'), this
                                    ._arcgisGeocoder.name ||
                                    (this._arcgisGeocoder.name =
                                        p.widgets.Geocoder.esriGeocoderName), this._arcgisGeocoder.hasOwnProperty(
                                        'localSearchOptions'
                                    ) ||
                                    (this._arcgisGeocoder.localSearchOptions = {
                                        minScale: 3e5,
                                        distance: 5e4,
                                    }), this.set('arcgisGeocoder', this._arcgisGeocoder)) :
                                this.set('arcgisGeocoder', !1);
                        },
                        _setActiveGeocoder: function() {
                            this.set(
                                'activeGeocoder',
                                this._geocoders[this.get('activeGeocoderIndex')]
                            );
                            this._task = 'query' === this.activeGeocoder.type ?
                                new K(this.get('activeGeocoder').url) :
                                new G(this.get('activeGeocoder').url);
                            this._updatePlaceholder();
                        },
                        _setGeocoderList: function() {
                            var a = [];
                            this.get('arcgisGeocoder') &&
                                (a = a.concat([this._arcgisGeocoder]));
                            this.get('geocoders') &&
                                this.get('geocoders').length &&
                                (a = a.concat(this.get('geocoders')));
                            this._geocoders = a;
                        },
                        _updateGeocoder: function() {
                            this.set('activeGeocoderIndex', 0);
                            this._setEsriGeocoder();
                            this._setGeocoderList();
                            this._setActiveGeocoder();
                            this._insertGeocoderMenuItems();
                        },
                        _updatePlaceholder: function() {
                            this._placeholder = '';
                            this.get('activeGeocoder') &&
                                this.get('activeGeocoder').placeholder &&
                                (this._placeholder = this.get('activeGeocoder').placeholder);
                            h.set(this.inputNode, 'placeholder', this._placeholder);
                            h.set(this.submitNode, 'title', this._placeholder);
                        },
                        _updateValue: function(a, b, c) {
                            this._ignoreUpdateValue ||
                                (h.set(this.inputNode, 'value', c), this._checkStatus());
                        },
                        _updateTheme: function(a, b, c) {
                            d.remove(this.domNode, b);
                            d.add(this.domNode, c);
                        },
                        _setActiveGeocoderIndex: function(a, b, c) {
                            this.set('activeGeocoderIndex', c);
                            this._setActiveGeocoder();
                            this._hideMenus();
                            this._insertGeocoderMenuItems();
                            a = { attr: this.get('activeGeocoder'), oldVal: b, newVal: c };
                            this.onGeocoderSelect(a);
                        },
                        _clearQueryTimeout: function() {
                            this._queryTimer && clearTimeout(this._queryTimer);
                        },
                        _query: function(a) {
                            a || (a = { delay: 0 });
                            a.search || (a.search = this.get('value'));
                            var c = new b();
                            this._deferreds.push(c);
                            a.delay ?
                                (this._clearQueryTimeout(), (this._queryTimer = setTimeout(
                                    f.hitch(this, function() {
                                        this._performTask(c, a);
                                    }),
                                    a.delay
                                ))) :
                                this._performTask(c, a);
                            return c.promise;
                        },
                        _performTask: function(a, b) {
                            if (b.search) {
                                this._hideGeolocatorMenu();
                                this._showLoading();
                                var c = '';
                                this.get('activeGeocoder').prefix &&
                                    (c += this.get('activeGeocoder').prefix);
                                c += b.search;
                                this.get('activeGeocoder').suffix &&
                                    (c += this.get('activeGeocoder').suffix);
                                var d = this.get('activeGeocoder').outFields;
                                d && (d instanceof Array || (d = [d]));
                                var e = this.get('maxLocations') || 6,
                                    h = this.get('activeGeocoder').searchExtent,
                                    g = this._defaultSR;
                                this.get('map') && (g = this.get('map').spatialReference);
                                if ('query' === this.get('activeGeocoder').type) {
                                    var k = new F();
                                    k.outSpatialReference = g;
                                    k.returnGeometry = !0;
                                    k.num = e;
                                    h && (k.geometry = h);
                                    e = this.get('activeGeocoder').exactMatch;
                                    h = this.get('activeGeocoder').field;
                                    g = '';
                                    this.reHostedFS.test(this.get('activeGeocoder').url) &&
                                        this._containsNonLatinCharacter(c) &&
                                        (g = 'N');
                                    k.where = e ?
                                        h + ' \x3d ' + g + "'" + c + "'" :
                                        'UPPER(' +
                                        h +
                                        ') LIKE ' +
                                        g +
                                        "'%" +
                                        c.toUpperCase() +
                                        "%'";
                                    d && (k.outFields = d);
                                    this._task.execute(
                                        k,
                                        f.hitch(this, function(c) {
                                            this._receivedResults(c.features, a, b);
                                        }),
                                        f.hitch(this, function(c) {
                                            this._receivedResults([], a, b);
                                        })
                                    );
                                } else
                                    (k = {}), this.get('activeGeocoder').categories &&
                                    (k.categories = this.get(
                                        'activeGeocoder'
                                    ).categories), (this._task.outSpatialReference = g), this.get(
                                        'map'
                                    ) &&
                                    this.get('activeGeocoder').localSearchOptions &&
                                    this.get(
                                        'activeGeocoder'
                                    ).localSearchOptions.hasOwnProperty('distance') &&
                                    this.get(
                                        'activeGeocoder'
                                    ).localSearchOptions.hasOwnProperty('minScale') &&
                                    ((g = this.get('map').getScale()), !this.get(
                                            'activeGeocoder'
                                        ).localSearchOptions.minScale ||
                                        (g &&
                                            g <=
                                            parseFloat(
                                                this.get('activeGeocoder').localSearchOptions
                                                .minScale
                                            ))) &&
                                    ((k.location = this.get(
                                        'map'
                                    ).extent.getCenter()), (k.distance = this.get(
                                        'activeGeocoder'
                                    ).localSearchOptions.distance)), this.get('activeGeocoder')
                                    .suggest && b.autoComplete ?
                                    ((k.text = c), h &&
                                        (k.searchExtent = h), this._task
                                        .suggestLocations(k)
                                        .then(
                                            f.hitch(this, function(c) {
                                                this._receivedResults(c, a, b);
                                            }),
                                            f.hitch(this, function(c) {
                                                this._receivedResults(c, a, b);
                                            })
                                        )) :
                                    ((k.address = {}), (k.maxLocations = e), h &&
                                        (k.searchExtent = h), this.get('activeGeocoder')
                                        .sourceCountry &&
                                        (k.countryCode = this.get(
                                            'activeGeocoder'
                                        ).sourceCountry), b.magicKey &&
                                        (k.magicKey = b.magicKey), this.get('activeGeocoder')
                                        .singleLineFieldName ?
                                        (k.address[
                                            this.get('activeGeocoder').singleLineFieldName
                                        ] = c) :
                                        (k.address['Single Line Input'] = c), d &&
                                        (k.outFields = d), this._task.addressToLocations(
                                            k,
                                            f.hitch(this, function(c) {
                                                this._receivedResults(c, a, b);
                                            }),
                                            f.hitch(this, function(c) {
                                                this._receivedResults(c, a, b);
                                            })
                                        ));
                            } else
                                this._hideLoading(), a.reject(
                                    'Geocoder:: no search to perform'
                                );
                        },
                        _showResults: function() {
                            this._hideGeolocatorMenu();
                            var a = '';
                            if (
                                this.get('results') &&
                                this.get('results').length &&
                                this.resultsNode
                            ) {
                                for (
                                    var b = this.get('value'),
                                        c = new RegExp('(' + b + ')', 'gi'),
                                        a = a + '\x3cul role\x3d"presentation"\x3e',
                                        b = 0; b < this.get('results').length && 5 > b;
                                    ++b
                                ) {
                                    var d =
                                        this.get('results')[b].text ||
                                        this.get('results')[b].name,
                                        e = this._css.resultsItemClass + ' ',
                                        e = 0 === b % 2 ?
                                        e + this._css.resultsItemOddClass :
                                        e + this._css.resultsItemEvenClass;
                                    0 === b ?
                                        (e += ' ' + this._css.resultsItemFirstClass) :
                                        b === this.get('results').length - 1 &&
                                        (e += ' ' + this._css.resultsItemLastClass);
                                    a +=
                                        '\x3cli title\x3d"' +
                                        d +
                                        '" data-text\x3d"' +
                                        d +
                                        '" data-item\x3d"true" data-index\x3d"' +
                                        b +
                                        '" role\x3d"menuitem" tabindex\x3d"0" class\x3d"' +
                                        e +
                                        '"\x3e' +
                                        d.replace(
                                            c,
                                            '\x3cstrong class\x3d"' +
                                            this._css.resultsPartialMatchClass +
                                            '"\x3e$1\x3c/strong\x3e'
                                        ) +
                                        '\x3c/li\x3e';
                                }
                                a += '\x3c/ul\x3e';
                                this.resultsNode && (this.resultsNode.innerHTML = a);
                                this._autoCompleteEvent();
                                this._showResultsMenu();
                            } else
                                this.resultsNode &&
                                (this.resultsNode.innerHTML = a), this._hideResultsMenu();
                        },
                        _receivedResults: function(a, b) {
                            this._hideLoading();
                            a = this._hydrateResults(a);
                            this.set('results', a);
                            a = { results: a, value: this.get('value') };
                            b.resolve(a);
                        },
                        _showLoading: function() {
                            d.add(this.containerNode, this._css.loadingClass);
                        },
                        _hideLoading: function() {
                            d.remove(this.containerNode, this._css.loadingClass);
                        },
                        _showGeolocatorMenu: function() {
                            d.add(this.containerNode, this._css.activeMenuClass);
                            d.add(this.domNode, this._css.GeocoderMenuOpenClass);
                            a.set(this.geocoderMenuNode, 'display', 'block');
                            h.set(this.geocoderMenuInsertNode, 'aria-hidden', 'false');
                            h.set(this.geocoderMenuArrowNode, 'aria-expanded', 'true');
                        },
                        _hideGeolocatorMenu: function() {
                            d.remove(this.containerNode, this._css.activeMenuClass);
                            d.remove(this.domNode, this._css.GeocoderMenuOpenClass);
                            a.set(this.geocoderMenuNode, 'display', 'none');
                            h.set(this.geocoderMenuInsertNode, 'aria-hidden', 'true');
                            h.set(this.geocoderMenuArrowNode, 'aria-expanded', 'false');
                        },
                        _toggleGeolocatorMenu: function() {
                            this._hideResultsMenu();
                            'block' === a.get(this.geocoderMenuNode, 'display') ?
                                this._hideGeolocatorMenu() :
                                this._showGeolocatorMenu();
                        },
                        _showResultsMenu: function() {
                            d.add(this.containerNode, this._css.GeocoderActiveClass);
                            d.add(this.domNode, this._css.GeocoderResultsOpenClass);
                            a.set(this.resultsNode, 'display', 'block');
                            h.set(this.resultsNode, 'aria-hidden', 'false');
                        },
                        _hideResultsMenu: function() {
                            a.set(this.resultsNode, 'display', 'none');
                            d.remove(this.containerNode, this._css.GeocoderActiveClass);
                            d.remove(this.domNode, this._css.GeocoderResultsOpenClass);
                            h.set(this.resultsNode, 'aria-hidden', 'true');
                        },
                        _hideMenus: function() {
                            this._hideGeolocatorMenu();
                            this._hideResultsMenu();
                        },
                        _insertGeocoderMenuItems: function() {
                            if (
                                this.get('geocoderMenu') &&
                                this._geocoders &&
                                1 < this._geocoders.length
                            ) {
                                var b, c = '',
                                    e;
                                b = '\x3cul role\x3d"presentation"\x3e';
                                for (e = 0; e < this._geocoders.length; e++) {
                                    c = this._css.resultsItemClass + ' ';
                                    c = 0 === e % 2 ?
                                        c + this._css.resultsItemOddClass :
                                        c + this._css.resultsItemEvenClass;
                                    e === this.get('activeGeocoderIndex') &&
                                        (c += ' ' + this._css.geocoderSelectedClass);
                                    0 === e ?
                                        (c += ' ' + this._css.resultsItemFirstClass) :
                                        e === this._geocoders.length - 1 &&
                                        (c += ' ' + this._css.resultsItemLastClass);
                                    var f =
                                        this._geocoders[e].name ||
                                        p.widgets.Geocoder.main.untitledGeocoder;
                                    b +=
                                        '\x3cli data-index\x3d"' +
                                        e +
                                        '" data-item\x3d"true" role\x3d"menuitem" tabindex\x3d"0" class\x3d"' +
                                        c +
                                        '"\x3e';
                                    b +=
                                        '\x3cdiv class\x3d"' +
                                        this._css.geocoderSelectedCheckClass +
                                        '"\x3e\x3c/div\x3e';
                                    b += f;
                                    b +=
                                        '\x3cdiv class\x3d"' +
                                        this._css.GeocoderClearClass +
                                        '"\x3e\x3c/div\x3e';
                                    b += '\x3c/li\x3e';
                                }
                                this.geocoderMenuInsertNode.innerHTML = b + '\x3c/ul\x3e';
                                this._geocoderMenuEvent();
                                a.set(this.geocoderMenuNode, 'display', 'none');
                                a.set(this.geocoderMenuArrowNode, 'display', 'block');
                                d.add(this.containerNode, this._css.GeocoderMultipleClass);
                            } else
                                (this.geocoderMenuInsertNode.innerHTML = ''), a.set(
                                    this.geocoderMenuNode,
                                    'display',
                                    'none'
                                ), a.set(
                                    this.geocoderMenuArrowNode,
                                    'display',
                                    'none'
                                ), d.remove(
                                    this.containerNode,
                                    this._css.GeocoderMultipleClass
                                );
                        },
                        _checkStatus: function() {
                            this.get('value') ?
                                (d.add(this.containerNode, this._css.hasValueClass), h.set(
                                    this.clearNode,
                                    'title',
                                    p.widgets.Geocoder.main.clearButtonTitle
                                )) :
                                this.clear();
                        },
                        _autoCompleteEvent: function() {
                            var a = m('[data-item\x3d"true"]', this.resultsNode);
                            this._acEvent && this._acEvent.remove();
                            this._acEvent = l(
                                a,
                                'click, keydown',
                                f.hitch(this, function(b) {
                                    this._clearQueryTimeout();
                                    var c = parseInt(h.get(b.currentTarget, 'data-index'), 10),
                                        d = h.get(b.currentTarget, 'data-text');
                                    'click' === b.type ||
                                        ('keydown' === b.type && b.keyCode === n.ENTER) ?
                                        (h.set(this.inputNode, 'value', d), this.set(
                                                'value',
                                                d
                                            ), this.get('results') &&
                                            this.get('results')[c] &&
                                            ((b = this.get('results')[c]), b.name ?
                                                this.select(b) :
                                                this._query({
                                                    delay: 0,
                                                    search: b.text,
                                                    magicKey: b.magicKey || null,
                                                }).then(
                                                    f.hitch(this, function(a) {
                                                        this.select(a.results[0]);
                                                    })
                                                ))) :
                                        'keydown' !== b.type ||
                                        (b.keyCode !== n.BACKSPACE && b.keyCode !== n.DELETE) ?
                                        'keydown' === b.type && b.keyCode === n.UP_ARROW ?
                                        (e.stop(b), (b = c - 1), 0 > b ?
                                            this.inputNode.focus() :
                                            a[b].focus()) :
                                        'keydown' === b.type && b.keyCode === n.DOWN_ARROW ?
                                        (e.stop(b), (b = c + 1), b >= a.length ?
                                            this.inputNode.focus() :
                                            a[b].focus()) :
                                        b.keyCode === n.ESCAPE && this._hideMenus() :
                                        (e.stop(
                                            b
                                        ), this.inputNode.focus(), (b = this.inputNode.value.slice(
                                            0, -1
                                        )), h.set(this.inputNode, 'value', b), this.set(
                                            'value',
                                            b
                                        ));
                                })
                            );
                        },
                        _geocoderMenuEvent: function() {
                            var a = m('[data-item\x3d"true"]', this.geocoderMenuInsertNode);
                            this._gmEvent && this._gmEvent.remove();
                            this._gmEvent = l(
                                a,
                                'click, keydown',
                                f.hitch(this, function(b) {
                                    var c = parseInt(h.get(b.currentTarget, 'data-index'), 10);
                                    'click' === b.type ||
                                        ('keydown' === b.type && b.keyCode === n.ENTER) ?
                                        (this._setActiveGeocoderIndex(
                                            null,
                                            null,
                                            c
                                        ), this._hideGeolocatorMenu()) :
                                        'keydown' === b.type && b.keyCode === n.UP_ARROW ?
                                        (e.stop(b), (b = c - 1), 0 > b ?
                                            this.geocoderMenuArrowNode.focus() :
                                            a[b].focus()) :
                                        'keydown' === b.type && b.keyCode === n.DOWN_ARROW ?
                                        (e.stop(b), (b = c + 1), b >= a.length ?
                                            this.geocoderMenuArrowNode.focus() :
                                            a[b].focus()) :
                                        b.keyCode === n.ESCAPE &&
                                        this._hideGeolocatorMenu();
                                })
                            );
                        },
                        _removeEvents: function() {
                            var a;
                            if (this._events && this._events.length)
                                for (a = 0; a < this._events.length; a++)
                                    this._events[a].remove();
                            this._acEvent && this._acEvent.remove();
                            this._gmEvent && this._gmEvent.remove();
                            this._events = [];
                        },
                        _setupEvents: function() {
                            this._removeEvents();
                            var a = l(
                                document,
                                'click',
                                f.hitch(this, function(a) {
                                    this._hideResultsMenu(a);
                                })
                            );
                            this._events.push(a);
                            a = l(
                                this.inputNode,
                                'keyup',
                                f.hitch(this, function(a) {
                                    this._inputKeyUp(a);
                                })
                            );
                            this._events.push(a);
                            a = l(
                                this.inputNode,
                                'keydown',
                                f.hitch(this, function(a) {
                                    this._inputKeyDown(a);
                                })
                            );
                            this._events.push(a);
                            a = l(
                                this.geocoderMenuArrowNode,
                                'keydown',
                                this._geocoderMenuButtonKeyDown()
                            );
                            this._events.push(a);
                            this.get('map') &&
                                ((a = l(
                                    this.get('map'),
                                    'mouse-down',
                                    f.hitch(this, function() {
                                        this.blur();
                                    })
                                )), this._events.push(a));
                            this._geocoderMenuEvent();
                            this._autoCompleteEvent();
                        },
                        _findThenSelect: function() {
                            this.find().then(
                                f.hitch(this, function(a) {
                                    a.results &&
                                        a.results.length &&
                                        (this.select(a.results[0]), this.onEnterKeySelect());
                                })
                            );
                        },
                        _inputKeyUp: function(a) {
                            if (a) {
                                this._clearQueryTimeout();
                                var b = this.inputNode.value;
                                this._ignoreUpdateValue = !0;
                                this.set('value', b);
                                this._ignoreUpdateValue = !1;
                                var c = 0;
                                b && (c = b.length);
                                if (
                                    a.ctrlKey ||
                                    a.metaKey ||
                                    a.altKey ||
                                    a.keyCode === n.copyKey ||
                                    a.keyCode === n.ALT ||
                                    a.keyCode === n.CTRL ||
                                    a.keyCode === n.META ||
                                    a.keyCode === n.SHIFT ||
                                    a.keyCode === n.UP_ARROW ||
                                    a.keyCode === n.DOWN_ARROW ||
                                    a.keyCode === n.LEFT_ARROW ||
                                    a.keyCode === n.RIGHT_ARROW
                                )
                                    return a;
                                a && a.keyCode === n.ENTER ?
                                    (this._cancelDeferreds(), this._findThenSelect()) :
                                    a && a.keyCode === n.ESCAPE ?
                                    (this._cancelDeferreds(), this._hideMenus()) :
                                    a && a.keyCode === n.TAB ?
                                    (this._cancelDeferreds(), this._hideMenus()) :
                                    this.get('autoComplete') &&
                                    c >= this.get('minCharacters') ?
                                    this._autoComplete() :
                                    this._hideMenus();
                                this._checkStatus();
                            }
                        },
                        _cancelDeferreds: function() {
                            if (this._deferreds.length) {
                                for (var a = 0; a < this._deferreds.length; a++)
                                    this._deferreds[a].cancel('Geocoder:: stop query');
                                this._deferreds = [];
                            }
                        },
                        _inputKeyDown: function(a) {
                            var b = m('[data-item\x3d"true"]', this.resultsNode);
                            a && a.keyCode === n.TAB ?
                                (this._cancelDeferreds(), this._hideMenus()) :
                                a && a.keyCode === n.UP_ARROW ?
                                (e.stop(a), (a = b.length) && b[a - 1].focus()) :
                                a &&
                                a.keyCode === n.DOWN_ARROW &&
                                (e.stop(a), b[0] && b[0].focus());
                        },
                        _geocoderMenuButtonKeyDown: function(a) {
                            var b = m('[data-item\x3d"true"]', this.geocoderMenuInsertNode);
                            a && a.keyCode === n.UP_ARROW ?
                                (e.stop(a), this._showGeolocatorMenu(), (a = b.length) &&
                                    b[a - 1].focus()) :
                                a &&
                                a.keyCode === n.DOWN_ARROW &&
                                (e.stop(a), this._showGeolocatorMenu(), b[0] &&
                                    b[0].focus());
                        },
                        _inputClick: function() {
                            this._hideGeolocatorMenu();
                        },
                        _hydrateResult: function(a) {
                            var b = {},
                                c = this._defaultSR,
                                d;
                            this.get('map') && (c = this.get('map').spatialReference);
                            if (a.hasOwnProperty('text') && a.hasOwnProperty('magicKey'))
                                return a;
                            if (a.hasOwnProperty('feature'))
                                (b.feature = new A(a.feature)), (d = b.feature.geometry) &&
                                d.setSpatialReference(c);
                            else if (a.hasOwnProperty('geometry')) {
                                var e = a.symbol || null;
                                d = a.attributes || {};
                                b.feature = new A(a.geometry, e, d, a.infoTemplate || null);
                                (d = b.feature.geometry) && d.setSpatialReference(c);
                            } else
                                a.hasOwnProperty('location') ?
                                ((e = new D(
                                        a.location.x,
                                        a.location.y,
                                        c
                                    )), (d = {}), a.hasOwnProperty('attributes') &&
                                    (d = a.attributes), a.hasOwnProperty('score') &&
                                    (d.score = a.score), (b.feature = new A(
                                        e,
                                        null,
                                        d,
                                        null
                                    ))) :
                                (b.feature = null);
                            if (a.hasOwnProperty('extent'))
                                (b.extent = new H(a.extent)), b.extent.setSpatialReference(
                                    new w(c)
                                );
                            else if (b.feature && b.feature.geometry)
                                switch (b.feature.geometry.type) {
                                    case 'extent':
                                        b.extent = b.feature.geometry;
                                        break;
                                    case 'multipoint':
                                        b.extent = b.feature.geometry.getExtent();
                                        break;
                                    case 'polygon':
                                        b.extent = b.feature.geometry.getExtent();
                                        break;
                                    case 'polyline':
                                        b.extent = b.feature.geometry.getExtent();
                                        break;
                                    case 'point':
                                        this.get('map') ?
                                            this.get('map').getScale() > this.get('zoomScale') ?
                                            (b.extent = L.getExtentForScale(
                                                this.get('map'),
                                                this.get('zoomScale')
                                            ).centerAt(b.feature.geometry)) :
                                            (b.extent = this.get('map').extent.centerAt(
                                                b.feature.geometry
                                            )) :
                                            (b.extent = new H({
                                                xmin: b.feature.geometry.x - 0.25,
                                                ymin: b.feature.geometry.y - 0.25,
                                                xmax: b.feature.geometry.x + 0.25,
                                                ymax: b.feature.geometry.y + 0.25,
                                                spatialReference: { wkid: 4326 },
                                            }));
                                }
                            else b.extent = null;
                            a.hasOwnProperty('name') ?
                                (b.name = a.name) :
                                'query' === this.activeGeocoder.type &&
                                this.activeGeocoder.field &&
                                a.hasOwnProperty('attributes') &&
                                a.attributes.hasOwnProperty(this.activeGeocoder.field) ?
                                (b.name = a.attributes[this.activeGeocoder.field]) :
                                a.hasOwnProperty('Match_addr') &&
                                'string' === typeof a.Match_addr ?
                                (b.name = a.Match_addr) :
                                a.hasOwnProperty('address') &&
                                'object' === typeof a.address &&
                                a.address.hasOwnProperty('Match_addr') ?
                                (b.name = a.address.Match_addr) :
                                a.hasOwnProperty('address') &&
                                'string' === typeof a.address ?
                                (b.name = a.address) :
                                a.hasOwnProperty('address') &&
                                'object' === typeof a.address &&
                                a.address.hasOwnProperty('Address') ?
                                (b.name = a.address.Address) :
                                (b.name = b.feature && b.feature.geometry ?
                                    b.feature.geometry.x +
                                    ',' +
                                    b.feature.geometry.y :
                                    '');
                            return b;
                        },
                        _hydrateResults: function(a) {
                            var b = [],
                                c = 0;
                            if (a && a.length)
                                for (c; c < a.length; c++) {
                                    var d = this._hydrateResult(a[c]);
                                    b.push(d);
                                }
                            return b;
                        },
                    });
                    f.setObject('dijit.Geocoder', g, y);
                    return g;
                }
            );
        },
        'dojox/lang/functional': function() {
            define(
                ['./functional/lambda', './functional/array', './functional/object'],
                function(c) {
                    return c;
                }
            );
        },
        'dojox/lang/functional/lambda': function() {
            define(['../..', 'dojo/_base/lang', 'dojo/_base/array'], function(
                c,
                g,
                f
            ) {
                var b = g.getObject('lang.functional', !0, c),
                    e = {},
                    h = 1 < 'ab'.split(/a*/).length ?
                    String.prototype.split :
                    function(a) {
                        var b = this.split.call(this, a);
                        (a = a.exec(this)) && 0 == a.index && b.unshift('');
                        return b;
                    },
                    d = function(a) {
                        var b = [],
                            c = h.call(a, /\s*->\s*/m);
                        if (1 < c.length)
                            for (; c.length;)
                                (a = c.pop()), (b = c
                                    .pop()
                                    .split(/\s*,\s*|\s+/m)), c.length &&
                                c.push(
                                    '(function(' + b.join(', ') + '){ return (' + a + '); })'
                                );
                        else if (a.match(/\b_\b/)) b = ['_'];
                        else {
                            var c = a.match(/^\s*(?:[+*\/%&|\^\.=<>]|!=)/m),
                                d = a.match(/[+\-*\/%&|\^\.=<>!]\s*$/m);
                            if (c || d)
                                c && (b.push('$1'), (a = '$1' + a)), d &&
                                (b.push('$2'), (a += '$2'));
                            else {
                                var c = a
                                    .replace(
                                        /(?:\b[A-Z]|\.[a-zA-Z_$])[a-zA-Z_$\d]*|[a-zA-Z_$][a-zA-Z_$\d]*:|this|true|false|null|undefined|typeof|instanceof|in|delete|new|void|arguments|decodeURI|decodeURIComponent|encodeURI|encodeURIComponent|escape|eval|isFinite|isNaN|parseFloat|parseInt|unescape|dojo|dijit|dojox|window|document|'(?:[^'\\]|\\.)*'|"(?:[^"\\]|\\.)*"/g,
                                        ''
                                    )
                                    .match(/([a-z_$][a-z_$\d]*)/gi) || [],
                                    e = {};
                                f.forEach(c, function(a) {
                                    e.hasOwnProperty(a) || (b.push(a), (e[a] = 1));
                                });
                            }
                        }
                        return { args: b, body: a };
                    },
                    a = function(a) {
                        return a.length ?

                            function() {
                                var c = a.length - 1,
                                    d = b.lambda(a[c]).apply(this, arguments);
                                for (--c; 0 <= c; --c)
                                    d = b.lambda(a[c]).call(this, d);
                                return d;
                            } :
                            function(a) {
                                return a;
                            };
                    };
                g.mixin(b, {
                    rawLambda: function(a) {
                        return d(a);
                    },
                    buildLambda: function(a) {
                        a = d(a);
                        return (
                            'function(' + a.args.join(',') + '){return (' + a.body + ');}'
                        );
                    },
                    lambda: function(b) {
                        if ('function' == typeof b) return b;
                        if (b instanceof Array) return a(b);
                        if (e.hasOwnProperty(b)) return e[b];
                        var c = d(b);
                        return (e[b] = new Function(c.args, 'return (' + c.body + ');'));
                    },
                    clearLambdaCache: function() {
                        e = {};
                    },
                });
                return b;
            });
        },
        'dojox/lang/functional/array': function() {
            define(
                [
                    'dojo/_base/kernel',
                    'dojo/_base/lang',
                    'dojo/_base/array',
                    './lambda',
                ],
                function(c, g, f, b) {
                    var e = {};
                    g.mixin(b, {
                        filter: function(f, d, a) {
                            'string' == typeof f && (f = f.split(''));
                            a = a || c.global;
                            d = b.lambda(d);
                            var h = [],
                                n, l, m;
                            if (g.isArray(f))
                                for ((l = 0), (m = f.length); l < m; ++l)
                                    (n = f[l]), d.call(a, n, l, f) && h.push(n);
                            else if (
                                'function' == typeof f.hasNext &&
                                'function' == typeof f.next
                            )
                                for (l = 0; f.hasNext();)
                                    (n = f.next()), d.call(a, n, l++, f) && h.push(n);
                            else
                                for (l in f)
                                    l in e || ((n = f[l]), d.call(a, n, l, f) && h.push(n));
                            return h;
                        },
                        forEach: function(f, d, a) {
                            'string' == typeof f && (f = f.split(''));
                            a = a || c.global;
                            d = b.lambda(d);
                            var h, n;
                            if (g.isArray(f))
                                for (
                                    (h = 0), (n = f.length); h < n; d.call(a, f[h], h, f), ++h
                                );
                            else if (
                                'function' == typeof f.hasNext &&
                                'function' == typeof f.next
                            )
                                for (h = 0; f.hasNext(); d.call(a, f.next(), h++, f));
                            else
                                for (h in f) h in e || d.call(a, f[h], h, f);
                            return a;
                        },
                        map: function(f, d, a) {
                            'string' == typeof f && (f = f.split(''));
                            a = a || c.global;
                            d = b.lambda(d);
                            var h, n, l;
                            if (g.isArray(f))
                                for (
                                    (h = Array((n = f.length))), (l = 0); l < n;
                                    (h[l] = d.call(a, f[l], l, f)), ++l
                                );
                            else if (
                                'function' == typeof f.hasNext &&
                                'function' == typeof f.next
                            )
                                for (
                                    (h = []), (l = 0); f.hasNext(); h.push(d.call(a, f.next(), l++, f))
                                );
                            else
                                for (l in ((h = []), f))
                                    l in e || h.push(d.call(a, f[l], l, f));
                            return h;
                        },
                        every: function(f, d, a) {
                            'string' == typeof f && (f = f.split(''));
                            a = a || c.global;
                            d = b.lambda(d);
                            var h, n;
                            if (g.isArray(f))
                                for ((h = 0), (n = f.length); h < n; ++h) {
                                    if (!d.call(a, f[h], h, f)) return !1;
                                }
                            else if (
                                'function' == typeof f.hasNext &&
                                'function' == typeof f.next
                            )
                                for (h = 0; f.hasNext();) {
                                    if (!d.call(a, f.next(), h++, f)) return !1;
                                }
                            else
                                for (h in f)
                                    if (!(h in e || d.call(a, f[h], h, f))) return !1;
                            return !0;
                        },
                        some: function(f, d, a) {
                            'string' == typeof f && (f = f.split(''));
                            a = a || c.global;
                            d = b.lambda(d);
                            var h, n;
                            if (g.isArray(f))
                                for ((h = 0), (n = f.length); h < n; ++h) {
                                    if (d.call(a, f[h], h, f)) return !0;
                                }
                            else if (
                                'function' == typeof f.hasNext &&
                                'function' == typeof f.next
                            )
                                for (h = 0; f.hasNext();) {
                                    if (d.call(a, f.next(), h++, f)) return !0;
                                }
                            else
                                for (h in f)
                                    if (!(h in e) && d.call(a, f[h], h, f)) return !0;
                            return !1;
                        },
                    });
                    return b;
                }
            );
        },
        'dojox/lang/functional/object': function() {
            define(['dojo/_base/kernel', 'dojo/_base/lang', './lambda'], function(
                c,
                g,
                f
            ) {
                var b = {};
                g.mixin(f, {
                    keys: function(c) {
                        var e = [],
                            d;
                        for (d in c)
                            d in b || e.push(d);
                        return e;
                    },
                    values: function(c) {
                        var e = [],
                            d;
                        for (d in c)
                            d in b || e.push(c[d]);
                        return e;
                    },
                    filterIn: function(e, h, d) {
                        d = d || c.global;
                        h = f.lambda(h);
                        var a = {},
                            g, n;
                        for (n in e)
                            n in b || ((g = e[n]), h.call(d, g, n, e) && (a[n] = g));
                        return a;
                    },
                    forIn: function(e, h, d) {
                        d = d || c.global;
                        h = f.lambda(h);
                        for (var a in e)
                            a in b || h.call(d, e[a], a, e);
                        return d;
                    },
                    mapIn: function(e, h, d) {
                        d = d || c.global;
                        h = f.lambda(h);
                        var a = {},
                            g;
                        for (g in e)
                            g in b || (a[g] = h.call(d, e[g], g, e));
                        return a;
                    },
                });
                return f;
            });
        },
        'dojox/charting/axis2d/common': function() {
            define(
                [
                    'dojo/_base/lang',
                    'dojo/_base/window',
                    'dojo/dom-geometry',
                    'dojox/gfx',
                    'dojo/has',
                ],
                function(c, g, f, b, e) {
                    var h = c.getObject('dojox.charting.axis2d.common', !0),
                        d = function(a) {
                            a.marginLeft = '0px';
                            a.marginTop = '0px';
                            a.marginRight = '0px';
                            a.marginBottom = '0px';
                            a.paddingLeft = '0px';
                            a.paddingTop = '0px';
                            a.paddingRight = '0px';
                            a.paddingBottom = '0px';
                            a.borderLeftWidth = '0px';
                            a.borderTopWidth = '0px';
                            a.borderRightWidth = '0px';
                            a.borderBottomWidth = '0px';
                        };
                    return c.mixin(h, {
                        createText: {
                            gfx: function(a, b, c, d, e, f, h, g) {
                                return b
                                    .createText({ x: c, y: d, text: f, align: e })
                                    .setFont(h)
                                    .setFill(g);
                            },
                            html: function(a, c, h, l, m, p, r, u, t) {
                                c = g.doc.createElement('div');
                                var k = c.style,
                                    n;
                                a.getTextDir && (c.dir = a.getTextDir(p));
                                d(k);
                                k.font = r;
                                c.innerHTML = String(p).replace(/\s/g, '\x26nbsp;');
                                k.color = u;
                                k.position = 'absolute';
                                k.left = '-10000px';
                                g.body().appendChild(c);
                                var C = b.normalizedLength(b.splitFontString(r).size);
                                t ||
                                    (c.getBoundingClientRect ?
                                        ((n = c.getBoundingClientRect()), (n =
                                            n.width || n.right - n.left)) :
                                        (n = f.getMarginBox(c).w));
                                'rtl' == c.dir && (h += t ? t : n);
                                g.body().removeChild(c);
                                k.position = 'relative';
                                if (t)
                                    switch (((k.width = t + 'px'), m)) {
                                        case 'middle':
                                            k.textAlign = 'center';
                                            k.left = h - t / 2 + 'px';
                                            break;
                                        case 'end':
                                            k.textAlign = 'right';
                                            k.left = h - t + 'px';
                                            break;
                                        default:
                                            (k.left = h + 'px'), (k.textAlign = 'left');
                                    }
                                else
                                    switch (m) {
                                        case 'middle':
                                            k.left = Math.floor(h - n / 2) + 'px';
                                            break;
                                        case 'end':
                                            k.left = Math.floor(h - n) + 'px';
                                            break;
                                        default:
                                            k.left = Math.floor(h) + 'px';
                                    }
                                k.top = Math.floor(l - C) + 'px';
                                k.whiteSpace = 'nowrap';
                                t = g.doc.createElement('div');
                                k = t.style;
                                d(k);
                                k.width = '0px';
                                k.height = '0px';
                                t.appendChild(c);
                                a.node.insertBefore(t, a.node.firstChild);
                                e('dojo-bidi') &&
                                    a.htmlElementsRegistry.push([t, h, l, m, p, r, u]);
                                return t;
                            },
                        },
                    });
                }
            );
        },
        'esri/tasks/RouteTask': function() {
            define(
                'dojo/_base/declare dojo/_base/lang dojo/_base/array dojo/has ../kernel ../graphic ../request ../geometry/normalizeUtils ./Task ./RouteResult ./NAMessage ./NAServiceDescription'.split(
                    ' '
                ),
                function(c, g, f, b, e, h, d, a, k, n, l, m) {
                    c = c([k, m], {
                        declaredClass: 'esri.tasks.RouteTask',
                        _eventMap: { 'solve-complete': ['result'] },
                        constructor: function(a) {
                            this._url.orig = this._url.path;
                            this._url.path += '/solve';
                            this._handler = g.hitch(this, this._handler);
                            this.registerConnectEvents();
                        },
                        __msigns: [{
                            n: 'solve',
                            c: 3,
                            a: [{
                                i: 0,
                                p: [
                                    'stops.features',
                                    'barriers.features',
                                    'polylineBarriers.features',
                                    'polygonBarriers.features',
                                ],
                            }, ],
                            e: 2,
                        }, ],
                        _handler: function(a, b, c, d, e) {
                            try {
                                var g = [],
                                    k = [],
                                    m = a.directions || [],
                                    p = a.routes ? a.routes.features : [],
                                    q = a.stops ? a.stops.features : [],
                                    r = a.barriers ? a.barriers.features : [],
                                    t = a.polygonBarriers ? a.polygonBarriers.features : [],
                                    u = a.polylineBarriers ? a.polylineBarriers.features : [],
                                    B = a.messages,
                                    D = f.forEach,
                                    H = f.indexOf,
                                    G = !0,
                                    F,
                                    K,
                                    L =
                                    (a.routes && a.routes.spatialReference) ||
                                    (a.stops && a.stops.spatialReference) ||
                                    (a.barriers && a.barriers.spatialReference) ||
                                    (a.polygonBarriers && a.polygonBarriers.spatialReference) ||
                                    (a.polylineBarriers && a.polylineBarriers.spatialReference);
                                this._chk = a.checksum;
                                D(m, function(a) {
                                    g.push((F = a.routeName));
                                    k[F] = { directions: a };
                                });
                                D(p, function(a) {
                                    -1 === H(g, (F = a.attributes.Name)) &&
                                        (g.push(F), (k[F] = {}));
                                    k[F].route = a;
                                });
                                D(q, function(a) {
                                    K = a.attributes; -
                                    1 ===
                                        H(
                                            g,
                                            (F =
                                                K.RouteName || 'esri.tasks.RouteTask.NULL_ROUTE_NAME')
                                        ) && (g.push(F), (k[F] = {}));
                                    'esri.tasks.RouteTask.NULL_ROUTE_NAME' !== F && (G = !1);
                                    void 0 === k[F].stops && (k[F].stops = []);
                                    k[F].stops.push(a);
                                });
                                0 < q.length &&
                                    !0 === G &&
                                    ((k[g[0]].stops =
                                        k['esri.tasks.RouteTask.NULL_ROUTE_NAME'].stops), delete k[
                                        'esri.tasks.RouteTask.NULL_ROUTE_NAME'
                                    ], g.splice(
                                        f.indexOf(g, 'esri.tasks.RouteTask.NULL_ROUTE_NAME'),
                                        1
                                    ));
                                var Q = [];
                                D(g, function(a, b) {
                                    k[a].routeName = 'esri.tasks.RouteTask.NULL_ROUTE_NAME' === a ?
                                        null :
                                        a;
                                    k[a].spatialReference = L;
                                    Q.push(new n(k[a]));
                                });
                                a = function(a) {
                                    D(a, function(b, c) {
                                        b.geometry && (b.geometry.spatialReference = L);
                                        a[c] = new h(b);
                                    });
                                    return a;
                                };
                                D(B, function(a, b) {
                                    B[b] = new l(a);
                                });
                                var O = {
                                    routeResults: Q,
                                    barriers: a(r),
                                    polygonBarriers: a(t),
                                    polylineBarriers: a(u),
                                    messages: B,
                                };
                                this._successHandler([O], 'onSolveComplete', c, e);
                            } catch (P) {
                                this._errorHandler(P, d, e);
                            }
                        },
                        solve: function(a, b, c, e) {
                            var f = e.assembly;
                            a = this._encode(
                                g.mixin({},
                                    this._url.query, { f: 'json' },
                                    a.toJson(f && f[0]),
                                    this._chk ? { checksum: this._chk } : {}
                                )
                            );
                            var h = this._handler,
                                k = this._errorHandler;
                            return d({
                                url: this._url.path,
                                timeout: 25e4,
                                content: a,
                                callbackParamName: 'callback',
                                load: function(a, d) {
                                    h(a, d, b, c, e.dfd);
                                },
                                error: function(a) {
                                    k(a, c, e.dfd);
                                },
                            });
                        },
                        onSolveComplete: function() {},
                    });
                    a._createWrappers(c);
                    g.setObject('tasks.RouteTask', c, e);
                    return c;
                }
            );
        },
        'esri/tasks/RouteResult': function() {
            define(
                'dojo/_base/declare dojo/_base/lang dojo/_base/array dojo/has ../kernel ../graphic ./DirectionsFeatureSet'.split(
                    ' '
                ),
                function(c, g, f, b, e, h, d) {
                    c = c(null, {
                        declaredClass: 'esri.tasks.RouteResult',
                        constructor: function(a) {
                            var b = a.spatialReference,
                                c = a.route;
                            if (a.directions) {
                                var e = [],
                                    g = [],
                                    p = [];
                                f.forEach(a.directions.features, function(a, b) {
                                    g[b] = a.compressedGeometry;
                                    e[b] = a.strings;
                                    p[b] = a.events;
                                });
                                a.directions.strings = e;
                                a.directions.events = p;
                                this.directions = new d(a.directions, g);
                            }
                            this.routeName = a.routeName;
                            c &&
                                (c.geometry &&
                                    (c.geometry.spatialReference = b), (this.route = new h(c)));
                            if (a.stops) {
                                var r = (this.stops = []);
                                f.forEach(a.stops, function(a, c) {
                                    a.geometry && (a.geometry.spatialReference = b);
                                    r[a.attributes.Sequence - 1] = new h(a);
                                });
                            }
                        },
                        routeName: null,
                        directions: null,
                        route: null,
                        stops: null,
                    });
                    g.setObject('tasks.RouteResult', c, e);
                    return c;
                }
            );
        },
        'esri/tasks/DirectionsFeatureSet': function() {
            define(
                'dojo/_base/declare dojo/_base/lang dojo/_base/array dojo/has dojo/json ../kernel ../geometry/Extent ../geometry/Polyline ../geometry/Point ../graphic ./FeatureSet'.split(
                    ' '
                ),
                function(c, g, f, b, e, h, d, a, k, n, l) {
                    c = c(l, {
                        declaredClass: 'esri.tasks.DirectionsFeatureSet',
                        constructor: function(a, b) {
                            this.routeId = a.routeId;
                            this.routeName = a.routeName;
                            g.mixin(this, a.summary);
                            this.extent = new d(this.envelope);
                            var c = this._fromCompressedGeometry,
                                h = this.features,
                                l = this.extent.spatialReference,
                                m = [];
                            f.forEach(b, function(a, b) {
                                h[b].setGeometry((m[b] = a ? c(a, l) : h[b].geometry));
                            });
                            this.mergedGeometry = this._mergePolylinesToSinglePath(m, l);
                            this.geometryType = 'esriGeometryPolyline';
                            f.forEach(a.events, function(b, c) {
                                f.forEach(b, function(a, c) {
                                    b[c] = new n(new k(a.point.x, a.point.y, l), null, {
                                        ETA: a.ETA,
                                        strings: e.stringify(a.strings),
                                        arriveTimeUTC: a.arriveTimeUTC,
                                    });
                                });
                                a.events[c] = b;
                            });
                            delete this.envelope;
                        },
                        _fromCompressedGeometry: function(b, c) {
                            var d = 0,
                                e = 0,
                                h = 0,
                                g = 0,
                                k = [],
                                l,
                                m,
                                n,
                                p,
                                w,
                                A = 0,
                                E = 0,
                                B = 0;
                            (b = b.match(/((\+|\-)[^\+\-\|]+|\|)/g)) || (b = []);
                            0 === parseInt(b[A], 32) ?
                                ((A = 2), (l = parseInt(b[A], 32)), A++, (n = parseInt(
                                        b[A],
                                        32
                                    )), A++, l & 1 &&
                                    ((E = f.indexOf(b, '|') + 1), (p = parseInt(
                                        b[E],
                                        32
                                    )), E++), l & 2 &&
                                    ((B = f.indexOf(b, '|', E) + 1), (w = parseInt(
                                        b[B],
                                        32
                                    )), B++)) :
                                ((n = parseInt(b[A], 32)), A++);
                            for (; A < b.length && '|' !== b[A];)
                                (l = parseInt(b[A], 32) + d), A++, (d = l), (m =
                                    parseInt(b[A], 32) + e), A++, (e = m), (l = [
                                    l / n,
                                    m / n,
                                ]), E &&
                                ((m = parseInt(b[E], 32) + h), E++, (h = m), l.push(
                                    m / p
                                )), B &&
                                ((m = parseInt(b[B], 32) + g), B++, (g = m), l.push(
                                    m / w
                                )), k.push(l);
                            d = new a({ paths: [k], hasZ: 0 < E, hasM: 0 < B });
                            d.setSpatialReference(c);
                            return d;
                        },
                        _mergePolylinesToSinglePath: function(b, c) {
                            var d = [],
                                e = !1;
                            f.forEach(b, function(a) {
                                f.forEach(a.paths, function(b) {
                                    e = e || a.hasM;
                                    d = d.concat(b);
                                });
                            });
                            var h = [],
                                g = [0, 0];
                            f.forEach(d, function(a) {
                                if (a[0] !== g[0] || a[1] !== g[1]) h.push(a), (g = a);
                            });
                            return new a({ paths: [h], spatialReference: c, hasM: e });
                        },
                    });
                    g.setObject('tasks.DirectionsFeatureSet', c, h);
                    return c;
                }
            );
        },
        'esri/tasks/NAMessage': function() {
            define(
                ['dojo/_base/declare', 'dojo/_base/lang', 'dojo/has', '../kernel'],
                function(c, g, f, b) {
                    c = c(null, {
                        declaredClass: 'esri.tasks.NAMessage',
                        constructor: function(b) {
                            g.mixin(this, b);
                        },
                    });
                    g.mixin(c, {
                        TYPE_INFORMATIVE: 0,
                        TYPE_PROCESS_DEFINITION: 1,
                        TYPE_PROCESS_START: 2,
                        TYPE_PROCESS_STOP: 3,
                        TYPE_WARNING: 50,
                        TYPE_ERROR: 100,
                        TYPE_EMPTY: 101,
                        TYPE_ABORT: 200,
                    });
                    g.setObject('tasks.NAMessage', c, b);
                    return c;
                }
            );
        },
        'esri/tasks/NAServiceDescription': function() {
            define(
                [
                    'dojo/_base/declare',
                    'dojo/json',
                    'dojo/Deferred',
                    'dojo/_base/lang',
                    '../request',
                ],
                function(c, g, f, b, e) {
                    return c(null, {
                        declaredClass: 'esri.tasks._NAServiceDescription',
                        _sd: null,
                        getServiceDescription: function(c, d) {
                            var a = new f();
                            if (this._sd) a.resolve(this._sd);
                            else if (this._url && this._url.orig) {
                                var h = this._url.orig,
                                    n = (this._url.path.match(/\/solve$/) || []).length ?
                                    'Route' :
                                    (this._url.path.match(/\/solveClosestFacility$/) || [])
                                    .length ?
                                    'ClosestFacility' :
                                    'ServiceAreas',
                                    l,
                                    m = function(b) {
                                        e({
                                            url: b +
                                                ('/' === b[b.length - 1] ? '' : '/') +
                                                'GetTravelModes/execute',
                                            content: { f: 'json', serviceName: n },
                                            callbackParamName: 'callback',
                                        }).then(
                                            function(b) {
                                                var c = [],
                                                    d = null;
                                                if (b && b.results && b.results.length)
                                                    for (var e = 0; e < b.results.length; e++)
                                                        if (
                                                            'supportedTravelModes' === b.results[e].paramName
                                                        ) {
                                                            if (
                                                                b.results[e].value &&
                                                                b.results[e].value.features
                                                            )
                                                                for (
                                                                    var f = 0; f < b.results[e].value.features.length; f++
                                                                )
                                                                    if (
                                                                        b.results[e].value.features[f].attributes
                                                                    ) {
                                                                        var h = g.parse(
                                                                            b.results[e].value.features[f].attributes
                                                                            .TravelMode
                                                                        );
                                                                        c.push(h);
                                                                    }
                                                        } else
                                                            'defaultTravelMode' === b.results[e].paramName &&
                                                            (d = b.results[e].value);
                                                l.supportedTravelModes = c;
                                                l.defaultTravelMode = d;
                                                a.resolve(l);
                                            },
                                            function(b) {
                                                a.reject(b);
                                            }
                                        );
                                    };
                                e({
                                    url: h,
                                    content: { f: 'json' },
                                    callbackParamName: 'callback',
                                }).then(
                                    function(b) {
                                        l = b;
                                        l.supportedTravelModes || (l.supportedTravelModes = []);
                                        for (b = 0; b < l.supportedTravelModes.length; b++)
                                            l.supportedTravelModes[b].id ||
                                            (l.supportedTravelModes[b].id =
                                                l.supportedTravelModes[b].itemId);
                                        d
                                            ?
                                            a.resolve(l) :
                                            c ?
                                            m(c) :
                                            10.4 <= l.currentVersion ?
                                            e({
                                                url: h +
                                                    ('/' === h[h.length - 1] ? '' : '/') +
                                                    'retrieveTravelModes',
                                                content: { f: 'json' },
                                                callbackParamName: 'callback',
                                            }).then(
                                                function(b) {
                                                    l.supportedTravelModes =
                                                        b.supportedTravelModes;
                                                    l.defaultTravelMode = b.defaultTravelMode;
                                                    a.resolve(l);
                                                },
                                                function(b) {
                                                    a.reject(b);
                                                }
                                            ) :
                                            e({
                                                url: h.substring(
                                                    0,
                                                    h.indexOf('/rest/') + 6
                                                ) + 'info',
                                                content: { f: 'json' },
                                                callbackParamName: 'callback',
                                            }).then(
                                                function(b) {
                                                    b.owningSystemUrl ?
                                                        ((h = b.owningSystemUrl), e({
                                                            url: h +
                                                                ('/' === h[h.length - 1] ?
                                                                    '' :
                                                                    '/') +
                                                                'sharing/rest/portals/self',
                                                            content: { f: 'json' },
                                                            callbackParamName: 'callback',
                                                        }).then(
                                                            function(b) {
                                                                b &&
                                                                    b.helperServices &&
                                                                    b.helperServices
                                                                    .routingUtilities &&
                                                                    b.helperServices.routingUtilities
                                                                    .url ?
                                                                    m(
                                                                        b.helperServices
                                                                        .routingUtilities.url
                                                                    ) :
                                                                    a.resolve(l);
                                                            },
                                                            function(b) {
                                                                a.reject(b);
                                                            }
                                                        )) :
                                                        a.resolve(l);
                                                },
                                                function(b) {
                                                    a.reject(b);
                                                }
                                            );
                                    },
                                    function(b) {
                                        a.reject(b);
                                    }
                                );
                            } else a.reject('NA Task has no URL specified.');
                            a.then(
                                b.hitch(this, function(a) {
                                    this._sd = a;
                                }),
                                b.hitch(this, function() {
                                    this._sd = null;
                                })
                            );
                            return a.promise;
                        },
                        getOwningSystemUrl: function() {
                            var b = new f();
                            if (this._url && this._url.orig) {
                                var c = this._url.orig;
                                e({
                                    url: c.substring(0, c.indexOf('/rest/') + 6) + 'info',
                                    content: { f: 'json' },
                                    callbackParamName: 'callback',
                                }).promise.always(function(a) {
                                    b.resolve(a.owningSystemUrl);
                                });
                            } else b.resolve(void 0);
                            return b.promise;
                        },
                    });
                }
            );
        },
        'esri/tasks/RouteParameters': function() {
            define(
                'dojo/_base/declare dojo/_base/lang dojo/_base/json dojo/has ../kernel ../lang ../graphicsUtils ./NATypes'.split(
                    ' '
                ),
                function(c, g, f, b, e, h, d, a) {
                    c = c(null, {
                        declaredClass: 'esri.tasks.RouteParameters',
                        accumulateAttributes: null,
                        attributeParameterValues: null,
                        barriers: null,
                        directionsLanguage: null,
                        directionsLengthUnits: null,
                        directionsOutputType: null,
                        directionsStyleName: null,
                        directionsTimeAttribute: null,
                        doNotLocateOnRestrictedElements: !0,
                        findBestSequence: null,
                        ignoreInvalidLocations: null,
                        impedanceAttribute: null,
                        outputLines: 'esriNAOutputLineTrueShape',
                        outputGeometryPrecision: null,
                        outputGeometryPrecisionUnits: null,
                        outSpatialReference: null,
                        overrides: null,
                        polygonBarriers: null,
                        polylineBarriers: null,
                        preserveFirstStop: null,
                        preserveLastStop: null,
                        restrictionAttributes: null,
                        restrictUTurns: null,
                        returnBarriers: !1,
                        returnDirections: !1,
                        returnPolygonBarriers: !1,
                        returnPolylineBarriers: !1,
                        returnRoutes: !0,
                        returnStops: !1,
                        returnZ: !0,
                        startTime: null,
                        startTimeIsUTC: null,
                        timeWindowsAreUTC: null,
                        stops: null,
                        useHierarchy: null,
                        useTimeWindows: null,
                        travelMode: null,
                        toJson: function(b) {
                            var c = {
                                    returnDirections: this.returnDirections,
                                    returnRoutes: this.returnRoutes,
                                    returnZ: this.returnZ,
                                    returnStops: this.returnStops,
                                    returnBarriers: this.returnBarriers,
                                    returnPolygonBarriers: this.returnPolygonBarriers,
                                    returnPolylineBarriers: this.returnPolylineBarriers,
                                    attributeParameterValues: this.attributeParameterValues &&
                                        f.toJson(this.attributeParameterValues),
                                    outSR: this.outSpatialReference ?
                                        this.outSpatialReference.wkid ||
                                        f.toJson(this.outSpatialReference.toJson()) :
                                        null,
                                    outputLines: this.outputLines,
                                    overrides: this.overrides,
                                    findBestSequence: this.findBestSequence,
                                    preserveFirstStop: this.preserveFirstStop,
                                    preserveLastStop: this.preserveLastStop,
                                    useTimeWindows: this.useTimeWindows,
                                    startTime: this.startTime ? this.startTime.getTime() : null,
                                    startTimeIsUTC: this.startTimeIsUTC,
                                    timeWindowsAreUTC: this.timeWindowsAreUTC,
                                    accumulateAttributeNames: this.accumulateAttributes ?
                                        this.accumulateAttributes.join(',') :
                                        null,
                                    ignoreInvalidLocations: this.ignoreInvalidLocations,
                                    impedanceAttributeName: this.impedanceAttribute,
                                    restrictionAttributeNames: this.restrictionAttributes ?
                                        this.restrictionAttributes.join(',') :
                                        null,
                                    restrictUTurns: this.restrictUTurns,
                                    useHierarchy: this.useHierarchy,
                                    directionsLanguage: this.directionsLanguage,
                                    outputGeometryPrecision: this.outputGeometryPrecision,
                                    outputGeometryPrecisionUnits: this.outputGeometryPrecisionUnits,
                                    directionsLengthUnits: a.LengthUnit[this.directionsLengthUnits],
                                    directionsTimeAttributeName: this.directionsTimeAttribute,
                                    directionsStyleName: this.directionsStyleName,
                                    travelMode: 'object' === typeof this.travelMode ?
                                        f.toJson(this.travelMode) :
                                        this.travelMode,
                                },
                                e = this.stops;
                            'esri.tasks.FeatureSet' === e.declaredClass &&
                                0 < e.features.length ?
                                (c.stops = f.toJson({
                                    type: 'features',
                                    features: d._encodeGraphics(
                                        e.features,
                                        b && b['stops.features']
                                    ),
                                    doNotLocateOnRestrictedElements: this
                                        .doNotLocateOnRestrictedElements,
                                })) :
                                'esri.tasks.DataLayer' === e.declaredClass ?
                                (c.stops = e) :
                                'esri.tasks.DataFile' === e.declaredClass &&
                                (c.stops = f.toJson({
                                    type: 'features',
                                    url: e.url,
                                    doNotLocateOnRestrictedElements: this
                                        .doNotLocateOnRestrictedElements,
                                }));
                            if (this.directionsOutputType)
                                switch (this.directionsOutputType.toLowerCase()) {
                                    case 'complete':
                                        c.directionsOutputType = 'esriDOTComplete';
                                        break;
                                    case 'complete-no-events':
                                        c.directionsOutputType = 'esriDOTCompleteNoEvents';
                                        break;
                                    case 'instructions-only':
                                        c.directionsOutputType = 'esriDOTInstructionsOnly';
                                        break;
                                    case 'standard':
                                        c.directionsOutputType = 'esriDOTStandard';
                                        break;
                                    case 'summary-only':
                                        c.directionsOutputType = 'esriDOTSummaryOnly';
                                        break;
                                    default:
                                        c.directionsOutputType = this.directionsOutputType;
                                }
                            e = function(a, c) {
                                return a ?
                                    'esri.tasks.FeatureSet' === a.declaredClass ?
                                    0 < a.features.length ?
                                    f.toJson({
                                        type: 'features',
                                        features: d._encodeGraphics(
                                            a.features,
                                            b && b[c]
                                        ),
                                    }) :
                                    null :
                                    'esri.tasks.DataLayer' === a.declaredClass ?
                                    a :
                                    'esri.tasks.DataFile' === a.declaredClass ?
                                    f.toJson({ type: 'features', url: a.url }) :
                                    f.toJson(a) :
                                    null;
                            };
                            this.barriers &&
                                (c.barriers = e(this.barriers, 'barriers.features'));
                            this.polygonBarriers &&
                                (c.polygonBarriers = e(
                                    this.polygonBarriers,
                                    'polygonBarriers.features'
                                ));
                            this.polylineBarriers &&
                                (c.polylineBarriers = e(
                                    this.polylineBarriers,
                                    'polylineBarriers.features'
                                ));
                            return h.filter(c, function(a) {
                                if (null !== a) return !0;
                            });
                        },
                    });
                    g.setObject('tasks.RouteParameters', c, e);
                    return c;
                }
            );
        },
        'esri/tasks/NATypes': function() {
            define(['dojo/_base/lang', 'dojo/has', '../kernel'], function(c, g, f) {
                g = {
                    esriFeet: 'esriNAUFeet',
                    esriKilometers: 'esriNAUKilometers',
                    esriMeters: 'esriNAUMeters',
                    esriMiles: 'esriNAUMiles',
                    esriNauticalMiles: 'esriNAUNauticalMiles',
                    esriYards: 'esriNAUYards',
                };
                var b = {
                        NONE: 'esriNAOutputLineNone',
                        STRAIGHT: 'esriNAOutputLineStraight',
                        TRUE_SHAPE: 'esriNAOutputLineTrueShape',
                        TRUE_SHAPE_WITH_MEASURE: 'esriNAOutputLineTrueShapeWithMeasure',
                    },
                    e = {
                        ALLOW_BACKTRACK: 'esriNFSBAllowBacktrack',
                        AT_DEAD_ENDS_ONLY: 'esriNFSBAtDeadEndsOnly',
                        NO_BACKTRACK: 'esriNFSBNoBacktrack',
                        AT_DEAD_ENDS_AND_INTERSECTIONS: 'esriNFSBAtDeadEndsAndIntersections',
                    },
                    h = {
                        NONE: 'esriNAOutputPolygonNone',
                        SIMPLIFIED: 'esriNAOutputPolygonSimplified',
                        DETAILED: 'esriNAOutputPolygonDetailed',
                    },
                    d = {
                        FROM_FACILITY: 'esriNATravelDirectionFromFacility',
                        TO_FACILITY: 'esriNATravelDirectionToFacility',
                    },
                    a = {
                        LengthUnit: g,
                        OutputLine: b,
                        UTurn: e,
                        OutputPolygon: h,
                        TravelDirection: d,
                    };
                c.setObject('tasks._NALengthUnit', g, f);
                c.setObject('tasks.NAOutputLine', b, f);
                c.setObject('tasks.NAUTurn', e, f);
                c.setObject('tasks.NAOutputPolygon', h, f);
                c.setObject('tasks.NATravelDirection', d, f);
                return a;
            });
        },
        'esri/layers/wmts': function() {
            define(['./agscommon', './tiled', './WMTSLayer'], function() {
                return {};
            });
        },
        'esri/layers/tiled': function() {
            define(
                [
                    './TiledMapServiceLayer',
                    './TileInfo',
                    './LOD',
                    '../geometry',
                    '../utils',
                ],
                function() {
                    return {};
                }
            );
        },
        'esri/layers/WMTSLayer': function() {
            define(
                'dojo/_base/kernel dojo/_base/declare dojo/_base/lang dojo/_base/array dojo/sniff dojox/xml/parser ../kernel ../lang ../request ../urlUtils ../WKIDUnitConversion ../SpatialReference ../geometry/Point ../geometry/Extent ../geometry/webMercatorUtils ./TiledMapServiceLayer ./TileInfo ./WMTSLayerInfo dojo/query'.split(
                    ' '
                ),
                function(c, g, f, b, e, h, d, a, k, n, l, m, p, r, u, t, q, v) {
                    g = g([t], {
                        declaredClass: 'esri.layers.WMTSLayer',
                        copyright: null,
                        extent: null,
                        tileUrl: null,
                        spatialReference: null,
                        tileInfo: null,
                        constructor: function(a, b) {
                            this.version = '1.0.0';
                            this.tileUrl = this._url = a;
                            this.serviceMode = 'RESTful';
                            this._parseCapabilities = f.hitch(this, this._parseCapabilities);
                            this._getCapabilitiesError = f.hitch(
                                this,
                                this._getCapabilitiesError
                            );
                            this._formatDictionary = {
                                'image/png': '.png',
                                'image/png8': '.png',
                                'image/png24': '.png',
                                'image/png32': '.png',
                                'image/jpg': '.jpg',
                                'image/jpeg': '.jpeg',
                                'image/gif': '.gif',
                                'image/bmp': '.bmp',
                                'image/tiff': '.tif',
                                'image/jpgpng': '',
                                'image/jpegpng': '',
                                'image/unknown': '',
                            };
                            b || (b = {});
                            if (b.serviceMode)
                                if ('KVP' === b.serviceMode || 'RESTful' === b.serviceMode)
                                    this.serviceMode = b.serviceMode;
                                else return;
                            this.customParameters = b.customParameters;
                            this.customLayerParameters = b.customLayerParameters;
                            this.layerInfo = new v();
                            b.layerInfo &&
                                ((this.layerInfo = b.layerInfo), (this._identifier =
                                        b.layerInfo.identifier), (this._tileMatrixSetId =
                                        b.layerInfo.tileMatrixSet), b.layerInfo.format &&
                                    (this.format = 'image/' + b.layerInfo.format), (this._style =
                                        b.layerInfo.style), (this.title =
                                        b.layerInfo.title), (this._dimension =
                                        b.layerInfo.dimension), (this._dimension2 =
                                        b.layerInfo.dimension2));
                            b.resourceInfo ?
                                ((this.version = b.resourceInfo.version), b.resourceInfo
                                    .getTileUrl &&
                                    (this._url = this.tileUrl =
                                        b.resourceInfo.getTileUrl), (this.copyright =
                                        b.resourceInfo.copyright), (this.layerInfos =
                                        b.resourceInfo.layerInfos), (this.customParameters =
                                        b.resourceInfo.customParameters ||
                                        this.customParameters), (this.customLayerParameters =
                                        b.resourceInfo.customLayerParameters ||
                                        this
                                        .customLayerParameters), this._parseResourceInfo(), (this.loaded = !0), this.onLoad(
                                        this
                                    )) :
                                this._getCapabilities();
                        },
                        setActiveLayer: function(a) {
                            this.setVisibleLayer(a);
                        },
                        setVisibleLayer: function(a) {
                            this._setActiveLayer(a);
                            this.refresh(!0);
                        },
                        setCustomParameters: function(a, b) {
                            this.customParameters = a;
                            this.customLayerParameters = b;
                            this.refresh(!0);
                        },
                        getTileUrl: function(a, b, c) {
                            a = this._levelToLevelValue[a];
                            a = this.resourceUrls && 0 < this.resourceUrls.length ?
                                this.resourceUrls[b % this.resourceUrls.length].template
                                .replace(/\{Style\}/gi, this._style)
                                .replace(/\{TileMatrixSet\}/gi, this._tileMatrixSetId)
                                .replace(/\{TileMatrix\}/gi, a)
                                .replace(/\{TileRow\}/gi, b)
                                .replace(/\{TileCol\}/gi, c)
                                .replace(/\{dimensionValue\}/gi, this._dimension)
                                .replace(/\{dimensionValue2\}/gi, this._dimension2) :
                                this.UrlTemplate
                                .replace(/\{level\}/gi, a)
                                .replace(/\{row\}/gi, b)
                                .replace(/\{col\}/gi, c);
                            a = this._appendCustomLayerParameters(a);
                            a = this.addTimestampToURL(a);
                            return n.addProxy(a);
                        },
                        getTileUrlTemplate: function(a) {
                            var c = a.identifier,
                                d = a.tileMatrixSet,
                                e = a.format,
                                f = a.style,
                                h = a.dimension,
                                g = a.dimension2;
                            c
                                ?
                                (a = b.filter(this.layers, function(a) {
                                    return a.identifier === c;
                                })[0]) :
                                ((a = this.layers[0]), (c = this.layers[0].identifier));
                            if (a) {
                                if (!e) e = a.formats[0];
                                else if (!(-1 === e.indexOf('image/') &&
                                        -1 < b.indexOf(a.formats, e)) &&
                                    (-1 === e.indexOf('image/') && (e = 'image/' + e), -1 ===
                                        b.indexOf(a.formats, e))
                                ) {
                                    this.onError(
                                        Error("The layer doesn't support the format of " + e)
                                    );
                                    return;
                                }
                                if (!f) f = a.styles[0];
                                else if (-1 === b.indexOf(a.styles, f)) {
                                    this.onError(
                                        Error("The layer doesn't support the style of " + f)
                                    );
                                    return;
                                }
                                if (!h && a.dimensions) h = a.dimensions[0];
                                else if (-1 === b.indexOf(a.dimensions, h)) {
                                    this.onError(
                                        Error("The layer doesn't support the dimension of " + h)
                                    );
                                    return;
                                }
                                if (!g && a.dimensions2) g = a.dimensions2[0];
                                else if (-1 === b.indexOf(a.dimensions2, g)) {
                                    this.onError(
                                        Error("The layer doesn't support the dimension of " + g)
                                    );
                                    return;
                                }
                                var k;
                                if (d) {
                                    if (
                                        ((k = b.filter(a.tileMatrixSetInfos, function(a) {
                                            return a.tileMatrixSet === d;
                                        })[0]), !k)
                                    ) {
                                        this.onError(
                                            Error(
                                                'The tileMatrixSetId ' +
                                                d +
                                                ' is not supported by the layer of ' +
                                                c
                                            )
                                        );
                                        return;
                                    }
                                } else
                                    (k = b.filter(a.tileMatrixSetInfos, function(a) {
                                        return 'GoogleMapsCompatible' === a.tileMatrixSet;
                                    })[0]) || (k = a.tileMatrixSetInfos[0]), (d =
                                        k.tileMatrixSet);
                                return this._getTileUrlTemplate(c, d, e, f, h, g);
                            }
                            this.onError(Error("couldn't find the layer " + c));
                        },
                        _getTileUrlTemplate: function(a, b, c, d, e, f) {
                            var h;
                            a || (a = this._identifier);
                            b || (b = this._tileMatrixSetId);
                            c || (c = this.format);
                            d || '' === d || (d = this._style);
                            if (this.resourceUrls && 0 < this.resourceUrls.length)
                                return (h = this.resourceUrls[0].template), h.indexOf(
                                        '.xxx'
                                    ) ===
                                    h.length - 4 &&
                                    (h = h.slice(0, h.length - 4)), (h = h.replace(
                                        /\{Style\}/gi,
                                        d
                                    )), (h = h.replace(/\{TileMatrixSet\}/gi, b)), (h = h.replace(
                                        /\{TileMatrix\}/gi,
                                        '{level}'
                                    )), (h = h.replace(/\{TileRow\}/gi, '{row}')), (h = h.replace(
                                        /\{TileCol\}/gi,
                                        '{col}'
                                    )), (h = h.replace(
                                        /\{dimensionValue\}/gi,
                                        e
                                    )), (h = h.replace(/\{dimensionValue2\}/gi, f));
                            'KVP' === this.serviceMode ?
                                (h =
                                    this._url +
                                    'SERVICE\x3dWMTS\x26VERSION\x3d' +
                                    this.version +
                                    '\x26REQUEST\x3dGetTile\x26LAYER\x3d' +
                                    a +
                                    '\x26STYLE\x3d' +
                                    d +
                                    '\x26FORMAT\x3d' +
                                    c +
                                    '\x26TILEMATRIXSET\x3d' +
                                    b +
                                    '\x26TILEMATRIX\x3d{level}\x26TILEROW\x3d{row}\x26TILECOL\x3d{col}') :
                                'RESTful' === this.serviceMode &&
                                ((e = ''), this._formatDictionary[c.toLowerCase()] &&
                                    (e = this._formatDictionary[c.toLowerCase()]), (h =
                                        this._url +
                                        a +
                                        '/' +
                                        d +
                                        '/' +
                                        b +
                                        '/{level}/{row}/{col}' +
                                        e));
                            return h;
                        },
                        _parseResourceInfo: function() {
                            var a = this.layerInfos,
                                c, d;
                            'KVP' === this.serviceMode &&
                                (this._url += -1 < this._url.indexOf('?') ? '' : '?');
                            for (d = 0; d < a.length; d++)
                                if (!((this._identifier &&
                                            a[d].identifier !== this._identifier) ||
                                        (this.title && a[d].title !== this.title) ||
                                        (this._tileMatrixSetId &&
                                            a[d].tileMatrixSet !== this._tileMatrixSetId) ||
                                        (this.format && 'image/' + a[d].format !== this.format) ||
                                        (this._style && a[d].style !== this._style))) {
                                    f.mixin(this, {
                                        description: a[d].description,
                                        tileInfo: a[d].tileInfo,
                                        spatialReference: a[d].tileInfo.spatialReference,
                                        fullExtent: a[d].fullExtent,
                                        initialExtent: a[d].initialExtent,
                                        _identifier: a[d].identifier,
                                        _tileMatrixSetId: a[d].tileMatrixSet,
                                        format: 'image/' + a[d].format,
                                        _style: a[d].style,
                                    });
                                    break;
                                }
                            for (d = 0; d < a.length; d++)
                                (c = a[d].tileInfo), 96 !== c.dpi &&
                                (b.forEach(c.lods, function(a) {
                                    a.scale = 96 * a.scale / c.dpi;
                                }), (c.dpi = 96)), b.forEach(
                                    c.lods,
                                    function(b) {
                                        b.resolution = this._getResolution(
                                            c.spatialReference.wkid,
                                            90.71428571428571 * b.scale / 96,
                                            a[d].tileMatrixSet
                                        );
                                    },
                                    this
                                );
                            this._setActiveLayer();
                            this.UrlTemplate = this._getTileUrlTemplate();
                            this._levelToLevelValue = [];
                            b.forEach(
                                this.tileInfo.lods,
                                function(a) {
                                    this._levelToLevelValue[a.level] = a.levelValue ?
                                        a.levelValue :
                                        a.level;
                                },
                                this
                            );
                        },
                        _getCapabilities: function() {
                            var a;
                            'KVP' === this.serviceMode ?
                                (a = -1 < this._url.indexOf('?') ?
                                    this._url +
                                    '\x26request\x3dGetCapabilities\x26service\x3dWMTS\x26version\x3d' +
                                    this.version :
                                    this._url +
                                    '?request\x3dGetCapabilities\x26service\x3dWMTS\x26version\x3d' +
                                    this.version) :
                                'RESTful' === this.serviceMode &&
                                (a =
                                    this._url + '/' + this.version + '/WMTSCapabilities.xml');
                            a = this._appendCustomParameters(a);
                            k({
                                url: a,
                                handleAs: 'text',
                                load: this._parseCapabilities,
                                error: this._getCapabilitiesError,
                            });
                        },
                        _parseCapabilities: function(a) {
                            a = a.replace(/ows:/gi, '');
                            a = h.parse(a);
                            var d = c.query('Contents', a)[0];
                            if (d) {
                                var e = c.query('OperationsMetadata', a)[0],
                                    f = c.query("[name\x3d'GetTile']", e)[0],
                                    e = this._url,
                                    f = c.query('Get', f),
                                    g,
                                    k = !1,
                                    l,
                                    m;
                                for (g = 0; g < f.length; g++) {
                                    var n = c.query('Constraint', f[g])[0];
                                    if (!n ||
                                        this._getTagWithChildTagValue(
                                            'AllowedValues',
                                            'Value',
                                            this.serviceMode,
                                            n
                                        )
                                    ) {
                                        e = f[g].attributes[0].nodeValue;
                                        k = !0;
                                        break;
                                    } else if (!n ||
                                        this._getTagWithChildTagValue(
                                            'AllowedValues',
                                            'Value',
                                            'RESTful',
                                            n
                                        )
                                    )
                                        l = f[g].attributes[0].nodeValue;
                                    else if (!n ||
                                        this._getTagWithChildTagValue(
                                            'AllowedValues',
                                            'Value',
                                            'KVP',
                                            n
                                        )
                                    )
                                        m = f[g].attributes[0].nodeValue;
                                }
                                k ||
                                    ('KVP' === this.serviceMode && l ?
                                        ((e = l), (this.serviceMode = 'RESTful')) :
                                        'RESTful' === this.serviceMode &&
                                        m &&
                                        ((e = m), (this.serviceMode = 'KVP'))); -
                                1 === e.indexOf('/1.0.0/') &&
                                    'RESTful' === this.serviceMode &&
                                    (e += '/');
                                'KVP' === this.serviceMode &&
                                    (e += -1 < e.indexOf('?') ? '' : '?');
                                this._url = e;
                                this.copyright = this._getTagValues(
                                    'Capabilities\x3eServiceIdentification\x3eAccessConstraints',
                                    a
                                )[0];
                                l = c.query('Layer', d);
                                var p, q = [];
                                this.layers = [];
                                b.forEach(
                                    l,
                                    function(a) {
                                        p = this._getTagValues('Identifier', a)[0];
                                        q.push(p);
                                        this.layers.push(this._getWMTSLayerInfo(p, a, d));
                                    },
                                    this
                                );
                                this._setActiveLayer();
                                this.loaded = !0;
                                this.onLoad(this);
                            } else
                                this.onError(Error('The WMTS capabilities XML is not valid'));
                        },
                        _setActiveLayer: function(a) {
                            a || (a = {});
                            a.identifier && (this._identifier = a.identifier);
                            a.tileMatrixSet && (this._tileMatrixSetId = a.tileMatrixSet);
                            a.format && (this.format = a.format);
                            a.style && (this._style = a.style);
                            a.dimension && (this._dimension = a.dimension);
                            a.dimension2 && (this._dimension2 = a.dimension2);
                            if (this.layers)
                                if (
                                    (this._identifier ?
                                        (a = b.filter(
                                            this.layers,
                                            function(a) {
                                                return a.identifier === this._identifier;
                                            },
                                            this
                                        )[0]) :
                                        ((a = this
                                            .layers[0]), (this._identifier = this.layers[0].identifier)), a)
                                ) {
                                    if (this.format) {
                                        if (
                                            (-1 === this.format.indexOf('image/') &&
                                                (this.format = 'image/' + this.format), -1 ===
                                                b.indexOf(a.formats, this.format))
                                        ) {
                                            this.onError(
                                                Error(
                                                    "The layer doesn't support the format of " +
                                                    this.format
                                                )
                                            );
                                            return;
                                        }
                                    } else
                                        (this.format = a.formats[0]), -1 ===
                                        this.format.indexOf('image/') &&
                                        (this.format = 'image/' + this.format);
                                    if (!this._style) this._style = a.styles[0];
                                    else if (-1 === b.indexOf(a.styles, this._style)) {
                                        this.onError(
                                            Error(
                                                "The layer doesn't support the style of " + this._style
                                            )
                                        );
                                        return;
                                    }
                                    if (!this._dimension && a.dimensions)
                                        this._dimension = a.dimensions[0];
                                    else if (-1 === b.indexOf(a.dimensions, this._dimension)) {
                                        this.onError(
                                            Error(
                                                "The layer doesn't support the dimension of " +
                                                this._dimension
                                            )
                                        );
                                        return;
                                    }
                                    if (!this._dimension2 && a.dimensions2)
                                        this._dimension2 = a.dimensions2[0];
                                    else if (-1 === b.indexOf(a.dimensions2, this._dimension2)) {
                                        this.onError(
                                            Error(
                                                "The layer doesn't support the dimension of " +
                                                this._dimension2
                                            )
                                        );
                                        return;
                                    }
                                    var c;
                                    if (this._tileMatrixSetId) {
                                        if (
                                            ((c = b.filter(
                                                a.tileMatrixSetInfos,
                                                function(a) {
                                                    return a.tileMatrixSet === this._tileMatrixSetId;
                                                },
                                                this
                                            )[0]), !c)
                                        ) {
                                            this.onError(
                                                Error(
                                                    'The tileMatrixSetId ' +
                                                    this._tileMatrixSetId +
                                                    ' is not supported by the layer of ' +
                                                    this._identifier
                                                )
                                            );
                                            return;
                                        }
                                    } else
                                        (c = b.filter(a.tileMatrixSetInfos, function(a) {
                                            return 'GoogleMapsCompatible' === a.tileMatrixSet;
                                        })[0]) ||
                                        (c = a.tileMatrixSetInfos[0]), (this._tileMatrixSetId =
                                            c.tileMatrixSet);
                                    this.description = a.description;
                                    this.title = a.title;
                                    this.spatialReference = c.tileInfo.spatialReference;
                                    this.tileInfo = c.tileInfo;
                                    this._levelToLevelValue = [];
                                    b.forEach(
                                        this.tileInfo.lods,
                                        function(a) {
                                            this._levelToLevelValue[a.level] = a.levelValue ?
                                                a.levelValue :
                                                a.level;
                                        },
                                        this
                                    );
                                    102100 === this.spatialReference.wkid ||
                                        102113 === this.spatialReference.wkid ?
                                        (this.fullExtent = this.initialExtent = u.geographicToWebMercator(
                                            a.gcsExtent
                                        )) :
                                        4326 === this.spatialReference.wkid ?
                                        (this.fullExtent = this.initialExtent = a.gcsExtent) :
                                        ((this.fullExtent =
                                            c.fullExtent), (this.initialExtent =
                                            c.initialExtent));
                                    this.resourceUrls = a.resourceUrls;
                                    this.UrlTemplate = this._getTileUrlTemplate();
                                    this.layerInfo = {
                                        identifier: this._identifier,
                                        tileMatrixSet: this._tileMatrixSetId,
                                        format: this.format,
                                        style: this._style,
                                        fullExtent: this.fullExtent,
                                        initialExtent: this.initialExtent,
                                        tileInfo: this.tileInfo,
                                        title: this.title,
                                        description: this.description,
                                    };
                                } else
                                    this.onError(
                                        Error("couldn't find the layer " + this._identifier)
                                    );
                        },
                        _getWMTSLayerInfo: function(a, d, e) {
                            var f = this._getTagValues('Abstract', d)[0],
                                h = this._getTagValues('Title', d)[0],
                                g = c.query('WGS84BoundingBox', d)[0],
                                k = g ?
                                this._getTagValues('LowerCorner', g)[0].split(' ') :
                                ['-180', '-90'],
                                l = g ?
                                this._getTagValues('UpperCorner', g)[0].split(' ') :
                                ['180', '90'],
                                g = parseFloat(k[0]),
                                k = parseFloat(k[1]),
                                n = parseFloat(l[0]),
                                l = parseFloat(l[1]),
                                g = new r(g, k, n, l, new m({ wkid: 4326 })),
                                l = this._getTagValues('Identifier', c.query('Style', d)[0]),
                                p = this._getTagValues(
                                    'Identifier',
                                    c.query('Dimension', d)[0]
                                ),
                                q =
                                this._getTagValues('Default', c.query('Dimension', d)[0]) ||
                                this._getTagValues('Value', c.query('Dimension', d)[0]),
                                t = 1 < c.query('Dimension', d).length ?
                                this._getTagValues(
                                    'Identifier',
                                    c.query('Dimension', d)[1]
                                ) :
                                [],
                                u = 1 < c.query('Dimension', d).length ?
                                this._getTagValues(
                                    'Default',
                                    c.query('Dimension', d)[1]
                                ) ||
                                this._getTagValues('Value', c.query('Dimension', d)[1]) :
                                [],
                                k = this._getTagValues('Format', d);
                            e = this._getLayerMatrixInfos(d, e);
                            a = {
                                identifier: a,
                                tileMatrixSetInfos: e,
                                formats: k,
                                styles: l,
                                title: h,
                                description: f,
                                gcsExtent: g,
                                dimensions: q,
                                dimensions2: u,
                            };
                            d = c.query('ResourceURL', d);
                            var v = [],
                                C;
                            b.forEach(d, function(a) {
                                C = a.getAttribute('template');
                                if (p && q && p[0] && q[0])
                                    if (-1 < C.indexOf('{' + p + '}'))
                                        C = C.replace('{' + p + '}', '{dimensionValue}');
                                    else {
                                        var b = C.toLowerCase().indexOf(
                                            '{' + p[0].toLowerCase() + '}'
                                        ); -
                                        1 < b &&
                                            (C =
                                                C.substring(0, b) +
                                                '{dimensionValue}' +
                                                C.substring(b + p[0].length + 2));
                                    }
                                t &&
                                    u &&
                                    t[0] &&
                                    u[0] &&
                                    (-1 < C.indexOf('{' + t + '}') ?
                                        (C = C.replace('{' + t + '}', '{dimensionValue2}')) :
                                        ((b = C.toLowerCase().indexOf(
                                                '{' + t[0].toLowerCase() + '}'
                                            )), -1 < b &&
                                            (C =
                                                C.substring(0, b) +
                                                '{dimensionValue2}' +
                                                C.substring(b + t[0].length + 2))));
                                v.push({
                                    template: C,
                                    format: a.getAttribute('format'),
                                    resourceType: a.getAttribute('resourceType'),
                                });
                            });
                            v && 0 < v.length && (a.resourceUrls = v);
                            return a;
                        },
                        _getLayerMatrixInfos: function(a, c) {
                            var d = [],
                                e = this._getTagValues('TileMatrixSet', a);
                            if (e && 0 !== e.length)
                                return b.forEach(
                                    e,
                                    function(b) {
                                        b = this._getLayerMatrixInfo(b, a, c);
                                        d.push(b);
                                    },
                                    this
                                ), d;
                        },
                        _getLayerMatrixInfo: function(a, b, d) {
                            var e, f, h, g, k = [];
                            b = this._getTagWithChildTagValue(
                                'TileMatrixSetLink',
                                'TileMatrixSet',
                                a,
                                b
                            );
                            var l = this._getTagValues('TileMatrix', b),
                                n = this._getTagWithChildTagValue(
                                    'TileMatrixSet',
                                    'Identifier',
                                    a,
                                    d
                                ),
                                t = this._getTagValues('SupportedCRS', n)[0];
                            e = parseInt(t.split(':').pop(), 10);
                            if (900913 == e || 3857 == e) e = 102100;
                            if (-1 < t.toLowerCase().indexOf('crs84') ||
                                -1 < t.toLowerCase().indexOf('crs:84')
                            )
                                (e = 4326), (g = !0);
                            else if (-1 < t.toLowerCase().indexOf('crs83') ||
                                -1 < t.toLowerCase().indexOf('crs:83')
                            )
                                (e = 4269), (g = !0);
                            else if (-1 < t.toLowerCase().indexOf('crs27') ||
                                -1 < t.toLowerCase().indexOf('crs:27')
                            )
                                (e = 4267), (g = !0);
                            var u = new m({ wkid: e }),
                                v = c.query('TileMatrix', n)[0];
                            d = parseInt(this._getTagValues('TileWidth', v)[0], 10);
                            b = parseInt(this._getTagValues('TileHeight', v)[0], 10);
                            f = this._getTagValues('TopLeftCorner', v)[0].split(' ');
                            var C = f[0],
                                y = f[1];
                            1 < C.split('E').length &&
                                ((f = C.split('E')), (C = f[0] * Math.pow(10, f[1])));
                            1 < y.split('E').length &&
                                ((f = y.split('E')), (y = f[0] * Math.pow(10, f[1])));
                            var C = parseFloat(C),
                                y = parseFloat(y),
                                z = g && 4326 === e && 90 === C && -180 === y;
                            for (f = 0; f < this._flippingAxisForWkids.length; f++)
                                if (
                                    (t.split(':').pop() >= this._flippingAxisForWkids[f][0] &&
                                        t.split(':').pop() <= this._flippingAxisForWkids[f][1]) ||
                                    (4326 === e && (!g || z))
                                ) {
                                    4326 === e && 90 < C && (C = '90');
                                    h = new p(y, C, u);
                                    break;
                                }
                            f === this._flippingAxisForWkids.length && (h = new p(C, y, u));
                            if (0 === l.length)
                                for (
                                    (l = c.query('TileMatrix', n)), (f = 0); f < l.length; f++
                                )
                                    (g = this._getLodFromTileMatrix(l[f], e, f, a)), k.push(g);
                            else
                                for (f = 0; f < l.length; f++)
                                    (g = this._getTagWithChildTagValue(
                                        'TileMatrix',
                                        'Identifier',
                                        l[f],
                                        n
                                    )), (g = this._getLodFromTileMatrix(g, e, f, a)), k.push(g);
                            e = c.query('BoundingBox', n)[0];
                            var P, J;
                            e &&
                                ((P = this._getTagValues('LowerCorner', e)[0].split(
                                    ' '
                                )), (J = this._getTagValues('UpperCorner', e)[0].split(' ')));
                            P && 1 < P.length && J && 1 < J.length ?
                                ((v = parseFloat(P[0])), (e = parseFloat(
                                    P[1]
                                )), (P = parseFloat(J[0])), (J = parseFloat(J[1]))) :
                                ((P = this._getTagValues(
                                    'MatrixWidth',
                                    v
                                )[0]), (e = this._getTagValues('MatrixHeight', v)[0]), (v =
                                    h.x), (J = h.y), (P = v + P * b * k[0].resolution), (e =
                                    J - e * d * k[0].resolution));
                            J = P = new r(v, e, P, J, u);
                            h = new q({
                                dpi: 96,
                                spatialReference: u,
                                format: this.format,
                                rows: d,
                                cols: b,
                                origin: h,
                                lods: k,
                            });
                            return {
                                tileMatrixSet: a,
                                fullExtent: J,
                                initialExtent: P,
                                tileInfo: h,
                            };
                        },
                        _getCapabilitiesError: function(a) {
                            this.onError(a);
                        },
                        _getLodFromTileMatrix: function(a, b, c, d) {
                            var e = this._getTagValues('Identifier', a)[0];
                            a = this._getTagValues('ScaleDenominator', a)[0];
                            1 < a.split('E').length ?
                                ((a = a.split('E')), (a = a[0] * Math.pow(10, a[1]))) :
                                (a = parseFloat(a));
                            b = this._getResolution(b, a, d);
                            return {
                                level: c,
                                levelValue: e,
                                scale: 1.058267716535433 * a,
                                resolution: b,
                            };
                        },
                        _getResolution: function(b, c, d) {
                            b = a.isDefined(l[b]) ?
                                l.values[l[b]] :
                                'default028mm' === d ?
                                6370997 * Math.PI / 180 :
                                6378137 * Math.PI / 180;
                            return 7 * c / 25e3 / b;
                        },
                        _getTag: function(a, b) {
                            return (a = c.query(a, b)) && 0 < a.length ? a[0] : null;
                        },
                        _getTagValues: function(a, d) {
                            var f = [];
                            a = a.split('\x3e');
                            var h;
                            h = c.query(a[0], d)[0];
                            if (1 < a.length) {
                                for (d = 1; d < a.length - 1; d++)
                                    h = c.query(a[d], h)[0];
                                d = c.query(a[a.length - 1], h);
                            } else d = c.query(a[0], d);
                            d &&
                                0 < d.length &&
                                b.forEach(d, function(a) {
                                    9 > e('ie') ?
                                        f.push(
                                            a.childNodes.length ? a.childNodes[0].nodeValue : ''
                                        ) :
                                        f.push(a.textContent);
                                });
                            return f;
                        },
                        _getAttributeValues: function(a, d, e) {
                            a = c.query(a, e);
                            var f = [];
                            a &&
                                0 < a.length &&
                                b.forEach(a, function(a) {
                                    f.push(a.getAttribute(d));
                                });
                            return f;
                        },
                        _getTagWithChildTagValue: function(b, d, f, h) {
                            h = h.childNodes;
                            var g, k;
                            for (k = 0; k < h.length; k++)
                                if (-1 < h[k].nodeName.indexOf(b) &&
                                    (9 > e('ie') ?
                                        a.isDefined(c.query(d, h[k])[0]) &&
                                        (g = c.query(d, h[k])[0].childNodes[0].nodeValue) :
                                        a.isDefined(c.query(d, h[k])[0]) &&
                                        (g = c.query(d, h[k])[0].textContent), g === f ||
                                        (f.split(':') && g === f.split(':')[1]))
                                )
                                    return h[k];
                        },
                        _appendCustomParameters: function(a) {
                            var b;
                            if (this.customParameters)
                                for (b in this.customParameters)
                                    a +=
                                    (-1 === a.indexOf('?') ? '?' : '\x26') +
                                    b +
                                    '\x3d' +
                                    encodeURIComponent(this.customParameters[b]);
                            return a;
                        },
                        _appendCustomLayerParameters: function(a) {
                            var b, c;
                            if (this.customLayerParameters || this.customParameters)
                                for (b in ((c = f.clone(
                                        this.customParameters || {}
                                    )), f.mixin(c, this.customLayerParameters || {}), c))
                                    a +=
                                    (-1 === a.indexOf('?') ? '?' : '\x26') +
                                    b +
                                    '\x3d' +
                                    encodeURIComponent(c[b]);
                            return a;
                        },
                        _flippingAxisForWkids: [
                            [3819, 3819],
                            [3821, 3824],
                            [3889, 3889],
                            [3906, 3906],
                            [4001, 4025],
                            [4027, 4036],
                            [4039, 4047],
                            [4052, 4055],
                            [4074, 4075],
                            [4080, 4081],
                            [4120, 4176],
                            [4178, 4185],
                            [4188, 4216],
                            [4218, 4289],
                            [4291, 4304],
                            [4306, 4319],
                            [4322, 4326],
                            [4463, 4463],
                            [4470, 4470],
                            [4475, 4475],
                            [4483, 4483],
                            [4490, 4490],
                            [4555, 4558],
                            [4600, 4646],
                            [4657, 4765],
                            [4801, 4811],
                            [4813, 4821],
                            [4823, 4824],
                            [4901, 4904],
                            [5013, 5013],
                            [5132, 5132],
                            [5228, 5229],
                            [5233, 5233],
                            [5246, 5246],
                            [5252, 5252],
                            [5264, 5264],
                            [5324, 5340],
                            [5354, 5354],
                            [5360, 5360],
                            [5365, 5365],
                            [5370, 5373],
                            [5381, 5381],
                            [5393, 5393],
                            [5451, 5451],
                            [5464, 5464],
                            [5467, 5467],
                            [5489, 5489],
                            [5524, 5524],
                            [5527, 5527],
                            [5546, 5546],
                            [2044, 2045],
                            [2081, 2083],
                            [2085, 2086],
                            [2093, 2093],
                            [2096, 2098],
                            [2105, 2132],
                            [2169, 2170],
                            [2176, 2180],
                            [2193, 2193],
                            [2200, 2200],
                            [2206, 2212],
                            [2319, 2319],
                            [2320, 2462],
                            [2523, 2549],
                            [2551, 2735],
                            [2738, 2758],
                            [2935, 2941],
                            [2953, 2953],
                            [3006, 3030],
                            [3034, 3035],
                            [3038, 3051],
                            [3058, 3059],
                            [3068, 3068],
                            [3114, 3118],
                            [3126, 3138],
                            [3150, 3151],
                            [3300, 3301],
                            [3328, 3335],
                            [3346, 3346],
                            [3350, 3352],
                            [3366, 3366],
                            [3389, 3390],
                            [3416, 3417],
                            [3833, 3841],
                            [3844, 3850],
                            [3854, 3854],
                            [3873, 3885],
                            [3907, 3910],
                            [4026, 4026],
                            [4037, 4038],
                            [4417, 4417],
                            [4434, 4434],
                            [4491, 4554],
                            [4839, 4839],
                            [5048, 5048],
                            [5105, 5130],
                            [5253, 5259],
                            [5269, 5275],
                            [5343, 5349],
                            [5479, 5482],
                            [5518, 5519],
                            [5520, 5520],
                            [20004, 20032],
                            [20064, 20092],
                            [21413, 21423],
                            [21473, 21483],
                            [21896, 21899],
                            [22171, 22177],
                            [22181, 22187],
                            [22191, 22197],
                            [25884, 25884],
                            [27205, 27232],
                            [27391, 27398],
                            [27492, 27492],
                            [28402, 28432],
                            [28462, 28492],
                            [30161, 30179],
                            [30800, 30800],
                            [31251, 31259],
                            [31275, 31279],
                            [31281, 31290],
                            [31466, 31700],
                        ],
                    });
                    f.setObject('layers.WMTSLayer', g, d);
                    return g;
                }
            );
        },
        'esri/layers/WMTSLayerInfo': function() {
            define(
                ['dojo/_base/declare', 'dojo/_base/lang', 'dojo/has', '../kernel'],
                function(c, g, f, b) {
                    c = c(null, {
                        declaredClass: 'esri.layers.WMTSLayerInfo',
                        identifier: null,
                        tileMatrixSet: null,
                        format: null,
                        style: null,
                        tileInfo: null,
                        title: null,
                        fullExtent: null,
                        initialExtent: null,
                        description: null,
                        dimension: null,
                        constructor: function(b) {
                            b &&
                                ((this.title = b.title), (this.tileMatrixSet =
                                    b.tileMatrixSet), (this.format = b.format), (this.style =
                                    b.style), (this.tileInfo = b.tileInfo), (this.fullExtent =
                                    b.fullExtent), (this.initialExtent =
                                    b.initialExtent), (this.identifier =
                                    b.identifier), (this.description =
                                    b.description), (this.dimension = b.dimension));
                        },
                    });
                    g.setObject('layers.WMTSLayerInfo', c, b);
                    return c;
                }
            );
        },
        'esri/dijit/Directions': function() {
            define(
                'require dojo/_base/declare dojo/_base/lang dojo/_base/kernel dojo/_base/array dojo/_base/Color dijit/a11yclick dijit/_TemplatedMixin dijit/form/Select dijit/form/ValidationTextBox dijit/form/DateTextBox dijit/form/TimeTextBox dojo/store/Memory dojo/data/ObjectStore dojo/keys dojo/has dojo/on dojo/mouse dojo/dom dojo/dom-geometry dojo/dom-style dojo/dom-class dojo/dom-attr dojo/query dojo/number dojo/i18n!../nls/jsapi dojo/text!./templates/Directions.html ./Search dojo/dom-construct dojo/promise/all dojo/Deferred dojo/dnd/Source dojo/json ../kernel ../urlUtils ../graphic ../units ../TimeExtent ../InfoTemplate ../SpatialReference ../layers/ArcGISDynamicMapServiceLayer ../layers/GraphicsLayer ../geometry/webMercatorUtils ../geometry/geodesicUtils ../arcgis/utils ../geometry/Point ../geometry/Extent ../geometry/Polyline ../geometry/mathUtils ../symbols/SimpleMarkerSymbol ../symbols/PictureMarkerSymbol ../symbols/CartographicLineSymbol ../symbols/TextSymbol ../renderers/UniqueValueRenderer ../symbols/Font ./_EventedWidget ../tasks/FeatureSet ../tasks/RouteTask ../tasks/RouteParameters ../tasks/GeometryService ../tasks/DistanceParameters ../tasks/PrintTask ../tasks/PrintParameters ../tasks/PrintTemplate ../toolbars/edit ../toolbars/draw ../config ../tasks/ProjectParameters dojo/uacss'.split(
                    ' '
                ),
                function(
                    c,
                    g,
                    f,
                    b,
                    e,
                    h,
                    d,
                    a,
                    k,
                    n,
                    l,
                    m,
                    p,
                    r,
                    u,
                    t,
                    q,
                    v,
                    C,
                    z,
                    y,
                    x,
                    w,
                    A,
                    E,
                    B,
                    D,
                    H,
                    G,
                    F,
                    K,
                    L,
                    Q,
                    O,
                    P,
                    J,
                    I,
                    N,
                    M,
                    R,
                    Y,
                    Z,
                    U,
                    V,
                    T,
                    ca,
                    ua,
                    W,
                    ja,
                    Ba,
                    ga,
                    ka,
                    Ca,
                    na,
                    la,
                    va,
                    oa,
                    ra,
                    ea,
                    sa,
                    Fa,
                    ma,
                    S,
                    wa,
                    X,
                    xa,
                    ha,
                    Da
                ) {
                    var ya = P.getProtocolForWebResource(),
                        La = H.createSubclass({
                            _setSourcesAttr: function(a) {
                                a &&
                                    (a = a.map(function(a) {
                                        a.locator &&
                                            null == a.locationType &&
                                            (a = f.mixin({ locationType: 'street' }, a));
                                        return a;
                                    }));
                                this.inherited(arguments, [a]);
                            },
                        });
                    g = g('esri.dijit.Directions', [va, a], {
                        templateString: D,
                        mapClickActive: !1,
                        barrierToolActive: !1,
                        _eventMap: {
                            activate: !0,
                            deactivate: !1,
                            load: !0,
                            'directions-start': !0,
                            'directions-finish': ['result'],
                            'directions-clear': !0,
                            'segment-select': ['graphic'],
                            'segment-highlight': ['graphic'],
                            error: ['error'],
                            'stops-update': ['stops'],
                            'route-item-created': !0,
                            'route-item-updated': !0,
                            'feature-collection-created': !0,
                        },
                        _emptyStop: { name: '' },
                        constructor: function(a, b) {
                            if (!a.map)
                                throw Error(
                                    'Required "map" parameter is missing. Cannot instantiate Directions Widget.'
                                );
                            if (!b)
                                throw Error(
                                    'Required "srcNodeRef" parameter is missing. Cannot instantiate Directions Widget.'
                                );
                            this._i18n = B;
                            this._css = {
                                widgetContainerClass: 'esriDirectionsContainer',
                                searchSourceContainerClass: 'esriSearchSourceContainer',
                                stopsContainerClass: 'esriStopsContainer',
                                stopsTableContainerClass: 'esriStopsTableContainer',
                                stopsTableCoverClass: 'esriStopsTableCover',
                                reverseStopsClass: 'esriStopsReverse',
                                addStopsClass: 'esriStopsAdd',
                                stopsClass: 'esriStops',
                                stopsRemovableClass: 'esriStopsRemovable',
                                stopsButtonContainerClass: 'esriStopsButtons',
                                stopsOptionsButtonClass: 'esriStopsOptionsButton',
                                stopsAddDestinationClass: 'esriStopsAddDestination',
                                stopsAddDestinationBtnClass: 'esriStopsAddDestinationBtn',
                                stopsGetDirectionsContainerClass: 'esriStopsGetDirectionsContainer',
                                stopsGetDirectionsClass: 'esriStopsGetDirections',
                                stopsClearDirectionsClass: 'esriStopsClearDirections',
                                stopsInnerGeocoderClass: 'esriInnerGeocoder',
                                stopsOptionsOptionsEnabledClass: 'esriStopsOptionsEnabled',
                                stopsOptionsMenuClass: 'esriStopsOptionsMenu',
                                stopsFindOptimalOrderClass: 'esriFindOptimalOrderOption',
                                stopsUseTrafficClass: 'esriUseTrafficOption',
                                stopsReturnToStartClass: 'esriReturnToStartOption',
                                stopsOptionsCheckboxesClass: 'esriOptionsCheckboxes',
                                stopsOptionsToggleContainerClass: 'esriOptionsToggleContainer',
                                stopsOptionsUnitsContainerClass: 'esriOptionsUnitsContainer',
                                stopsOptionsUnitsMiClass: 'esriOptionsUnitsMi',
                                stopsOptionsUnitsKmClass: 'esriOptionsUnitsKm',
                                stopsOptionsImpedanceContainerClass: 'esriOptionsImpedanceContainer',
                                stopsOptionsImpedanceTimeClass: 'esriOptionsImpedanceTime',
                                stopsOptionsImpedanceDistanceClass: 'esriOptionsImpedanceDistance',
                                stopClass: 'esriStop',
                                stopOriginClass: 'esriStopOrigin',
                                stopDestinationClass: 'esriStopDestination',
                                stopUnreachedFirstOrLastClass: 'esriStopUnreachedFirstOrLast',
                                stopUnreachedClass: 'esriStopUnreached',
                                esriStopGeocoderColumnClass: 'esriStopGeocoderColumn',
                                esriStopReverseColumnClass: 'esriStopReverseColumn',
                                stopDnDHandleClass: 'esriStopDnDHandle',
                                stopDnDHandleClassHidden: 'esriStopDnDHandleHidden',
                                stopIconColumnClass: 'esriStopIconColumn',
                                stopIconClass: 'esriStopIcon',
                                stopIconRemoveColumnClass: 'esriStopIconRemoveColumn',
                                stopIconRemoveClass: 'esriStopIconRemove',
                                stopIconRemoveClassHidden: 'esriStopIconRemoveHidden',
                                resultsContainerClass: 'esriResultsContainer',
                                resultsLoadingClass: 'esriResultsLoading',
                                resultsPrintClass: 'esriResultsPrint',
                                resultsSaveClass: 'esriResultsSave',
                                resultsSummaryClass: 'esriResultsSummary',
                                routesContainerClass: 'esriRoutesContainer',
                                routesClass: 'esriRoutes',
                                routesErrorClass: 'esriRoutesError',
                                routesInfoClass: 'esriRoutesInfo',
                                routeClass: 'esriRoute',
                                routeTextColumnClass: 'esriRouteTextColumn',
                                routeTextClass: 'esriRouteText',
                                routeLengthClass: 'esriRouteLength',
                                routeOriginClass: 'esriDMTStopOrigin',
                                routeDestinationClass: 'esriDMTStopDestination',
                                routeInfoClass: 'esriRouteInfo',
                                routeIconColumnClass: 'esriRouteIconColumn',
                                routeIconClass: 'esriRouteIcon',
                                infoWindowRouteClass: 'esriInfoWindowRoute',
                                routeZoomClass: 'esriRouteZoom',
                                esriPrintPageClass: 'esriPrintPage',
                                esriPrintBarClass: 'esriPrintBar',
                                esriPrintButtonClass: 'esriPrintButton',
                                esriCloseButtonClass: 'esriCloseButton',
                                esriPrintMainClass: 'esriPrintMain',
                                esriPrintHeaderClass: 'esriPrintHeader',
                                esriPrintLogoClass: 'esriPrintLogo',
                                esriPrintMapClass: 'esriPrintMap',
                                esriPrintNameClass: 'esriPrintName',
                                esriPrintNotesClass: 'esriPrintNotes',
                                esriPrintLengthClass: 'esriPrintLength',
                                esriPrintDirectionsClass: 'esriPrintDirections',
                                esriPrintFooterClass: 'esriPrintFooter',
                                esriPrintStopLabelClass: 'esriPrintStopLabel',
                                clearClass: 'esriClear',
                                dndDragBodyClass: 'esriDndDragDirection',
                                stopsButtonClass: 'esriDirectionsButton',
                                stopsButtonTabClass: 'esriDirectionsTabButton',
                                stopsButtonTabLastClass: 'esriDirectionsTabLastButton',
                                stopsPressedButtonClass: 'esriDirectionsPressedButton',
                                linkButtonClass: 'esriLinkButton',
                                activateButtonClass: 'esriActivateButton',
                                lineBarrierButtonClass: 'esriLineBarrierButton',
                                travelModesContainerClass: 'esriTravelModesContainer',
                            };
                            this.options = {
                                map: null,
                                autoSolve: !0,
                                minStops: 2,
                                maxStops: 20,
                                theme: 'simpleDirections',
                                alphabet: '1234567890',
                                directions: null,
                                returnToStart: !1,
                                optimalRoute: !1,
                                routeTaskUrl: ya +
                                    '//route.arcgis.com/arcgis/rest/services/World/Route/NAServer/Route_World',
                                printTaskUrl: ya +
                                    '//utility.arcgisonline.com/arcgis/rest/services/Utilities/PrintingTools/GPServer/Export%20Web%20Map%20Task',
                                geometryTaskUrl: ya +
                                    '//utility.arcgisonline.com/arcgis/rest/services/Geometry/GeometryServer',
                                routeParams: {},
                                stops: ['', ''],
                                searchOptions: {},
                                stopsInfoTemplate: new M(
                                    B.widgets.directions.stop,
                                    '${address}${error}'
                                ),
                                waypointInfoTemplate: new M(
                                    B.widgets.directions.maneuver,
                                    B.widgets.directions.waypoint
                                ),
                                segmentInfoTemplate: new M(
                                    B.widgets.directions.maneuver,
                                    '\x3cdiv class\x3d"${maneuverType}"\x3e\x3cdiv class\x3d"' +
                                    this._css.routeIconClass +
                                    ' ' +
                                    this._css.infoWindowRouteClass +
                                    '"\x3e\x3cstrong\x3e${step}.\x3c/strong\x3e ${formattedText}\x3c/div\x3e\x3c/div\x3e'
                                ),
                                textSymbolFont: new la(
                                    '11px',
                                    la.STYLE_NORMAL,
                                    la.VARIANT_NORMAL,
                                    la.WEIGHT_NORMAL,
                                    'Arial, Helvetica, sans-serif'
                                ),
                                textSymbolColor: new h([255, 255, 255]),
                                textSymbolOffset: { x: 0, y: 10.875 },
                                fromSymbol: new ga({
                                    url: c.toUrl('./images/Directions/greenPoint.png'),
                                    height: 21.75,
                                    width: 15.75,
                                    type: 'esriPMS',
                                }).setOffset(0, 10.875),
                                fromSymbolDrag: new ga({
                                    url: c.toUrl('./images/Directions/greenPointMove.png'),
                                    height: 21.75,
                                    width: 15.75,
                                    type: 'esriPMS',
                                }).setOffset(0, 10.875),
                                stopSymbol: new ga({
                                    url: c.toUrl('./images/Directions/bluePoint.png'),
                                    height: 21.75,
                                    width: 15.75,
                                    type: 'esriPMS',
                                }).setOffset(0, 10.875),
                                stopSymbolDrag: new ga({
                                    url: c.toUrl('./images/Directions/bluePointMove.png'),
                                    height: 21.75,
                                    width: 15.75,
                                    type: 'esriPMS',
                                }).setOffset(0, 10.875),
                                toSymbol: new ga({
                                    url: c.toUrl('./images/Directions/redPoint.png'),
                                    height: 21.75,
                                    width: 15.75,
                                    type: 'esriPMS',
                                }).setOffset(0, 10.875),
                                toSymbolDrag: new ga({
                                    url: c.toUrl('./images/Directions/redPointMove.png'),
                                    height: 21.75,
                                    width: 15.75,
                                    type: 'esriPMS',
                                }).setOffset(0, 10.875),
                                unreachedSymbol: new ga({
                                    url: c.toUrl('./images/Directions/grayPoint.png'),
                                    height: 21.75,
                                    width: 15.75,
                                    type: 'esriPMS',
                                }).setOffset(0, 10.875),
                                unreachedSymbolDrag: new ga({
                                    url: c.toUrl('./images/Directions/grayPointMove.png'),
                                    height: 21.75,
                                    width: 15.75,
                                    type: 'esriPMS',
                                }).setOffset(0, 10.875),
                                waypointSymbol: new Ba({
                                    color: [255, 255, 255, 255],
                                    size: 10,
                                    type: 'esriSMS',
                                    style: 'esriSMSCircle',
                                    outline: {
                                        color: [20, 89, 127, 255],
                                        width: 2.5,
                                        type: 'esriSLS',
                                        style: 'esriSLSSolid',
                                    },
                                }),
                                maneuverSymbol: new Ba({
                                    color: [255, 255, 255, 255],
                                    size: 4,
                                    type: 'esriSMS',
                                    style: 'esriSMSCircle',
                                    outline: {
                                        color: [30, 99, 137, 255],
                                        width: 1,
                                        type: 'esriSLS',
                                        style: 'esriSLSSolid',
                                    },
                                }),
                                routeSymbol: new ka()
                                    .setColor(new h([20, 89, 127, 0.75]))
                                    .setWidth(10)
                                    .setCap(ka.CAP_ROUND)
                                    .setJoin(ka.JOIN_ROUND),
                                segmentSymbol: new ka()
                                    .setColor(new h([255, 255, 255, 1]))
                                    .setWidth(6)
                                    .setCap(ka.CAP_ROUND)
                                    .setJoin(ka.JOIN_ROUND),
                                barrierRenderer: new na({
                                    type: 'uniqueValue',
                                    field1: 'BarrierType',
                                    defaultSymbol: {
                                        type: 'esriPMS',
                                        imageData: 'PHN2ZyB3aWR0aD0iMjIyIiBoZWlnaHQ9IjIyMiIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIj4KPGc+CjxlbGxpcHNlIGZpbGw9IiNmZjAwMDAiIHN0cm9rZT0iIzAwMCIgc3Ryb2tlLXdpZHRoPSIyMCIgY3g9IjExMiIgY3k9IjExMSIgaWQ9InN2Z181IiByeD0iMTAwIiByeT0iMTAwIi8+CjxlbGxpcHNlIGZpbGw9IiNmZjAwMDAiIHN0cm9rZT0iI2ZmZmZmZiIgc3Ryb2tlLXdpZHRoPSIyMCIgY3g9IjExMiIgY3k9IjExMSIgaWQ9InN2Z182IiByeD0iOTUiIHJ5PSI5NSIvPgo8cmVjdCBmaWxsPSIjZmYwMDAwIiBzdHJva2Utd2lkdGg9IjIwIiB4PSI2NC41IiB5PSIxMDIiIHdpZHRoPSI5NSIgaGVpZ2h0PSIxOCIgaWQ9InN2Z183IiBzdHJva2U9IiNmZmZmZmYiLz4KPC9nPgo8L3N2Zz4\x3d',
                                        contentType: 'image/svg+xml',
                                        width: 18,
                                        height: 18,
                                    },
                                    uniqueValueInfos: [{
                                        value: '2',
                                        symbol: {
                                            type: 'esriPMS',
                                            imageData: 'PHN2ZyB3aWR0aD0iMjg2IiBoZWlnaHQ9IjI1NiIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIj4KPGc+CjxwYXRoIGZpbGw9IiNmZmYiIHN0cm9rZS13aWR0aD0iMTAiIGQ9Im04Ljc0OTk5MiwyNTEuNzQ5OTk3bDEzNC45OTk5OTgsLTI0MS45OTk5OThsMTM0Ljk5OTk5OCwyNDEuOTk5OTk4bC0yNjkuOTk5OTk1LDBsLTAuMDAwMDAxLDB6IiBpZD0ic3ZnXzEiIHN0cm9rZT0iIzAwMCIvPgo8cGF0aCBzdHJva2U9IiNmZmYiIGZpbGw9IiNmZjAwMDAiIHN0cm9rZS13aWR0aD0iMTUiIGQ9Im0yMy41MDAwMDQsMjQyLjUwMDAwNWwxMTkuOTk5OTkyLC0yMTUuOTk5OTk5bDExOS45OTk5OTIsMjE1Ljk5OTk5OWwtMjM5Ljk5OTk4MywwbC0wLjAwMDAwMSwweiIgaWQ9InN2Z18yIi8+Cjx0ZXh0IGZvbnQtd2VpZ2h0PSJib2xkIiBmaWxsPSIjZmZmZmZmIiBzdHJva2U9IiNmZjAwMDAiIHN0cm9rZS13aWR0aD0iMCIgeD0iMTA5IiB5PSIyMjIuNzUiIGlkPSJzdmdfNSIgZm9udC1zaXplPSIxODAiIGZvbnQtZmFtaWx5PSJHZW9yZ2lhLCBUaW1lcywgJ1RpbWVzIE5ldyBSb21hbicsIHNlcmlmIiB0ZXh0LWFuY2hvcj0ic3RhcnQiIHhtbDpzcGFjZT0icHJlc2VydmUiPiE8L3RleHQ+CjwvZz4KPC9zdmc+',
                                            contentType: 'image/svg+xml',
                                            width: 19,
                                            height: 18,
                                        },
                                    }, ],
                                }),
                                polylineBarrierRenderer: new na({
                                    type: 'uniqueValue',
                                    field1: 'BarrierType',
                                    defaultSymbol: {
                                        color: [255, 0, 0, 184],
                                        width: 7.5,
                                        type: 'esriSLS',
                                        style: 'esriSLSSolid',
                                    },
                                    uniqueValueInfos: [{
                                        value: '1',
                                        symbol: {
                                            color: [255, 85, 0, 184],
                                            width: 7.5,
                                            type: 'esriSLS',
                                            style: 'esriSLSSolid',
                                        },
                                    }, ],
                                }),
                                polygonBarrierRenderer: new na({
                                    type: 'uniqueValue',
                                    field1: 'BarrierType',
                                    defaultSymbol: {
                                        color: [255, 0, 0, 156],
                                        outline: {
                                            color: [255, 0, 0, 153],
                                            width: 2.4,
                                            type: 'esriSLS',
                                            style: 'esriSLSSolid',
                                        },
                                        type: 'esriSFS',
                                        style: 'esriSFSSolid',
                                    },
                                    uniqueValueInfos: [{
                                        value: '1',
                                        symbol: {
                                            color: [255, 170, 0, 156],
                                            outline: {
                                                color: [255, 0, 0, 153],
                                                width: 7.5,
                                                type: 'esriSLS',
                                                style: 'esriSLSSolid',
                                            },
                                            type: 'esriSFS',
                                            style: 'esriSFSSolid',
                                        },
                                    }, ],
                                }),
                                printPage: '',
                                printTemplate: '',
                                focusOnNewStop: !0,
                                dragging: !0,
                                canModifyStops: !0,
                                canModifyWaypoints: !0,
                                directionsLengthUnits: null,
                                directionsLanguage: null,
                                traffic: !1,
                                trafficLayer: null,
                                showPrintPage: !0,
                                showSaveButton: !1,
                                showSegmentPopup: !1,
                                showSegmentHighlight: !0,
                                showReverseStopsButton: !0,
                                showReturnToStartOption: !0,
                                showOptimalRouteOption: !0,
                                showTravelModesOption: !0,
                                showMilesKilometersOption: !0,
                                showClearButton: !1,
                                showActivateButton: !0,
                                showBarriersButton: !0,
                                loaded: !1,
                                routeLayer: {
                                    itemId: null,
                                    title: null,
                                    isItemOwner: !0,
                                    ownerFolder: null,
                                },
                                startTime: 'now',
                            };
                            this.userOptions = a;
                            this.defaults = f.mixin({}, this.options, a, {
                                _waypointName: 'DWWP',
                                _userDefinedStopName: 'UserDefinedStopName',
                                _solveInProgress: !1,
                                _moveInProgress: !1,
                                _stopSequence: 1e3,
                            });
                            if (!this.defaults.minStops || 2 > this.defaults.minStops)
                                this.defaults.minStops = 2;
                            if (
                                2 < this.defaults.minStops &&
                                this.defaults.stops &&
                                ',' === this.defaults.stops.toString()
                            )
                                for (a = 2; a < this.defaults.minStops; a++)
                                    this.defaults.stops.splice(0, 0, '');
                            this.domNode = b;
                        },
                        postCreate: function() {
                            this.inherited(arguments);
                            this.own(
                                q(
                                    this._activateButtonNode,
                                    d,
                                    f.hitch(this, function() {
                                        this.mapClickActive ? this.deactivate() : this.activate();
                                    })
                                )
                            );
                            this.own(
                                q(
                                    this._lineBarrierButtonNode,
                                    d,
                                    f.hitch(this, function() {
                                        this.barrierToolActive ?
                                            this.deactivateBarrierTool() :
                                            this.activateBarrierTool();
                                    })
                                )
                            );
                            this.own(
                                q(
                                    this._addDestinationNode,
                                    d,
                                    f.hitch(this, this._addStopButton)
                                )
                            );
                            this.own(
                                q(
                                    this._optionsButtonNode,
                                    d,
                                    f.hitch(this, this._toggleOptionsMenu)
                                )
                            );
                            this.own(
                                q(
                                    this._saveMenuButton,
                                    d,
                                    f.hitch(this, this._toggleSaveMenu)
                                )
                            );
                            this.own(
                                q(
                                    this._saveButton,
                                    d,
                                    f.hitch(this, function() {
                                        this._saveButton._enabled && this._storeRouteUI();
                                    })
                                )
                            );
                            this.own(
                                q(
                                    this._saveAsButton,
                                    d,
                                    f.hitch(this, function() {
                                        f.mixin(this.routeLayer, {
                                            itemId: null,
                                            title: null,
                                            ownerFolder: null,
                                        });
                                        this._storeRouteUI();
                                    })
                                )
                            );
                            this.own(
                                q(
                                    this._findOptimalOrderNode,
                                    d,
                                    f.hitch(this, this._toggleCheckbox)
                                )
                            );
                            this.own(
                                q(
                                    this._returnToStartNode,
                                    d,
                                    f.hitch(this, this._toggleCheckbox)
                                )
                            );
                            this.own(
                                q(
                                    this._useTrafficNode,
                                    d,
                                    f.hitch(this, this._toggleCheckbox)
                                )
                            );
                            this.own(
                                q(this._useMilesNode, d, f.hitch(this, this._toggleUnits))
                            );
                            this.own(
                                q(
                                    this._useKilometersNode,
                                    d,
                                    f.hitch(this, this._toggleUnits)
                                )
                            );
                            this.own(
                                q(
                                    this._getDirectionsButtonNode,
                                    d,
                                    f.hitch(this, this.getDirections)
                                )
                            );
                            this.own(
                                q(
                                    this._clearDirectionsButtonNode,
                                    d,
                                    f.hitch(this, function() {
                                        this.clearDirections();
                                    })
                                )
                            );
                            var a = f.hitch(this, function() {
                                clearTimeout(this._startTimeMenu._hideTimer);
                                this._startTimeMenu._hideTimer = setTimeout(
                                    f.hitch(this, function() {
                                        y.set(this._startTimeMenu, 'display', 'none');
                                    }),
                                    100
                                );
                            });
                            this.own(
                                q(
                                    this._startTimeButtonNode,
                                    d,
                                    f.hitch(this, function() {
                                        this._startTimeButtonNode.disabled ||
                                            'block' === y.get(this._startTimeMenu, 'display') ?
                                            y.set(this._startTimeMenu, 'display', 'none') :
                                            (y.set(this._startTimeMenu, 'display', 'block'), this[
                                                'now' === this.startTime ?
                                                '_startTimeMenuLeaveNow' :
                                                'none' === this.startTime ?
                                                '_startTimeMenuNone' :
                                                '_startTimeMenuDepartAt'
                                            ].focus());
                                    })
                                )
                            );
                            this.own(q(this._startTimeMenuLeaveNow, 'blur', a));
                            this.own(q(this._startTimeMenuDepartAt, 'blur', a));
                            this.own(q(this._startTimeMenuNone, 'blur', a));
                            this.own(
                                q(
                                    this._startTimeMenuLeaveNow,
                                    'mousedown',
                                    f.hitch(this, function() {
                                        this.startTime = 'now';
                                        this._updateStartTimeUI();
                                        this._clearDisplayBeforeSolve();
                                    })
                                )
                            );
                            this.own(
                                q(
                                    this._startTimeMenuDepartAt,
                                    'mousedown',
                                    f.hitch(this, function() {
                                        this.startTime = new Date().getTime();
                                        this._updateStartTimeUI();
                                        this._clearDisplayBeforeSolve();
                                    })
                                )
                            );
                            this.own(
                                q(
                                    this._startTimeMenuNone,
                                    'mousedown',
                                    f.hitch(this, function() {
                                        this.startTime = 'none';
                                        this._updateStartTimeUI();
                                        this._clearDisplayBeforeSolve();
                                    })
                                )
                            );
                            this._symbolEventPaddingDirections = new ka()
                                .setColor(new h([0, 255, 0, 0]))
                                .setWidth(20)
                                .setCap(ka.CAP_ROUND);
                            this._stopLayer = new Z({
                                id: 'directions_stopLayer_' + this.id,
                                displayOnPan: !0,
                            });
                            this._routeLayer = new Z({
                                id: 'directions_routeLayer_' + this.id,
                                displayOnPan: !0,
                            });
                            this._waypointsEventLayer = new Z({
                                id: 'directions_waypointsEventLayer_' + this.id,
                                displayOnPan: !0,
                            });
                            this._barriersLayer = new Z({
                                id: 'directions_barriersLayer_' + this.id,
                                displayOnPan: !0,
                            });
                            this._polylineBarriersLayer = new Z({
                                id: 'directions_polylineBarriersLayer_' + this.id,
                                displayOnPan: !0,
                            });
                            this._polygonBarriersLayer = new Z({
                                id: 'directions_polygonBarriersLayer_' + this.id,
                                displayOnPan: !0,
                            });
                            this._barriersLayer.setRenderer(this.defaults.barrierRenderer);
                            this._polylineBarriersLayer.setRenderer(
                                this.defaults.polylineBarrierRenderer
                            );
                            this._polygonBarriersLayer.setRenderer(
                                this.defaults.polygonBarrierRenderer
                            );
                            this.map &&
                                (this.map.addLayer(this._routeLayer), this.map.addLayer(
                                    this._polygonBarriersLayer
                                ), this.map.addLayer(
                                    this._polylineBarriersLayer
                                ), this.map.addLayer(this._barriersLayer), this.map.addLayer(
                                    this._stopLayer
                                ), (this._externalTimeExtent = this.map.timeExtent));
                            this._snappingManager = this.map.enableSnapping({
                                layerInfos: [{
                                    layer: this._waypointsEventLayer,
                                    snapToVertex: !1,
                                    snapToPoint: !0,
                                    snapToEdge: !0,
                                }, ],
                                tolerance: 15,
                            });
                            this._setWidgetProperties();
                            var b = new J(null, this.waypointSymbol, {}),
                                a = f.hitch(this, function() {
                                    this._moveInProgress ||
                                        this._solveInProgress ||
                                        !b._isShown() ||
                                        (this.editToolbar.deactivate(), this._stopLayer.remove(
                                                b
                                            ), clearTimeout(
                                                b._solveTimeout
                                            ), (b._solveTimeout = null), (b.attributes.isWaypoint = !0), b._isStopIcon &&
                                            this.stopGraphics[b._index] &&
                                            (this._stopLayer.add(
                                                this.stopGraphics[b._index]
                                            ), this._stopLayer.add(this.textGraphics[b._index])));
                                    b._showTooltip();
                                });
                            this._handle = f.mixin(b, {
                                _isHandle: !0,
                                _tooltip: G.create(
                                    'div', {
                                        className: this.theme + ' esriDirectionsRouteTooltip',
                                        onmouseover: a,
                                    },
                                    this.map.container
                                ),
                                _showTooltip: f.hitch(this, function(a) {
                                    b._tooltip.style.display = !a || a instanceof MouseEvent ?
                                        'none' :
                                        'inline';
                                    a &&
                                        ((a = 'string' === typeof a ?
                                                a :
                                                "\x3ctable class\x3d'esriRoutesTooltip'\x3e" +
                                                this._renderDirectionsItemTR(a) +
                                                '\x3c/table\x3e'), b._tooltip.innerHTML !== a &&
                                            (b._tooltip.innerHTML = a));
                                }),
                                _isShown: f.hitch(this, function() {
                                    return -1 < e.indexOf(this._stopLayer.graphics, b);
                                }),
                                _remove: a,
                            });
                            this._activate(this.mapClickActive);
                        },
                        startup: function() {
                            this.inherited(arguments);
                            return this._enqueue(this._init);
                        },
                        destroy: function() {
                            this.deactivate();
                            this.map.removeLayer(this._barriersLayer);
                            this.map.removeLayer(this._polylineBarriersLayer);
                            this.map.removeLayer(this._polygonBarriersLayer);
                            this.map.removeLayer(this._routeLayer);
                            this.map.removeLayer(this._stopLayer);
                            this.map.removeLayer(this._waypointsEventLayer);
                            this._disconnectEvents();
                            G.empty(this.domNode);
                            this.inherited(arguments);
                        },
                        activate: function() {
                            return this._enqueue(function() {
                                this.deactivateBarrierTool().then(
                                    f.hitch(this, function() {
                                        this.set('mapClickActive', !0);
                                    })
                                );
                            });
                        },
                        deactivate: function() {
                            return this._enqueue(function() {
                                this.deactivateBarrierTool().then(
                                    f.hitch(this, function() {
                                        this.set('mapClickActive', !1);
                                    })
                                );
                            });
                        },
                        activateBarrierTool: function() {
                            return this._enqueue(function() {
                                this.set('mapClickActive', !1);
                                this.set('barrierToolActive', !0);
                            });
                        },
                        deactivateBarrierTool: function() {
                            return this._enqueue(function() {
                                this.set('mapClickActive', !1);
                                this.set('barrierToolActive', !1);
                            });
                        },
                        clearDirections: function() {
                            return this._enqueue(function() {
                                this.clearMessages();
                                return this._clearDirections();
                            });
                        },
                        reset: function() {
                            return this._enqueue(this._reset);
                        },
                        modifyStopSequence: function(a, b) {
                            return this._enqueue(function() {
                                return this._modifyStopSequence(a, b);
                            });
                        },
                        onActivate: function() {},
                        onDeactivate: function() {},
                        onActivateBarrierTool: function() {},
                        onDeactivateBarrierTool: function() {},
                        onLoad: function() {
                            this._enableButton(this._getDirectionsButtonNode);
                        },
                        onDirectionsStart: function() {
                            this._clearDisplayBeforeSolve();
                            this.set('solving', !0);
                            this._showLoadingSpinner(!0);
                        },
                        onDirectionsFinish: function() {
                            this._showLoadingSpinner(!1);
                            this.set('solving', !1);
                        },
                        onDirectionsClear: function() {},
                        onSegmentSelect: function() {},
                        onSegmentHighlight: function() {},
                        onStopsUpdate: function() {},
                        onRouteItemCreated: function() {},
                        onRouteItemUpdated: function() {},
                        onFeatureCollectionCreated: function() {},
                        onError: function() {},
                        removeStops: function() {
                            return this.reset();
                        },
                        removeStop: function(a, b, c) {
                            return this._enqueue(function() {
                                this.clearMessages();
                                return this._removeStop(a, b, c);
                            });
                        },
                        updateStops: function(a) {
                            return this._enqueue(function() {
                                return this._updateStops(a);
                            });
                        },
                        addStops: function(a, b) {
                            return this._enqueue(function() {
                                return this._addStops(a, b);
                            }).then(f.hitch(this, this.zoomToFullRoute));
                        },
                        addStop: function(a, b) {
                            return this._enqueue(
                                function() {
                                    return this._addStop(a, b);
                                }, { _incrementalSolveStopRange: this._incrementalSolveStopRange }
                            );
                        },
                        updateStop: function(a, b, c) {
                            return this._enqueue(
                                function() {
                                    return this._updateStop(a, b, c);
                                }, { _incrementalSolveStopRange: this._incrementalSolveStopRange }
                            );
                        },
                        setBarriers: function(a) {
                            this.routeParams.barriers = a;
                            return this._getDirections().then(
                                f.hitch(this, function() {
                                    this.zoomToFullRoute();
                                })
                            );
                        },
                        setPolylineBarriers: function(a) {
                            this.routeParams.polylineBarriers = a;
                            return this._getDirections().then(
                                f.hitch(this, function() {
                                    this.zoomToFullRoute();
                                })
                            );
                        },
                        setPolygonBarriers: function(a) {
                            this.routeParams.polygonBarriers = a;
                            return this._getDirections().then(
                                f.hitch(this, function() {
                                    this.zoomToFullRoute();
                                })
                            );
                        },
                        clearMessages: function() {
                            this.messages = [];
                            this._msgNode && (this._msgNode.innerHTML = '');
                        },
                        getDirections: function(a) {
                            return this._enqueue(function() {
                                return this._getDirections().then(
                                    f.hitch(this, function() {
                                        !0 !== a && this.zoomToFullRoute();
                                    })
                                );
                            });
                        },
                        selectSegment: function(a) {
                            if (!(!this.directions ||
                                    !this.directions.features ||
                                    0 > a ||
                                    a >= this.directions.features.length))
                                for (
                                    var b = A('[data-segment]', this._resultsNode), c = 0; c < b.length; c++
                                ) {
                                    var d = parseInt(w.get(b[c], 'data-segment'), 10);
                                    if (a === d && b[c] !== this._focusedDirectionsItem) {
                                        this._focusedDirectionsItem = b[c];
                                        this.centerAtSegmentStart(a);
                                        this.onSegmentSelect(this.directions.features[a]);
                                        b[c].focus();
                                        break;
                                    }
                                }
                        },
                        unhighlightSegment: function(a) {
                            var b = this._segmentGraphics;
                            if (b && (!this._focusedDirectionsItem || a)) {
                                for (a = 0; a < b.length; a++)
                                    this._routeLayer.remove(b[a]);
                                this._segmentGraphics = [];
                            }
                        },
                        highlightSegment: function(a, b) {
                            if (!((this._focusedDirectionsItem && !b) ||
                                    a >= this.directions.features.length)) {
                                a = a || 0;
                                var c = f.hitch(this, function(a) {
                                        var b = this.map.toMap({ x: 0, y: 0 });
                                        return this.map.toScreen(b.offset(a, 0)).x;
                                    }),
                                    d = f.hitch(this, function(a) {
                                        for (
                                            var b = 0, d = 0; d < a.length; d++
                                        )
                                            for (var e = 1; e < a[d].length; e++) var f = a[d][e - 1],
                                                h = a[d][e],
                                                b = b + c(Math.sqrt((f[0] - h[0]) * (f[0] - h[0]) + (f[1] - h[1]) * (f[1] - h[1])));
                                        return b;
                                    }),
                                    e = f.hitch(this, function(a) {
                                        var b = this.map.toMap({ x: 0, y: 0 });
                                        return (
                                            this.map.toMap({
                                                x: a,
                                                y: 0,
                                            }).x - b.x
                                        );
                                    }),
                                    g = function(a, b, d) {
                                        b = Math.max(1, b);
                                        for (
                                            var e = d ? a[0].length - 1 : 0,
                                                f = 0,
                                                h,
                                                g,
                                                k,
                                                l = [
                                                    [a[0][d ? e : 0]]
                                                ];
                                            (d && 0 < e) || (!d && e < a[0].length - 1);

                                        ) {
                                            g = a[0][d ? e - 1 : e];
                                            k = a[0][d ? e : e + 1];
                                            if (
                                                (h = c(
                                                    Math.sqrt(
                                                        (g[0] - k[0]) * (g[0] - k[0]) +
                                                        (g[1] - k[1]) * (g[1] - k[1])
                                                    )
                                                ))
                                            )
                                                if (f + h < b)
                                                    d ? l[0].splice(0, 0, g) : l[0].push(k), (f += h);
                                                else {
                                                    b = (b - f) / h;
                                                    d
                                                        ?
                                                        l[0].splice(0, 0, [
                                                            k[0] - (k[0] - g[0]) * b,
                                                            k[1] - (k[1] - g[1]) * b,
                                                        ]) :
                                                        l[0].push([
                                                            g[0] + (k[0] - g[0]) * b,
                                                            g[1] + (k[1] - g[1]) * b,
                                                        ]);
                                                    break;
                                                }
                                            e += d ? -1 : 1;
                                        }
                                        return 0 < f + h ? l : a;
                                    };
                                b = this.get('directions').features[a];
                                var k = new W(b.geometry),
                                    l = 40 * Math.PI / 180;
                                f.mixin(b.attributes, { _index: a });
                                if (a) {
                                    var m = g(
                                            this.get('directions').features[a - 1].geometry.paths,
                                            25, !0
                                        ),
                                        n = 'esriDMTStop' !== b.attributes.maneuverType ?
                                        g(k.paths, 25, !1) :
                                        m,
                                        m = n !== m ? [m[0].concat(n[0])] : n,
                                        aa = new W(n).getExtent();
                                    if (
                                        1 < n[0].length &&
                                        15 <= c(Math.max(aa.getWidth(), aa.getHeight()))
                                    ) {
                                        for (
                                            var g = 15 * Math.cos(l / 2),
                                                d = 15 * Math.sin(l / 2),
                                                p = n[0].length - 2,
                                                q,
                                                l = n[0][p + 1],
                                                aa = 0; 0 <= p && !aa;

                                        )
                                            (q = n[0][p]), (aa = c(
                                                Math.sqrt(
                                                    (q[0] - l[0]) * (q[0] - l[0]) +
                                                    (q[1] - l[1]) * (q[1] - l[1])
                                                )
                                            )), p--;
                                        22 > aa &&
                                            ((n = aa + (22 - aa) / 3), (p =
                                                aa + 2 * (22 - aa) / 3), (p = [
                                                q[0] + p / aa * (l[0] - q[0]),
                                                q[1] + p / aa * (l[1] - q[1]),
                                            ]), (q = [
                                                l[0] - n / aa * (l[0] - q[0]),
                                                l[1] - n / aa * (l[1] - q[1]),
                                            ]), (l = p), (aa = 22));
                                        g /= aa;
                                        n = [l[0] - (l[0] - q[0]) * g, l[1] - (l[1] - q[1]) * g];
                                        q[1] !== l[1] ?
                                            ((g = (l[0] - q[0]) / (l[1] - q[1])), (q = e(
                                                d / Math.sqrt(1 + g * g)
                                            )), (e = g * q)) :
                                            ((q = 0), (e = e(d)));
                                        Infinity === Math.abs(q) ||
                                            Infinity === Math.abs(e) ||
                                            isNaN(q) ||
                                            isNaN(e) ||
                                            (m[0].push(l), m[0].push([
                                                n[0] - q,
                                                n[1] + e,
                                            ]), m[0].push([n[0] + q, n[1] - e]), m[0].push(l));
                                    } else m = g(m, 2 * d(n), !0);
                                    k.paths = m;
                                }
                                this.unhighlightSegment(
                                    this._segmentGraphics && this._segmentGraphics.length
                                );
                                e = f
                                    .clone(this.routeSymbol)
                                    .setWidth(this.segmentSymbol.width)
                                    .setColor(
                                        new h([
                                            parseInt(0.9 * this.segmentSymbol.color.r),
                                            parseInt(0.9 * this.segmentSymbol.color.g),
                                            parseInt(0.9 * this.segmentSymbol.color.b),
                                        ])
                                    );
                                this._segmentGraphics = [
                                    new J(
                                        b.geometry,
                                        e,
                                        b.attributes,
                                        this.get('segmentInfoTemplate')
                                    ),
                                    new J(
                                        k,
                                        this.routeSymbol,
                                        b.attributes,
                                        this.get('segmentInfoTemplate')
                                    ),
                                    new J(
                                        k,
                                        this.segmentSymbol,
                                        b.attributes,
                                        this.get('segmentInfoTemplate')
                                    ),
                                ];
                                this.get('showSegmentHighlight') &&
                                    (this._routeLayer.add(
                                        this._segmentGraphics[0]
                                    ), this._routeLayer.add(
                                        this._segmentGraphics[1]
                                    ), this._routeLayer.add(this._segmentGraphics[2]));
                                b = f.hitch(this, function(a) {
                                    if (0 < a && a < this.directions.features.length) {
                                        a = this.directions.features[a]
                                            ._associatedFeaturesWithWaypoints;
                                        for (var b = 0; b < a.length; b++)
                                            a[b]._associatedSnapFeature &&
                                            a[b]._associatedSnapFeature.getDojoShape() &&
                                            a[b]._associatedSnapFeature
                                            .getDojoShape()
                                            .moveToFront();
                                    }
                                });
                                b(a - 1);
                                b(a);
                                this.onSegmentHighlight(this.directions.features[a]);
                            }
                        },
                        zoomToSegment: function(a) {
                            var b, c = new K();
                            this.directions && this.directions.features ?
                                ((b = Math.max(
                                        0,
                                        Math.min(this.directions.features.length - 1, a || 0)
                                    )), this.map
                                    .setExtent(
                                        this.get('directions').features[b].geometry.getExtent(), !0
                                    )
                                    .promise.always(
                                        f.hitch(this, function() {
                                            this.highlightSegment(b);
                                            c.resolve();
                                        })
                                    )) :
                                c.reject(Error('No directions.'));
                            return c.promise;
                        },
                        centerAtSegmentStart: function(a) {
                            var b, c = new K();
                            if (this.directions && this.directions.features) {
                                b = Math.max(
                                    0,
                                    Math.min(this.directions.features.length - 1, a || 0)
                                );
                                var d = this.directions.features[b];
                                this.map.centerAt(d.geometry.getPoint(0, 0)).promise.always(
                                    f.hitch(this, function() {
                                        this.highlightSegment(b, !0);
                                        this._showSegmentPopup(d, b);
                                        c.resolve();
                                    })
                                );
                            } else c.reject(Error('No directions.'));
                            return c.promise;
                        },
                        zoomToFullRoute: function() {
                            var a = new K();
                            this.directions && this.directions.features ?
                                (this._clearInfoWindow(), this.unhighlightSegment(), this.get(
                                        'map'
                                    )
                                    .setExtent(this.get('directions').extent, !0)
                                    .promise.always(a.resolve)) :
                                a.resolve();
                            return a.promise;
                        },
                        setListIcons: function() {
                            var a, b = this._dnd.getAllNodes();
                            for (a = 0; a < b.length; a++) {
                                var c = A('.' + this._css.stopIconClass, b[a])[0];
                                c && (c.innerHTML = this._getLetter(a));
                                x.remove(
                                    b[a],
                                    this._css.stopOriginClass +
                                    ' ' +
                                    this._css.stopDestinationClass +
                                    ' ' +
                                    this._css.stopUnreachedClass +
                                    ' ' +
                                    this._css.stopUnreachedFirstOrLastClass
                                );
                                c = this._getStopSymbol(this.stops[a]);
                                c === this.fromSymbol ?
                                    x.add(b[a], this._css.stopOriginClass) :
                                    c === this.toSymbol ?
                                    x.add(b[a], this._css.stopDestinationClass) :
                                    c === this.unreachedSymbol &&
                                    x.add(b[a], this._css.stopUnreachedClass);
                            }
                            a = A('[data-reverse-td]', this._dndNode)[0];
                            G.destroy(a);
                            this.get('showReverseStopsButton') &&
                                G.create(
                                    'td', {
                                        'data-reverse-td': 'true',
                                        rowspan: b.length,
                                        className: this._css.esriStopReverseColumnClass,
                                        innerHTML: '\x3cdiv role\x3d"button" class\x3d"' +
                                            this._css.reverseStopsClass +
                                            '" data-reverse-stops\x3d"true" title\x3d"' +
                                            B.widgets.directions.reverseDirections +
                                            '"\x3e\x3c/div\x3e',
                                        onmouseover: function(a) {
                                            a.stopPropagation();
                                        },
                                        onmouseout: function(a) {
                                            a.stopPropagation();
                                        },
                                    },
                                    b[0]
                                );
                        },
                        addRouteSymbols: function() {
                            if (this.stopGraphics.length) {
                                this._moveLayersToFront();
                                for (var a = 0; a < this.stopGraphics.length; a++)
                                    if (
                                        this.stopGraphics[a] &&
                                        (!this._handle._isShown() ||
                                            (this._handle._isShown() && this._handle._index !== a))
                                    ) {
                                        this._stopLayer.add(this.stopGraphics[a]);
                                        var b = this.stopGraphics[a].getDojoShape();
                                        b && b.moveToFront();
                                        this._stopLayer.add(this.textGraphics[a]);
                                        (b = this.textGraphics[a].getDojoShape()) &&
                                        b.moveToFront();
                                    }
                                this._moveInProgress &&
                                    !this._handle.attributes.isWaypoint &&
                                    this._handle.getDojoShape() &&
                                    this._handle.getDojoShape().moveToFront();
                            }
                        },
                        createRouteSymbols: function() {
                            this._clearStopGraphics();
                            for (
                                var a = this.stops,
                                    b = function(a) {
                                        var b = {},
                                            c;
                                        for (c in a)
                                            a.hasOwnProperty(c) &&
                                            0 === c.indexOf('Attr_') &&
                                            (b[c] = a[c]);
                                        return b;
                                    },
                                    c = 0; c < a.length; c++
                            ) {
                                var d = a[c];
                                if (d && d.feature) {
                                    var e = d.feature.attributes,
                                        h = e ? e.Status : void 0,
                                        g = null;
                                    this._isStopAWaypoint(d) ||
                                        ((g = new Ca(
                                                this._getLetter(c),
                                                this.get('textSymbolFont'),
                                                this.get('textSymbolColor')
                                            )), this.get('textSymbolOffset') &&
                                            g.setOffset(
                                                this.get('textSymbolOffset').x,
                                                this.get('textSymbolOffset').y
                                            ));
                                    g = new J(
                                        d.feature.geometry,
                                        g, { address: d.name },
                                        this.get('stopsInfoTemplate')
                                    );
                                    g._isStopLabel = !0;
                                    g._index = c;
                                    d = new J(
                                        d.feature.geometry,
                                        this._getStopSymbol(d),
                                        f.mixin({
                                                address: d.name,
                                                Status: void 0 === h ? 0 : h,
                                                CurbApproach: e && e.CurbApproach ?
                                                    e.CurbApproach :
                                                    null,
                                                TimeWindowStart: e && e.TimeWindowStart ?
                                                    e.TimeWindowStart :
                                                    null,
                                                TimeWindowEnd: e && e.TimeWindowEnd ?
                                                    e.TimeWindowEnd :
                                                    null,
                                                isWaypoint: this._isStopAWaypoint(d),
                                            },
                                            b(e)
                                        ),
                                        this.get(
                                            this._isStopAWaypoint(d) ?
                                            'waypointInfoTemplate' :
                                            'stopsInfoTemplate'
                                        )
                                    );
                                    d._isStopIcon = !0;
                                    d._index = c;
                                    this.stopGraphics[c] = d;
                                    this.textGraphics[c] = g;
                                }
                            }
                            this.set('stopGraphics', this.stopGraphics);
                            this.set('textGraphics', this.textGraphics);
                            this._showBarriers();
                            this.addRouteSymbols();
                            this.setListIcons();
                        },
                        setTravelMode: function(a) {
                            return this._enqueue(function() {
                                this.clearMessages();
                                this._travelModeSelector.setValue(a);
                                return this._setTravelMode(a);
                            });
                        },
                        getSupportedTravelModeNames: function() {
                            var a = [],
                                b = this.serviceDescription;
                            if (b && b.supportedTravelModes && b.supportedTravelModes.length)
                                for (var b = b.supportedTravelModes, c = 0; c < b.length; c++)
                                    a.push(b[c].name);
                            return a;
                        },
                        setDirectionsLengthUnits: function() {
                            var a = 1 === arguments.length ?
                                arguments[0] :
                                this.get('directionsLengthUnits');
                            return this._enqueue(function() {
                                this.clearMessages();
                                return this._setDirectionsLengthUnits(a);
                            });
                        },
                        setDirectionsLanguage: function() {
                            var a = 1 === arguments.length ?
                                arguments[0] :
                                this.get('directionsLanguage');
                            return this._enqueue(function() {
                                this.clearMessages();
                                return this._setDirectionsLanguage(a);
                            });
                        },
                        useMyCurrentLocation: function(a) {
                            this.clearMessages();
                            return this._createLocateButton(this.geocoders[a], !0, !0);
                        },
                        loadRoute: function(a) {
                            return this._enqueue(
                                f.hitch(this, function() {
                                    return this._loadRoute(a);
                                })
                            );
                        },
                        _getStopsAttr: function() {
                            return this.returnToStart && this._returnToStartStop ?
                                this.stops.concat(this._returnToStartStop) :
                                this.stops;
                        },
                        _getTravelModeNameAttr: function() {
                            return (
                                this.routeParams &&
                                this.routeParams.travelMode &&
                                this.routeParams.travelMode.name
                            );
                        },
                        _reset: function() {
                            var a = this.mapClickActive || this.barrierToolActive;
                            this._clearBarriersGraphics();
                            this._setWidgetProperties();
                            return this._init().then(
                                f.hitch(this, function() {
                                    this.mapClickActive = !a;
                                    this.set('mapClickActive', a);
                                    this._searchSourceSelector &&
                                        this._searchSourceSelector.setValue('all');
                                })
                            );
                        },
                        _activate: function() {
                            var a = this.get('mapClickActive'),
                                b = f.hitch(this, function(a) {
                                    for (
                                        var b = a ?
                                            [
                                                this.textGraphics,
                                                this.stopGraphics,
                                                this.displayedManeuverPointGraphics,
                                                this.displayedRouteGraphics,
                                            ] :
                                            [
                                                this.displayedRouteGraphics,
                                                this.displayedManeuverPointGraphics,
                                                this.stopGraphics,
                                                this.textGraphics,
                                            ],
                                            c = 0; c < b.length; c++
                                    )
                                        for (var d = b[c], e = 0; e < d.length; e++) {
                                            var f = d[e].getDojoShape();
                                            f && f[a ? 'moveToBack' : 'moveToFront'].call(f);
                                        }
                                });
                            this.drawToolbar &&
                                ((this.barrierToolActive = !1), this.drawToolbar.deactivate(), x.remove(
                                    this._lineBarrierButtonNode,
                                    this._css.stopsPressedButtonClass
                                ));
                            this._addStopOnMapClickListener &&
                                this._addStopOnMapClickListener.remove();
                            a
                                ?
                                (this.map.activeDirectionsWidget &&
                                    this.map.activeDirectionsWidget !== this &&
                                    this.map.activeDirectionsWidget.deactivate(), (this.map.activeDirectionsWidget = this), (this._addStopOnMapClickListener = q(
                                        this.map,
                                        'click',
                                        f.hitch(this, function(a) {
                                            this.canModifyStops &&
                                                !this._solveInProgress &&
                                                (this.map.infoWindow.hide(), this.addStop(
                                                    new J(a.mapPoint)
                                                ));
                                        })
                                    )), this.map.addLayer(
                                        this._waypointsEventLayer
                                    ), this._moveLayersToFront(), x.add(
                                        this._activateButtonNode,
                                        this._css.stopsPressedButtonClass
                                    ), this.onActivate()) :
                                (this.map.removeLayer(this._waypointsEventLayer), x.remove(
                                    this._activateButtonNode,
                                    this._css.stopsPressedButtonClass
                                ), this.onDeactivate());
                            b(!a);
                            this.emit('map-click-active', {
                                mapClickActive: this.mapClickActive,
                            });
                        },
                        _activateBarrierTool: function() {
                            this.get('barrierToolActive') ?
                                (this.map.activeDirectionsWidget &&
                                    this.map.activeDirectionsWidget !== this &&
                                    this.map.activeDirectionsWidget.deactivate(), (this.map.activeDirectionsWidget = this), this.drawToolbar.activate(
                                        xa.FREEHAND_POLYLINE
                                    ), x.add(
                                        this._lineBarrierButtonNode,
                                        this._css.stopsPressedButtonClass
                                    ), this.onActivateBarrierTool()) :
                                (this.drawToolbar.deactivate(), x.remove(
                                    this._lineBarrierButtonNode,
                                    this._css.stopsPressedButtonClass
                                ), this.onDeactivateBarrierTool());
                            this.emit('barrier-tool-active', {
                                barrierToolActive: this.barrierToolActive,
                            });
                        },
                        _moveLayersToFront: function() {
                            var a = this.get('map'),
                                b = a.graphicsLayerIds.length - 1;
                            a.reorderLayer(this._routeLayer, b);
                            a.reorderLayer(this._polygonBarriersLayer, b);
                            a.reorderLayer(this._polylineBarriersLayer, b);
                            a.reorderLayer(this._barriersLayer, b);
                            a.reorderLayer(this._waypointsEventLayer, b);
                            a.reorderLayer(this._stopLayer, b);
                        },
                        _destroyGeocoders: function() {
                            for (; this.geocoders && this.geocoders.length;) {
                                if (this.geocoders[0])
                                    try {
                                        this.geocoders[0].destroy();
                                    } catch (aa) {}
                                this.geocoders.splice(0, 1);
                            }
                            this.geocoders = [];
                        },
                        _disconnectEvents: function() {
                            var a = this._clearDirections(!0),
                                b;
                            if (this._watchEvents && this._watchEvents.length)
                                for (b = 0; b < this._watchEvents.length; b++)
                                    this._watchEvents[b].unwatch();
                            if (this._onEvents && this._onEvents.length)
                                for (b = 0; b < this._onEvents.length; b++)
                                    this._onEvents[b].remove();
                            if (this._geocoderEvents)
                                for (b = 0; b < this._geocoderEvents.length; b++)
                                    this._geocoderEvents[
                                        b
                                    ].value.unwatch(), this._geocoderEvents[
                                        b
                                    ].blur.remove(), this._geocoderEvents[
                                        b
                                    ].select.remove(), this._geocoderEvents[b].suggest.remove();
                            this._onEvents = [];
                            this._watchEvents = [];
                            this._geocoderEvents = [];
                            this._disconnectResults();
                            this._destroyGeocoders();
                            this._destroyGlobalGeocoder();
                            this._destroyDnD();
                            return a;
                        },
                        _getDirections: function() {
                            var a = new K();
                            this._removeEmptyStops();
                            1 < this._getStopCount() + this._getWaypointCount() &&
                                this.loaded ?
                                (this.onDirectionsStart(), this.clearMessages(), this._dnd.sync(), this._sortGeocoders(), this._getCandidates(
                                    this.stops
                                ).then(
                                    f.hitch(this, function(b) {
                                        this.stops = b;
                                        this._setStops();
                                        this._configureRoute().always(
                                            f.hitch(this, function(b) {
                                                a.resolve(b);
                                            })
                                        );
                                    }),
                                    f.hitch(this, function(b) {
                                        this.set('directions', null);
                                        this._clearRouteGraphics();
                                        a.reject(b);
                                        this.onDirectionsFinish(b);
                                    })
                                )) :
                                this._clearDirections(!0).always(
                                    f.hitch(this, function() {
                                        this.createRouteSymbols();
                                        a.resolve();
                                    })
                                );
                            return a.promise;
                        },
                        _clearDirections: function() {
                            var a = new K();
                            this._handle && this._handle._remove();
                            this.get('routeParams') && this.get('routeParams').stops ?
                                this.get('routeParams').stops.features.length ?
                                ((this.get(
                                    'routeParams'
                                ).stops.features = []), this.onDirectionsClear(), a.resolve()) :
                                arguments.length ?
                                a.resolve() :
                                this._reset().then(a.resolve, a.reject) :
                                a.resolve();
                            this.set('directions', null);
                            this._clearDisplayBeforeSolve();
                            this._clearDisplayAfterSolve();
                            this._routeLayer.clear();
                            this._waypointsEventLayer.clear();
                            this._stopLayer.clear();
                            return a.promise;
                        },
                        _setTravelMode: function(a) {
                            var b = new K(),
                                c = this.serviceDescription,
                                d = function() {
                                    b.resolve(a);
                                };
                            if (
                                c &&
                                c.supportedTravelModes &&
                                c.supportedTravelModes.length
                            ) {
                                for (
                                    var e = c.supportedTravelModes, f = !1, c = 0; c < e.length; c++
                                )
                                    if (e[c].name === a) {
                                        f = !0;
                                        !this.routeParams.travelMode ||
                                            (this.routeParams.travelMode &&
                                                this.routeParams.travelMode.name !== a) ?
                                            ((this.routeParams.travelMode = e[c]
                                                .impedanceAttributeName ?
                                                e[c] :
                                                e[c]
                                                .itemId), this._checkStartTimeUIAvailability(), this._solveAndZoom().always(
                                                d
                                            )) :
                                            d();
                                        this._travelModeSelector &&
                                            this._travelModeSelector.domNode &&
                                            (this._travelModeSelector.domNode.title =
                                                e[c].description);
                                        break;
                                    }
                                f || b.reject(a);
                            } else b.reject(a);
                            return b.promise;
                        },
                        _setDirectionsLengthUnits: function(a) {
                            this._clearDisplayBeforeSolve();
                            var b = new K();
                            x.remove(this._useMilesNode, this._css.stopsPressedButtonClass);
                            x.remove(
                                this._useKilometersNode,
                                this._css.stopsPressedButtonClass
                            );
                            a === I.KILOMETERS ?
                                x.add(
                                    this._useKilometersNode,
                                    this._css.stopsPressedButtonClass
                                ) :
                                a === I.MILES &&
                                x.add(
                                    this._useMilesNode,
                                    this._css.stopsPressedButtonClass
                                );
                            a === I.KILOMETERS ||
                                a === I.METERS ||
                                a === I.MILES ||
                                a === I.FEET ||
                                a === I.YARDS ||
                                a === I.NAUTICAL_MILES ?
                                ((this.directionsLengthUnits = a), b.resolve(a)) :
                                b.reject(a);
                            return b.promise;
                        },
                        _setDirectionsLanguage: function(a) {
                            this._clearDisplayBeforeSolve();
                            var b = new K();
                            a = this._setDirectionsLanguageByLocale(a);
                            this._solveAndZoom().always(function() {
                                b.resolve(a);
                            }, b.reject);
                            return b.promise;
                        },
                        _showLoadingSpinner: function(a) {
                            void 0 === a &&
                                (a =
                                    (this._requestQueueTail &&
                                        !this._requestQueueTail.isFulfilled()) ||
                                    this._moveInProgress);
                            a
                                ?
                                (x.add(
                                    this._widgetContainer,
                                    this._css.resultsLoadingClass
                                ), x.add(this._resultsNode, 'esriRoutesContainerBusy')) :
                                (x.remove(
                                    this._widgetContainer,
                                    this._css.resultsLoadingClass
                                ), x.remove(this._resultsNode, 'esriRoutesContainerBusy'));
                        },
                        _enqueue: function(a, b) {
                            var c = new K();
                            this._requestQueueTail ||
                                ((this._requestQueueTail = new K()), this._requestQueueTail.resolve());
                            this._requestQueueTail.promise.always(
                                f.hitch(this, function() {
                                    try {
                                        f.mixin(this, { _incrementalSolveStopRange: null }, b);
                                        var d = a.call(this);
                                        d &&
                                            'object' === typeof d &&
                                            d.hasOwnProperty('isFulfilled') ?
                                            d.then(
                                                f.hitch(this, function(a) {
                                                    c.resolve(a);
                                                    this._showLoadingSpinner();
                                                }),
                                                f.hitch(this, function(a) {
                                                    c.reject(a);
                                                    this._showLoadingSpinner();
                                                })
                                            ) :
                                            (c.resolve(d), this._showLoadingSpinner());
                                    } catch (pa) {
                                        c.reject(pa), this._showLoadingSpinner();
                                    }
                                })
                            );
                            this._requestQueueTail = c;
                            this._showLoadingSpinner();
                            return c.promise;
                        },
                        _createDnD: function() {
                            this._dnd = new L(this._dndNode, {
                                skipForm: !0,
                                withHandles: !0,
                            });
                        },
                        _destroyDnD: function() {
                            G.empty(this._dndNode);
                            this._dnd && (this._dnd.destroy(), (this._dnd = null));
                        },
                        _createDepartAtControls: function() {
                            if (this._departAtTime)
                                this.map &&
                                this._restoreMapTimeExtent(), (this._useTrafficItemNode.title =
                                    B.widgets.directions.trafficLabelLive), x.remove(
                                    this._departAtContainer,
                                    'departAtContainerVisible'
                                ), (this.startTime = 'now'), this._updateStartTimeUI();
                            else {
                                var a = this,
                                    b = function() {
                                        this._keepDirections || a._clearDisplayBeforeSolve();
                                        this._keepDirections = !1;
                                    },
                                    c = f.hitch(this, function() {
                                        this.map && this.map.disableKeyboardNavigation();
                                    }),
                                    d = f.hitch(this, function() {
                                        this.map && this.map.enableKeyboardNavigation();
                                    });
                                this._departAtTime = new m({
                                        required: !0,
                                        value: new Date(),
                                        onChange: b,
                                        onFocus: c,
                                        onBlur: d,
                                    },
                                    this._departAtTimeContainer
                                );
                                this._departAtDate = new l({
                                        required: !0,
                                        value: new Date(),
                                        onChange: b,
                                        onFocus: c,
                                        onBlur: d,
                                        constraints: { min: new Date(864e5) },
                                    },
                                    this._departAtDateContainer
                                );
                            }
                        },
                        _setStartTime: function(a, b, c) {
                            if (isNaN(c)) this.startTime = 'now' === c ? c : 'none';
                            else {
                                b = c instanceof Date ? c : new Date(c);
                                c =
                                    this.directions &&
                                    this.directions.features &&
                                    this.directions.features[0] &&
                                    this.directions.features[0].attributes;
                                var d = 6e4 * -b.getTimezoneOffset();
                                b = new Date(
                                    b - d + (c && c.arriveTimeUTC ? c.ETA - c.arriveTimeUTC : d)
                                );
                                this._departAtTime._keepDirections = !a;
                                this._departAtDate._keepDirections = !a;
                                this._departAtTime.setValue(b);
                                this._departAtDate.setValue(b);
                            }
                            this._updateStartTimeUI();
                        },
                        _checkStartTimeUIAvailability: function() {
                            var a = this._getImpedanceAttribute(),
                                a =
                                this._isTimeUnits(a ? a.units : '') ||
                                (this.serviceDescription &&
                                    10.6 <= this.serviceDescription.currentVersion);
                            this._startTimeButtonNode.disabled = !a;
                            x[a ? 'remove' : 'add'].apply(this, [
                                this._startTimeButtonNodeContainer,
                                'esriLinkButtonDisabled',
                            ]);
                            x[a ? 'remove' : 'add'].apply(this, [
                                this._startTimeDDLArrow,
                                'esriDirectionsDDLArrowDisabled',
                            ]);
                            a || this.set('startTime', 'now');
                        },
                        _usingAGOL: function(a) {
                            a || (a = this.routeTaskUrl);
                            return -1 < a.search(/^(https?:)*\/\/*[^.]*\.arcgis\.com.*$/i);
                        },
                        _usingRouteAGOL: function() {
                            return (-1 <
                                this.get('routeTaskUrl').search(
                                    /^(https?:)*\/\/route*[^.]*\.arcgis\.com.*$/i
                                )
                            );
                        },
                        _setSearchOptions: function() {
                            var a = {
                                map: this.get('map'),
                                autoNavigate: !1,
                                enableInfoWindow: !1,
                                enableHighlight: !1,
                                enableSourcesMenu: !1,
                            };
                            this.searchOptions = f.mixin({ maxResults: 1, locationToAddressDistance: 100 },
                                this.defaults.searchOptions,
                                a
                            );
                        },
                        _setDefaultUnits: function() {
                            if (!this.get('directionsLengthUnits')) {
                                var a = 'EN-US' === b.locale.toUpperCase() ?
                                    I.MILES :
                                    I.KILOMETERS;
                                this.defaults.directionsLengthUnits ?
                                    (a = this.defaults.directionsLengthUnits) :
                                    this.userOptions.routeParams &&
                                    this.userOptions.routeParams.directionsLengthUnits &&
                                    (a = this.userOptions.routeParams.directionsLengthUnits);
                                this.set('directionsLengthUnits', a);
                            }
                            this._setDirectionsLengthUnits(this.directionsLengthUnits);
                        },
                        _setTrafficOptions: function() {
                            this._usingRouteAGOL() &&
                                !this.trafficLayer &&
                                (this.trafficLayer = new Y(
                                    ya +
                                    '//traffic.arcgis.com/arcgis/rest/services/World/Traffic/MapServer', { opacity: 0.4 }
                                ));
                            this.trafficLayer &&
                                this.trafficLayer.url &&
                                this._usingAGOL(this.trafficLayer.url) &&
                                (this._trafficAvailabilityButton.style.display =
                                    'inline-block');
                            this.set(
                                'showTrafficOption',
                                (this.defaults.showTrafficOption ||
                                    !this.defaults.hasOwnProperty('showTrafficOption')) &&
                                !!this.trafficLayer
                            );
                            this._optionsMenu();
                        },
                        _updateCanModifyStops: function(a, b) {
                            this.canModifyStops ||
                                this.canModifyWaypoints ||
                                this.set('mapClickActive', !1);
                            b ||
                                !this.canModifyStops ||
                                this.canModifyWaypoints ||
                                this.set('mapClickActive', !0);
                            this._showAddDestination();
                            this._showMapClickActiveButton();
                            this._stopsTableCover.style.display = this.canModifyStops ?
                                'none' :
                                'inline';
                        },
                        _updateCanAddWaypoints: function(a, b) {
                            this.canModifyStops ||
                                this.canModifyWaypoints ||
                                this.set('mapClickActive', !1);
                            b ||
                                this.canModifyStops ||
                                !this.canModifyWaypoints ||
                                this.set('mapClickActive', !0);
                            this._showMapClickActiveButton();
                            this._handle._remove();
                        },
                        _updateStartTimeUI: function() {
                            isNaN(this.startTime) ?
                                ((this._startTimeButtonLabel.innerHTML = 'now' ==
                                    this.startTime ?
                                    this._i18n.widgets.directions.leaveNow :
                                    this._i18n.widgets.directions.noStartTime), x.remove(
                                    this._startTimeButtonNodeContainer,
                                    'departAtButton'
                                ), x.remove(
                                    this._departAtContainer,
                                    'departAtContainerVisible'
                                )) :
                                (x.add(
                                    this._startTimeButtonNodeContainer,
                                    'departAtButton'
                                ), x.add(
                                    this._departAtContainer,
                                    'departAtContainerVisible'
                                ), (this._startTimeButtonLabel.innerHTML = this._i18n.widgets.directions.departAt));
                        },
                        _setWidgetProperties: function() {
                            this._disconnectEvents();
                            this.set(this.defaults);
                            this.routeLayer = f.clone(this.defaults.routeLayer);
                            this._folderSelector &&
                                (this._outputLayer.setValue(''), this._outputLayer.set(
                                    'disabled', !0
                                ), this._folderSelector.set('disabled', !0));
                            this.set('stops', []);
                            this._updateCanModifyStops();
                        },
                        _updateStops: function(a) {
                            var b = new K();
                            a
                                ?
                                this.get('loaded') ?
                                this._reset().then(
                                    f.hitch(this, function() {
                                        this._addStops(a).then(b.resolve, b.reject);
                                    }),
                                    b.reject
                                ) :
                                this._addStops(a).then(b.resolve, b.reject) :
                                b.reject();
                            return b.promise;
                        },
                        _removeStop: function(a, b, c, d) {
                            var e = new K(),
                                h = f.hitch(this, function(a) {
                                    this.stops.splice(a, 1);
                                    var b = this._dnd.getAllNodes()[a],
                                        c = this.get('geocoders');
                                    this._geocoderEvents[b.id] &&
                                        (this._geocoderEvents[
                                            b.id
                                        ].blur.remove(), this._geocoderEvents[
                                            b.id
                                        ].select.remove(), this._geocoderEvents[
                                            b.id
                                        ].suggest.remove(), this._geocoderEvents[
                                            b.id
                                        ].value.unwatch());
                                    c[a].destroy();
                                    c.splice(a, 1);
                                    this.set('geocoders', c);
                                    G.destroy(b);
                                    this._dnd.sync();
                                    this._stopsRemovable();
                                    this._optionsMenu();
                                    this._checkMaxStops();
                                    this.setListIcons();
                                    this._sortGeocoders();
                                });
                            if (0 > a || a >= this.stops.length || void 0 === a)
                                a = this.stops.length - 1;
                            var g = !1;
                            for (
                                d =
                                (this.stopGraphics[a] &&
                                    this._isStopAWaypoint(this.stops[a])) ||
                                d; !g;

                            )
                                h(a), d ?
                                (g = !0) :
                                ((a -= 0 >= a ||
                                    (a < this.stops.length &&
                                        this._isStopAWaypoint(this.stops[a])) ?
                                    0 :
                                    1), (g = !this._isStopAWaypoint(this.stops[a])));
                            for (; this.stops.length - this._getWaypointCount() < this.minStops;

                            )
                                this._addStop();
                            this._clearStopsStatusAttr();
                            this._setStops();
                            this.createRouteSymbols();
                            c
                                ?
                                (this._clearDisplayBeforeSolve(), this._clearDisplayAfterSolve(), this.createRouteSymbols(), e.resolve()) :
                                this._solveAndZoom(b).then(e.resolve, e.reject);
                            return e.promise;
                        },
                        _removeTrafficLayer: function() {
                            this.trafficLayer &&
                                this.map &&
                                this.map.removeLayer(this.trafficLayer);
                            this._trafficLayerAdded = !1;
                        },
                        _addStops: function(a, b) {
                            var c = new K(),
                                d = [],
                                e = this.autoSolve;
                            this.autoSolve = !1;
                            void 0 === b && (b = this._getStopCount());
                            for (
                                var h = 0; h < Math.min(a.length, this.maxStops - this._getStopCount()); h++
                            ) {
                                var g = new K();
                                this._addStop(a[h], b + h, !0).always(g.resolve);
                                d.push(g);
                            }
                            F(d).always(
                                f.hitch(this, function() {
                                    this.autoSolve = e;
                                    this._getDirections().always(function() {
                                        c.resolve(a);
                                    });
                                })
                            );
                            return c.promise;
                        },
                        _addStop: function(a, b, c) {
                            var d = new K();
                            this._checkMaxStops();
                            this.maxStopsReached ?
                                (this._showMessage(
                                    B.widgets.directions.error.maximumStops
                                ), d.reject(Error(B.widgets.directions.error.maximumStops))) :
                                (void 0 === a &&
                                    void 0 === b &&
                                    (b = this.stops.length), a instanceof J &&
                                    a.attributes &&
                                    a.attributes.isWaypoint &&
                                    (!b ||
                                        b === this.stops.length ||
                                        2 > this._getStopCount()) &&
                                    !c ?
                                    (this._showMessage(
                                        B.widgets.directions.error
                                        .waypointShouldBeInBetweenStops
                                    ), d.reject(
                                        Error(
                                            B.widgets.directions.error
                                            .waypointShouldBeInBetweenStops
                                        )
                                    )) :
                                    this._getCandidate(a).then(
                                        f.hitch(this, function(a) {
                                            this._isStopAWaypoint(a) &&
                                                a &&
                                                a.feature &&
                                                (a.feature.attributes = f.mixin({},
                                                    a.feature.attributes, { isWaypoint: !0, CurbApproach: 3 }
                                                ));
                                            this._insertStop(a, b);
                                            this.autoSolve && '' !== a.name ?
                                                this._getDirections().always(function() {
                                                    d.resolve(a, b);
                                                }) :
                                                d.resolve(a, b);
                                        }),
                                        f.hitch(this, function(a) {
                                            d.reject(a);
                                        })
                                    ));
                            return d.promise;
                        },
                        _removeEmptyStops: function() {
                            for (
                                var a = 0,
                                    b =
                                    this.stops.length -
                                    this._getWaypointCount() -
                                    this.minStops; a < this.stops.length && 0 < b;

                            )
                                this.stops[a] && this.stops[a].name ?
                                a++
                                :
                                (this._removeStop(a, !0, !0, !0), b--, this
                                    ._moveInProgress &&
                                    this._handle._index >= a &&
                                    this._handle._isStopIcon &&
                                    this._handle._index--);
                        },
                        _setReverseGeocode: function(a, b, c) {
                            if (a.feature.geometry && -1 < c) {
                                var d = { address: a.name };
                                this.stopGraphics[c] &&
                                    (f.mixin(
                                        this.stopGraphics[c].attributes,
                                        d
                                    ), this.stopGraphics[c].setGeometry(b));
                                this.textGraphics[c] &&
                                    (f.mixin(
                                        this.textGraphics[c].attributes,
                                        d
                                    ), this.textGraphics[c].setGeometry(b));
                                this.set('stopGraphics', this.stopGraphics);
                                this.set('textGraphics', this.textGraphics);
                                (d = this.geocoders[c]) &&
                                d.inputNode &&
                                    ((d.value = a.name), (d.inputNode.value = a.name));
                                f.mixin(
                                    a.feature.attributes,
                                    this.stops[c].feature.attributes
                                );
                                this.stops[c] = a;
                                this.stops[c].feature.setGeometry(b);
                                this._setStops();
                                return this._enqueue(function() {
                                    return this._getDirections();
                                });
                            }
                        },
                        _insertStop: function(a, b) {
                            var c, d;
                            if (void 0 === b)
                                for (c = 0; c < this.geocoders.length; c++) {
                                    if (!this.geocoders[c].get('value')) {
                                        d = this.geocoders[c];
                                        break;
                                    }
                                }
                            else
                                (c = b), this.geocoders[c] &&
                                !this.geocoders[c].get('value') &&
                                (d = this.geocoders[c]);
                            !d || (void 0 !== b && b !== c) || this._isStopAWaypoint(a) ?
                                (void 0 === b &&
                                    (b = this.geocoders.length), this.stops.splice(
                                        b,
                                        0,
                                        a
                                    ), this._createGeocoder(a, b)) :
                                ((this.stops[c] = a), d.set(
                                    'value',
                                    a.name
                                ), (d._stopReference = a));
                            this._optionsMenu();
                        },
                        _createGeocoder: function(a, b) {
                            var c = this._dnd.getAllNodes(),
                                d = !1,
                                h = !1,
                                g = c.length;
                            c[b] ? ((h = c[b]), (d = !0)) : (d = h = !1);
                            var k = f.hitch(this, function(a, b) {
                                    var c = b ?
                                        this._css.stopDnDHandleClass :
                                        this._css.stopDnDHandleClassHidden,
                                        d = b ?
                                        this._css.stopDnDHandleClassHidden :
                                        this._css.stopDnDHandleClass;
                                    x.replace(a.children[0], c, d);
                                    2 < this.geocoders.length &&
                                        ((c = b ?
                                            this._css.stopIconRemoveClass :
                                            this._css.stopIconRemoveClassHidden), (d = b ?
                                            this._css.stopIconRemoveClassHidden :
                                            this._css.stopIconRemoveClass), x.replace(
                                            a.children[3].children[0],
                                            c,
                                            d
                                        ));
                                }),
                                l = G.create('tr', {
                                    className: this._css.stopClass,
                                    style: this._isStopAWaypoint(a) ? 'display:none;' : '',
                                    onmouseover: function() {
                                        k(this, !0);
                                    },
                                    onmouseout: function() {
                                        k(this, !1);
                                    },
                                });
                            G.create(
                                'td', {
                                    className: this._css.stopDnDHandleClassHidden +
                                        ' dojoDndHandle',
                                },
                                l
                            );
                            c = G.create(
                                'td', { className: this._css.stopIconColumnClass },
                                l
                            );
                            G.create(
                                'div', {
                                    className: this._css.stopIconClass + ' dojoDndHandle',
                                    innerHTML: this._getLetter(g),
                                    'data-center-at': 'true',
                                },
                                c
                            );
                            g = G.create(
                                'td', { className: this._css.esriStopGeocoderColumnClass },
                                l
                            );
                            g = G.create('div', {}, g);
                            c = G.create(
                                'td', { className: this._css.stopIconRemoveColumnClass },
                                l
                            );
                            G.create(
                                'div', {
                                    className: this._css.stopIconRemoveClassHidden,
                                    role: 'button',
                                    'data-remove': 'true',
                                },
                                c
                            );
                            this._dnd.insertNodes(!1, [l], d, h);
                            var d = f.mixin({}, this.get('searchOptions'), {
                                    value: a.name,
                                    activeSourceIndex: this._globalGeocoder.activeSourceIndex,
                                }),
                                m = new La(d, g),
                                n = f.hitch(this, function(a, b) {
                                    this._enqueue(function() {
                                        if (
                                            b !== a &&
                                            m._stopReference &&
                                            m._stopReference.name !== b
                                        ) {
                                            var c = e.indexOf(this.stops, m._stopReference);
                                            this.stops[c] = { name: b };
                                            this._handle._remove();
                                            this._removeSomeWaypoints(
                                                this._markWPsForRemovalAfterUserChangedStopSequence(c)
                                            );
                                            this._setStops();
                                            this._clearDisplayBeforeSolve();
                                            this._clearDisplayAfterSolve();
                                            this.createRouteSymbols();
                                        }
                                    });
                                });
                            m._tr = l;
                            m._stopReference = a;
                            m.startup();
                            this.geocoders.splice(b, 0, m);
                            this._geocoderEvents[l.id] = {
                                blur: m.on('blur', function() {
                                    '' !== this.value &&
                                        this._stopReference &&
                                        !this._stopReference.feature &&
                                        this.search();
                                }),
                                select: m.on(
                                    'select-result',
                                    f.hitch(this, function(a) {
                                        var b = !0;
                                        if (a && (a.results || a.result)) {
                                            var c = this._dnd.getAllNodes(),
                                                c = e.indexOf(c, l),
                                                d = m.value,
                                                f = a.results &&
                                                a.results.results &&
                                                a.results.results.length ?
                                                a.results.results[0] :
                                                a.result;
                                            f
                                                ?
                                                ((f.name = d), (this.stops[
                                                    c
                                                ] = this._toPointGeometry(f)), (this.geocoders[
                                                    c
                                                ]._stopReference = this.stops[c]), n('', d)) :
                                                (this.removeStop(c), this.set(
                                                    'directions',
                                                    null
                                                ), this._showMessage(
                                                    B.widgets.directions.error.unknownStop.replace(
                                                        '\x3cname\x3e',
                                                        a.target.get('value')
                                                    )
                                                ), this._clearRouteGraphics(), (b = !1));
                                            b && this.getDirections();
                                        }
                                    })
                                ),
                                suggest: m.on('suggest-results', function() {
                                    if (document.activeElement === this.inputNode)
                                        for (
                                            var a = A(
                                                    "LI[role\x3d'menuitem']",
                                                    this.suggestionsNode
                                                ),
                                                b = 0; b < a.length; b++
                                        )
                                            w.set(a[b], 'tabindex', -1);
                                    else this._hideSuggestionsMenu();
                                }),
                                value: m.watch('value', function(a, b, c) {
                                    n(b, c);
                                }),
                            };
                            this._checkMaxStops();
                            this.setListIcons();
                            this._stopsRemovable();
                            this._optionsMenu();
                            this._sortGeocoders();
                        },
                        _blurGeocoders: function() {
                            if (document.activeElement)
                                for (var a = 0; a < this.geocoders.length; a++)
                                    if (this.geocoders[a].inputNode === document.activeElement) {
                                        this.geocoders[a]._hideSuggestionsMenu();
                                        this.geocoders[a].inputNode.blur();
                                        1 < this._getStopCount() + this._getWaypointCount() &&
                                            this.getDirections(!0);
                                        break;
                                    }
                        },
                        _decorateEmptyAGOLGeocoderResponse: function(a) {
                            a &&
                                ', , ' === a.name &&
                                (a.name = a.feature &&
                                    a.feature.attributes &&
                                    a.feature.attributes.Match_addr ?
                                    a.feature.attributes.Match_addr +
                                    ('POI' === a.feature.attributes.Addr_type &&
                                        a.feature.attributes.City &&
                                        -1 ===
                                        a.feature.attributes.Match_addr.indexOf(
                                            a.feature.attributes.City
                                        ) ?
                                        ', ' + a.feature.attributes.City :
                                        '') :
                                    '');
                            return a;
                        },
                        _toPointGeometry: function(a) {
                            var b = a.feature.geometry;
                            b &&
                                (b.getCentroid ?
                                    (a.feature.geometry = b.getCentroid()) :
                                    b.getExtent &&
                                    (b = b.getExtent()) &&
                                    (a.feature.geometry = b.getCenter()));
                            return a;
                        },
                        _removeLocateButtonVisibilityEvents: function() {
                            for (var a = 0; a < this.geocoders.length; a++) {
                                var b = this.geocoders[a];
                                b._onMouseEnter && b._onMouseEnter.remove();
                                b._onMouseOut && b._onMouseOut.remove();
                                b._onKeyPress && b._onKeyPress.remove();
                                b._locateButton &&
                                    (b._locateButton._onMouseEnter &&
                                        b._locateButton._onMouseEnter.remove(), b._locateButton
                                        ._onMouseOut && b._locateButton._onMouseOut.remove());
                            }
                        },
                        _setLocateButtonVisibilityEvents: function() {
                            this._removeLocateButtonVisibilityEvents();
                            for (
                                var a = this,
                                    b = function(b) {
                                        b instanceof FocusEvent
                                            ?
                                            (this._geocoder._lbShown_f = !0) :
                                            (this._geocoder._lbShown_g = !0);
                                        a._createLocateButton(this._geocoder, !0);
                                    },
                                    c = function(b) {
                                        b instanceof FocusEvent
                                            ?
                                            (this._geocoder._lbShown_f = !1) :
                                            (this._geocoder._lbShown_g = !1);
                                        clearTimeout(this._destroyTimeout);
                                        this._destroyTimeout = setTimeout(
                                            f.hitch(this, function() {
                                                this._geocoder._lbShown_lb ||
                                                    this._geocoder._lbShown_f ||
                                                    a._destroyLocateButton(this._locateButton);
                                            }),
                                            400
                                        );
                                    },
                                    d = function() {
                                        this._geocoder._lbShown_g = !0;
                                        clearTimeout(this._destroyTimeout);
                                        this._destroyTimeout = setTimeout(
                                            f.hitch(this, function() {
                                                '' === this.value ?
                                                    a._createLocateButton(this._geocoder, !0) :
                                                    a._destroyLocateButton(this._locateButton);
                                            }),
                                            400
                                        );
                                    },
                                    e = function() {
                                        this._geocoder._lbShown_lb = !0;
                                        clearTimeout(this._geocoder._destroyTimeout);
                                    },
                                    h = function() {
                                        this._geocoder._lbShown_lb = !1;
                                        clearTimeout(this._geocoder._destroyTimeout);
                                        this._geocoder._destroyTimeout = setTimeout(
                                            f.hitch(this, function() {
                                                this._geocoder._lbShown_g ||
                                                    this._geocoder._lbShown_f ||
                                                    a._destroyLocateButton(
                                                        this._geocoder.inputNode._locateButton
                                                    );
                                            }),
                                            400
                                        );
                                    },
                                    g = 0; g < this.geocoders.length; g++
                            ) {
                                var k = this.geocoders[g];
                                k &&
                                    k.inputNode &&
                                    ((k.inputNode._geocoder = k), (k._onMouseEnter = q(
                                            k.inputNode,
                                            v.enter,
                                            b
                                        )), (k._onMouseOut = q(
                                            k.inputNode, [v.leave, 'blur'],
                                            c
                                        )), (k._onKeyPress = q(k.inputNode, 'keydown', d)), k
                                        .inputNode._locateButton &&
                                        ((k = k.inputNode._locateButton), (k._onMouseEnter = q(
                                            k.domNode,
                                            v.enter,
                                            e
                                        )), (k._onMouseOut = q(k.domNode, v.leave, h))));
                            }
                        },
                        _createLocateButton: function(a, b, h) {
                            var g = new K();
                            a.inputNode._locateButton && a.inputNode._locateButton._locating ?
                                g.resolve() :
                                c(
                                    ['./LocateButton'],
                                    f.hitch(this, function(c) {
                                        this._destroyLocateButton(a.inputNode._locateButton);
                                        if (a && !this._solveInProgress) {
                                            var k = G.create('div', {}, a.domNode);
                                            x.add(a.domNode, this._css.stopsInnerGeocoderClass);
                                            var l = new c({
                                                    map: this.map,
                                                    highlightLocation: !1,
                                                    centerAt: !1,
                                                    setScale: !1,
                                                    useTracking: !1,
                                                },
                                                k
                                            );
                                            l.startup();
                                            a.inputNode._locateButton = l;
                                            l.domNode._geocoder = a;
                                            this._setLocateButtonVisibilityEvents();
                                            c = f.hitch(this, function() {
                                                l._locating = !0;
                                                a.set('value', '');
                                                a.inputNode.placeholder = B.widgets.directions.retrievingMyLocation.toUpperCase();
                                            });
                                            l._onBeforeLocate = q(l._locateNode, d, c);
                                            l._onLocate = q(
                                                l,
                                                'locate',
                                                f.hitch(this, function(c) {
                                                    l._locating = !1;
                                                    c.graphic ?
                                                        (b &&
                                                            this._destroyLocateButton(
                                                                a.inputNode._locateButton
                                                            ), this.updateStop(
                                                                new J(c.graphic.geometry),
                                                                e.indexOf(this.geocoders, a)
                                                            ).then(
                                                                f.hitch(this, function() {
                                                                    1 < this.stopGraphics.length ?
                                                                        this.getDirections().always(
                                                                            function() {
                                                                                g.resolve(c);
                                                                            }
                                                                        ) :
                                                                        g.resolve(c);
                                                                })
                                                            )) :
                                                        (a.set(
                                                            'value',
                                                            ''
                                                        ), (a.inputNode.placeholder = B.widgets.directions.myLocationError.toUpperCase()), g.reject(
                                                            c.error
                                                        ));
                                                })
                                            );
                                            h
                                                ?
                                                (c(), l.locate().then(null, g.reject)) :
                                                g.resolve();
                                        } else g.resolve();
                                    })
                                );
                            return g.promise;
                        },
                        _destroyLocateButton: function(a) {
                            if (a) {
                                var b = a.domNode._geocoder;
                                clearTimeout(b._destroyTimeout);
                                a._locating ?
                                    (b._destroyTimeout = setTimeout(
                                        f.hitch(this, function() {
                                            b._lbShown_lb ||
                                                b._lbShown_f ||
                                                this._destroyLocateButton(a);
                                        }),
                                        100
                                    )) :
                                    (a.clear(), a._onBeforeLocate.remove(), a._onLocate.remove(), a._onMouseEnter &&
                                        a._onMouseEnter.remove(), a._onMouseOut &&
                                        a._onMouseOut.remove(), a.destroy(), b.inputNode &&
                                        ((b.inputNode._locateButton = null), b._setPlaceholder(
                                            b.activeSourceIndex
                                        )));
                            }
                        },
                        _sortStops: function() {
                            this.stops.length &&
                                (this.stops.sort(
                                    f.hitch(this, function(a, b) {
                                        for (
                                            var c, d, e = 0; e < this.get('geocoders').length; e++
                                        ) this.geocoders[e]._stopReference === a ? (c = e) : this.geocoders[e]._stopReference === b && (d = e);
                                        return c > d ? 1 : d > c ? -1 : 0;
                                    })
                                ), this._setStops());
                        },
                        _getCandidate: function(a) {
                            var b = new K(),
                                c = typeof a;
                            a
                                ?
                                'object' === c &&
                                a.hasOwnProperty('feature') &&
                                a.hasOwnProperty('name') ?
                                (a.feature.attributes &&
                                    void 0 !== a.feature.attributes.displayName &&
                                    !this._isStopAWaypoint(a) &&
                                    ((a.name =
                                        a.feature.attributes.displayName), (a.feature.attributes.Name = this._userDefinedStopName)), (a.name = this._isStopAWaypoint(
                                            a
                                        ) ?
                                        this._waypointName :
                                        String(a.name)), 'point' !==
                                    a.feature.geometry.type &&
                                    (a.feature.geometry = new ca(
                                        [a.feature.geometry.x, a.feature.geometry.y],
                                        this.map.spatialReference
                                    )), b.resolve(a)) :
                                'object' === c &&
                                a.hasOwnProperty('address') &&
                                a.hasOwnProperty('location') ?
                                ((a = this._globalGeocoder._hydrateResult(
                                    a
                                )), b.resolve(a)) :
                                'object' !== c ||
                                !a.hasOwnProperty('name') ||
                                (null !== a.name && '' !== a.name) ?
                                a instanceof J &&
                                a.attributes &&
                                (void 0 !== a.attributes.Name ||
                                    a.attributes.isWaypoint) ?
                                ((c = this._addStopWrapperToGraphic(
                                        a,
                                        a.attributes.isWaypoint ?
                                        this._waypointName :
                                        String(a.attributes.Name)
                                    )), String(a.attributes.Name) &&
                                    (c.feature.attributes.Name = this._userDefinedStopName), b.resolve(
                                        c
                                    )) :
                                ('object' === c &&
                                    a.hasOwnProperty('name') &&
                                    (a = String(
                                        a.name
                                    )), this._reverseGeocode(a).then(
                                        b.resolve,
                                        b.reject
                                    )) :
                                b.resolve(f.clone(this._emptyStop)) :
                                b.resolve(f.clone(this._emptyStop));
                            return b.promise;
                        },
                        _reverseGeocode: function(a) {
                            var b = new K(),
                                c, d = a.geometry ? a.geometry : a;
                            if (this._globalGeocoder) {
                                var e = f.hitch(this, function(a) {
                                        var b = new K(),
                                            c = 500;
                                        if (this.map) {
                                            var e = this.map.toScreen(d);
                                            e.x += T._calculateClickTolerance([a]);
                                            this.map.spatialReference.isWebMercator() ?
                                                ((c = Math.abs(
                                                    this.map.toMap(e).x - d.x
                                                )), b.resolve(c)) :
                                                4326 === this.map.spatialReference.wkid ?
                                                ((c = Math.abs(
                                                    U.geographicToWebMercator(this.map.toMap(e)).x -
                                                    U.geographicToWebMercator(d).x
                                                )), b.resolve(c)) :
                                                this._geometryService &&
                                                ((a = new Fa()), (a.distanceUnit =
                                                    sa.UNIT_METER), (a.geometry1 = d), (a.geometry2 = this.map.toMap(
                                                    e
                                                )), this._geometryService.distance(
                                                    a,
                                                    function(a) {
                                                        c = a;
                                                        b.resolve(c);
                                                    },
                                                    function() {
                                                        b.resolve(c);
                                                    }
                                                ));
                                        }
                                        return b.promise;
                                    }),
                                    h = [],
                                    g = this._globalGeocoder.sources,
                                    k = function() {
                                        g[c].featureLayer &&
                                            h.push(
                                                e(g[c].featureLayer).then(
                                                    f.hitch(g[c], function(a) {
                                                        this.searchQueryParams = f.mixin(
                                                            this.searchQueryParams, { distance: a }
                                                        );
                                                    })
                                                )
                                            );
                                    };
                                if ('all' === this._globalGeocoder.activeSourceIndex)
                                    for (c = 0; c < g.length; c++)
                                        k();
                                else(c = this._globalGeocoder.activeSourceIndex), k();
                                F(h).always(
                                    f.hitch(this, function() {
                                        this._globalGeocoder.search(d).then(
                                            f.hitch(this, function(e) {
                                                var f = !1;
                                                if (e) {
                                                    var h = null,
                                                        g;
                                                    for (
                                                        c = 0; c < this._globalGeocoder.sources.length; c++
                                                    )
                                                        if (e[c] && e[c].length) {
                                                            g = e[c];
                                                            break;
                                                        }
                                                    if (
                                                        g.length &&
                                                        ((f = !0), (h = g[0]), this._globalGeocoder.sources[
                                                            c
                                                        ].featureLayer)
                                                    )
                                                        for (
                                                            (e = Number.POSITIVE_INFINITY), (c = 0); c < g.length; c++
                                                        ) {
                                                            g[c] = this._toPointGeometry(g[c]);
                                                            var k = V.geodesicLengths(
                                                                [
                                                                    new W({
                                                                        paths: [
                                                                            [
                                                                                U.xyToLngLat(d.x, d.y),
                                                                                U.xyToLngLat(
                                                                                    g[c].feature.geometry.x,
                                                                                    g[c].feature.geometry.y
                                                                                ),
                                                                            ],
                                                                        ],
                                                                        spatialReference: {
                                                                            wkid: this.map.spatialReference.wkid,
                                                                        },
                                                                    }),
                                                                ],
                                                                'esriMeters'
                                                            )[0];
                                                            e > k && ((e = k), (h = g[c]));
                                                        }
                                                        (h = this._decorateEmptyAGOLGeocoderResponse(h)) &&
                                                        '' !== h.name &&
                                                        null !== h.name &&
                                                        void 0 !== h.name ?
                                                        ((h.name = String(h.name)), isNaN(d.x) ||
                                                            isNaN(d.y) ||
                                                            this.map.spatialReference.wkid !==
                                                            d.spatialReference.wkid ?
                                                            !h.feature.geometry ||
                                                            isNaN(h.feature.geometry.x) ||
                                                            isNaN(h.feature.geometry.y) ?
                                                            (this._showMessage(
                                                                B.widgets.directions.error.locator
                                                            ), b.reject(
                                                                Error(
                                                                    B.widgets.directions.error.locator
                                                                )
                                                            )) :
                                                            b.resolve(h) :
                                                            ((h.feature.geometry = d), b.resolve(h))) :
                                                        (f = !1);
                                                }
                                                f ||
                                                    (a instanceof ca ?
                                                        (a = new J(a)) :
                                                        a instanceof Array &&
                                                        (a = new J(new ca(a[0], a[1]))), a instanceof J ?
                                                        this._decorateUngeocodedStop(a).then(
                                                            b.resolve,
                                                            b.reject
                                                        ) :
                                                        (this._showMessage(
                                                            B.widgets.directions.error.unknownStop.replace(
                                                                '\x3cname\x3e',
                                                                a.toString()
                                                            )
                                                        ), b.reject(
                                                            Error(
                                                                B.widgets.directions.error.unknownStop.replace(
                                                                    '\x3cname\x3e',
                                                                    a.toString()
                                                                )
                                                            )
                                                        )));
                                            })
                                        );
                                    })
                                );
                            } else
                                this._showMessage(
                                    B.widgets.directions.error.locatorUndefined
                                ), b.reject(
                                    Error(B.widgets.directions.error.locatorUndefined)
                                );
                            return b.promise;
                        },
                        _updateStop: function(a, b, c) {
                            var d = new K();
                            this.stops && this.stops[b] ?
                                a instanceof J &&
                                a.attributes &&
                                a.attributes.isWaypoint &&
                                (!b ||
                                    b === this.stops.length - 1 ||
                                    2 > this._getStopCount()) ?
                                (this._showMessage(
                                    B.widgets.directions.error
                                    .waypointShouldBeInBetweenStops
                                ), d.reject(
                                    Error(
                                        B.widgets.directions.error
                                        .waypointShouldBeInBetweenStops
                                    )
                                )) :
                                this._getCandidate(a).then(
                                    f.hitch(this, function(a) {
                                        var e = a.feature,
                                            e = e ? e.geometry : null,
                                            f = this.stops[b].feature,
                                            f = f ? f.geometry : null,
                                            e =
                                            (e && f && (e.x !== f.x || e.y !== f.y)) ||
                                            (!e && f);
                                        this.stops[b] = a;
                                        this.geocoders[b] || this._createGeocoder(a, b);
                                        f = this.geocoders[b];
                                        f._stopReference = a;
                                        f._tr.style.display = this._isStopAWaypoint(a) ?
                                            'none' :
                                            '';
                                        f.value = a.name;
                                        f.inputNode && (f.inputNode.value = a.name);
                                        (e &&
                                            this.autoSolve &&
                                            1 <
                                            this._getStopCount() +
                                            this._getWaypointCount()) ||
                                        c
                                            ?
                                            this._getDirections().then(d.resolve, d.reject) :
                                            (this._setStops(), d.resolve(a));
                                    }),
                                    f.hitch(this, function(a) {
                                        d.reject(a);
                                    })
                                ) :
                                (this._showMessage(
                                    B.widgets.directions.error.couldNotUpdateStop
                                ), d.reject(
                                    Error(B.widgets.directions.error.couldNotUpdateStop)
                                ));
                            this._optionsMenu();
                            return d.promise;
                        },
                        _renderDirections: function() {
                            var a = this.get('directions'),
                                b;
                            this._resultsNode &&
                                ((b =
                                        '' +
                                        ('\x3cdiv class\x3d"' +
                                            this._css.clearClass +
                                            '"\x3e\x3c/div\x3e')), (b += this._renderDirectionsSummary(
                                        a
                                    )), (b +=
                                        '\x3cdiv class\x3d"' +
                                        this._css.clearClass +
                                        '"\x3e\x3c/div\x3e'), (b +=
                                        '\x3cdiv class\x3d"' +
                                        this._css.routesClass +
                                        '"\x3e'), (b += this._renderDirectionsTable(a)), (b +=
                                        "\x3cdiv class\x3d'esriPrintFooter'\x3e" +
                                        B.widgets.directions.printDisclaimer +
                                        '\x3c/div\x3e'), (b += '\x3c/div\x3e'), this._resultsNode &&
                                    (this._resultsNode.innerHTML = b), this._disconnectResults(), (a = A(
                                        '[data-segment]',
                                        this._resultsNode
                                    )) &&
                                    a.length &&
                                    e.forEach(
                                        a,
                                        f.hitch(this, function(a) {
                                            this._resultEvents.push(
                                                q(
                                                    a,
                                                    v.enter,
                                                    f.hitch(this, function() {
                                                        if (!this._focusedDirectionsItem) {
                                                            var b = parseInt(w.get(a, 'data-segment'), 10);
                                                            this.highlightSegment(b);
                                                        }
                                                    })
                                                )
                                            );
                                            this._resultEvents.push(
                                                q(
                                                    a,
                                                    'focusout',
                                                    f.hitch(this, function() {
                                                        this._focusedDirectionsItem = null;
                                                        this.unhighlightSegment(!0);
                                                    })
                                                )
                                            );
                                            this._resultEvents.push(
                                                q(a, v.leave, this.unhighlightSegment)
                                            );
                                            this._resultEvents.push(
                                                q(
                                                    a,
                                                    'click, keydown',
                                                    f.hitch(this, function(b) {
                                                        b &&
                                                            ('click' === b.type ||
                                                                ('keydown' === b.type &&
                                                                    b.keyCode === u.ENTER)) &&
                                                            (this._focusedDirectionsItem !== a ?
                                                                this.selectSegment(
                                                                    parseInt(w.get(a, 'data-segment'), 10)
                                                                ) :
                                                                (a.blur(), this.map.infoWindow.hide(), (this._focusedDirectionsItem = null), this.unhighlightSegment(!0)));
                                                    })
                                                )
                                            );
                                        })
                                    ));
                        },
                        _renderDirectionsSummary: function(a) {
                            var b = '',
                                c = f.hitch(this, function() {
                                    for (
                                        var b = {},
                                            c = this._getDirectionsTimeAttribute() || {},
                                            d = this._getTimeNeutralAttribute() || {},
                                            e = 0,
                                            f = 0,
                                            h = this.get('stops'),
                                            g = h.length - 1; 0 <= g; g--
                                    )
                                        if (null !== h[g].feature.attributes.ArriveCurbApproach) {
                                            b = h[g].feature.attributes;
                                            break;
                                        }
                                    for (var k in b) b.hasOwnProperty(k) && (k === 'Cumul_' + c.name && (e = b[k]), k === 'Cumul_' + d.name && (f = b[k]));
                                    b = 'esriTrafficLabelHidden';
                                    h = B.widgets.directions.noTraffic;
                                    g = a.totalTime - a.totalDriveTime;
                                    g =
                                        (f - this._convertCostValue(g, c.units, d.units)) /
                                        (e - g || 1);
                                    0 < g && 0.8 > g ?
                                        ((b = 'esriTrafficLabelHeavy'), (h =
                                            B.widgets.directions.heavyTraffic)) :
                                        1 === g ?
                                        ((b = 'esriTrafficLabelNone'), (h =
                                            B.widgets.directions.noTraffic)) :
                                        1.25 < g &&
                                        ((b = 'esriTrafficLabelLight'), (h =
                                            B.widgets.directions.ligthTraffic));
                                    d = this._formatTime(f, !1, d.units);
                                    return {
                                        label: h,
                                        labelClass: b,
                                        ratio: g,
                                        noTrafficCostStr: 1 !== g && d ?
                                            d + ' ' + B.widgets.directions.onAverage + '\x3cbr\x3e' :
                                            '',
                                        trafficCost: e,
                                        noTrafficCost: f,
                                        timeAtt: c,
                                    };
                                });
                            if (a.totalLength || a.totalTime) {
                                var c = c(),
                                    d = this._getImpedanceAttribute(),
                                    b =
                                    b +
                                    ("\x3cdiv class\x3d'" +
                                        this._css.resultsSummaryClass +
                                        "' data-full-route\x3d'true'\x3e\x3cdiv class\x3d'esriImpedanceCost'\x3e");
                                if (this._isTimeUnits(d.units))
                                    b +=
                                    this._formatTime(c.trafficCost, !0, c.timeAtt.units) +
                                    "\x3cdiv class\x3d'esriImpedanceCostHrMin'\x3e\x3cdiv class\x3d'esriImpedanceCostHr'\x3e" +
                                    B.widgets.directions.time.hr +
                                    "\x3c/div\x3e\x3cdiv class\x3d'esriImpedanceCostMin'\x3e" +
                                    B.widgets.directions.time.min +
                                    "\x3c/div\x3e\x3c/div\x3e\x3c/div\x3e\x3cdiv class\x3d'esriOtherCosts'\x3e" +
                                    (c.noTrafficCost ?
                                        "\x3cdiv class\x3d'esriTrafficLabel " +
                                        c.labelClass +
                                        "'\x3e" +
                                        c.label +
                                        '\x3c/div\x3e' +
                                        c.noTrafficCostStr :
                                        '') +
                                    this._formatDistance(a.totalLength);
                                else
                                    var d = (d =
                                            B.widgets.directions.units[this.directionsLengthUnits]) ?
                                        d.name :
                                        '',
                                        e =
                                        this.serviceDescription &&
                                        10.6 <= this.serviceDescription.currentVersion,
                                        h = this.directions.features[0].attributes,
                                        b =
                                        b +
                                        (E.format(a.totalLength, { places: 1 }) +
                                            "\x3cdiv class\x3d'esriImpedanceCostDist'\x3e" +
                                            d +
                                            "\x3c/div\x3e\x3c/div\x3e\x3cdiv class\x3d'esriOtherCosts'\x3e" +
                                            (c.noTrafficCost && e ?
                                                "\x3cdiv class\x3d'esriTrafficLabel " +
                                                c.labelClass +
                                                "'\x3e" +
                                                c.label +
                                                '\x3c/div\x3e' +
                                                c.noTrafficCostStr :
                                                '') +
                                            this._formatTime(a.totalTime) +
                                            ' ' +
                                            ('none' !== this.startTime && c.noTrafficCost && e ?
                                                B.widgets.directions.atTheMoment +
                                                ' ' +
                                                this._toSpatiallyLocalTimeString(
                                                    h.arriveTimeUTC,
                                                    h.ETA
                                                ) :
                                                ''));
                                b += '\x3c/div\x3e\x3c/div\x3e';
                            }
                            return b;
                        },
                        _renderDirectionsTable: function(a) {
                            for (
                                var b = 0,
                                    c = 0,
                                    d = 0,
                                    e =
                                    '\x3ctable summary\x3d"' +
                                    a.routeName +
                                    '"\x3e\x3ctbody role\x3d"menu"\x3e',
                                    f = 0; f < a.features.length; f++
                            ) {
                                var h = a.features[f].attributes;
                                'esriDMTDepart' === h.maneuverType && (c = d = 0);
                                d += h.length;
                                c += h.time;
                                b += h.time;
                                e += this._renderDirectionsItemTR(a.features[f], d, c, b);
                            }
                            return e + '\x3c/tbody\x3e\x3c/table\x3e';
                        },
                        _renderDirectionsItemTR: function(a, b, c, d) {
                            var f = this.directions,
                                h = f ? e.indexOf(f.features, a) : -1;
                            d = '';
                            var g = this._css.routeClass,
                                k =
                                a._associatedStopWithReturnToStart &&
                                a._associatedStopWithReturnToStart.attributes,
                                l = a.attributes;
                            if (-1 < h) {
                                l && (l.step = h + 1);
                                l.maneuverType && (g += ' ' + l.maneuverType);
                                k &&
                                    null === k.ArriveCurbApproach &&
                                    null !== k.DepartCurbApproach ?
                                    (g += ' ' + this._css.routeOriginClass) :
                                    k &&
                                    null !== k.ArriveCurbApproach &&
                                    null === k.DepartCurbApproach &&
                                    (g +=
                                        ' ' +
                                        this._css.routeDestinationClass +
                                        ' ' +
                                        this._css.routeLastClass);
                                d +=
                                    '\x3ctr tabindex\x3d"0" role\x3d"menuitem" class\x3d"' +
                                    g +
                                    ' ' +
                                    this._css.routeZoomClass +
                                    '" data-segment\x3d"' +
                                    h +
                                    '"\x3e';
                                d +=
                                    '\x3ctd class\x3d"' +
                                    this._css.routeIconColumnClass +
                                    '"\x3e';
                                d += '\x3cdiv class\x3d"' + this._css.routeIconClass + '"\x3e';
                                d += this._getLetter(a._associatedStop);
                                d =
                                    d +
                                    '\x3c/div\x3e\x3c/td\x3e' +
                                    ('\x3ctd class\x3d"' +
                                        this._css.routeTextColumnClass +
                                        '"\x3e');
                                d += '\x3cdiv class\x3d"' + this._css.routeInfoClass + '"\x3e';
                                d += '\x3cdiv class\x3d"' + this._css.routeTextClass + '"\x3e';
                                a = (f.strings[h] || []).slice();
                                if (
                                    'esriDMTDepart' === l.maneuverType ||
                                    'esriDMTStop' === l.maneuverType
                                )
                                    for (f = 0; f < this.stops.length; f++)
                                        this.stops[f] &&
                                        this.stops[f].name &&
                                        a.push({ string: this.stops[f].name });
                                if (a) {
                                    g = l.text;
                                    for (f = 0; f < a.length; f++)
                                        g = this._boldText(g, a[f].string);
                                    l.formattedText = g;
                                } else l.formattedText = l.text;
                                if (
                                    ('esriDMTStop' === l.maneuverType && (b || c)) ||
                                    ('esriDMTDepart' === l.maneuverType && 0 === h)
                                )
                                    (b = this._formatDistance(
                                        b - l.length, !0
                                    )), (c = this._formatTime(
                                        c - l.time
                                    )), (h = this._formatTime(
                                        l.time
                                    )), (a = this._formatDistance(
                                        l.length, !0
                                    )), (l.formattedText +=
                                        "\x3cdiv class\x3d'esriRouteTextColumnCumulative'\x3e" +
                                        b +
                                        (b && c ? ' \x26middot; ' : '') +
                                        c +
                                        (b || c ? '\x3cbr\x3e' : '') +
                                        (h ?
                                            B.widgets.directions.serviceTime + ':\x26nbsp;' + h :
                                            '') +
                                        (h && a ? '\x3cbr\x3e' : '') +
                                        (a ?
                                            B.widgets.directions.serviceDistance + ':\x26nbsp;' + a :
                                            '') +
                                        '\x3c/div\x3e');
                                d +=
                                    '\x3cstrong\x3e' +
                                    E.format(l.step) +
                                    '.\x3c/strong\x3e ' +
                                    l.formattedText;
                                d += '\x3c/div\x3e';
                                b = this._formatDistance(l.length, !0);
                                c = this._formatTime(l.time);
                                ('esriDMTStop' !== l.maneuverType &&
                                    'esriDMTDepart' !== l.maneuverType) ||
                                !this.routeParams.startTime ||
                                    -22091616e5 === l.ETA ?
                                    b &&
                                    ((d +=
                                            '\x3cdiv class\x3d"' +
                                            this._css.routeLengthClass +
                                            '"\x3e'), (d += b), c &&
                                        (d +=
                                            '\x26nbsp;\x26middot;\x3cwbr\x3e\x26nbsp;' + c), (d +=
                                            '\x3c/div\x3e')) :
                                    (d +=
                                        '\x3cdiv class\x3d"' +
                                        this._css.routeLengthClass +
                                        '"\x3e' +
                                        this._toSpatiallyLocalTimeString(
                                            l.arriveTimeUTC,
                                            l.ETA
                                        ) +
                                        '\x3c/div\x3e');
                                d += '\x3c/div\x3e\x3c/td\x3e\x3c/tr\x3e';
                            }
                            return d;
                        },
                        _toSpatiallyLocalTimeString: function(a, c) {
                            var d = new Date(c),
                                e = new Date(d.getTime() + 6e4 * d.getTimezoneOffset()),
                                e = b.date.locale.format(e, { selector: 'time' }),
                                f = '';
                            a
                                ?
                                ((c = (c - a) / 1e3 / 60 / 60), (a = Math.floor(c)), (c =
                                    60 * (c - a)), (a =
                                    B.widgets.directions.GMT +
                                    (0 > a ? '' : '+') +
                                    E.format(a, { pattern: '00' }) +
                                    E.format(c, { pattern: '00' })), (f = e + ' ' + a)) :
                                (f = 'now' === this.startTime ?
                                    b.date.locale.format(d, { selector: 'time' }) :
                                    e);
                            return f;
                        },
                        _addStopWrapperToGraphic: function(a, b) {
                            return {
                                extent: new ua({
                                    xmin: a.geometry.x - 0.25,
                                    ymin: a.geometry.y - 0.25,
                                    xmax: a.geometry.x + 0.25,
                                    ymax: a.geometry.y + 0.25,
                                    spatialReference: a.geometry.spatialReference,
                                }),
                                feature: a,
                                name: b,
                            };
                        },
                        _clearBarriersGraphics: function() {
                            this._barriersLayer.clear();
                            this._polylineBarriersLayer.clear();
                            this._polygonBarriersLayer.clear();
                        },
                        _showBarriers: function() {
                            this._clearBarriersGraphics();
                            var a = this.routeParams,
                                b = (a.polylineBarriers && a.polylineBarriers.features) || [],
                                c = (a.polygonBarriers && a.polygonBarriers.features) || [];
                            e.forEach(
                                (a.barriers && a.barriers.features) || [],
                                f.hitch(this, function(a) {
                                    this._barriersLayer.add(a);
                                })
                            );
                            e.forEach(
                                b,
                                f.hitch(this, function(a) {
                                    this._polylineBarriersLayer.add(a);
                                })
                            );
                            e.forEach(
                                c,
                                f.hitch(this, function(a) {
                                    this._polygonBarriersLayer.add(a);
                                })
                            );
                            this._barriersLayer.refresh();
                            this._polylineBarriersLayer.refresh();
                            this._polygonBarriersLayer.refresh();
                        },
                        _showRoute: function(a) {
                            this._clearDisplayAfterSolve();
                            var b = a.routeResults[0].directions,
                                c = new K();
                            if (b) {
                                this.set('solveResult', a);
                                this.set('directions', b);
                                var d = a.routeResults[0].stops,
                                    e, f;
                                if (d && d.length) {
                                    var h = [];
                                    for (e = 0; e < d.length; e++) {
                                        var g = d[e];
                                        g.attributes.isWaypoint =
                                            g.attributes.Name === this._waypointName ||
                                            g.attributes.isWaypoint;
                                        g = this._addStopWrapperToGraphic(g, g.attributes.Name);
                                        this.stops[e] &&
                                            this.stops[e].feature &&
                                            this.stops[e].feature.attributes &&
                                            this.stops[e].feature.attributes.Name ===
                                            this._userDefinedStopName &&
                                            (g.feature.attributes.Name = this._userDefinedStopName);
                                        this._returnToStartStop &&
                                            this._returnToStartStop._resultsStopIndex === e ?
                                            (this._returnToStartStop = g) :
                                            h.push(g);
                                    }
                                    if (this.stops.length > h.length)
                                        for (e = 0; e < this.stops.length; e++)
                                            this.stops[e].feature ||
                                            '' !== this.stops[e].name ||
                                            h.splice(e, 0, this._emptyStop);
                                    this.stops = h;
                                    for (e = 0; e < this.stops.length; e++)
                                        this._updateStop(this.stops[e], e);
                                    this._setStops();
                                    this._setMenuNodeValues();
                                }
                                this.set(
                                    'mergedRouteGraphic',
                                    new J(b.mergedGeometry, this.get('routeSymbol'))
                                );
                                d = [];
                                h = [];
                                for (e = g = 0; e < b.featuresWithWaypoints.length; e++) {
                                    var k = b.featuresWithWaypoints[e];
                                    if ('esriDMTDepart' === k.attributes.maneuverType)
                                        for (f = 0; f < this.stops.length; f++)
                                            if (this.stops[f].feature === k._associatedStop) {
                                                g = f + 1;
                                                break;
                                            }
                                    k.setSymbol(this.get('routeSymbol'));
                                    this._routeLayer.add(k);
                                    d.push(k);
                                    (f = k.getDojoShape()) && f.moveToBack();
                                    f = new J(
                                        k.geometry,
                                        this._symbolEventPaddingDirections,
                                        k.attributes
                                    );
                                    f._nextStopIndex = g - 0.5;
                                    f._isSnapFeature = !0;
                                    k._associatedSnapFeature = f;
                                    this._waypointsEventLayer.add(f);
                                    'esriDMTDepart' !== k.attributes.maneuverType &&
                                        (f = k.geometry.getPoint(0, 0)) &&
                                        ((f = new J(
                                            f,
                                            this.maneuverSymbol
                                        )), (f._directionsFeature =
                                            k._associatedFeatureNoWaypoints), h.push(
                                            f
                                        ), this._waypointsEventLayer.add(h[h.length - 1]));
                                }
                                this.set('displayedRouteGraphics', d);
                                this.set('displayedManeuverPointGraphics', h);
                                this._renderDirections();
                                for (e = 0; e < this.stops.length; e++)
                                    if (
                                        this._isStopAWaypoint(this.stops[e]) &&
                                        this._modifiedWaypointIndex === e
                                    ) {
                                        for (f = 0; f < b.featuresWithWaypoints.length; f++)
                                            if (
                                                ((d = b.featuresWithWaypoints[f]), d._associatedStop ===
                                                    this.stops[e].feature)
                                            ) {
                                                if (
                                                    'esriDMTStop' === d.attributes.maneuverType ||
                                                    'esriDMTDepart' === d.attributes.maneuverType
                                                )
                                                    (this.stops[e].feature.geometry.x =
                                                        d.geometry.paths[0][0][0]), (this.stops[
                                                            e
                                                        ].feature.geometry.y =
                                                        d.geometry.paths[0][0][1]);
                                                break;
                                            }
                                        this._modifiedWaypointIndex = null;
                                        break;
                                    }
                                y.set(this._savePrintBtnContainer, 'display', 'inline-block');
                                this.onDirectionsFinish(a);
                            } else
                                (a = a.routeResults[0].route), a.setSymbol(
                                    this.routeSymbol
                                ), this._routeLayer.add(
                                    a
                                ), (this._incrementalRouteSegment = a);
                            c.resolve();
                            this._moveLayersToFront();
                            this.createRouteSymbols();
                            return c.promise;
                        },
                        _setGeocodersStopReference: function() {
                            if (this.geocoders)
                                for (var a = 0; a < this.geocoders.length; a++)
                                    this.geocoders[a] &&
                                    this.stops[a] &&
                                    (this.geocoders[a]._stopReference = this.stops[a]);
                        },
                        _setStops: function() {
                            this._setGeocodersStopReference();
                            this.createRouteSymbols();
                            this._set('stops', this.stops);
                            this.onStopsUpdate(this.stops);
                        },
                        _getCandidates: function(a) {
                            var b = [];
                            if (a && a.length) {
                                for (var c = 0; c < a.length; c++)
                                    b.push(this._getCandidate(a[c]));
                                return F(b);
                            }
                            a = new K();
                            a.resolve([]);
                            return a.promise;
                        },
                        _clearResultsHTML: function() {
                            this._resultsNode.innerHTML = '';
                            y.set(this._savePrintBtnContainer, 'display', 'none');
                        },
                        _showSegmentPopup: function(a) {
                            if (
                                a &&
                                this.get('showSegmentPopup') &&
                                this.get('map').infoWindow
                            ) {
                                var b = a.geometry.getPoint(0, 0);
                                a = new J(
                                    b,
                                    null,
                                    a.attributes,
                                    this.get('segmentInfoTemplate')
                                );
                                var c = this.get('map').infoWindow;
                                c.setFeatures([a]);
                                c.show(b);
                            }
                        },
                        _addStopButton: function() {
                            this.addStop().then(
                                f.hitch(this, function() {
                                    this.get('focusOnNewStop') &&
                                        this.geocoders[this.stops.length - 1].focus();
                                })
                            );
                        },
                        _sortGeocoders: function() {
                            var a = this._dnd.getAllNodes();
                            this.geocoders.sort(
                                f.hitch(this, function(b, c) {
                                    return b.domNode &&
                                        b.domNode.parentNode &&
                                        b.domNode.parentNode.parentNode &&
                                        c.domNode &&
                                        c.domNode.parentNode &&
                                        c.domNode.parentNode.parentNode ?
                                        e.indexOf(a, b.domNode.parentNode.parentNode) >
                                        e.indexOf(a, c.domNode.parentNode.parentNode) ?
                                        1 :
                                        -1 :
                                        0;
                                })
                            );
                            this.stops.length === this.geocoders.length && this._sortStops();
                            for (var b = 0; b < this.geocoders.length; b++)
                                this.geocoders[b] &&
                                this.geocoders[b].inputNode &&
                                (this.geocoders[b].inputNode.title =
                                    B.widgets.directions.stopNoTitle + (b + 1));
                            this._setLocateButtonVisibilityEvents();
                        },
                        _disconnectResults: function() {
                            if (this._resultEvents && this._resultEvents.length)
                                for (var a = 0; a < this._resultEvents.length; a++)
                                    this._resultEvents[a] && this._resultEvents[a].remove();
                            this._resultEvents = [];
                        },
                        _formatArbitraryCostsForRouteTooltip: function(a) {
                            var b = '',
                                c;
                            for (c in a)
                                if (0 === c.indexOf('Total_') && a.hasOwnProperty(c)) {
                                    var d = this._getCostAttribute(c.substr(6));
                                    d &&
                                        ((b += this._isTimeUnits(d.units) ?
                                            this._formatTime(a[c], !1, d.units) :
                                            this._formatDistance(a[c], !0, d.units)), (b += b ?
                                            ' \x26middot; ' :
                                            ''));
                                }
                            b &&
                                (b =
                                    B.widgets.directions.toNearbyStops +
                                    ': \x3cb\x3e' +
                                    b.substr(0, b.length - 10) +
                                    '\x3c/b\x3e');
                            return b;
                        },
                        _formatTime: function(a, b, c) {
                            c || (c = (this._getDirectionsTimeAttribute() || {}).units);
                            var d = '';
                            c = Math.round(this._convertCostValue(a, c, 'esriNAUMinutes'));
                            a = Math.floor(c / 60);
                            c = Math.floor(c % 60);
                            b
                                ?
                                (d =
                                    E.format(a, { pattern: 100 > a ? '00' : '000' }) +
                                    ':' +
                                    E.format(c, { pattern: '00' })) :
                                (a &&
                                    (d +=
                                        a + ' ' + B.widgets.directions.time.hr + ' '), (d += a ||
                                        c ?
                                        c + ' ' + B.widgets.directions.time.min :
                                        ''));
                            return d;
                        },
                        _formatDistance: function(a, b, c) {
                            c || (c = this.directionsLengthUnits);
                            var d = this.directionsLengthUnits,
                                e = B.widgets.directions.units[d],
                                f = d.replace('esri', '').toLowerCase();
                            a = this._convertCostValue(a, c, d);
                            e && (f = b ? e.abbr : e.name);
                            return a ?
                                E.format(a, { locale: 'root', places: 2 }) + ' ' + f :
                                '';
                        },
                        _projectToGeographic: function(a) {
                            var b = new K();
                            if (!a)
                                return b.reject("Directions:: 'geometry' is not defined.", {
                                    geometry: a,
                                }), b.promise;
                            if (4326 == a.spatialReference.wkid)
                                return b.resolve(a), b.promise;
                            if (!this._geometryService)
                                return b.reject(
                                    'Directions:: Geometry service is not defined.'
                                ), b.promise;
                            var c = new Da();
                            c.outSR = new R(4326);
                            c.geometries = [a];
                            this._geometryService.project(c).then(function(a) {
                                b.resolve(a && a[0]);
                            }, b.reject);
                            return b.promise;
                        },
                        _createToolbars: function() {
                            this.editToolbar || (this.editToolbar = new X(this.map));
                            this.drawToolbar ||
                                ((this.drawToolbar = new xa(
                                    this.map
                                )), (B.toolbars.draw.freehand =
                                    B.widgets.directions.lineBarrierFreehand), (this.drawToolbar.onDrawComplete = f.hitch(
                                    this,
                                    function(a) {
                                        var b = new J(a.geometry, null, { BarrierType: 0 });
                                        this._projectToGeographic(
                                            a.geographicGeometry || a.geometry
                                        ).then(
                                            f.hitch(this, function(a) {
                                                1 < V.geodesicLengths([a], I.METERS)[0] &&
                                                    (this._polylineBarriersLayer.add(b), this.routeParams
                                                        .polylineBarriers ||
                                                        (this.routeParams.polylineBarriers = new oa()), this.routeParams.polylineBarriers.features.push(
                                                            b
                                                        ), this._clearStopsStatusAttr(), this.getDirections(!0));
                                            })
                                        );
                                    }
                                )));
                        },
                        _destroyGlobalGeocoder: function() {
                            this._globalGeocoder &&
                                (this._globalGeocoder.destroy(), (this._globalGeocoder = null));
                        },
                        _createGlobalGeocoder: function() {
                            var a = new K();
                            this._globalGeocoder = new La(this.get('searchOptions'));
                            q.once(this._globalGeocoder, 'load', a.resolve, a.reject);
                            this._globalGeocoder.startup();
                            return a.promise;
                        },
                        _init: function() {
                            var a = new K();
                            this.set('loaded', !1);
                            this._enableButton(this._getDirectionsButtonNode, !1);
                            y.set(this._saveAsButton, 'display', 'none');
                            this.clearMessages();
                            if (this.get('map').loaded)
                                this._configure().always(a.resolve);
                            else
                                q.once(
                                    this.get('map'),
                                    'load',
                                    f.hitch(this, function() {
                                        this._configure().always(a.resolve);
                                    })
                                );
                            return a.promise;
                        },
                        _setDefaultStops: function() {
                            var a = new K();
                            this.defaults.stops && this.defaults.stops.length ?
                                this._updateStops(this.defaults.stops).then(
                                    f.hitch(this, function() {
                                        this._removeEmptyStops();
                                        a.resolve();
                                    }),
                                    a.reject
                                ) :
                                a.resolve();
                            return a.promise;
                        },
                        _configure: function() {
                            var a = new K();
                            this._handle && this._handle._remove();
                            this._createDnD();
                            this._createDepartAtControls();
                            this._setSearchOptions();
                            this._createGlobalGeocoder().then(
                                f.hitch(this, function() {
                                    this._createToolbars();
                                    this._usingAGOL() ||
                                        (this.printTaskUrl = this.geometryTaskUrl = null);
                                    this._createGeometryTask();
                                    this._createPrintTask();
                                    this._showActivateButton();
                                    this._showBarriersButton();
                                    this._createTravelModesDDL();
                                    this._createSearchSourceDDL();
                                    var c = [this._createRouteTask(), this._setDefaultStops()];
                                    F(c).then(
                                        f.hitch(this, function() {
                                            this._setDefaultUnits();
                                            this._setTrafficOptions();
                                            this._setMenuNodeValues();
                                            this._setupEvents();
                                            var c =
                                                this.directionsLanguage ||
                                                (this.userOptions.routeParams &&
                                                    this.userOptions.routeParams.directionsLanguage) ||
                                                b.locale.toLowerCase();
                                            this._setDirectionsLanguageByLocale(c);
                                            this._setupTravelModes().then(
                                                f.hitch(this, function() {
                                                    this.set('loaded', !0);
                                                    this.onLoad();
                                                    a.resolve(!0);
                                                }),
                                                function(b) {
                                                    a.reject(b);
                                                }
                                            );
                                        }),
                                        function(b) {
                                            a.reject(b);
                                        }
                                    );
                                }),
                                function(b) {
                                    a.reject(b);
                                }
                            );
                            this._naRouteSharing = null;
                            return a.promise;
                        },
                        _setDirectionsLanguageByLocale: function(a) {
                            var b = this.serviceDescription.directionsSupportedLanguages,
                                c = function(a) {
                                    if (b)
                                        for (var c = 0; c < b.length; c++)
                                            if (b[c].toLowerCase().substr(0, 2) === a) return b[c];
                                    return null;
                                },
                                d = c(a);
                            d || ((a = a.substr(0, 2)), (d = c(a)));
                            this.directionsLanguage = d;
                            return (this.routeParams.directionsLanguage = d);
                        },
                        _getStopSymbol: function(a, b) {
                            var c =
                                a && ((a.feature && a.feature.attributes) || a.attributes),
                                d = this.stopSymbol;
                            c &&
                                (d = this._isStopAWaypoint(a) ?
                                    this.waypointSymbol :
                                    void 0 === c.Status || 0 === c.Status || 6 === c.Status ?
                                    null === c.ArriveCurbApproach &&
                                    null !== c.DepartCurbApproach ?
                                    this.get(b ? 'fromSymbolDrag' : 'fromSymbol') :
                                    null !== c.ArriveCurbApproach &&
                                    null === c.DepartCurbApproach ?
                                    this.get(b ? 'toSymbolDrag' : 'toSymbol') :
                                    this.get(b ? 'stopSymbolDrag' : 'stopSymbol') :
                                    this.get(
                                        b ? 'unreachedSymbolDrag' : 'unreachedSymbol'
                                    ));
                            return d;
                        },
                        _addTrafficLayer: function() {
                            this.trafficLayer &&
                                !this._trafficLayerAdded &&
                                this.map &&
                                (this.map.addLayer(
                                    this.trafficLayer
                                ), this.trafficLayer.show(), (this._trafficLayerAdded = !0));
                        },
                        _toggleUnits: function(a) {
                            a.target === this._useMilesNode ?
                                this.setDirectionsLengthUnits(I.MILES) :
                                a.target === this._useKilometersNode &&
                                this.setDirectionsLengthUnits(I.KILOMETERS);
                        },
                        _toggleCheckbox: function(a) {
                            var b = w.get(a.target, 'checked');
                            a.target === this._findOptimalOrderNode ?
                                this.set('optimalRoute', b) :
                                a.target === this._useTrafficNode ?
                                this.set('traffic', b) :
                                a.target === this._returnToStartNode &&
                                this.set('returnToStart', b);
                        },
                        _isStopLocated: function(a) {
                            return (
                                a &&
                                a.feature &&
                                a.feature.attributes &&
                                (!a.feature.attributes.Status ||
                                    6 === a.feature.attributes.Status)
                            );
                        },
                        _configureRouteOptions: function() {
                            var a = this.get('routeParams'),
                                b;
                            this.get('directionsLengthUnits') ?
                                (a.directionsLengthUnits = this.get('directionsLengthUnits')) :
                                this.set('directionsLengthUnits', a.directionsLengthUnits);
                            a.findBestSequence = this.get('optimalRoute');
                            if (a.findBestSequence)
                                for (
                                    (a.preserveFirstStop = this._isStopLocated(
                                        this.stops[0]
                                    )), (a.preserveLastStop =
                                        (!this.returnToStart &&
                                            this._isStopLocated(
                                                this.stops[this.stops.length - 1]
                                            )) ||
                                        (this.returnToStart &&
                                            this._isStopLocated(this.stops[0]))), (b = 0); b < this.stops.length;

                                )
                                    this._isStopAWaypoint(this.stops[b]) ?
                                    this._removeStop(b, !0, !0) :
                                    b++;
                            if (!this.returnToStart &&
                                this.stops.length &&
                                this._isStopAWaypoint(this.stops[this.stops.length - 1])
                            )
                                for (b = this.stops.length - 1; 0 < b;)
                                    this._isStopAWaypoint(this.stops[b]) &&
                                    this._removeStop(b, !0, !0), b--;
                            if (
                                this._isTimeUnits(this._getImpedanceAttribute().units) ||
                                (this.serviceDescription &&
                                    10.6 <= this.serviceDescription.currentVersion)
                            )
                                if (((a.useTimeWindows = !0), 'now' === this.startTime))
                                    (a.timeWindowsAreUTC = !0), (a.startTimeIsUTC = !0), (a.startTime = new Date());
                                else if ('none' === this.startTime) a.startTime = null;
                            else {
                                a.timeWindowsAreUTC = !1;
                                a.startTimeIsUTC = !1;
                                var c = this._departAtTime,
                                    d = 6e4 * c.getValue().getTimezoneOffset(),
                                    c = new Date(
                                        c.getValue().getTime() +
                                        this._departAtDate.getValue().getTime() -
                                        d
                                    ),
                                    c = new Date(c.getTime() - 6e4 * c.getTimezoneOffset());
                                a.startTime = c;
                            } else(a.startTime = null), (a.useTimeWindows = !1);
                            var c = this._getImpedanceAttribute(),
                                d = this._getTimeNeutralAttribute(),
                                f = this._getDirectionsTimeAttribute();
                            b =
                                this.routeParams.accumulateAttributes ||
                                this.serviceDescription.accumulateAttributeNames;
                            d && -1 === e.indexOf(b, d.name) && b.push(d.name);
                            !this._isTimeUnits(c.units) &&
                                this.serviceDescription &&
                                10.6 <= this.serviceDescription.currentVersion &&
                                f &&
                                -1 === e.indexOf(b, f.name) &&
                                b.push(f.name);
                            this.routeParams.accumulateAttributes = b;
                            a.returnStops = !0;
                            f = [];
                            for (b = 0; b < this.stopGraphics.length; b++)
                                if (
                                    this.stopGraphics[b] &&
                                    (f.push(new J(this.stopGraphics[b].toJson())), b)
                                ) {
                                    var h = f[0].attributes,
                                        g = f[b].attributes,
                                        k;
                                    for (k in g)
                                        g.hasOwnProperty(k) &&
                                        !h.hasOwnProperty(k) &&
                                        (h[k] = null);
                                }
                            this.get('returnToStart') &&
                                this.stopGraphics.length &&
                                this._isStopLocated(this.stops[0]) ?
                                ((k = new J(
                                    this.stopGraphics[0].toJson()
                                )), (this._returnToStartStop = this._addStopWrapperToGraphic(
                                    k,
                                    k.attributes.Name
                                )), f.push(k)) :
                                (this._returnToStartStop = null);
                            a.stops.features = f;
                            if (d)
                                for (b = 0; b < f.length; b++)
                                    f[b].attributes['Attr_' + d.name] = this._convertCostValue(
                                        f[b].attributes['Attr_' + c.name],
                                        c.units,
                                        d.units
                                    );
                            this.set('routeParams', a);
                        },
                        _configureRoute: function() {
                            var a = new K();
                            a.promise.always(
                                f.hitch(this, function() {
                                    this._checkMaxStops();
                                })
                            );
                            this.createRouteSymbols();
                            this._configureRouteOptions();
                            if (
                                this.routeParams.returnRoutes &&
                                this._incrementalSolveStopRange
                            ) {
                                var b = this._incrementalSolveStopRange;
                                b.start < b.end ?
                                    (this.routeParams.stops.features = this.routeParams.stops.features.slice(
                                        b.start,
                                        b.end + 1
                                    )) :
                                    b.start > b.end &&
                                    (this.routeParams.stops.features = this.routeParams.stops.features
                                        .slice(
                                            b.start,
                                            this.routeParams.stops.features.length - 1
                                        )
                                        .concat(
                                            this.routeParams.stops.features.slice(0, b.end + 1)
                                        ));
                            } else this._incrementalSolveStopRange = null;
                            for (
                                var c = {}, d = this.routeParams.stops.features, e, h, b = 0; b < d.length; b++
                            )
                                (h = d[b].attributes.address), (e =
                                    (b === this._handle._index &&
                                        !this._handle.attributes.isWaypoint &&
                                        this._incrementalSolveStopRange ?
                                        this._waypointName :
                                        h) +
                                    '_' +
                                    this._stopSequence++), (d[b].attributes.Name = e), (c[
                                    e
                                ] = h), delete d[b].attributes.address, delete d[b].attributes
                                .isWaypoint, delete d[b].attributes.Status;
                            this._solveInProgress = !0;
                            var g = {
                                _incrementalSolveStopRange: this._incrementalSolveStopRange,
                            };
                            this.routeTask.solve(
                                this.routeParams,
                                f.hitch(this, function(b) {
                                    this._solveResultProcessing(b, c, g).then(
                                        a.resolve,
                                        a.reject
                                    );
                                }),
                                f.hitch(this, function(b) {
                                    f.mixin(this, g);
                                    this._solveInProgress = !1;
                                    for (
                                        var c = 0; c < this.stops.length; c++
                                    ) this.stops[c].feature && (this.stops[c].feature.attributes = f.mixin(this.stops[c].feature.attributes, { Status: 5 }));
                                    this.set('directions', null);
                                    this._clearDisplayAfterSolve();
                                    this.createRouteSymbols();
                                    this._routeTaskError(b);
                                    a.reject(b);
                                })
                            );
                            return a.promise;
                        },
                        _solveResultProcessing: function(a, b, c) {
                            var d = new K();
                            f.mixin(this, c);
                            this._solveInProgress = !1;
                            c = a.routeResults[0];
                            var e = c.directions;
                            c = c.stops;
                            var h;
                            if (e) {
                                this._solverMessages = a.messages;
                                var g = function(a) {
                                    for (var c in b)
                                        if (
                                            (a && 0 === e.routeName.indexOf(c)) ||
                                            (!a && 0 < e.routeName.indexOf(c))
                                        )
                                            return b[c];
                                    return '';
                                };
                                h = g(!0);
                                g = g(!1);
                                e.routeName =
                                    (h !== this._waypointName ?
                                        h :
                                        B.widgets.directions.waypoint) +
                                    ' \u2014 ' +
                                    (g !== this._waypointName ?
                                        g :
                                        B.widgets.directions.waypoint);
                                for (h = 0; h < e.features.length; h++)
                                    if (
                                        ((g = e.features[h].attributes), 'esriDMTDepart' ===
                                            g.maneuverType || 'esriDMTStop' === g.maneuverType)
                                    )
                                        for (var k in b)
                                            if (b.hasOwnProperty(k) && -1 < g.text.indexOf(k)) {
                                                g.text = g.text.replace(k, b[k]);
                                                for (var l = 0; l < c.length; l++) {
                                                    var m = c[l].attributes;
                                                    if (m.Name === k) {
                                                        f.mixin(e.features[h], {
                                                            _associatedStop: c[
                                                                this.returnToStart && l === c.length - 1 ? 0 : l
                                                            ],
                                                            _associatedStopWithReturnToStart: c[l],
                                                        });
                                                        if (!m.ArriveTime &&
                                                            !m.ArriveTimeUTC &&
                                                            g.ETA &&
                                                            g.arriveTimeUTC
                                                        ) {
                                                            m.ArriveTime = g.ETA;
                                                            m.ArriveTimeUTC = g.arriveTimeUTC;
                                                            l = 0;
                                                            if (
                                                                (0 == h &&
                                                                    'esriDMTDepart' === g.maneuverType) ||
                                                                (0 < h && 'esriDMTStop' === g.maneuverType)
                                                            )
                                                                l = this._convertCostValue(
                                                                    g.time,
                                                                    (this._getDirectionsTimeAttribute() || {})
                                                                    .units,
                                                                    'milliseconds'
                                                                );
                                                            m.DepartTime = m.ArriveTime + l;
                                                            m.DepartTimeUTC = m.ArriveTimeUTC + l;
                                                        }
                                                        break;
                                                    }
                                                }
                                            }
                                for (h = 0; h < c.length; h++)
                                    this._returnToStartStop &&
                                    c[h].attributes.Name ===
                                    this._returnToStartStop.feature.attributes.Name &&
                                    (this._returnToStartStop._resultsStopIndex = h), (c[
                                            h
                                        ].attributes.Name =
                                        b[c[h].attributes.Name]);
                                this._directionsPostprocessing(e);
                                this.traffic && this._updateMapTimeExtent();
                            }
                            this._showRoute(a).always(
                                f.hitch(this, function() {
                                    this._incrementalSolveStopRange = null;
                                    d.resolve(a);
                                })
                            );
                            return d.promise;
                        },
                        _directionsPostprocessing: function(a) {
                            var b,
                                c,
                                d = function(b, c) {
                                    var d = a.features[b]._associatedFeaturesWithWaypoints || [];
                                    d.push(a.featuresWithWaypoints[c]);
                                    a.features[b]._associatedFeaturesWithWaypoints = d;
                                    a.featuresWithWaypoints[c]._associatedFeatureNoWaypoints =
                                        a.features[b];
                                };
                            c = f.hitch(this, function(a) {
                                return (
                                    "\x3cdiv class\x3d'" +
                                    this.theme +
                                    "'\x3e\x3ctable class\x3d'esriRoutesTooltip'\x3e" +
                                    this._renderDirectionsItemTR(
                                        a._associatedFeatureNoWaypoints
                                    ) +
                                    '\x3c/table\x3e\x3c/div\x3e'
                                );
                            });
                            a.featuresWithWaypoints = [];
                            for (b = 0; b < a.features.length; b++) {
                                var e = new J(a.features[b].toJson());
                                e.setInfoTemplate(
                                    new M({
                                        title: this._i18n.widgets.directions.maneuver,
                                        content: c,
                                    })
                                );
                                a.featuresWithWaypoints.push(e);
                                a.featuresWithWaypoints[b]._associatedStop =
                                    a.features[b]._associatedStop;
                                a.featuresWithWaypoints[b]._associatedStopWithReturnToStart =
                                    a.features[b]._associatedStopWithReturnToStart;
                            }
                            a.stringsWithWaypoints = f.mixin([], a.strings);
                            a.eventsWithWaypoints = f.mixin([], a.events);
                            for (c = b = 0; b < a.features.length;)
                                a.features[b]._associatedStop &&
                                a.features[b]._associatedStop.attributes.Name ===
                                this._waypointName ?
                                (a.features.splice(b, b ? 2 : 1), a.strings.splice(
                                        b,
                                        b ? 2 : 1
                                    ), a.events.splice(b, b ? 2 : 1), b &&
                                    a.features[b] &&
                                    'esriDMTStraight' ===
                                    a.features[b].attributes.maneuverType ?
                                    ((e = a.features.splice(b, 1)[0]), (a.strings[
                                                b - 1
                                            ] = (a.strings[b - 1] || [])
                                            .concat(a.strings.splice(b, 1)[0] || [])), a
                                        .strings[b - 1].length ||
                                        (a.strings[b - 1] = void 0), (a.events[b - 1] = (a
                                                .events[b - 1] || [])
                                            .concat(a.events.splice(b, 1)[0] || [])), a.events[
                                            b - 1
                                        ].length || (a.events[b - 1] = void 0), (a.features[
                                                b - 1
                                            ].attributes.length +=
                                            e.attributes.length), (a.features[
                                                b - 1
                                            ].attributes.time +=
                                            e.attributes.time), (a.features[
                                            b - 1
                                        ].geometry.paths[0] = a.features[
                                            b - 1
                                        ].geometry.paths[0].concat(e.geometry.paths[0])), d(
                                            b - 1,
                                            c++
                                        ), d(b - 1, c++), d(b - 1, c++)) :
                                    (b && d(b - 1, c++), b < a.features.length &&
                                        d(b, c++))) :
                                (d(b, c++), b++);
                        },
                        _boldText: function(a, b) {
                            try {
                                var c = new RegExp(
                                    '[^\x3cstrong\x3e\x26nbsp;]' +
                                    b.replace(
                                        /(\||\$|\^|\(|\)|\[|\]|\{|\}|\/|\.|\+|\*|\?|\?)/g,
                                        '\\$1'
                                    ) +
                                    '[^\x26nbsp;\x3c/strong\x3e]',
                                    'g'
                                );
                                a = (' ' + a + ' ').replace(
                                    c,
                                    '\x3cstrong\x3e\x26nbsp;' + b + '\x26nbsp;\x3c/strong\x3e'
                                );
                                a = a.trim();
                            } catch (Ya) {}
                            return a;
                        },
                        _clearStopGraphics: function() {
                            if (this.stopGraphics && this.stopGraphics.length)
                                for (var a = 0; a < this.stopGraphics.length; a++)
                                    this._stopLayer.remove(
                                        this.stopGraphics[a]
                                    ), this._stopLayer.remove(this.textGraphics[a]);
                            this.set('stopGraphics', []);
                            this.set('textGraphics', []);
                        },
                        _updateMapTimeExtent: function() {
                            if (this.map) {
                                var a = (this.directions &&
                                        this.directions.features[0] &&
                                        this.directions.features[0].attributes) || {},
                                    b = new Date().getTime(),
                                    b = 'none' == this.startTime ? b : a.arriveTimeUTC || b;
                                this._useTrafficItemNode.title = 'none' !== this.startTime &&
                                    a.arriveTimeUTC ?
                                    B.widgets.directions.trafficLabelDepartAt +
                                    ': ' +
                                    this._toSpatiallyLocalTimeString(a.arriveTimeUTC, a.ETA) :
                                    '';
                                this._myTimeExtentUpdate = !0;
                                a = new Date(b);
                                this.map.setTimeExtent(new N(a, a));
                            }
                        },
                        _restoreMapTimeExtent: function() {
                            this.map &&
                                ((this._myTimeExtentUpdate = !0), this.map.setTimeExtent(
                                    this._externalTimeExtent
                                ));
                        },
                        _clearRouteGraphics: function() {
                            for (
                                var a = this.displayedRouteGraphics,
                                    b = this.displayedManeuverPointGraphics,
                                    c = this._routeLayer,
                                    d = this._waypointsEventLayer,
                                    f = 0,
                                    h = 0,
                                    g = this._incrementalSolveStopRange ?
                                    this._incrementalSolveStopRange :
                                    { start: 0, end: this.stops ? this.stops.length : -1 }; a && h < a.length;

                            ) {
                                if (a[h]._associatedStop)
                                    for (var k = 0; k < this.stops.length; k++)
                                        if (this.stops[k].feature === a[h]._associatedStop) {
                                            f = k;
                                            break;
                                        }
                                        (f >= g.start && f < g.end) ||
                                        (g.start >= g.end && (f >= g.start || f < g.end)) ?
                                        (c.remove(a[h]), a.splice(h, 1)) :
                                h++;
                            }
                            c.remove(this._incrementalRouteSegment);
                            this.set('displayedRouteGraphics', a ? a : []);
                            b &&
                                b.length &&
                                e.forEach(b, function(a) {
                                    d.remove(a);
                                });
                            this.set('displayedManeuverPointGraphics', []);
                            this._waypointsEventLayer.clear();
                            this.unhighlightSegment(!0);
                        },
                        _clearInfoWindow: function() {
                            var a = this.get('map').infoWindow;
                            a && (a.hide(), a.clearFeatures());
                        },
                        _clearDisplayBeforeSolve: function() {
                            this._toggleSaveMenu(!1);
                            this._clearInfoWindow();
                            this._clearResultsHTML();
                        },
                        _clearDisplayAfterSolve: function() {
                            this._clearStopGraphics();
                            this._clearRouteGraphics();
                            this._clearBarriersGraphics();
                            this.clearMessages();
                        },
                        _getLetter: function(a) {
                            var b = this.alphabet,
                                c = '',
                                d = function(a) {
                                    var c = '';
                                    '0123456789' === b || '1234567890' === b ?
                                        (c = String(a + 1)) :
                                        ((a = a || 0), a >= b.length &&
                                            ((c = d(Math.floor(a / b.length) - 1)), (a %=
                                                b.length)), (c += b[a]));
                                    return c;
                                },
                                e = a instanceof J ?
                                f.hitch(this, function() {
                                    for (
                                        var b = this.get('returnToStart') ? 0 : -1, c = 0; c < this.stops.length; c++
                                    )
                                        if (this.stops[c].feature === a) {
                                            b = c;
                                            break;
                                        }
                                    return b;
                                })() :
                                a;
                            if (-1 < e && b && b.length) {
                                b instanceof Array && (b = b.toString().replace(/,/g, ''));
                                for (var c = -1, h = 0; h <= e; h++)
                                    c += this._isStopAWaypoint(this.stops[h]) ? 0 : 1;
                                c = d(c);
                            }
                            return c;
                        },
                        _solveAndZoom: function(a) {
                            if (this.autoSolve)
                                return this._getDirections().then(
                                    f.hitch(this, function() {
                                        a || this.zoomToFullRoute();
                                    })
                                );
                            var b = new K();
                            b.resolve();
                            return b.promise;
                        },
                        _setupEvents: function() {
                            this._onEvents.push(
                                q(this.domNode, '[data-blur-on-click]:click', function() {
                                    this.blur();
                                })
                            );
                            this._onEvents.push(
                                q(
                                    this._dndNode,
                                    '[data-reverse-stops]:click, [data-reverse-stops]:keydown',
                                    f.hitch(this, function(a) {
                                        a &&
                                            ('click' === a.type ||
                                                ('keydown' === a.type && a.keyCode === u.ENTER)) &&
                                            this.modifyStopSequence();
                                    })
                                )
                            );
                            this._onEvents.push(
                                q(
                                    this._printButton,
                                    'click, keydown',
                                    f.hitch(this, function(a) {
                                        a &&
                                            ('click' === a.type ||
                                                ('keydown' === a.type && a.keyCode === u.ENTER)) &&
                                            this._printDirections();
                                    })
                                )
                            );
                            this._onEvents.push(
                                q(
                                    this._resultsNode,
                                    '[data-full-route]:click, [data-full-route]:keydown',
                                    f.hitch(this, function(a) {
                                        a &&
                                            ('click' === a.type ||
                                                ('keydown' === a.type && a.keyCode === u.ENTER)) &&
                                            this.zoomToFullRoute();
                                    })
                                )
                            );
                            this._onEvents.push(
                                q(
                                    this._dndNode,
                                    '[data-remove]:click, [data-remove]:keydown',
                                    f.hitch(this, function(a) {
                                        if (
                                            a &&
                                            ('click' === a.type ||
                                                ('keydown' === a.type && a.keyCode === u.ENTER))
                                        ) {
                                            var b = A('[data-remove]', this._dndNode);
                                            a = e.indexOf(b, a.target);
                                            this.removeStop(a);
                                        }
                                    })
                                )
                            );
                            this._onEvents.push(
                                q(
                                    this._dndNode,
                                    '[data-center-at]:click, [data-center-at]:keydown',
                                    f.hitch(this, function(a) {
                                        if (
                                            a &&
                                            ('click' === a.type ||
                                                ('keydown' === a.type && a.keyCode === u.ENTER))
                                        ) {
                                            var b = A('[data-center-at]', this._dndNode);
                                            a = e.indexOf(b, a.target);
                                            this.stops[a] &&
                                                this.stops[a].feature &&
                                                this.stops[a].feature.geometry &&
                                                this.map.centerAndZoom(this.stops[a].feature.geometry);
                                        }
                                    })
                                )
                            );
                            this._onEvents.push(
                                q(
                                    this.map,
                                    'zoom-end',
                                    f.hitch(this, function() {
                                        var a = this._segmentGraphics;
                                        a &&
                                            a[0] &&
                                            void 0 !== a[0].attributes._index &&
                                            this.highlightSegment(a[0].attributes._index, !0);
                                    })
                                )
                            );
                            this._onEvents.push(
                                q(
                                    this._dnd,
                                    'Drop',
                                    f.hitch(this, function() {
                                        this._dnd.sync();
                                        this.set('optimalRoute', !1);
                                        var a, b, c = !1,
                                            d = [],
                                            f = this._dnd.getAllNodes();
                                        for (a = 0; a < this.geocoders.length; a++)
                                            if (
                                                ((b = e.indexOf(f, this.geocoders[a]._tr)), -1 < b &&
                                                    a !== b &&
                                                    a !== b - 1)
                                            ) {
                                                for (; 0 < b && this._isStopAWaypoint(this.stops[b]);)
                                                    b--;
                                                c = !0;
                                                break;
                                            }
                                        c &&
                                            (d = this._markWPsForRemovalAfterUserChangedStopSequence(
                                                a,
                                                b
                                            ));
                                        this._sortGeocoders();
                                        this.setListIcons();
                                        this._removeSomeWaypoints(d);
                                        this.stops[b].name && this.getDirections();
                                    })
                                )
                            );
                            this._onEvents.push(
                                q(
                                    this._dnd,
                                    'DndStart',
                                    f.hitch(this, function() {
                                        var a = A('body')[0];
                                        x.add(a, this._css.dndDragBodyClass);
                                        this._removeLocateButtonVisibilityEvents();
                                    })
                                )
                            );
                            this._onEvents.push(
                                q(
                                    this._dnd,
                                    'DndDrop, DndCancel',
                                    f.hitch(this, function() {
                                        var a = A('body')[0];
                                        x.remove(a, this._css.dndDragBodyClass);
                                        this._setLocateButtonVisibilityEvents();
                                    })
                                )
                            );
                            var a = this._handle,
                                b = f.hitch(this, function(b) {
                                    var c = f.hitch(this, function(c, d, e, f, h) {
                                        var g = a._isShown();
                                        a.setGeometry(c);
                                        a._tooltip.style.left = b.screenPoint.x + 'px';
                                        a._tooltip.style.top = b.screenPoint.y + 'px';
                                        !g ||
                                            (a._index === e && a.attributes.isWaypoint === f) ||
                                            (a._remove(), (g = !1));
                                        a.setSymbol(d);
                                        a._index = e;
                                        a._isStopIcon = a._index === Math.floor(a._index);
                                        a.attributes.isWaypoint = f;
                                        a._isStopIcon &&
                                            ((a.attributes.address = this.stopGraphics[
                                                e
                                            ].attributes.address), a.setInfoTemplate(
                                                this.stopGraphics[e].infoTemplate
                                            ));
                                        if (this.canModifyWaypoints || a._isStopIcon)
                                            g ||
                                            (this._stopLayer.add(a), (c = a.getDojoShape()) &&
                                                c[f ? 'moveToBack' : 'moveToFront'].call(
                                                    c
                                                )), this.editToolbar.activate(X.MOVE, a);
                                        f = f ?
                                            a._isStopIcon ?
                                            B.widgets.directions.dragWaypoint :
                                            this.canModifyWaypoints ?
                                            B.widgets.directions.dragRoute :
                                            '' :
                                            B.widgets.directions.dragStop;
                                        a._showTooltip(h || f);
                                    });
                                    this.unhighlightSegment();
                                    if (
                                        this.mapClickActive &&
                                        this.dragging &&
                                        !this._solveInProgress &&
                                        !this._moveInProgress &&
                                        !a._solveTimeout
                                    )
                                        if (
                                            (clearTimeout(a._removeTimeout), ((b.graphic
                                                        ._isStopIcon ||
                                                        b.graphic._isStopLabel) &&
                                                    !b.graphic.attributes.isWaypoint &&
                                                    this.canModifyStops) ||
                                                (b.graphic._isStopIcon &&
                                                    b.graphic.attributes.isWaypoint &&
                                                    this.canModifyWaypoints))
                                        ) {
                                            var d = b.graphic._isStopLabel ?
                                                this.stopGraphics[b.graphic._index] :
                                                b.graphic;
                                            c(
                                                d.geometry,
                                                this._getStopSymbol(this.stops[d._index], !0),
                                                d._index, !0 === d.attributes.isWaypoint
                                            );
                                            this._stopLayer.remove(this.stopGraphics[d._index]);
                                            this._stopLayer.remove(this.textGraphics[d._index]);
                                        } else if (
                                        b.graphic._isSnapFeature ||
                                        (b.graphic._isHandle && !b.graphic._isStopIcon)
                                    )
                                        this._snappingManager ||
                                        (this._snappingManager = this.map.snappingManager), this._snappingManager
                                        .getSnappingPoint(b.screenPoint)
                                        .then(
                                            f.hitch(this, function(d) {
                                                if (!this.maxStopsReached &&
                                                    !this._moveInProgress &&
                                                    d
                                                ) {
                                                    for (
                                                        var f = this.displayedManeuverPointGraphics,
                                                            h = null,
                                                            g = 0; g < f.length; g++
                                                    )
                                                        if (
                                                            f[g].geometry.x === d.x &&
                                                            f[g].geometry.y === d.y
                                                        ) {
                                                            h = f[g]._directionsFeature;
                                                            f = e.indexOf(this.directions.features, h); -
                                                            1 < f && this.highlightSegment(f);
                                                            break;
                                                        }
                                                    c(
                                                        d,
                                                        b.graphic._isHandle ?
                                                        a.symbol :
                                                        this.waypointSymbol,
                                                        b.graphic._isHandle ?
                                                        a._index :
                                                        b.graphic._nextStopIndex,
                                                        b.graphic._isHandle ?
                                                        a.attributes.isWaypoint :
                                                        !0,
                                                        h
                                                    );
                                                }
                                            })
                                        );
                                }),
                                c = f.hitch(this, function() {
                                    clearTimeout(a._removeTimeout);
                                    a._removeTimeout = setTimeout(a._remove, 100);
                                    this.unhighlightSegment();
                                }),
                                d = f.hitch(this, function(a) {
                                    if (this.barrierToolActive) {
                                        a = a.graphic;
                                        var b = this.routeParams,
                                            c = b.barriers ? e.indexOf(b.barriers.features, a) : -1,
                                            d = b.polygonBarriers ?
                                            e.indexOf(b.polygonBarriers.features, a) :
                                            -1,
                                            f = b.polylineBarriers ?
                                            e.indexOf(b.polylineBarriers.features, a) :
                                            -1; -
                                        1 < c && b.barriers.features.splice(c, 1); -
                                        1 < d && b.polygonBarriers.features.splice(d, 1); -
                                        1 < f && b.polylineBarriers.features.splice(f, 1);
                                        this._barriersLayer.remove(a);
                                        this._polygonBarriersLayer.remove(a);
                                        this._polylineBarriersLayer.remove(a);
                                        this._clearStopsStatusAttr();
                                        this.getDirections(!0);
                                    }
                                });
                            this._onEvents.push(
                                this._waypointsEventLayer.on('mouse-move', b)
                            );
                            this._onEvents.push(
                                this._waypointsEventLayer.on('mouse-out', c)
                            );
                            this._onEvents.push(this._stopLayer.on('mouse-move', b));
                            this._onEvents.push(this._stopLayer.on('mouse-out', c));
                            this._onEvents.push(this._barriersLayer.on('click', d));
                            this._onEvents.push(this._polylineBarriersLayer.on('click', d));
                            this._onEvents.push(this._polygonBarriersLayer.on('click', d));
                            this._editToolbarEvents();
                            this._watchEvents.push(
                                this.watch('theme', this._updateThemeWatch)
                            );
                            this._watchEvents.push(
                                this.watch('canModifyStops', this._updateCanModifyStops)
                            );
                            this._watchEvents.push(
                                this.watch('canModifyWaypoints', this._updateCanAddWaypoints)
                            );
                            this._watchEvents.push(
                                this.watch('showReturnToStartOption', this._optionsMenu)
                            );
                            this._watchEvents.push(
                                this.watch('showOptimalRouteOption', this._optionsMenu)
                            );
                            this._watchEvents.push(
                                this.watch('returnToStart', this._setMenuNodeValues)
                            );
                            this._watchEvents.push(
                                this.watch('optimalRoute', this._setMenuNodeValues)
                            );
                            this._watchEvents.push(
                                this.watch('startTime', this._setStartTime)
                            );
                            this._watchEvents.push(
                                this.watch('traffic', this._setMenuNodeValues)
                            );
                            this._watchEvents.push(
                                this.watch('trafficLayer', this._trafficLayerUpdate)
                            );
                            this._watchEvents.push(
                                this.watch(
                                    'routeTaskUrl',
                                    f.hitch(this, function() {
                                        this._createRouteTask();
                                        this._setTrafficOptions();
                                    })
                                )
                            );
                            this._watchEvents.push(
                                this.watch(
                                    'printTaskUrl',
                                    f.hitch(this, function() {
                                        this._createPrintTask();
                                    })
                                )
                            );
                            this._watchEvents.push(
                                this.watch(
                                    'geometryTaskUrl',
                                    f.hitch(this, function() {
                                        this._createGeometryTask();
                                    })
                                )
                            );
                            this._watchEvents.push(
                                this.watch(
                                    'routeParams',
                                    f.hitch(this, function() {
                                        this._createRouteParams();
                                        this._setDefaultUnits();
                                    })
                                )
                            );
                            this._watchEvents.push(
                                this.watch(
                                    'searchOptions',
                                    f.hitch(this, function() {
                                        this._setSearchOptions();
                                        this._createGlobalGeocoder();
                                        var a = this.get('searchOptions').sources;
                                        if (a)
                                            for (var b = 0; b < this.geocoders.length; b++)
                                                this.geocoders[b].set('sources', a);
                                    })
                                )
                            );
                            this._watchEvents.push(
                                this.watch('showReverseStopsButton', this.setListIcons)
                            );
                            this._watchEvents.push(
                                this.watch('editToolbar', this._editToolbarEvents)
                            );
                            this._watchEvents.push(
                                this.watch(
                                    'showTravelModesOption',
                                    this._showTravelModesOption
                                )
                            );
                            this._watchEvents.push(
                                this.watch(
                                    'showMilesKilometersOption',
                                    this._showMilesKilometersOption
                                )
                            );
                            this._watchEvents.push(
                                this.watch('showClearButton', this._showClearButton)
                            );
                            this._watchEvents.push(
                                this.watch(
                                    'directionsLengthUnits',
                                    this.setDirectionsLengthUnits
                                )
                            );
                            this._watchEvents.push(
                                this.watch('directionsLanguage', this.setDirectionsLanguage)
                            );
                            this._watchEvents.push(
                                this.watch('mapClickActive', this._activate)
                            );
                            this._watchEvents.push(
                                this.watch('barrierToolActive', this._activateBarrierTool)
                            );
                            this._watchEvents.push(
                                this.watch('showActivateButton', this._showActivateButton)
                            );
                            this._watchEvents.push(
                                this.watch('showBarriersButton', this._showBarriersButton)
                            );
                            this._watchEvents.push(
                                this.watch('showPrintPage', function() {
                                    y.set(
                                        this._printButton,
                                        'display',
                                        this.showPrintPage ? 'inline-block' : 'none'
                                    );
                                })
                            );
                            this._watchEvents.push(
                                this.watch('showSaveButton', function() {
                                    y.set(
                                        this._saveMenuButton,
                                        'display',
                                        this.showSaveButton && this.owningSystemUrl ?
                                        'inline-block' :
                                        'none'
                                    );
                                })
                            );
                        },
                        _editToolbarEvents: function() {
                            var a = f.hitch(this, function(a) {
                                    var b = '';
                                    if (
                                        (a = a.routeResults ? a.routeResults[0] : null) &&
                                        a.route
                                    ) {
                                        a = a.route.attributes;
                                        var c = this.routeParams.travelMode;
                                        if (c)
                                            var b =
                                                b +
                                                ('\x3cb\x3e' +
                                                    c.name +
                                                    '\x3c/b\x3e ' +
                                                    B.widgets.directions.toNearbyStops +
                                                    ': '),
                                                d = void 0 !== a['Total_' + c.timeAttributeName] ?
                                                this._formatTime(
                                                    a['Total_' + c.timeAttributeName], !1,
                                                    (this._getCostAttribute(c.timeAttributeName) || {})
                                                    .units
                                                ) :
                                                '',
                                                b =
                                                b +
                                                ((void 0 !== a['Total_' + c.distanceAttributeName] ?
                                                        this._formatDistance(
                                                            a['Total_' + c.distanceAttributeName], !0,
                                                            (this._getCostAttribute(
                                                                c.distanceAttributeName
                                                            ) || {}).units
                                                        ) :
                                                        '') +
                                                    (d ? ' \x26middot; ' + d : ''));
                                        else b = this._formatArbitraryCostsForRouteTooltip(a);
                                    }
                                    this._handle._showTooltip(b);
                                }),
                                b = f.hitch(this, function(c, d) {
                                    var e = new K(),
                                        h = this._handle,
                                        g = this.map
                                        .toScreen(h._origPoint)
                                        .offset(
                                            c.transform.dx + h.symbol.xoffset,
                                            c.transform.dy + h.symbol.yoffset
                                        );
                                    c.origMapPoint || (c.origMapPoint = this.map.toMap(g));
                                    y.set(h._tooltip, 'left', g.x + 'px');
                                    y.set(h._tooltip, 'top', g.y + 'px');
                                    clearTimeout(h._solveTimeout);
                                    if (
                                        this._solveInProgress ||
                                        !this._requestQueueTail.isFulfilled()
                                    )
                                        h._solveTimeout = setTimeout(function() {
                                            b(c, d).always(e.resolve);
                                        }, 100);
                                    else if (h._isStopIcon) {
                                        var g = c.graphic._index,
                                            k = this.stops[g];
                                        (k = k ?
                                            {
                                                name: k.name,
                                                extent: k.extent,
                                                feature: new J(k.feature.toJson()),
                                            } :
                                            null) ?
                                        (k.feature.setGeometry(
                                            c.origMapPoint
                                        ), (this._modifiedWaypointIndex = this._isStopAWaypoint(
                                                this.stops[g]
                                            ) ?
                                            g :
                                            null), (this._incrementalSolveStopRange = {
                                            start: this.returnToStart ?
                                                (this.stops.length + g - 1) % this.stops.length :
                                                Math.max(0, g - 1),
                                            end: this.returnToStart ?
                                                (g + 1) % this.stops.length :
                                                Math.min(this.stops.length - 1, g + 1),
                                        }), this.updateStop(k, g, d).always(
                                            f.hitch(this, function(b) {
                                                h._solveTimeout = null;
                                                b.routeResults && a(b);
                                                e.resolve();
                                            })
                                        )) :
                                        e.resolve();
                                    } else e.resolve();
                                    return e.promise;
                                });
                            this._onEvents.push(
                                q(
                                    this.editToolbar,
                                    'graphic-click',
                                    f.hitch(this, function(a) {
                                        if (a.graphic.attributes.isWaypoint)
                                            !a.graphic._isStopIcon ||
                                            this._moveInProgress ||
                                            this._solveInProgress ||
                                            (this._handle._remove(), (this._moveInProgress = !0), this.removeStop(
                                                a.graphic._index, !0
                                            ).always(
                                                f.hitch(this, function() {
                                                    this._moveInProgress = !1;
                                                })
                                            ));
                                        else {
                                            var b = this.get('map').infoWindow;
                                            b &&
                                                (b.setFeatures([a.graphic]), b.show(
                                                    a.graphic.geometry
                                                ));
                                        }
                                    })
                                )
                            );
                            this._onEvents.push(
                                q(
                                    this.editToolbar,
                                    'graphic-move-start',
                                    f.hitch(this, function(a) {
                                        this._blurGeocoders();
                                        this._moveInProgress = !0;
                                        this._removeEmptyStops();
                                        this.routeParams.returnDirections = !1;
                                        this.routeParams.returnRoutes = !0;
                                        a = a.graphic;
                                        a._origPoint = new ca(a.geometry.toJson());
                                        a._maxDeviation = 0;
                                        a._solveHasHappened = !1;
                                        this.map.disableMapNavigation();
                                    })
                                )
                            );
                            this._onEvents.push(
                                q(
                                    this.editToolbar,
                                    'graphic-move-stop',
                                    f.hitch(this, function(a) {
                                        this.map.enableMapNavigation();
                                        this.routeParams.returnDirections = !0;
                                        this.routeParams.returnRoutes = !1;
                                        if (this._handle._isStopIcon)
                                            if (this._handle._solveHasHappened)
                                                if (this._handle.attributes.isWaypoint)
                                                    b(a, !0).always(
                                                        f.hitch(this, function() {
                                                            this._moveInProgress = !1;
                                                            this._handle._isStopIcon = !0;
                                                            this._handle._remove();
                                                            this._showLoadingSpinner();
                                                        })
                                                    );
                                                else {
                                                    clearTimeout(this._handle._solveTimeout);
                                                    this._handle._solveTimeout = null;
                                                    var c = this.stops[a.graphic._index],
                                                        d =
                                                        (c &&
                                                            c.feature &&
                                                            c.feature.attributes &&
                                                            c.feature.attributes.Name) ===
                                                        this._userDefinedStopName,
                                                        e = c && c.name;
                                                    this._reverseGeocode(
                                                        new J(a.graphic.toJson())
                                                    ).then(
                                                        f.hitch(this, function(b) {
                                                            d &&
                                                                ((b.name = e), (b.feature.attributes.Name = this._userDefinedStopName));
                                                            this._setReverseGeocode(
                                                                b,
                                                                b.feature.geometry,
                                                                a.graphic._index
                                                            ).always(
                                                                f.hitch(this, function() {
                                                                    this._moveInProgress = !1;
                                                                    this._handle._remove();
                                                                    this._showLoadingSpinner();
                                                                })
                                                            );
                                                        })
                                                    );
                                                }
                                        else this._moveInProgress = !1;
                                        else this._moveInProgress = !1;
                                    })
                                )
                            );
                            this._onEvents.push(
                                q(
                                    this.editToolbar,
                                    'graphic-move',
                                    f.hitch(this, function(a) {
                                        var c = this._handle,
                                            d = a.transform;
                                        d.dx &&
                                            d.dy &&
                                            (a.graphic._maxDeviation = Math.max(
                                                c._maxDeviation,
                                                Math.sqrt(d.dx * d.dx + d.dy * d.dy)
                                            ));
                                        10 < c._maxDeviation &&
                                            ((c._solveHasHappened = !0), a.graphic === c &&
                                                c.attributes.isWaypoint &&
                                                !c._isStopIcon ?
                                                (this.set(
                                                    'optimalRoute', !1
                                                ), (c._index += 0.5), (c._isStopIcon = !0), (a.graphic._stopIndex =
                                                    c._index), (this._incrementalSolveStopRange = {
                                                    start: this.returnToStart ?
                                                        (this.stops.length + c._index - 1) %
                                                        this.stops.length :
                                                        Math.max(0, c._index - 1),
                                                    end: this.returnToStart ?
                                                        (c._index + 1) % (this.stops.length + 1) :
                                                        Math.min(this.stops.length, c._index + 1),
                                                }), this.addStop({
                                                        name: this._waypointName,
                                                        feature: new J(c.geometry, c.symbol, {
                                                            isWaypoint: !0,
                                                            CurbApproach: 3,
                                                        }),
                                                    },
                                                    a.graphic._stopIndex
                                                )) :
                                                ((c = a.graphic.getDojoShape()) &&
                                                    c.moveToFront(), b(a)));
                                    })
                                )
                            );
                        },
                        _isStopAWaypoint: function(a) {
                            return (
                                a &&
                                a.feature &&
                                a.feature.attributes &&
                                a.feature.attributes.isWaypoint
                            );
                        },
                        _getStopCount: function() {
                            var a = 0,
                                b;
                            for (b = 0; b < this.stops.length; b++)
                                a += !this._isStopAWaypoint(this.stops[b]) &&
                                this.stops[b].name ?
                                1 :
                                0;
                            return a;
                        },
                        _getWaypointCount: function() {
                            var a = 0,
                                b;
                            for (b = 0; b < this.stops.length; b++)
                                a += this._isStopAWaypoint(this.stops[b]) ? 1 : 0;
                            return a;
                        },
                        _decorateUngeocodedStop: function(a) {
                            var b = new K(),
                                c = function(c, d) {
                                    b.resolve({
                                        name: void 0 === c ?
                                            B.widgets.directions.unlocatedStop :
                                            c.toFixed(6) + ' ' + d.toFixed(6),
                                        feature: a,
                                    });
                                };
                            if (a.geometry)
                                if (
                                    a.geometry.spatialReference &&
                                    4326 !== a.geometry.spatialReference.wkid
                                )
                                    if (
                                        this.map &&
                                        this.map.spatialReference &&
                                        this.map.spatialReference.isWebMercator()
                                    ) {
                                        var d = U.xyToLngLat(a.geometry.x, a.geometry.y);
                                        c(d[0], d[1]);
                                    } else
                                        this._geometryService ?
                                        ((d = new Da()), (d.outSR = new R(
                                            4326
                                        )), (d.geometries = [
                                            a.geometry,
                                        ]), this._geometryService.project(d).then(
                                            f.hitch(this, function(b) {
                                                b && b.length ?
                                                    c(b[0].x, b[0].y) :
                                                    c(a.geometry.x, a.geometry.y);
                                            }),
                                            f.hitch(this, function() {
                                                c();
                                            })
                                        )) :
                                        c(a.geometry.x, a.geometry.y);
                            else c(a.geometry.x, a.geometry.y);
                            else c();
                            return b.promise;
                        },
                        _trafficLayerUpdate: function(a, b, c) {
                            a = this.get('map');
                            b &&
                                this._trafficLayerAdded &&
                                (a.removeLayer(b), (this._trafficLayerAdded = !1));
                            c &&
                                this.get('traffic') &&
                                !this._trafficLayerAdded &&
                                (a.addLayer(c), c.show(), (this._trafficLayerAdded = !0));
                        },
                        _routeTaskError: function(a) {
                            var b = B.widgets.directions.error.routeTask,
                                c = a.details,
                                d = function(a) {
                                    return (res = a.match(/(\d+)/)) ? ': ' + res[0] : '.';
                                };
                            c &&
                                1 === c.length &&
                                ('The distance between any inputs must be less than 50 miles (80 kilometers) when walking.' ===
                                    c[0] ?
                                    (b = B.widgets.directions.error.maxWalkingDistance) :
                                    'Driving a truck is currently not supported outside of North America and Central America.' ===
                                    c[0] ?
                                    (b = B.widgets.directions.error.nonNAmTruckingMode) :
                                    0 ===
                                    c[0].indexOf(
                                        'The number of input locations loaded into Barriers'
                                    ) ?
                                    (b =
                                        B.widgets.directions.error.tooManyBarriers +
                                        d(c[0])) :
                                    0 ===
                                    c[0].indexOf(
                                        'The number of input locations loaded into PolygonBarriers'
                                    ) ?
                                    (b =
                                        B.widgets.directions.error
                                        .tooManyPolygonBarriers + d(c[0])) :
                                    0 ===
                                    c[0].indexOf(
                                        'The number of input locations loaded into PolylineBarriers'
                                    ) &&
                                    (b =
                                        B.widgets.directions.error
                                        .tooManyPolylineBarriers + d(c[0])));
                            this._showMessage(b);
                            this.onDirectionsFinish(a);
                        },
                        _showMessage: function(a, b) {
                            var c = '';
                            this.messages.push({ msg: a, error: !b });
                            if (this.messages.length) {
                                for (
                                    var c = c + '\x3cul\x3e', d = 0; d < this.messages.length; d++
                                )
                                    c +=
                                    '\x3cli class\x3d"' +
                                    (this.messages[d].error ?
                                        this._css.routesErrorClass :
                                        this._css.routesInfoClass) +
                                    '"\x3e' +
                                    this.messages[d].msg +
                                    '\x3c/li\x3e';
                                c += '\x3c/ul\x3e';
                            }
                            this._msgNode && (this._msgNode.innerHTML = c);
                            if (!b) this.onError(a);
                        },
                        _isTimeUnits: function(a) {
                            return (
                                'milliseconds' === a ||
                                'esriNAUSeconds' === a ||
                                'esriNAUMinutes' === a ||
                                'esriNAUHours' === a ||
                                'esriNAUDays' === a
                            );
                        },
                        _getImpedanceAttribute: function() {
                            return this._getCostAttribute(
                                (this.routeParams &&
                                    this.routeParams.travelMode &&
                                    this.routeParams.travelMode.impedanceAttributeName) ||
                                this.routeParams.impedanceAttribute ||
                                this.serviceDescription.impedance
                            );
                        },
                        _getDirectionsTimeAttribute: function() {
                            return this._getCostAttribute(
                                (this.routeParams &&
                                    this.routeParams.travelMode &&
                                    this.routeParams.travelMode.timeAttributeName) ||
                                this.routeParams.directionsTimeAttribute ||
                                this.serviceDescription.directionsTimeAttribute
                            );
                        },
                        _getTimeNeutralAttribute: function() {
                            var a = (this._getDirectionsTimeAttribute() || {})
                                .timeNeutralAttributeName;
                            return this._getCostAttribute(a);
                        },
                        _getCostAttribute: function(a) {
                            for (
                                var b = (this.serviceDescription &&
                                        this.serviceDescription.networkDataset
                                        .networkAttributes) || [],
                                    c,
                                    d = 0; d < b.length; d++
                            )
                                if (b[d].name === a && 'esriNAUTCost' === b[d].usageType) {
                                    c = b[d];
                                    break;
                                }
                            return c;
                        },
                        _convertCostValue: function(a, b, c) {
                            var d = this._isTimeUnits(b),
                                e = this._isTimeUnits(c);
                            b = d ? this._toMinutes(a, b) : this._toMeters(a, b);
                            return d === e ?
                                e ? this._fromMinutes(b, c) : this._fromMeters(b, c) :
                                a;
                        },
                        _toMinutes: function(a, b, c) {
                            a = a || 0;
                            switch (b) {
                                case 'milliseconds':
                                    a /= Math.pow(6e4, c ? -1 : 1);
                                    break;
                                case 'esriNAUSeconds':
                                    a /= Math.pow(60, c ? -1 : 1);
                                    break;
                                case 'esriNAUHours':
                                    a *= Math.pow(60, c ? -1 : 1);
                                    break;
                                case 'esriNAUDays':
                                    a *= Math.pow(1440, c ? -1 : 1);
                            }
                            return a;
                        },
                        _fromMinutes: function(a, b) {
                            return this._toMinutes(a, b, !0);
                        },
                        _toMeters: function(a, b, c) {
                            a = a || 0;
                            switch ((b || '').replace('esriNAU', 'esri')) {
                                case 'esriInches':
                                    a *= Math.pow(0.0254, c ? -1 : 1);
                                    break;
                                case 'esriFeet':
                                    a *= Math.pow(0.3048, c ? -1 : 1);
                                    break;
                                case 'esriYards':
                                    a *= Math.pow(0.9144, c ? -1 : 1);
                                    break;
                                case 'esriMiles':
                                    a *= Math.pow(1609.344, c ? -1 : 1);
                                    break;
                                case 'esriNauticalMiles':
                                    a *= Math.pow(1851.995396854, c ? -1 : 1);
                                    break;
                                case 'esriMillimeters':
                                    a /= Math.pow(1e3, c ? -1 : 1);
                                    break;
                                case 'esriCentimeters':
                                    a /= Math.pow(100, c ? -1 : 1);
                                    break;
                                case 'esriKilometers':
                                    a *= Math.pow(1e3, c ? -1 : 1);
                                    break;
                                case 'esriDecimeters':
                                    a /= Math.pow(10, c ? -1 : 1);
                            }
                            return a;
                        },
                        _fromMeters: function(a, b) {
                            return this._toMeters(a, b, !0);
                        },
                        _createRouteTask: function() {
                            var a = new K();
                            this.set('routeTask', new ra(this.get('routeTaskUrl')));
                            this._createRouteParams();
                            this.routeTask
                                .getServiceDescription(
                                    this.travelModesServiceUrl,
                                    this.doNotFetchTravelModesFromOwningSystem
                                )
                                .then(
                                    f.hitch(this, function(b) {
                                        b.networkDataset ?
                                            (this.set('serviceDescription', b), this.set(
                                                    'maxStops',
                                                    parseInt(
                                                        this.userOptions.maxStops ||
                                                        (b.serviceLimits &&
                                                            b.serviceLimits.Route_MaxStops) ||
                                                        this.defaults.maxStops
                                                    )
                                                ), this.defaults.portalUrl ?
                                                ((this.owningSystemUrl = this.defaults.portalUrl), a.resolve()) :
                                                this.routeTask.getOwningSystemUrl().then(
                                                    f.hitch(this, function(b) {
                                                        this.owningSystemUrl = b;
                                                        a.resolve();
                                                    }),
                                                    a.reject
                                                )) :
                                            (this._showMessage(
                                                B.widgets.directions.error
                                                .cantFindRouteServiceDescription
                                            ), a.reject(
                                                Error(
                                                    B.widgets.directions.error
                                                    .cantFindRouteServiceDescription
                                                )
                                            ));
                                    }),
                                    f.hitch(this, function() {
                                        this._showMessage(
                                            B.widgets.directions.error.cantFindRouteServiceDescription
                                        );
                                        a.reject(
                                            Error(
                                                B.widgets.directions.error
                                                .cantFindRouteServiceDescription
                                            )
                                        );
                                        this.mapClickActive = !1;
                                        this._activate();
                                    })
                                );
                            return a.promise;
                        },
                        _createSearchSourceDDL: function() {
                            if (
                                this._globalGeocoder &&
                                this._globalGeocoder.sources &&
                                1 < this._globalGeocoder.sources.length
                            ) {
                                var a = f.hitch(this, function(a) {
                                    this._searchSourceSelector.domNode.blur();
                                    this._globalGeocoder.set('activeSourceIndex', a);
                                    for (
                                        var b = 0; b < this.geocoders.length; b++
                                    ) this.geocoders[b].set('activeSourceIndex', a);
                                    this._truncateSearchSourceIfNeeded();
                                });
                                if (!this._searchSourceSelector) {
                                    for (
                                        var b = [{
                                                value: 'all',
                                                label: B.widgets.Search.main.all,
                                                selected: !0,
                                            }, ],
                                            c = 0; c < this._globalGeocoder.sources.length; c++
                                    )
                                        b.push({
                                            value: String(c),
                                            label: this._globalGeocoder.sources[c].name,
                                        });
                                    this._searchSourceSelector = new k({
                                            className: 'esriSearchSourcesDDL',
                                            style: 'width:100%;',
                                            options: b,
                                        },
                                        this._searchSourceSelectorContainer
                                    );
                                    this._searchSourceSelector.startup();
                                    this._searchSourceSelector.on('change', a);
                                    this._searchSourceSelector.domNode.style.width = '';
                                }
                                a('all');
                            } else
                                2 > this._globalGeocoder.sources.length &&
                                (this._searchSourceContainerNode.style.display = 'none');
                        },
                        _createTravelModesDDL: function() {
                            this._travelModeSelector ||
                                ((this._travelModeSelector = new k({ className: 'esriTravelModesDDL', style: 'width:100%;' },
                                    this._travelModeSelectorContainer
                                )), this._travelModeSelector.startup(), (this._travelModeSelector._interractive = !0), this._travelModeSelector.on(
                                    'change',
                                    f.hitch(this, function(a) {
                                        this._travelModeSelector._interractive ?
                                            this._enqueue(function() {
                                                return this._setTravelMode(a).always(
                                                    f.hitch(this, function() {
                                                        this._travelModeSelector._interractive = !0;
                                                    })
                                                );
                                            }) :
                                            (this._travelModeSelector._interractive = !0);
                                    })
                                ));
                        },
                        _setupTravelModes: function() {
                            var a = this.get('serviceDescription'),
                                b = a.supportedTravelModes,
                                c = new K();
                            if (b && b.length && this._travelModeSelector) {
                                for (var d = b[0].name, e = [], f = 0; f < b.length; f++) {
                                    for (
                                        var h = 'AUTOMOBILE' === b[f].type ?
                                            'Driving' :
                                            'TRUCK' === b[f].type ?
                                            'Trucking' :
                                            'WALK' === b[f].type ? 'Walking' : 'Other',
                                            g = '',
                                            k = a.networkDataset.networkAttributes,
                                            l = 0; l < k.length; l++
                                    ) {
                                        var m = k[l];
                                        if (m.name === b[f].impedanceAttributeName) {
                                            if (
                                                'esriNAUCentimeters' === m.units ||
                                                'esriNAUDecimalDegrees' === m.units ||
                                                'esriNAUDecimeters' === m.units ||
                                                'esriNAUFeet' === m.units ||
                                                'esriNAUInches' === m.units ||
                                                'esriNAUKilometers' === m.units ||
                                                'esriNAUMeters' === m.units ||
                                                'esriNAUMiles' === m.units ||
                                                'esriNAUMillimeters' === m.units ||
                                                'esriNAUNauticalMiles' === m.units ||
                                                'esriNAUYards' === m.units
                                            )
                                                g = 'Distance';
                                            else if (
                                                'esriNAUDays' === m.units ||
                                                'esriNAUHours' === m.units ||
                                                'esriNAUMinutes' === m.units ||
                                                'esriNAUSeconds' === m.units
                                            )
                                                g = 'Time';
                                            break;
                                        }
                                    }
                                    e.push({
                                        id: b[f].name,
                                        label: '\x3cdiv class\x3d"esriTravelModesDirectionsIcon esriTravelModesType' +
                                            h +
                                            g +
                                            '"\x3e\x26nbsp;\x3c/div\x3e\x3cdiv class\x3d"esriTravelModesTypeName" title\x3d"' +
                                            b[f].description +
                                            '"\x3e' +
                                            b[f].name +
                                            '\x3c/div\x3e',
                                    });
                                    !a.defaultTravelMode ||
                                        (b[f].id !== a.defaultTravelMode &&
                                            b[f].itemId !== a.defaultTravelMode) ||
                                        (d = b[f].name);
                                }
                                this._showTravelModesOption();
                                this._travelModeSelector.setStore(
                                    new r({ objectStore: new p({ data: e }) })
                                );
                                this._travelModeSelector._interractive = !1;
                                this._travelModeSelector.setValue(d);
                                this._setTravelMode(d).always(c.resolve);
                            } else
                                this._checkStartTimeUIAvailability(), this.set(
                                    'showTravelModesOption', !1
                                ), c.resolve();
                            return c.promise;
                        },
                        _createPrintTask: function() {
                            this._printService = (this.printTaskUrl = this._usingAGOL() ?
                                    this.printTaskUrl :
                                    this.defaults.printTaskUrl) ?
                                new ma(this.printTaskUrl, { async: !1 }) :
                                null;
                            var a = new wa();
                            a.exportOptions = { width: 670, height: 750, dpi: 96 };
                            a.format = 'PNG32';
                            a.layout = 'MAP_ONLY';
                            a.preserveScale = !1;
                            a.showAttribution = !1;
                            var b = new S();
                            b.map = this.map;
                            b.outSpatialReference = this.map.spatialReference;
                            b.template = a;
                            this._printParams = b;
                        },
                        _createGeometryTask: function() {
                            this._geometryService = null;
                            this._usingAGOL() ?
                                (this._geometryService = new sa(this.geometryTaskUrl)) :
                                (this.geometryTaskUrl = (this._geometryService = this.defaults
                                        .geometryTaskUrl ?
                                        new sa(this.defaults.geometryTaskUrl) :
                                        ha.defaults.geometryService) ?
                                    this._geometryService.url :
                                    null);
                        },
                        _showTravelModesOption: function() {
                            var a = this.get('serviceDescription');
                            y.set(
                                this._travelModeContainerNode,
                                'display',
                                this.showTravelModesOption &&
                                a &&
                                a.supportedTravelModes &&
                                a.supportedTravelModes.length &&
                                !this.doNotFetchTravelModesFromOwningSystem ?
                                'block' :
                                'none'
                            );
                        },
                        _showMilesKilometersOption: function() {
                            y.set(
                                this._agolDistanceUnitsNode,
                                'display',
                                this.showMilesKilometersOption ? 'block' : 'none'
                            );
                        },
                        _showClearButton: function() {
                            y.set(
                                this._clearDirectionsButtonNode,
                                'display',
                                this.showClearButton ? 'inline-block' : 'none'
                            );
                        },
                        _showActivateButton: function() {
                            y.set(
                                this._activateButtonNode,
                                'display',
                                this.showActivateButton ? 'inline-block' : 'none'
                            );
                            this.showActivateButton || this.deactivate();
                        },
                        _showBarriersButton: function() {
                            y.set(
                                this._lineBarrierButtonNode,
                                'display',
                                this.showBarriersButton ? 'inline-block' : 'none'
                            );
                            this.showBarriersButton || this.deactivateBarrierTool();
                        },
                        _createRouteParams: function() {
                            var a = {
                                returnDirections: !0,
                                returnRoutes: !1,
                                outputLines: 'esriNAOutputLineTrueShape',
                                preserveFirstStop: !0,
                                preserveLastStop: !0,
                                directionsOutputType: 'complete',
                                stops: new oa(),
                                ignoreInvalidLocations: !0,
                                doNotLocateOnRestrictedElements: !0,
                                outSpatialReference: this.get('map').spatialReference,
                            };
                            this.get('routeParams') || (this.routeParams = {});
                            var b = new ea();
                            this.routeParams = f.mixin(
                                b, {
                                    outputGeometryPrecision: 0,
                                    outputGeometryPrecisionUnits: 'esriMeters',
                                    restrictUTurns: 'esriNFSBAtDeadEndsOnly',
                                },
                                this.get('routeParams'),
                                a
                            );
                        },
                        _markWPsForRemovalAfterUserChangedStopSequence: function(a, b) {
                            for (
                                var c = a - 1, d = []; 0 <= c && this._isStopAWaypoint(this.stops[c]);

                            )
                                d.push(this.stops[c]), c--;
                            for (
                                c = a + 1; c < this.stops.length && this._isStopAWaypoint(this.stops[c]);

                            )
                                d.push(this.stops[c]), c++;
                            if (b > a)
                                for (
                                    c = b + 1; c < this.stops.length &&
                                    this._isStopAWaypoint(this.stops[c]);

                                )
                                    d.push(this.stops[c]), c++;
                            else if (void 0 !== b)
                                for (
                                    c = b - 1; 0 <= c && this._isStopAWaypoint(this.stops[c]);

                                )
                                    d.push(this.stops[c]), c--;
                            else if (this.returnToStart && 0 === a)
                                for (
                                    c = this.stops.length - 1; 0 <= c && this._isStopAWaypoint(this.stops[c]);

                                )
                                    d.push(this.stops[c]), c--;
                            return d;
                        },
                        _removeSomeWaypoints: function(a) {
                            for (var b = new K(), c = [], d = 0; d < a.length; d++) {
                                var f = e.indexOf(this.stops, a[d]); -
                                1 < f && c.push(this._removeStop(f, !0, !0));
                            }
                            F(c).always(b.resolve);
                            return b.promise;
                        },
                        _modifyStopSequence: function(a, b) {
                            var c = this._dnd.getAllNodes(),
                                d = new K(),
                                e, h = [];
                            if (c.length)
                                if (
                                    (this._removeLocateButtonVisibilityEvents(), arguments.length &&
                                        void 0 !== a)
                                )
                                    if (
                                        0 <= a &&
                                        0 <= b &&
                                        a < this.stops.length &&
                                        b < this.stops.length &&
                                        a !== b
                                    ) {
                                        var c = this._markWPsForRemovalAfterUserChangedStopSequence(
                                                a,
                                                b
                                            ),
                                            g = this.stops.splice(a, 1);
                                        this.stops.splice(b, 0, g[0]);
                                        for (e = 0; e < this.stops.length; e++)
                                            h.push(this._updateStop(this.stops[e], e));
                                        h.push(this._removeSomeWaypoints(c));
                                        F(h).always(
                                            f.hitch(this, function() {
                                                this._solveAndZoom().always(d.resolve);
                                            })
                                        );
                                    } else d.reject('Invalid From and To values.');
                            else {
                                for (e = 0; e < this.stops.length;)
                                    this._isStopAWaypoint(this.stops[e]) ?
                                    h.push(this._removeStop(e, !0, !0)) :
                                    e++;
                                F(h).always(
                                    f.hitch(this, function() {
                                        h = [];
                                        this.stops.reverse();
                                        for (
                                            e = 0; e < this.stops.length; e++
                                        ) h.push(this._updateStop(this.stops[e], e));
                                        F(h).always(
                                            f.hitch(this, function() {
                                                this._solveAndZoom().always(d.resolve);
                                            })
                                        );
                                    })
                                );
                            } else d.resolve();
                            return d.promise;
                        },
                        _setMenuNodeValues: function(a) {
                            'traffic' !== a && this._clearDisplayBeforeSolve();
                            a = this.get('optimalRoute');
                            this._findOptimalOrderNode &&
                                w.set(this._findOptimalOrderNode, 'checked', a);
                            this._returnToStartNode &&
                                ((a =
                                        this.returnToStart &&
                                        !this.maxStopsReached &&
                                        this.stops[0] &&
                                        (!this.stops[0].feature ||
                                            this._isStopLocated(this.stops[0]))), w.set(
                                        this._returnToStartNode,
                                        'checked',
                                        a
                                    ), this.set('returnToStart', a), this.maxStopsReached &&
                                    this.returnToStart &&
                                    this._showMessage(B.widgets.directions.error.maximumStops));
                            if (!this.returnToStart &&
                                !this._incrementalSolveStopRange &&
                                this.directions
                            )
                                for (
                                    (this._incrementalSolveStopRange = {
                                        start: this.stops.length - 1,
                                        end: this.stops.length,
                                    }), this._clearRouteGraphics(), (this._incrementalSolveStopRange = null), (a = this
                                        .stops.length); 0 < a-- && this._isStopAWaypoint(this.stops[a]);

                                )
                                    this._removeSomeWaypoints([this.stops[a]]);
                            this._useTrafficNode &&
                                (w.set(this._useTrafficNode, 'checked', this.traffic), this
                                    .traffic ?
                                    (this._updateMapTimeExtent(), this._addTrafficLayer()) :
                                    (this._removeTrafficLayer(), this._restoreMapTimeExtent()));
                            switch (this.get('directionsLengthUnits')) {
                                case I.KILOMETERS:
                                    w.set(this._useKilometersNode, 'checked', !0);
                                    w.set(this._useMilesNode, 'checked', !1);
                                    break;
                                case I.MILES:
                                    w.set(this._useKilometersNode, 'checked', !1), w.set(
                                        this._useMilesNode,
                                        'checked', !0
                                    );
                            }
                            y.set(
                                this._printButton,
                                'display',
                                this.showPrintPage ? 'inline-block' : 'none'
                            );
                            y.set(
                                this._saveMenuButton,
                                'display',
                                this.showSaveButton && this.owningSystemUrl ?
                                'inline-block' :
                                'none'
                            );
                            this._showMilesKilometersOption();
                            this._showClearButton();
                        },
                        _optionsMenu: function() {
                            this._useTrafficItemNode &&
                                y.set(
                                    this._useTrafficItemNode,
                                    'display',
                                    this.get('showTrafficOption') ? 'block' : 'none'
                                );
                            this._returnToStartItemNode &&
                                y.set(
                                    this._returnToStartItemNode,
                                    'display',
                                    this.get('showReturnToStartOption') ? 'block' : 'none'
                                );
                            this._findOptimalOrderItemNode &&
                                y.set(
                                    this._findOptimalOrderItemNode,
                                    'display',
                                    this.get('showOptimalRouteOption') &&
                                    3 < this._getStopCount() ?
                                    'block' :
                                    'none'
                                );
                            this.stops.length >= this.get('minStops') ?
                                x.add(
                                    this._widgetContainer,
                                    this._css.stopsOptionsOptionsEnabledClass
                                ) :
                                (x.remove(
                                        this._widgetContainer,
                                        this._css.stopsOptionsOptionsEnabledClass
                                    ), this._optionsMenuNode &&
                                    'block' === y.get(this._optionsMenuNode, 'display') &&
                                    this._toggleOptionsMenu());
                        },
                        _stopsRemovable: function() {
                            2 < this._dnd.getAllNodes().length - this._getWaypointCount() ?
                                x.add(this._widgetContainer, this._css.stopsRemovableClass) :
                                x.remove(
                                    this._widgetContainer,
                                    this._css.stopsRemovableClass
                                );
                        },
                        _checkMaxStops: function() {
                            this.set(
                                'maxStopsReached',
                                this._getStopCount() +
                                this._getWaypointCount() +
                                (this.returnToStart ? 1 : 0) >=
                                this.maxStops
                            );
                            this._showAddDestination();
                        },
                        _updateThemeWatch: function(a, b, c) {
                            x.remove(this.domNode, b);
                            x.add(this.domNode, c);
                        },
                        _toggleOptionsMenu: function() {
                            'block' === y.get(this._optionsMenuNode, 'display') ?
                                (y.set(this._optionsMenuNode, 'display', 'none'), x.remove(
                                    this._optionsButtonNode,
                                    'esriStopsOptionsOpen'
                                ), (this._optionsButtonNode.innerHTML =
                                    B.widgets.directions.showOptions)) :
                                (y.set(this._optionsMenuNode, 'display', 'block'), x.add(
                                    this._optionsButtonNode,
                                    'esriStopsOptionsOpen'
                                ), (this._optionsButtonNode.innerHTML =
                                    B.widgets.directions.hideOptions));
                        },
                        _toggleSaveMenu: function(a) {
                            'block' === y.get(this._saveMenuNode, 'display') || !1 === a ?
                                (y.set(this._saveMenuNode, 'display', 'none'), x.remove(
                                    this._saveMenuButton,
                                    this._css.stopsPressedButtonClass
                                )) :
                                (this.clearMessages(), y.set(
                                    this._saveMenuNode,
                                    'display',
                                    'block'
                                ), x.add(
                                    this._saveMenuButton,
                                    this._css.stopsPressedButtonClass
                                ), this._enableSharing().then(
                                    f.hitch(this, function() {
                                        this._outputLayer.setValue(
                                            this.routeLayer.title ?
                                            this.routeLayer.title :
                                            this.directions && this.directions.routeName
                                        );
                                        if (this.routeLayer.ownerFolder)
                                            for (
                                                var a = this._folderSelector.store.objectStore.data,
                                                    b = 0; b < a.length; b++
                                            )
                                                if (a[b].folderId === this.routeLayer.ownerFolder) {
                                                    this._folderSelector.getValue() !== a[b].id &&
                                                        ((this._folderSelector._interractive = !1), this._folderSelector.setValue(
                                                            a[b].id
                                                        ));
                                                    break;
                                                }
                                        this._enableButton(
                                            this._saveButton,
                                            this.routeLayer.isItemOwner ||
                                            !this._userCanCreatePortalItem
                                        );
                                        this._outputLayer.set('disabled', !1);
                                    })
                                ));
                        },
                        _showToolbar: function() {
                            x[
                                (this.stops.length < this.maxStops && this.canModifyStops) ||
                                this.canModifyWaypoints ?
                                'add' :
                                'remove'
                            ].call(G, this._widgetContainer, this._css.addStopsClass);
                        },
                        _showAddDestination: function() {
                            this._showToolbar();
                            this._addDestinationNode.style.display = this.stops.length <
                                this.maxStops && this.canModifyStops ?
                                'inline' :
                                'none';
                        },
                        _showMapClickActiveButton: function() {
                            this._showToolbar();
                            this._activateButtonNode.style.display = this.canModifyStops ||
                                this.canModifyWaypoints ?
                                'inline-block' :
                                'none';
                        },
                        _getAbsoluteUrl: function(a) {
                            a = c.toUrl(a);
                            return /^https?\:/i.test(a) ?
                                a :
                                /^\/\//i.test(a) ?
                                ya + a :
                                /^\//i.test(a) ?
                                ya + '//' + window.location.host + a :
                                a;
                        },
                        _getManeuverImage: function(a) {
                            return a ?
                                'esriDMTStop' === a || 'esriDMTDepart' === a ?
                                '' :
                                this._getAbsoluteUrl(
                                    './images/Directions/maneuvers/' + a + '.png'
                                ) :
                                '';
                        },
                        _loadPrintDirections: function(a) {
                            var b = this.get('printTemplate'),
                                c = new K();
                            this.directionsLengthUnits !==
                                this.routeParams.directionsLengthUnits ?
                                this.getDirections().then(c.resolve, c.reject) :
                                c.resolve();
                            c.then(
                                f.hitch(this, function() {
                                    if (!b && this.directions) {
                                        var c = this._getAbsoluteUrl('./css/Directions.css'),
                                            d = this._getAbsoluteUrl('./css/DirectionsPrint.css'),
                                            e = this._getAbsoluteUrl(
                                                './images/Directions/print-logo.png'
                                            ),
                                            f;
                                        f = z.isBodyLtr() ? 'ltr' : 'rtl';
                                        b = '';
                                        b += '\x3c!DOCTYPE HTML\x3e';
                                        b +=
                                            '\x3chtml lang\x3d"en" class\x3d"' +
                                            this.get('theme') +
                                            '" dir\x3d"' +
                                            f +
                                            '"\x3e';
                                        b += '\x3chead\x3e';
                                        b += '\x3cmeta charset\x3d"utf-8"\x3e';
                                        b +=
                                            '\x3cmeta http-equiv\x3d"X-UA-Compatible" content\x3d"IE\x3dEdge,chrome\x3d1"\x3e';
                                        b +=
                                            '\x3ctitle\x3e' +
                                            this.get('directions').routeName +
                                            '\x3c/title\x3e';
                                        b +=
                                            '\x3clink rel\x3d"stylesheet" media\x3d"screen" type\x3d"text/css" href\x3d"' +
                                            c +
                                            '" /\x3e';
                                        b +=
                                            '\x3clink rel\x3d"stylesheet" media\x3d"print" type\x3d"text/css" href\x3d"' +
                                            d +
                                            '" /\x3e';
                                        b += '\x3c/head\x3e';
                                        b +=
                                            '\x3cbody class\x3d"' +
                                            this._css.esriPrintPageClass +
                                            '"\x3e';
                                        b +=
                                            '\x3cdiv class\x3d"' +
                                            this._css.esriPrintBarClass +
                                            '"\x3e';
                                        b +=
                                            '\x3cdiv class\x3d"' +
                                            this._css.esriCloseButtonClass +
                                            '" title\x3d"' +
                                            B.common.close +
                                            '" onclick\x3d"window.close();"\x3e' +
                                            B.common.close +
                                            '\x3c/div\x3e';
                                        b +=
                                            '\x3cdiv id\x3d"printButton" class\x3d"' +
                                            this._css.esriPrintButtonClass +
                                            '" title\x3d"' +
                                            B.widgets.directions.print +
                                            '" onclick\x3d"window.print();"\x3e' +
                                            B.widgets.directions.print +
                                            '\x3c/div\x3e';
                                        b += '\x3c/div\x3e';
                                        b +=
                                            '\x3cdiv class\x3d"' +
                                            this._css.esriPrintMainClass +
                                            '"\x3e';
                                        b +=
                                            '\x3cdiv class\x3d"' +
                                            this._css.esriPrintHeaderClass +
                                            '"\x3e';
                                        b +=
                                            '\x3cimg class\x3d"' +
                                            this._css.esriPrintLogoClass +
                                            '" src\x3d"' +
                                            e +
                                            '" /\x3e';
                                        b +=
                                            '\x3cdiv class\x3d"' +
                                            this._css.esriPrintNameClass +
                                            '"\x3e' +
                                            this.get('directions').routeName +
                                            '\x3c/div\x3e';
                                        b += this._renderDirectionsSummary(this.directions);
                                        a &&
                                            ((b +=
                                                '\x3cdiv id\x3d"divMap" class\x3d"esriPrintMap esriPrintWait"\x3e\x3c/div\x3e'), (b +=
                                                '\x3chr class\x3d"esriNoPrint"/\x3e'));
                                        b += '\x3cdiv id\x3d"print_helper"\x3e\x3c/div\x3e';
                                        b +=
                                            '\x3ctextarea onkeyup\x3d"document.getElementById(\'print_helper\').innerHTML\x3dthis.value;" id\x3d"print_area" class\x3d"' +
                                            this._css.esriPrintNotesClass +
                                            '" placeholder\x3d"' +
                                            B.widgets.directions.printNotes +
                                            '"\x3e\x3c/textarea\x3e';
                                        b +=
                                            '\x3cdiv class\x3d"' +
                                            this._css.clearClass +
                                            '"\x3e\x3c/div\x3e';
                                        b += '\x3c/div\x3e';
                                        b +=
                                            '\x3cdiv class\x3d"' +
                                            this._css.esriPrintDirectionsClass +
                                            '"\x3e';
                                        b += this._renderDirectionsTable(this.directions);
                                        b += '\x3c/div\x3e';
                                        b +=
                                            '\x3cdiv class\x3d"' +
                                            this._css.esriPrintFooterClass +
                                            '"\x3e';
                                        b +=
                                            '\x3cp\x3e' +
                                            B.widgets.directions.printDisclaimer +
                                            '\x3c/p\x3e';
                                        b += '\x3c/div\x3e';
                                        b += '\x3c/div\x3e';
                                        b += '\x3c/body\x3e';
                                        b += '\x3c/html\x3e';
                                    }
                                    this._printWindow.document.open('text/html', 'replace');
                                    this._printWindow.document.write(b);
                                    this._printWindow.document.close();
                                })
                            );
                        },
                        resize: function() {
                            this._truncateSearchSourceIfNeeded();
                        },
                        _truncateSearchSourceIfNeeded: function() {
                            var a = this._searchSourceSelector,
                                b = a.containerNode.firstChild;
                            a.domNode.clientWidth > this.domNode.clientWidth ?
                                y.set(
                                    b,
                                    'width',
                                    this._searchSourceContainerNode.clientWidth - 20 + 'px'
                                ) :
                                y.set(b, 'width', '');
                        },
                        _printDirections: function() {
                            if (this.directions) {
                                var a = screen.width / 2,
                                    b = screen.height / 1.5,
                                    a =
                                    'toolbar\x3dno, location\x3dno, directories\x3dno, status\x3dyes, menubar\x3dno, scrollbars\x3dyes, resizable\x3dyes, width\x3d' +
                                    a +
                                    ', height\x3d' +
                                    b +
                                    ', top\x3d' +
                                    (screen.height / 2 - b / 2) +
                                    ', left\x3d' +
                                    (screen.width / 2 - a / 2);
                                this.get('printPage') ?
                                    ((window.directions = this.get(
                                        'directions'
                                    )), window.open(
                                        this.get('printPage'),
                                        'directions_widget_print',
                                        a, !0
                                    )) :
                                    ((this._printWindow = window.open(
                                            '',
                                            'directions_widget_print',
                                            a, !0
                                        )), this._loadPrintDirections(!!this._printService), this
                                        ._printService &&
                                        c(
                                            ['dojo/_base/window'],
                                            f.hitch(this, function(a) {
                                                this.zoomToFullRoute().then(
                                                    f.hitch(this, function() {
                                                        this._printService.execute(
                                                            this._printParams,
                                                            f.hitch(this, function(b) {
                                                                a.withDoc(
                                                                    this._printWindow.document,
                                                                    function() {
                                                                        var a = C.byId('divMap');
                                                                        a &&
                                                                            (x.remove(a, 'esriPrintWait'), x.add(
                                                                                a,
                                                                                'esriPageBreak'
                                                                            ), G.create(
                                                                                'img', {
                                                                                    src: b.url,
                                                                                    class: 'esriPrintMapImg',
                                                                                },
                                                                                a
                                                                            ));
                                                                    }
                                                                );
                                                            }),
                                                            f.hitch(this, function(b) {
                                                                a.withDoc(
                                                                    this._printWindow.document,
                                                                    function() {
                                                                        var a = C.byId('divMap');
                                                                        a && x.remove(a, 'esriPrintWait');
                                                                    }
                                                                );
                                                            })
                                                        );
                                                    })
                                                );
                                            })
                                        ));
                            }
                        },
                        _enableButton: function(a, b) {
                            b = b || void 0 === b;
                            x[b ? 'remove' : 'add'].apply(this, [
                                a,
                                'esriDisabledDirectionsButton',
                            ]);
                            a._enabled = b;
                        },
                        _clearStopsStatusAttr: function() {
                            for (var a = 0; a < this.stops.length; a++)
                                this.stops[a].feature &&
                                this.stops[a].feature.attributes &&
                                (this.stops[a].feature.attributes.Status = void 0);
                        },
                        _enableSharing: function() {
                            var a = new K();
                            !this._naRouteSharing && this.owningSystemUrl ?
                                c(
                                    ['../tasks/NARouteSharing'],
                                    f.hitch(this, function(b) {
                                        this._naRouteSharing = new b(
                                            this.owningSystemUrl,
                                            this.map.spatialReference
                                        );
                                        this._folderSelector ||
                                            ((this._folderSelector = new k({
                                                    className: 'esriFoldersDDL',
                                                    style: 'width: 100%;',
                                                    sortByLabel: !1,
                                                    disabled: !0,
                                                    _interractive: !0,
                                                    onChange: f.hitch(this, function() {
                                                        this._folderSelector._interractive ?
                                                            this._enableButton(
                                                                this._saveButton, !this.routeLayer.itemId
                                                            ) :
                                                            (this._folderSelector._interractive = !0);
                                                    }),
                                                },
                                                this._folderSelectorContainer
                                            )), this._folderSelector.startup(), (this._outputLayer = new n({
                                                    style: 'width: 100%',
                                                    required: !0,
                                                    trim: !0,
                                                    regExp: '[^\x26|\x3c|\x3e|%|#|?|\\|"|/|+]+',
                                                    maxLength: 98,
                                                    disabled: !0,
                                                    onKeyPress: f.hitch(this, function() {
                                                        this._enableButton(
                                                            this._saveButton, !this.routeLayer.itemId ||
                                                            !this._userCanCreatePortalItem
                                                        );
                                                    }),
                                                    onFocus: f.hitch(this, function() {
                                                        this.map && this.map.disableKeyboardNavigation();
                                                    }),
                                                    onBlur: f.hitch(this, function() {
                                                        this.map && this.map.enableKeyboardNavigation();
                                                    }),
                                                },
                                                this._outputLayerContainer
                                            )), this._outputLayer.startup());
                                        this._naRouteSharing.getFolders().then(
                                            f.hitch(this, function(b) {
                                                for (
                                                    var c = [], d = 0; d < b.length; d++
                                                ) c.push({ id: b[d].url, folderId: b[d].id, label: b[d].title });
                                                this._folderSelector.setStore(
                                                    new r({ objectStore: new p({ data: c }) })
                                                );
                                                this._naRouteSharing.canCreateItem().then(
                                                    f.hitch(this, function(a) {
                                                        this._folderSelector.set('disabled', !a);
                                                        this._userCanCreatePortalItem = a;
                                                    })
                                                );
                                                this._enableButton(this._saveButton);
                                                a.resolve();
                                            }),
                                            f.hitch(this, function(b) {
                                                this._naRouteSharing = null;
                                                this._toggleSaveMenu(!1);
                                                a.reject(b);
                                            })
                                        );
                                    })
                                ) :
                                this.owningSystemUrl ?
                                a.resolve() :
                                (a.reject(
                                    Error(
                                        'Owning system is not defined, or the Directions widget is not done initializing.'
                                    )
                                ), (this._naRouteSharing = null));
                            return a.promise;
                        },
                        _storeRouteUI: function() {
                            var a = new K();
                            this._outputLayer && this._outputLayer.isValid() ?
                                this._storeRoute(
                                    this._outputLayer.getValue(),
                                    this._folderSelector.getValue(),
                                    this._folderSelector.store.objectStore.get(
                                        this._folderSelector.getValue()
                                    ).folderId
                                ).then(a.resolve, a.reject) :
                                (this._outputLayer && this._outputLayer.focus(), a.reject(
                                    Error('Need result layer name specified.')
                                ));
                            return a.promise;
                        },
                        _storeRoute: function(a, b, c) {
                            var d = new K(),
                                h = this.directions;
                            if (this._savingRoute || !this._naRouteSharing)
                                return this._saveButton.blur(), d.reject(
                                    Error('Not ready to store route.')
                                ), d.promise;
                            this.clearMessages();
                            d.then(
                                null,
                                f.hitch(this, function(a) {
                                    this._showMessage(B.widgets.directions.error.cantSaveRoute);
                                })
                            );
                            d.promise.always(
                                f.hitch(this, function() {
                                    this._enableButton(this._saveButton);
                                    y.set(
                                        this._saveAsButton,
                                        'display',
                                        this.routeLayer.itemId && this._userCanCreatePortalItem ?
                                        'inline-block' :
                                        'none'
                                    );
                                    this._showLoadingSpinner();
                                    this._savingRoute = !1;
                                })
                            );
                            if (
                                h &&
                                h.features &&
                                h.features.length &&
                                this.stops &&
                                this.stops.length
                            )
                                if (this.owningSystemUrl)
                                    if (this.routeParams && this.routeParams.travelMode)
                                        if (a && b) {
                                            var g, k;
                                            g = f.hitch(this, function(a) {
                                                return this._naRouteSharing.getAttributeUnits(
                                                    a,
                                                    this.serviceDescription
                                                );
                                            });
                                            k = this.routeParams.travelMode.timeAttributeName;
                                            var l = this.routeParams.travelMode.distanceAttributeName,
                                                m = g(k),
                                                n = g(l),
                                                q =
                                                this.routeParams.directionsLengthUnits ||
                                                this.serviceDescription.directionsLengthUnits,
                                                p = this._naRouteSharing.toMeters,
                                                t = this._naRouteSharing.toMinutes,
                                                r = function(a, b, c) {
                                                    var d, f;
                                                    for (f in a)
                                                        a.hasOwnProperty(f) &&
                                                        0 === f.indexOf(b) &&
                                                        -1 === e.indexOf(c, f.substr(b.length)) &&
                                                        ((d = d || {}), (d[f.substr(b.length)] = a[f]));
                                                    return d;
                                                },
                                                u = [],
                                                v = [],
                                                A = [],
                                                w;
                                            if (k && m && l && n) {
                                                var C = [],
                                                    x = this.routeParams.accumulateAttributes ||
                                                    this.serviceDescription
                                                    .accumulateAttributeNames || [],
                                                    ha = this.serviceDescription.networkDataset
                                                    .networkAttributes;
                                                for (g = 0; g < ha.length; g++)
                                                    'esriNAUTCost' === ha[g].usageType &&
                                                    -1 === e.indexOf(x, ha[g].name) &&
                                                    ha[g].name !== k &&
                                                    ha[g].name !== l &&
                                                    C.push(ha[g].name);
                                                var x = this.get('stops'),
                                                    z = {
                                                        xmin: Infinity,
                                                        ymin: Infinity,
                                                        xmax: -Infinity,
                                                        ymax: -Infinity,
                                                    };
                                                for (g = 0; g < x.length; g++)
                                                    if (x[g].feature && x[g].feature.toJson) {
                                                        ha = x[g].feature.toJson();
                                                        w = ha.attributes;
                                                        var E = ha.geometry,
                                                            D = this._naRouteSharing.getUTCOffset(
                                                                w.ArriveTime,
                                                                w.ArriveTimeUTC
                                                            ),
                                                            I = this._naRouteSharing.getUTCOffset(
                                                                w.DepartTime,
                                                                w.DepartTimeUTC
                                                            );
                                                        f.mixin(z, {
                                                            xmin: z.xmin > E.x ? E.x : z.xmin,
                                                            ymin: z.ymin > E.y ? E.y : z.ymin,
                                                            xmax: z.xmax < E.x ? E.x : z.xmax,
                                                            ymax: z.ymax < E.y ? E.y : z.ymax,
                                                        });
                                                        ha.attributes = {
                                                            __OBJECTID: g + 1,
                                                            CurbApproach: w.CurbApproach,
                                                            ArrivalCurbApproach: w.ArriveCurbApproach,
                                                            DepartureCurbApproach: w.DepartCurbApproach,
                                                            Name: w.Name === this._waypointName ?
                                                                B.widgets.directions.waypoint :
                                                                w.Name === this._userDefinedStopName ?
                                                                x[g].name :
                                                                w.Name,
                                                            RouteName: h.routeName,
                                                            Sequence: w.Sequence,
                                                            Status: w.Status,
                                                            LocationType: w.isWaypoint ? 1 : 0,
                                                            TimeWindowStart: w.TimeWindowStart,
                                                            TimeWindowEnd: w.TimeWindowEnd,
                                                            TimeWindowStartUTCOffset: D,
                                                            TimeWindowEndUTCOffset: D,
                                                            ServiceMinutes: t(w['Attr_' + k], m),
                                                            ServiceMeters: p(w['Attr_' + l], n),
                                                            ServiceCosts: Q.stringify(r(w, 'Attr_', C)),
                                                            CumulativeMinutes: t(w['Cumul_' + k], m),
                                                            CumulativeMeters: p(w['Cumul_' + l], n),
                                                            CumulativeCosts: Q.stringify(r(w, 'Cumul_', C)),
                                                            LateMinutes: t(w['Violation_' + k], m),
                                                            WaitMinutes: t(w['Wait_' + k], m),
                                                            ArrivalTime: this._naRouteSharing.toUTCTime(
                                                                w.ArriveTime,
                                                                D
                                                            ),
                                                            DepartureTime: this._naRouteSharing.toUTCTime(
                                                                w.DepartTime,
                                                                I
                                                            ),
                                                            ArrivalUTCOffset: D,
                                                            DepartureUTCOffset: I,
                                                        };
                                                        u.push(ha);
                                                    }
                                                l = 0;
                                                n = function(a) {
                                                    try {
                                                        a.strings = Q.parse(a.strings);
                                                    } catch (ba) {
                                                        V.strings = void 0;
                                                    }
                                                    if (a.strings && a.strings.length)
                                                        for (var b = 0; b < a.strings.length; b++)
                                                            if ('esriDSTGeneral' === a.strings[b].stringType)
                                                                return a.strings[b].string;
                                                };
                                                x = function(a, b) {
                                                    for (var c = [], d = 0; d < (a || []).length; d++)
                                                        (a[d].stringType !== b && b) ||
                                                        c.push(a[d].string);
                                                    return c.length ? c.toString() : void 0;
                                                };
                                                ha = function(a) {
                                                    switch (a) {
                                                        case 'esriDMTStop':
                                                            return 'esriDPTManeuverArrive';
                                                        case 'esriDMTDepart':
                                                            return 'esriDPTManeuverDepart';
                                                        case 'esriDMTDoorPassage':
                                                            return 'esriDPTManeuverDoor';
                                                        case 'esriDMTBearLeft':
                                                            return 'esriDPTManeuverBearLeft';
                                                        case 'esriDMTBearRight':
                                                            return 'esriDPTManeuverBearRight';
                                                        case 'esriDMTElevator':
                                                            return 'esriDPTManeuverElevator';
                                                        case 'esriDMTEscalator':
                                                            return 'esriDPTManeuverEscalator';
                                                        case 'esriDMTFerry':
                                                            return 'esriDPTManeuverFerryOn';
                                                        case 'esriDMTEndOfFerry':
                                                            return 'esriDPTManeuverFerryOff';
                                                        case 'esriDMTForkCenter':
                                                            return 'esriDPTManeuverForkCenter';
                                                        case 'esriDMTForkLeft':
                                                            return 'esriDPTManeuverForkLeft';
                                                        case 'esriDMTForkRight':
                                                            return 'esriDPTManeuverForkRight';
                                                        case 'esriDMTPedestrianRamp':
                                                            return 'esriDPTManeuverPedestrianRamp';
                                                        case 'esriDMTRampLeft':
                                                            return 'esriDPTManeuverRampLeft';
                                                        case 'esriDMTRampRight':
                                                            return 'esriDPTManeuverRampRight';
                                                        case 'esriDMTRoundabout':
                                                            return 'esriDPTManeuverRoundabout';
                                                        case 'esriDMTTurnLeft':
                                                            return 'esriDPTManeuverTurnLeft';
                                                        case 'esriDMTLeftLeft':
                                                            return 'esriDPTManeuverTurnLeftLeft';
                                                        case 'esriDMTLeftRight':
                                                            return 'esriDPTManeuverTurnLeftRight';
                                                        case 'esriDMTTurnRight':
                                                            return 'esriDPTManeuverTurnRight';
                                                        case 'esriDMTRightLeft':
                                                            return 'esriDPTManeuverTurnRightLeft';
                                                        case 'esriDMTRightRight':
                                                            return 'esriDPTManeuverTurnRightRight';
                                                        case 'esriDMTSharpLeft':
                                                            return 'esriDPTManeuverSharpLeft';
                                                        case 'esriDMTSharpRight':
                                                            return 'esriDPTManeuverSharpRight';
                                                        case 'esriDMTStraight':
                                                            return 'esriDPTManeuverStraight';
                                                        case 'esriDMTStrairs':
                                                            return 'esriDPTManeuverStairs';
                                                        case 'esriDMTUTurn':
                                                            return 'esriDPTManeuverUTurn';
                                                    }
                                                    return 'esriDPTUnknown';
                                                };
                                                for (g = 0; g < h.featuresWithWaypoints.length; g++) {
                                                    var R = h.featuresWithWaypoints[g],
                                                        E = R.toJson(),
                                                        D = E.attributes,
                                                        I = (E.geometry &&
                                                            E.geometry.paths &&
                                                            E.geometry.paths[0]) || [],
                                                        Da =
                                                        E.geometry.hasM ||
                                                        !1 ||
                                                        (I[0] && 3 === I[0].length);
                                                    w = this._naRouteSharing.getUTCOffset(
                                                        D.ETA,
                                                        D.arriveTimeUTC
                                                    );
                                                    E.attributes = {
                                                        __OBJECTID: g + 1,
                                                        Sequence: ++l,
                                                        StopID: (function() {
                                                            var a = void 0,
                                                                b =
                                                                R._associatedStopWithReturnToStart &&
                                                                R._associatedStopWithReturnToStart.attributes
                                                                .Sequence;
                                                            if (b)
                                                                for (var c = 0; c < u.length; c++)
                                                                    if (u[c].attributes.Sequence === b) {
                                                                        a = u[c].attributes.__OBJECTID;
                                                                        break;
                                                                    }
                                                            return a;
                                                        })(),
                                                        DirectionPointType: ha(D.maneuverType),
                                                        DisplayText: R._associatedStopWithReturnToStart &&
                                                            R._associatedStopWithReturnToStart.attributes
                                                            .isWaypoint ?
                                                            D.text.replace(
                                                                this._waypointName,
                                                                B.widgets.directions.waypoint
                                                            ) :
                                                            D.text,
                                                        ArrivalTime: this._naRouteSharing.toUTCTime(
                                                            D.ETA,
                                                            w
                                                        ),
                                                        ArrivalUTCOffset: w,
                                                        Azimuth: void 0,
                                                        Name: x(
                                                            h.stringsWithWaypoints[g],
                                                            'esriDSTStreetName'
                                                        ),
                                                        AlternateName: x(
                                                            h.stringsWithWaypoints[g],
                                                            'esriDSTAltName'
                                                        ),
                                                        ExitName: x(
                                                            h.stringsWithWaypoints[g],
                                                            'esriDSTExit'
                                                        ),
                                                        IntersectingName: x(
                                                            h.stringsWithWaypoints[g],
                                                            'esriDSTCrossStreet'
                                                        ),
                                                        BranchName: x(
                                                            h.stringsWithWaypoints[g],
                                                            'esriDSTBranch'
                                                        ),
                                                        TowardName: x(
                                                            h.stringsWithWaypoints[g],
                                                            'esriDSTToward'
                                                        ),
                                                        ShortVoiceInstruction: void 0,
                                                        VoiceInstruction: void 0,
                                                        Level: void 0,
                                                    };
                                                    delete E.symbol;
                                                    delete E.infoTemplate;
                                                    I.length ?
                                                        ((E.geometry = {
                                                            x: I[0][0],
                                                            y: I[0][1],
                                                            spatialReference: E.geometry.spatialReference,
                                                        }), Da && f.mixin(E.geometry, { m: I[0][2] })) :
                                                        delete E.geometry;
                                                    v.push(E);
                                                    E = R.toJson();
                                                    D = E.attributes;
                                                    I = (E.geometry &&
                                                        E.geometry.paths &&
                                                        E.geometry.paths[0]) || [];
                                                    w = !0;
                                                    for (k = 0; k < I.length - 1; k++)
                                                        if (
                                                            I[k][0] !== I[k + 1][0] ||
                                                            I[k][1] !== I[k + 1][1]
                                                        ) {
                                                            w = !1;
                                                            break;
                                                        }
                                                    w ||
                                                        ((E.attributes = {
                                                            DirectionPointID: g + 1,
                                                            DirectionLineType: 'esriDLTSegment',
                                                            Meters: p(D.length, q),
                                                            Minutes: t(D.time, m),
                                                            FromLevel: void 0,
                                                            ToLevel: void 0,
                                                        }), (E.geometry.hasM = Da), delete E.symbol, delete E.infoTemplate, A.push(
                                                            E
                                                        ));
                                                    var V = h.eventsWithWaypoints[
                                                        E.attributes.Sequence
                                                    ] || [];
                                                    for (k = 0; k < V.length; k++)
                                                        (E = V[k].toJson()), (D =
                                                            E.attributes), (w = this._naRouteSharing.getUTCOffset(
                                                            D.ETA,
                                                            D.arriveTimeUTC
                                                        )), (E.attributes = {
                                                            Sequence: ++l,
                                                            DirectionPointType: 'esriDPTEvent',
                                                            DisplayText: n(D),
                                                            ArrivalTime: this._naRouteSharing.toUTCTime(
                                                                D.ETA,
                                                                w
                                                            ),
                                                            ArrivalUTCOffset: w,
                                                            Name: D.strings,
                                                        }), v.push(E);
                                                }
                                                k = (this.routeParams.barriers &&
                                                    this.routeParams.barriers.features) || [];
                                                var F = [];
                                                for (g = 0; g < k.length; g++)
                                                    (l = k[g].toJson()), (n =
                                                        l.attributes), (l.attributes = {
                                                        BarrierType: n.BarrierType || 0,
                                                        FullEdge: n.FullEdge || !1,
                                                        AddedCost: n[
                                                            'Attr_' + this._getImpedanceAttribute().name
                                                        ] || 0,
                                                        Costs: Q.stringify(r(n, 'Attr_', C)),
                                                        CurbApproach: n.CurbApproach || 0,
                                                        Name: n.Name,
                                                    }), F.push(l);
                                                k = (this.routeParams.polylineBarriers &&
                                                    this.routeParams.polylineBarriers.features) || [];
                                                var ja = [];
                                                for (g = 0; g < k.length; g++)
                                                    (l = k[g].toJson()), (n =
                                                        l.attributes), (l.attributes = {
                                                        BarrierType: n.BarrierType || 0,
                                                        ScaleFactor: n[
                                                            'Attr_' + this._getImpedanceAttribute().name
                                                        ] || 1,
                                                        Costs: Q.stringify(r(n, 'Attr_', C)),
                                                        Name: n.Name,
                                                    }), ja.push(l);
                                                k = (this.routeParams.polygonBarriers &&
                                                    this.routeParams.polygonBarriers.features) || [];
                                                var O = [];
                                                for (g = 0; g < k.length; g++)
                                                    (l = k[g].toJson()), (n =
                                                        l.attributes), (l.attributes = {
                                                        BarrierType: n.BarrierType || 0,
                                                        ScaleFactor: n[
                                                            'Attr_' + this._getImpedanceAttribute().name
                                                        ] || 1,
                                                        Costs: Q.stringify(r(n, 'Attr_', C)),
                                                        Name: n.Name,
                                                    }), O.push(l);
                                                var H = {
                                                    geometry: h.mergedGeometry,
                                                    attributes: {
                                                        RouteName: h.routeName,
                                                        TotalMinutes: t(h.totalTime, m),
                                                        TotalMeters: p(h.totalLength, q),
                                                        TotalLateMinutes: (function() {
                                                            for (var a = 0, b = 0; b < u.length; b++)
                                                                a += u[b].attributes.LateMinutes || 0;
                                                            return a;
                                                        })(),
                                                        TotalWaitMinutes: (function() {
                                                            for (var a = 0, b = 0; b < u.length; b++)
                                                                a += u[b].attributes.WaitMinutes || 0;
                                                            return a;
                                                        })(),
                                                        TotalCosts: u[u.length - 1].attributes
                                                            .CumulativeCosts,
                                                        StartTime: 'none' !== this.startTime ?
                                                            u[0].attributes.ArrivalTime :
                                                            null,
                                                        EndTime: 'none' !== this.startTime ?
                                                            u[u.length - 1].attributes.DepartureTime :
                                                            null,
                                                        StartUTCOffset: u[0].attributes.ArrivalUTCOffset,
                                                        EndUTCOffset: u[u.length - 1].attributes
                                                            .DepartureUTCOffset,
                                                        Messages: Q.stringify(this._solverMessages),
                                                        AnalysisSettings: Q.stringify({
                                                            travelMode: f.hitch(this, function() {
                                                                var a = f.clone(this.routeParams.travelMode);
                                                                '\x26lt;' === a.name.substr(0, 4) &&
                                                                    '\x26gt;' ===
                                                                    a.name.substr(a.name.length - 4, 4) &&
                                                                    (a.name = a.name.substr(
                                                                        4,
                                                                        a.name.length - 8
                                                                    ));
                                                                return a;
                                                            })(),
                                                            directionsLanguage: this.routeParams
                                                                .directionsLanguage ||
                                                                this.serviceDescription.directionsLanguage,
                                                            startTimeIsUTC: this.routeParams.startTimeIsUTC,
                                                            timeWindowsAreUTC: this.routeParams
                                                                .timeWindowsAreUTC,
                                                            findBestSequence: this.routeParams
                                                                .findBestSequence,
                                                            preserveFirstStop: this.routeParams
                                                                .preserveFirstStop,
                                                            preserveLastStop: this.routeParams
                                                                .preserveLastStop,
                                                            accumulateAttributeNames: this.routeParams
                                                                .accumulateAttributes ||
                                                                this.serviceDescription
                                                                .accumulateAttributeNames,
                                                        }),
                                                    },
                                                };
                                                this._enableButton(this._saveButton, !1);
                                                this._savingRoute = !0;
                                                this._showLoadingSpinner(!0);
                                                f
                                                    .hitch(this, function() {
                                                        var a = new K();
                                                        this._printService ?
                                                            this.zoomToFullRoute().then(
                                                                f.hitch(this, function() {
                                                                    var b = this._printParams.template,
                                                                        c = b.exportOptions;
                                                                    b.exportOptions = {
                                                                        width: 200,
                                                                        height: 133,
                                                                        dpi: 96,
                                                                    };
                                                                    this._printService.execute(
                                                                        this._printParams,
                                                                        function(d) {
                                                                            b.exportOptions = c;
                                                                            a.resolve(d.url);
                                                                        },
                                                                        function(d) {
                                                                            b.exportOptions = c;
                                                                            a.resolve();
                                                                        }
                                                                    );
                                                                })
                                                            ) :
                                                            a.resolve();
                                                        return a.promise;
                                                    })()
                                                    .then(
                                                        f.hitch(this, function(e) {
                                                            var g = {
                                                                folder: b,
                                                                name: a,
                                                                stops: u,
                                                                directionPoints: v,
                                                                directionLines: A,
                                                                barriers: F,
                                                                polylineBarriers: ja,
                                                                polygonBarriers: O,
                                                                extent: f.mixin(f.clone(h.extent), {
                                                                    xmin: z.xmin > h.extent.xmin ?
                                                                        h.extent.xmin :
                                                                        z.xmin,
                                                                    ymin: z.ymin > h.extent.ymin ?
                                                                        h.extent.ymin :
                                                                        z.ymin,
                                                                    xmax: z.xmax < h.extent.xmax ?
                                                                        h.extent.xmax :
                                                                        z.xmax,
                                                                    ymax: z.ymax < h.extent.ymax ?
                                                                        h.extent.ymax :
                                                                        z.ymax,
                                                                }),
                                                                routeInfo: H,
                                                                thumbnail: e,
                                                            };
                                                            this._userCanCreatePortalItem ?
                                                                this._naRouteSharing
                                                                .store(g, this.routeLayer.itemId, '1.0.0')
                                                                .then(
                                                                    f.hitch(this, function(a) {
                                                                        if (a.success) {
                                                                            var b = this._naRouteSharing.portal,
                                                                                b =
                                                                                '//' +
                                                                                (b.isPortal ?
                                                                                    b.portalHostname :
                                                                                    b.urlKey +
                                                                                    '.' +
                                                                                    b.customBaseUrl);
                                                                            this._toggleSaveMenu();
                                                                            this._showMessage(
                                                                                B.widgets.directions.routeIsSaved +
                                                                                "\x3cbr/\x3e\x3ca class\x3d'esriLinkButton' target\x3d'_blank' href\x3d'" +
                                                                                b +
                                                                                '/home/item.html?id\x3d' +
                                                                                a.id +
                                                                                "'\x3e" +
                                                                                B.widgets.directions.share +
                                                                                '\x3c/a\x3e', !0
                                                                            );
                                                                            if (this.routeLayer.itemId)
                                                                                this.onRouteItemUpdated(a.id);
                                                                            else this.onRouteItemCreated(a.id);
                                                                            f.mixin(this.routeLayer, {
                                                                                itemId: a.id,
                                                                                title: g.name,
                                                                                isItemOwner: !0,
                                                                                ownerFolder: c,
                                                                            });
                                                                            d.resolve(a);
                                                                        } else d.reject(a);
                                                                    }),
                                                                    d.reject
                                                                ) :
                                                                this._naRouteSharing
                                                                .createFeatureCollection(g, '1.0.0')
                                                                .then(
                                                                    f.hitch(this, function(a) {
                                                                        d.resolve(a);
                                                                        this._toggleSaveMenu();
                                                                        this.onFeatureCollectionCreated(a);
                                                                    }),
                                                                    d.reject
                                                                );
                                                        })
                                                    );
                                            } else
                                                d.reject(Error('Cannot deduce the impedance used.'));
                                        } else
                                            d.reject(
                                                Error(
                                                    'Missing required parameter: layerName, folder must be specified.'
                                                )
                                            );
                            else
                                d.reject(
                                    Error('Shared route must be built using a Travel Mode.')
                                );
                            else
                                d.reject(
                                    Error(
                                        'Cannot store route: owning system to store routes is not defined. Please specify Portal or ArcGIS Online Url in constructor.'
                                    )
                                );
                            else d.reject(Error('No route to share. Build a route first.'));
                            return d.promise;
                        },
                        _loadRoute: function(a) {
                            var b = new K();
                            b.promise.always(
                                f.hitch(this, function() {
                                    this._showLoadingSpinner(!1);
                                    y.set(
                                        this._saveAsButton,
                                        'display',
                                        this.routeLayer.itemId && this._userCanCreatePortalItem ?
                                        'inline-block' :
                                        'none'
                                    );
                                    this._enableButton(
                                        this._saveButton,
                                        this.routeLayer.isItemOwner
                                    );
                                })
                            );
                            this._reset().then(
                                f.hitch(this, function() {
                                    this._showLoadingSpinner(!0);
                                    this._enableSharing().then(
                                        f.hitch(this, function() {
                                            var c = f.clone(this.serviceDescription),
                                                d = f.hitch(this, function(b) {
                                                    f.mixin(this.routeLayer, {
                                                        itemId: a,
                                                        title: b.title,
                                                        isItemOwner: b.isItemOwner,
                                                        ownerFolder: b.ownerFolder,
                                                    });
                                                }),
                                                e,
                                                h,
                                                g,
                                                k;
                                            c.directionsLengthUnits = this.directionsLengthUnits;
                                            this._naRouteSharing.load(a, c).then(
                                                f.hitch(this, function(a) {
                                                    if (a.routeParameters) {
                                                        f.mixin(this.routeParams, a.routeParameters);
                                                        this.routeParams.accumulateAttributes =
                                                            a.routeParameters.accumulateAttributeNames;
                                                        this.set(
                                                            'optimalRoute',
                                                            this.routeParams.findBestSequence
                                                        );
                                                        this.startTime = this.routeParams.startTime ?
                                                            this.routeParams.startTime :
                                                            'none';
                                                        this._setStartTime(void 0, void 0, this.startTime);
                                                        var l = a.routeParameters.travelMode,
                                                            m = l ?
                                                            this._getCostAttribute(
                                                                l.impedanceAttributeName
                                                            ) :
                                                            void 0,
                                                            m = m ?
                                                            this._isTimeUnits(m.units) ?
                                                            'Time' :
                                                            'Distance' :
                                                            '';
                                                        k = c.supportedTravelModes &&
                                                            c.supportedTravelModes.length ?
                                                            this._travelModeSelector.store.objectStore.data.slice() :
                                                            [];
                                                        if (
                                                            (canUseRouteLayerTM = 1 !== a.successCode && m)
                                                        ) {
                                                            var n = 'AUTOMOBILE' === l.type ?
                                                                'Driving' :
                                                                'TRUCK' === l.type ?
                                                                'Trucking' :
                                                                'WALK' === l.type ? 'Walking' : 'Other';
                                                            l.name = '\x26lt;' + l.name + '\x26gt;';
                                                            this.serviceDescription.supportedTravelModes = (c.supportedTravelModes || [])
                                                                .concat(l);
                                                            k.push({
                                                                id: l.name,
                                                                label: '\x3cdiv class\x3d"esriTravelModesDirectionsIcon esriTravelModesType' +
                                                                    n +
                                                                    m +
                                                                    '"\x3e\x26nbsp;\x3c/div\x3e\x3cdiv class\x3d"esriTravelModesTypeName"\x3e' +
                                                                    l.name +
                                                                    '\x3c/div\x3e',
                                                            });
                                                            this._travelModeSelector.setStore(
                                                                new r({ objectStore: new p({ data: k }) })
                                                            );
                                                            this._travelModeSelector._interractive = !1;
                                                            this._travelModeSelector.setValue(l.name);
                                                        } else {
                                                            m = !1;
                                                            if (l && l.name)
                                                                for (
                                                                    (k = c.supportedTravelModes || []), (e = 0); e < k.length; e++
                                                                )
                                                                    if (k[e].name === l.name) {
                                                                        m = !0;
                                                                        this._travelModeSelector._interractive = !1;
                                                                        this._travelModeSelector.setValue(l.name);
                                                                        this.routeParams.travelMode = k[e]
                                                                            .impedanceAttributeName ?
                                                                            k[e] :
                                                                            k[e].itemId;
                                                                        a.loadMessages.push({
                                                                            message: B.widgets.directions.error
                                                                                .tmFromPortalSameName +
                                                                                ' ' +
                                                                                l.name,
                                                                            messageType: 'Warning',
                                                                        });
                                                                        break;
                                                                    }
                                                            if (!m)
                                                                if ((l = c.defaultTravelMode) && k)
                                                                    for (e = 0; e < k.length; e++) {
                                                                        if (k[e].id === l) {
                                                                            this.routeParams.travelMode = k[e]
                                                                                .impedanceAttributeName ?
                                                                                k[e] :
                                                                                k[e].itemId;
                                                                            a.loadMessages.push({
                                                                                message: B.widgets.directions.error
                                                                                    .tmFromPortalDefault +
                                                                                    ' ' +
                                                                                    (k[e].name ? k[e].name : k[e].itemId),
                                                                                messageType: 'Warning',
                                                                            });
                                                                            break;
                                                                        }
                                                                    }
                                                                else this.routeParams.travelMode = null;
                                                        }
                                                        this._checkStartTimeUIAvailability();
                                                    }
                                                    if (a.solveResult && a.solveResult.routeResults) {
                                                        var q,
                                                            t = Infinity,
                                                            u,
                                                            v = -Infinity,
                                                            l = a.solveResult.routeResults[0].stops,
                                                            w =
                                                            a.solveResult.routeResults[0].directions
                                                            .features,
                                                            m = {};
                                                        for (e = 0; e < l.length; e++) {
                                                            var A = l[e].attributes;
                                                            if (A.isWaypoint)
                                                                for (h = 0; h < w.length; h++)
                                                                    (n = w[h].attributes), n._stopSequence ===
                                                                    A.Sequence &&
                                                                    (n.text = n.text.replace(
                                                                        A.Name,
                                                                        this._waypointName
                                                                    ));
                                                            g = A.Name + '_' + this._stopSequence++;
                                                            m[g] = A.isWaypoint ? this._waypointName : A.Name;
                                                            A.Name = g;
                                                            A.Sequence < t &&
                                                                (null !== A.ArriveCurbApproach ||
                                                                    null !== A.DepartCurbApproach) &&
                                                                ((q = A.Name), (t = A.Sequence));
                                                            A.Sequence > v &&
                                                                (null !== A.ArriveCurbApproach ||
                                                                    null !== A.DepartCurbApproach) &&
                                                                ((u = A.Name), (v = A.Sequence));
                                                        }
                                                        g = q + ' - ' + u;
                                                        a.solveResult.routeResults[0].routeName = g;
                                                        a.solveResult.routeResults[0].directions.routeName = g;
                                                        for (e = 0; e < w.length; e++)
                                                            if (
                                                                ((n = w[e].attributes), void 0 !==
                                                                    n._stopSequence)
                                                            )
                                                                for (h = 0; h < l.length; h++)
                                                                    if (
                                                                        n._stopSequence === l[h].attributes.Sequence
                                                                    ) {
                                                                        g = l[h].attributes.Name;
                                                                        n.text = (n.text || '').replace(m[g], g);
                                                                        delete n._stopSequence;
                                                                        break;
                                                                    }
                                                        q = l[l.length - 1];
                                                        l[0].geometry.x === q.geometry.x &&
                                                            l[0].geometry.y === q.geometry.y &&
                                                            ((this._returnToStartStop = this._addStopWrapperToGraphic(
                                                                new J(q.geometry, null, q.attributes),
                                                                m[q.attributes.Name]
                                                            )), this.set('returnToStart', !0));
                                                        this._solveResultProcessing(
                                                            a.solveResult,
                                                            m
                                                        ).then(
                                                            f.hitch(this, function() {
                                                                this._setStartTime(
                                                                    void 0,
                                                                    void 0,
                                                                    this.startTime
                                                                );
                                                                d(a);
                                                                this.zoomToFullRoute();
                                                                b.resolve(a);
                                                            }),
                                                            b.reject
                                                        );
                                                    } else {
                                                        if (a.routeParameters) {
                                                            q = a.routeParameters.stops.features;
                                                            this.stops = [];
                                                            for (e = 0; e < q.length; e++)
                                                                this.stops.push(
                                                                    this._addStopWrapperToGraphic(
                                                                        q[e],
                                                                        q[e].attributes.Name
                                                                    )
                                                                ), this._updateStop(this.stops[e], e);
                                                            this._setStops();
                                                            a.loadMessages.push({
                                                                message: B.widgets.directions
                                                                    .routeLayerStopsOnly,
                                                                messageType: 'Warning',
                                                            });
                                                        } else
                                                            a.loadMessages.push({
                                                                message: B.widgets.directions.routeLayerEmpty,
                                                                messageType: 'Warning',
                                                            });
                                                        d(a);
                                                        b.resolve(a);
                                                    }
                                                    for (
                                                        e = 0; e < a.loadMessages.length; e++
                                                    ) this._showMessage(a.loadMessages[e].message);
                                                }),
                                                f.hitch(this, function(a) {
                                                    b.reject(a);
                                                    this._showMessage(
                                                        'GWM_0003' === a.messageCode ?
                                                        B.widgets.directions.error.accessDenied +
                                                        this._naRouteSharing.portal.getPortalUser()
                                                        .username :
                                                        B.widgets.directions.error.loadError
                                                    );
                                                })
                                            );
                                        }),
                                        b.reject
                                    );
                                }),
                                b.reject
                            );
                            return b.promise;
                        },
                    });
                    f.setObject('dijit.Directions', g, O);
                    return g;
                }
            );
        },
        'dijit/layout/AccordionPane': function() {
            define(
                ['dojo/_base/declare', 'dojo/_base/kernel', './ContentPane'],
                function(c, g, f) {
                    return c('dijit.layout.AccordionPane', f, {
                        constructor: function() {
                            g.deprecated(
                                'dijit.layout.AccordionPane deprecated, use ContentPane instead',
                                '',
                                '2.0'
                            );
                        },
                        onSelected: function() {},
                    });
                }
            );
        },
        'arcgisonline/sharing/geow/MemberReadStore': function() {
            define(
                [
                    'dojo',
                    'dijit',
                    'dojox',
                    'dojo/require!dojox/data/QueryReadStore,arcgisonline/sharing/geow/Content',
                ],
                function(c, g, f) {
                    c.provide('arcgisonline.sharing.geow.MemberReadStore');
                    c.require('dojox.data.QueryReadStore');
                    c.require('arcgisonline.sharing.geow.Content');
                    c.declare(
                        'arcgisonline.sharing.geow.MemberReadStore',
                        f.data.QueryReadStore, {
                            _fetchItems: function(b, e, f) {
                                var d = b.serverQuery || b.query || {};
                                d.start = b.start || 0;
                                d.start++;
                                b.count && (d.num = b.count);
                                arcgisonline.sharing.util.getJson(
                                    this.url,
                                    c.hitch(this, function(a) {
                                        this._items = [];
                                        var f = null,
                                            h = '';
                                        if (a.users) {
                                            h = 'groupMembers';
                                            this._total = a.users.length + a.admins.length;
                                            c.publish('onMemberCount', [this._total]);
                                            var g = {
                                                name: a.owner,
                                                memberType: 'owner',
                                                requestType: h,
                                                groupowner: a.owner || '',
                                                groupadmins: a.admins || [],
                                            };
                                            this._items.push({ i: g, r: this });
                                            c.forEach(
                                                a.admins,
                                                function(b, c) {
                                                    b != a.owner &&
                                                        ((g = {
                                                            name: b,
                                                            memberType: 'admin',
                                                            requestType: h,
                                                            groupowner: a.owner || '',
                                                            groupadmins: a.admins || [],
                                                        }), this._items.push({ i: g, r: this }));
                                                },
                                                this
                                            );
                                            c.forEach(
                                                a.users,
                                                function(b, c) {
                                                    g = {
                                                        name: b,
                                                        memberType: 'member',
                                                        requestType: h,
                                                        groupowner: a.owner || '',
                                                        groupadmins: a.admins || [],
                                                    };
                                                    this._items.push({ i: g, r: this });
                                                },
                                                this
                                            );
                                        } else
                                            (f = a.applications), (h =
                                                'groupApplications'), c.publish('onAppCount', [
                                                a.applications.length,
                                            ]), (this._total = f.length), c.forEach(
                                                f,
                                                function(b, c) {
                                                    this._items.push({
                                                        i: {
                                                            name: b.username,
                                                            fullname: b.fullname,
                                                            requestType: h,
                                                            groupowner: a.owner || '',
                                                            groupadmins: a.admins || [],
                                                            received: b.received || -1,
                                                        },
                                                        r: this,
                                                    });
                                                },
                                                this
                                            );
                                        this._itemsByIdentity = {};
                                        this._identifier = 'name';
                                        for (
                                            i = 0; i < this._items.length;
                                            ++i
                                        )(g = this._items[i].i), (f = g.name), this._itemsByIdentity.name || (this._itemsByIdentity[f] = g);
                                        e(this._items, b, this._total);
                                        this.lastRequestHash =
                                            new Date().getTime() +
                                            '-' +
                                            String(Math.random()).substring(2);
                                        this._lastServerQuery = c.mixin({}, d);
                                    })
                                );
                            },
                        }
                    );
                }
            );
        },
        'arcgisonline/sharing/dijit/DataGrid': function() {
            define(
                ['dojo', 'dijit', 'dojox', 'dojo/require!dojox/grid/DataGrid'],
                function(c, g, f) {
                    c.provide('arcgisonline.sharing.dijit.DataGrid');
                    c.require('dojox.grid.DataGrid');
                    c.declare('arcgisonline.sharing.dijit.DataGrid', f.grid.DataGrid, {
                        sort: function() {
                            this.inherited(arguments);
                            setTimeout(c.hitch(this, 'update'), 300);
                        },
                        _onFetchComplete: function(b, c) {
                            var e = !this._isLoaded;
                            this.inherited(arguments);
                            e && this.update();
                        },
                    });
                }
            );
        },
        'arcgisonline/sharing/dijit/FeatureLayerQueryResult': function() {
            define(
                'esri/main dojo/_base/declare dojo/Evented dojo/_base/lang dojo/_base/kernel dojo/_base/Deferred dojo/DeferredList dojo/_base/array esri/IdentityManager'.split(
                    ' '
                ),
                function(c, g, f, b, e, h, d, a) {
                    var k = function(a) {
                        function d(b) {
                            a[b] ||
                                (a[b] = function() {
                                    var c = arguments;
                                    return h.when(a, function(a) {
                                        Array.prototype.unshift.call(c, a.features || a);
                                        return k(e[b].apply(e, c));
                                    });
                                });
                        }
                        if (!a) return a;
                        a.then && (a = b.delegate(a));
                        a.total ||
                            (a.total = h.when(a, function(a) {
                                return c._isDefined(a.total) ? a.total : a.length || 0;
                            }));
                        d('forEach');
                        d('filter');
                        d('map');
                        d('some');
                        d('every');
                        return a;
                    };
                    b.setObject('arcgisonline.sharing.dijit.FeatureLayerQueryResult', k);
                    return k;
                }
            );
        },
        'arcgisonline/sharing/dijit/FeatureLayerQueryStore': function() {
            define(
                [
                    'dojo',
                    'dijit',
                    'dojox',
                    'dojo/require!arcgisonline/sharing/dijit/FeatureLayerQueryResult',
                ],
                function(c, g, f) {
                    c.provide('arcgisonline.sharing.dijit.FeatureLayerQueryStore');
                    c.require('arcgisonline.sharing.dijit.FeatureLayerQueryResult');
                    c.declare(
                        'arcgisonline.sharing.dijit.FeatureLayerQueryStore',
                        null, {
                            queryUrl: '',
                            idProperty: 'id',
                            data: [],
                            constructor: function(b) {
                                c.mixin(this, b);
                                this.layer = b.layer;
                                this.objectIds = b.objectIds;
                                this.where = b.where;
                                this.orderByFields = b.orderByFields;
                                this.totalCount = b.totalCount;
                                this.batchCount = b.batchCount || 25;
                                this.idProperty = this.layer.objectIdField;
                            },
                            get: function(b, c) {
                                return this.data[b];
                            },
                            getIdentity: function(b) {
                                return b[this.idProperty];
                            },
                            query: function(b, e) {
                                var f = new esri.tasks.Query();
                                b = e.start || 0;
                                e = this.batchCount;
                                this.objectIds ?
                                    (f.objectIds = this.objectIds.length >= b + this.batchCount ?
                                        this.objectIds.slice(b, b + e) :
                                        this.objectIds.slice(b)) :
                                    ((f.start = b), (f.num = e), (f.where = this.where), (f.orderByFields = this.orderByFields));
                                f.returnGeometry = !1;
                                f.outFields = ['*'];
                                var d = this.totalCount;
                                b = this.layer.queryFeatures(f);
                                b.total = b.then(
                                    c.hitch(this, function(a) {
                                        if (this.objectIds) {
                                            var b = a.objectIdFieldName;
                                            if (!b)
                                                for (var e = 0; e < a.fields.length; e++)
                                                    if ('esriFieldTypeOID' == a.fields[e].type) {
                                                        b = a.fields[e].name;
                                                        break;
                                                    }
                                            for (var h = {}, e = 0; e < a.features.length; e++)
                                                h[a.features[e].attributes[b]] = a.features[e];
                                            a.features = c.map(f.objectIds, function(a) {
                                                return h[a];
                                            });
                                        }
                                        for (
                                            e = 0; e < a.features.length; e++
                                        )(a.features[e] = a.features[e].attributes), (this.data[a.features[e][b]] = a.features[e]);
                                        a = a.features;
                                        return d;
                                    }),
                                    function() {
                                        return 0;
                                    }
                                );
                                return arcgisonline.sharing.dijit.FeatureLayerQueryResult(b);
                            },
                        }
                    );
                }
            );
        },
        'arcgisonline/sharing/dijit/GroupMembershipRequestsGrid': function() {
            define(
                [
                    'dojo',
                    'dijit',
                    'dojox',
                    'dojo/require!dijit/_Widget,dijit/_Templated,dojox/grid/DataGrid,dojox/rpc/Service,dojo/rpc/JsonService,dijit/Toolbar,arcgisonline/sharing/geow/MemberReadStore,arcgisonline/sharing/dijit/ProfilePopup',
                ],
                function(c, g, f) {
                    c.provide('arcgisonline.sharing.dijit.GroupMembershipRequestsGrid');
                    c.require('dijit._Widget');
                    c.require('dijit._Templated');
                    c.require('dojox.grid.DataGrid');
                    c.require('dojox.rpc.Service');
                    c.require('dojo.rpc.JsonService');
                    c.require('dijit.Toolbar');
                    c.require('arcgisonline.sharing.geow.MemberReadStore');
                    c.require('arcgisonline.sharing.dijit.ProfilePopup');
                    c.declare(
                        'arcgisonline.sharing.dijit.GroupMembershipRequestsGrid', [g._Widget, g._Templated], {
                            widgetsInTemplate: !0,
                            groupId: null,
                            initialized: !1,
                            templateString: '\x3cdiv id\x3d"esriGroupMambershipRequestsGrid" style\x3d"width: 100%; height: 100%; margin:auto;"\x3e\r\n  \x3ctable data-dojo-type\x3d"dojox.grid.DataGrid" jsid\x3d"grid" id\x3d"groupMembershipRequestsNode"\r\n         data-dojo-props\x3d"rowsperpage:10,delayscroll:true"\r\n         class\x3d"esriGrid" style\x3d"height:100%; width:100%;"\x3e\r\n    \x3cthead\x3e\r\n    \x3ctr\x3e\r\n      \x3cth get\x3d"arcgisonline.sharing.dijit.GroupMembershipRequestsGrid.formatters.name"\r\n          formatter\x3d"arcgisonline.sharing.util.fix" width\x3d"30%" name\x3d"Name"\x3ex\x3c/th\x3e\r\n      \x3cth get\x3d"arcgisonline.sharing.dijit.GroupMembershipRequestsGrid.formatters.username"\r\n          formatter\x3d"arcgisonline.sharing.util.fix" width\x3d"20%" name\x3d"Username"\x3ex\x3c/th\x3e\r\n      \x3cth get\x3d"arcgisonline.sharing.dijit.GroupMembershipRequestsGrid.formatters.received"\r\n          formatter\x3d"arcgisonline.sharing.util.fix" width\x3d"26%" name\x3d"Received"\x3ex\x3c/th\x3e\r\n      \x3cth get\x3d"arcgisonline.sharing.dijit.GroupMembershipRequestsGrid.formatters.yourResponse"\r\n          formatter\x3d"arcgisonline.sharing.util.fix" width\x3d"34%" name\x3d"Your Response"\x3ex\x3c/th\x3e\r\n    \x3c/tr\x3e\r\n    \x3c/thead\x3e\r\n  \x3c/table\x3e\r\n\x3c/div\x3e\r\n',
                            _eventConnections: [],
                            i18n: null,
                            postMixInProperties: function() {
                                this.inherited(arguments);
                                this.i18n = c.i18n.getLocalization(
                                    'arcgisonline',
                                    'arcgisonline'
                                ).common;
                                c.mixin(
                                    this.i18n,
                                    c.i18n.getLocalization('arcgisonline', 'arcgisonline')
                                    .groupMembershipRequestsGrid
                                );
                            },
                            postCreate: function() {
                                c.subscribe('onApplicationAccept', this.refreshGrid);
                                c.subscribe('onApplicationDecline', this.refreshGrid);
                                this._applyGridPatches();
                                if (esri.isTouchEnabled) {
                                    var b = esri.setScrollable(
                                        grid.views.views[0].scrollboxNode
                                    );
                                    this._eventConnections.push(b[0], b[1]);
                                }
                            },
                            _applyGridPatches: function() {
                                var b = grid.adaptWidth;
                                grid.adaptWidth = function() {
                                    var e = this.views.views,
                                        f, d;
                                    for (d = 0;
                                        (f = e[d]); d++) {
                                        c.style(f.headerNode, 'display', 'block');
                                        var a = f.adaptWidth;
                                        f.adaptWidth = function() {
                                            (this.flexCells &&
                                                null == this.headerContentNode.firstChild) ||
                                            a.apply(this, arguments);
                                        };
                                    }
                                    b.apply(this, arguments);
                                    for (d = 0;
                                        (f = e[d]); d++)
                                        c.style(f.headerNode, 'display', 'none');
                                };
                            },
                            loadGrid: function(b) {
                                this.groupId = b;
                                c.byId('membership-groupId').value = this.groupId;
                                b = new arcgisonline.sharing.geow.MemberReadStore();
                                b.url =
                                    esriGeowConfig.restBaseUrl +
                                    'community/groups/' +
                                    this.groupId +
                                    '/applications';
                                grid.noDataMessage =
                                    "\x3cspan style\x3d'font-size:1.2em;color:#7a7979;'\x3e" +
                                    this.i18n.noMembershipRequests +
                                    '\x3c/span\x3e';
                                grid.setStore(b);
                            },
                            onAppCount: function(b) {
                                0 < b ?
                                    (c.style(
                                        c.byId('membership-requests-has_no_requests'),
                                        'display',
                                        'none'
                                    ), c.style(
                                        c.byId('membership-requests-has_requests'),
                                        'display',
                                        'block'
                                    )) :
                                    (c.style(
                                        c.byId('membership-requests-has_requests'),
                                        'display',
                                        'none'
                                    ), c.style(
                                        c.byId('membership-requests-has_no_requests'),
                                        'display',
                                        'block'
                                    ));
                            },
                            refreshGrid: function() {
                                grid.setQuery();
                            },
                            destroy: function() {
                                this.inherited(arguments);
                                c.forEach(this._eventConnections, c.disconnect);
                            },
                        }
                    );
                    arcgisonline.sharing.dijit.GroupMembershipRequestsGrid.formatters = {
                        i18n: null,
                        name: function(b, c) {
                            return c ?
                                '\x3cspan id\x3d"esriMemberInfo" class\x3d"esriItemLinks"\x3e\x3ca href\x3d"#" onclick\x3d"arcgisonline.sharing.dijit.ProfilePopup.prototype.statics.getInstance().showProfile(\'' +
                                c.i.name +
                                '\', this);"\x3e' +
                                c.i.fullname +
                                '\x3c/span\x3e' :
                                this.defaultValue;
                        },
                        username: function(b, c) {
                            if (!c) return this.defaultValue;
                            b = c.i.name;
                            return (
                                '\x3cspan id\x3d"esriMemberInfo" class\x3d"esriItemLinks"\x3e\x3ca href\x3d"#" onclick\x3d"arcgisonline.sharing.dijit.ProfilePopup.prototype.statics.getInstance().showProfile(\'' +
                                b +
                                '\', this);"\x3e' +
                                b +
                                '\x3c/span\x3e'
                            );
                        },
                        received: function(b, e) {
                            if (!e) return this.defaultValue;
                            b = '\x3cspan id\x3d"esriMemberInfo"\x3e';
                            e = e.i.received; -
                            1 < e &&
                                ((e = new Date(
                                    parseFloat(e)
                                )), (b += c.date.locale.format(e, {
                                    selector: 'date',
                                    formatLength: 'long',
                                })));
                            return b + '\x3c/span\x3e';
                        },
                        yourResponse: function(b, e) {
                            if (!e) return this.defaultValue;
                            this.i18n = c.i18n.getLocalization(
                                'arcgisonline',
                                'arcgisonline'
                            ).common;
                            c.mixin(
                                this.i18n,
                                c.i18n.getLocalization('arcgisonline', 'arcgisonline')
                                .groupMembershipRequestsGrid
                            );
                            b = c.byId('membership-groupId').value;
                            e = e.i.name;
                            var f =
                                '\x3cdiv class\x3d"list-links" style\x3d"padding-left:20px;"\x3e\x3cspan class\x3d"approveApplication"\x3e\x3c/span\x3e\x3ca href\x3d"JavaScript:arcgisonline.sharing.geow.Group.acceptApplication(\'' +
                                b +
                                "','" +
                                e +
                                '\')"\x3e' +
                                this.i18n.approve +
                                '\x3c/a\x3e';
                            return (f +=
                                '  \x3cspan class\x3d"declineApplication"\x3e\x3c/span\x3e\x3ca href\x3d"JavaScript:arcgisonline.sharing.geow.Group.declineApplication(\'' +
                                b +
                                "','" +
                                e +
                                "')\"'\x3e" +
                                this.i18n.decline +
                                '\x3c/a\x3e\x3c/div\x3e');
                        },
                    };
                }
            );
        },
        'arcgisonline/sharing/dijit/OrganizationSetup': function() {
            define(
                'dojo/_base/declare dojo/_base/lang dojo/cookie dojo/debounce dojo/dom-attr dojo/dom-class dojo/dom-style dojo/on dijit/a11yclick dojo/string dojo/when dojox/html/entities dojo/data/ItemFileReadStore dojo/store/Memory dijit/_WidgetBase dijit/_TemplatedMixin dijit/_WidgetsInTemplateMixin dijit/form/Button dijit/form/CheckBox dijit/form/FilteringSelect dijit/form/TextBox dijit/layout/ContentPane dijit/Tooltip esri/lang esri/request ../../esriGeowConfig ../util ../../pages/pageUtil ../../pages/utils/culture ../../pages/utils/dom ../../pages/utils/tooltips ../geow/Account ../geow/Geow ./dialog/GeneralDlg dojo/i18n!../../nls/arcgisonline dojo/text!./templates/OrganizationSetup.html'.split(
                    ' '
                ),
                function(
                    c,
                    g,
                    f,
                    b,
                    e,
                    h,
                    d,
                    a,
                    k,
                    n,
                    l,
                    m,
                    p,
                    r,
                    u,
                    t,
                    q,
                    v,
                    C,
                    z,
                    y,
                    x,
                    w,
                    A,
                    E,
                    B,
                    D,
                    H,
                    G,
                    F,
                    K,
                    L,
                    Q,
                    O,
                    P,
                    J
                ) {
                    return c('arcgisonline.sharing.dijit.OrganizationSetup', [u, t, q], {
                        declaredClass: 'arcgisonline.sharing.dijit.OrganizationSetup',
                        templateString: J,
                        widgetsInTemplate: !0,
                        DEFAULT_ACCOUNT_NAME: 'My Account',
                        ACCOUNT_ADMIN_ROLE: 'account_admin',
                        BROWSER_DEFAULT: 'browser',
                        ACCESS_DENIED_ERROR_PATH: 'error.html?c\x3dAccessDenied',
                        _user: null,
                        _onlineDefaults: null,
                        _settings: null,
                        _validUrlKey: !1,
                        _urlKeyAlreadySet: !1,
                        _tooltips: [],
                        postMixInProperties: function() {
                            this.inherited(arguments);
                            this.i18n = g.mixin(P.common, P.organizationSetup);
                            g.mixin(this.i18n, {
                                usageTrackingDesc: P.myOrganization.generalTab
                                    .usageTrackingDesc,
                                usageTrackingSetting: P.myOrganization.generalTab
                                    .usageTrackingSetting,
                                allowArcgisOnlineToCollectInfo: P.usageTracking
                                    .allowArcgisOnlineToCollectInfo,
                            });
                        },
                        destroy: function() {
                            this.inherited(arguments);
                            this._tooltips.forEach(function(a) {
                                a && a.destroyRecursive && a.destroyRecursive();
                            });
                        },
                        postCreate: function() {
                            this.inherited(arguments);
                            this._checkAccess();
                            this._initHandlers();
                            this._initImages();
                            this._initRedirects();
                            this._initLocalization();
                            this._initTooltips();
                            L.getSupportedLanguagesAndRegions().then(
                                function(a) {
                                    a &&
                                        (this._initLanguage(a.languages), this._initRegion(
                                            a.regions
                                        ), this._loadOrganization());
                                }.bind(this),
                                this._handleError.bind(this)
                            );
                        },
                        _handleError: function(a) {},
                        _showAlert: function(b, c) {
                            var d = new O();
                            a.once(d._dialog, 'hide', function() {
                                d._dialog.destroyRecursive();
                                d.destroyRecursive();
                            });
                            d.show({ title: b, message: c });
                        },
                        _urlContainsInvalidChars: function(a) {
                            return !a.match(/^[a-zA-Z0-9\-]*$/);
                        },
                        _handleUrlKeyCheck: function(a) {
                            !a || a.code || a.message ?
                                ((this._validUrlKey = !1), this._clearUrlKeyStatus()) :
                                a.available ?
                                this._setGoodUrlKeyStatus(this.i18n.available) :
                                this._setBadUrlKeyStatus(this.i18n.unavailable);
                        },
                        _initHandlers: function() {
                            var c = this.checkUrlKey.bind(this);
                            this.own(
                                k(this._sslCheckBox, this.onSSLCheck.bind(this)),
                                k(this._saveBtn, this.onSave.bind(this)),
                                k(this._signOutBtn, this.onSignOut.bind(this)),
                                a(this._urlKeyTextBox, 'change', c),
                                H.registerKeystrokeHandler(this._urlKeyTextBox, b(c, 500)),
                                a(
                                    this._languageSelect,
                                    'change',
                                    this.onLanguageChange.bind(this)
                                )
                            );
                        },
                        _initImages: function() {
                            this._orgNameImg &&
                                e.set(
                                    this._orgNameImg,
                                    'src',
                                    D.relativeToExplicitUrl(
                                        'js/arcgisonline/sharing/dijit/css/images/thumb-general-logo-name.png'
                                    )
                                );
                            this._orgAbbrImg &&
                                e.set(
                                    this._orgAbbrImg,
                                    'src',
                                    D.relativeToExplicitUrl(
                                        'js/arcgisonline/sharing/dijit/css/images/thumb-general-logo-name.png'
                                    )
                                );
                            this._languageImg &&
                                e.set(
                                    this._languageImg,
                                    'src',
                                    D.relativeToExplicitUrl(
                                        'js/arcgisonline/sharing/dijit/css/images/thumb-language.png'
                                    )
                                );
                            this._languageFormatImg &&
                                e.set(
                                    this._languageFormatImg,
                                    'src',
                                    D.relativeToExplicitUrl(
                                        'js/arcgisonline/sharing/dijit/css/images/helpIcon.png'
                                    )
                                );
                            this._regionImg &&
                                e.set(
                                    this._regionImg,
                                    'src',
                                    D.relativeToExplicitUrl(
                                        'js/arcgisonline/sharing/dijit/css/images/thumb-region.png'
                                    )
                                );
                            this._securityImg &&
                                e.set(
                                    this._securityImg,
                                    'src',
                                    D.relativeToExplicitUrl(
                                        'js/arcgisonline/sharing/dijit/css/images/thumb-security-https.png'
                                    )
                                );
                            this._linkImg &&
                                e.set(
                                    this._linkImg,
                                    'src',
                                    D.relativeToExplicitUrl(
                                        'js/arcgisonline/sharing/dijit/css/images/thumb-links.png'
                                    )
                                );
                            this._usageTrackingImg &&
                                e.set(
                                    this._usageTrackingImg,
                                    'src',
                                    D.relativeToExplicitUrl(
                                        'js/arcgisonline/sharing/dijit/css/images/thumb_euei.png'
                                    )
                                );
                        },
                        _checkAccess: function() {
                            D.isLoggedIn() ?
                                ((this._user = D.getUser()), this._user.accountId ||
                                    this._user.role === this.ACCOUNT_ADMIN_ROLE ||
                                    (window.location =
                                        B.baseUrl + this.ACCESS_DENIED_ERROR_PATH)) :
                                this._showUser || D.requireAuthentication();
                        },
                        _initRedirects: function() {
                            this.redirectUrl = B.baseUrl + 'index.html';
                            this.orgRedirectUrl = B.baseUrl + 'organization.html';
                        },
                        _initLocalization: function() {
                            e.set(
                                dojo.byId('item-title'),
                                'innerHTML',
                                this.i18n.setupYourOrg
                            );
                            this._sslCheckBoxLabel.innerHTML = n.substitute(
                                this.i18n.securityDesc, {
                                    span: '\x3cspan id\x3d"sslTooltip" style\x3d"border-bottom: 1px dotted #487696;"\x3e',
                                    spanEnd: '\x3c/span\x3e',
                                }
                            );
                            e.set(
                                this._linkTooltip,
                                'innerHTML',
                                n.substitute(this.i18n.contactUs, {
                                    startSpan: '\x3cspan class\x3d"orgSettingTooltip"\x3e',
                                    endSpan: '\x3c/span\x3e',
                                })
                            );
                            this._link.set('placeholder', this.i18n.contactUsExample);
                        },
                        _initTooltips: function() {
                            this._tooltips.push(
                                K.createTooltip('linkTooltip', this.i18n.contactUsTooltip)
                            );
                            this._tooltips.push(
                                K.createTooltip('sslTooltip', this.i18n.sslTooltip)
                            );
                            this._tooltips.push(
                                K.createTooltip(
                                    'languageFormatTooltip',
                                    this.i18n.learnNumDateFormat
                                )
                            );
                        },
                        _initLanguage: function(a) {
                            if (a) {
                                var b = [{
                                    culture: this.BROWSER_DEFAULT,
                                    displayName: this.i18n.browserDefaultSelection,
                                    language: this.i18n.browserDefaultSelection,
                                    localizedName: this.i18n.browserDefaultSelection,
                                }, ];
                                a.forEach(function(a) {
                                    a = g.mixin({
                                            displayName: m.decode(
                                                (a.localizedName ? a.localizedName + ' - ' : '') +
                                                a.language +
                                                '\x26lrm;'
                                            ),
                                        },
                                        a
                                    );
                                    a.cultureFormats &&
                                        a.cultureFormats.length &&
                                        a.cultureFormats.forEach(function(a) {
                                            a.displayName = m.decode(
                                                (a.localizedName ? a.localizedName + ' - ' : '') +
                                                a.name +
                                                '\x26lrm;'
                                            );
                                        });
                                    b.push(a);
                                });
                                a = new r({
                                    idProperty: 'culture',
                                    label: 'displayName',
                                    data: b,
                                });
                                this._languageSelect.set('store', a);
                                this._languageSelect.set('searchAttr', 'displayName');
                            }
                        },
                        _initLanguageFormat: function(a, b) {
                            if (a && a !== this.BROWSER_DEFAULT && b && b.length) {
                                a = G.getSelectedFormat(this._settings.cultureFormat, b || []);
                                var c = new r({
                                    idProperty: 'format',
                                    label: 'displayName',
                                    data: b,
                                });
                                this._languageFormatSelect.set('store', c);
                                this._languageFormatSelect.set('searchAttr', 'displayName');
                                a
                                    ?
                                    this._languageFormatSelect.set(
                                        'displayedValue',
                                        a.displayName
                                    ) :
                                    this._languageFormatSelect.set(
                                        'displayedValue',
                                        b[0].displayName
                                    );
                                F.showNode(this._languageFormatContainer);
                            } else F.hideNode(this._languageFormatContainer);
                        },
                        _initRegion: function(a) {
                            a &&
                                ((a = new r({
                                    idProperty: 'region',
                                    label: 'localizedName',
                                    data: a,
                                })), this._regionSelect.set(
                                    'store',
                                    a
                                ), this._regionSelect.set('searchAttr', 'localizedName'));
                        },
                        _loadOrganization: function() {
                            E({
                                url: D.getSecureUrl(B.restBaseUrl) + 'portals/self',
                                content: { f: 'json' },
                            }).then(
                                function(a) {
                                    this._onlineDefaults = a;
                                    L.getSelf(
                                        function(a) {
                                            if (!a || a.code || a.message) this._handleError(a);
                                            else {
                                                this._settings = a;
                                                this._settings.customBaseUrl =
                                                    this._settings.customBaseUrl ||
                                                    this._onlineDefaults.customBaseUrl;
                                                this._sslCheckBox.set('checked', !0);
                                                this._settings.name &&
                                                    this.DEFAULT_ACCOUNT_NAME !== this._settings.name &&
                                                    this._nameTextBox.set('value', this._settings.name);
                                                this._settings.urlKey ?
                                                    ((this._urlKeyAlreadySet = this._validUrlKey = !0), this
                                                        ._settings.customBaseUrl ?
                                                        e.set(
                                                            this._sampleUrlTextBox,
                                                            'innerHTML',
                                                            'https://' +
                                                            this._settings.urlKey +
                                                            '.' +
                                                            this._settings.customBaseUrl
                                                        ) :
                                                        e.set(
                                                            this._sampleUrlTextBox,
                                                            'innerHTML',
                                                            D.getSecureUrl(B.baseUrl)
                                                        ), this._urlKeyTextBox.set(
                                                            'disabled', !0
                                                        ), this._urlKeyTextBox.set(
                                                            'value',
                                                            this._settings.urlKey
                                                        )) :
                                                    ((this._validUrlKey = !1), e.set(
                                                        this._sampleUrlTextBox,
                                                        'innerHTML',
                                                        ''
                                                    ));
                                                var b = this._languageSelect.get('store');
                                                this._settings.culture = G.getActualCulture(
                                                    a.culture,
                                                    b.query()
                                                );
                                                b = (b = b
                                                        .query({ culture: a.culture || this.BROWSER_DEFAULT })
                                                        .shift()) ?
                                                    b.displayName :
                                                    this.i18n.browserDefaultSelection;
                                                this._languageSelect.set('displayedValue', b);
                                                e.set(
                                                    this._languageFormatHelpLink,
                                                    'href',
                                                    B.self.helpBase +
                                                    (B.self.helpMap.m['120001487'] || '')
                                                );
                                                (a = this._regionSelect
                                                    .get('store')
                                                    .query({ region: a.region })
                                                    .shift()) && a.localizedName ?
                                                    this._regionSelect.set(
                                                        'displayedValue',
                                                        a.localizedName
                                                    ) :
                                                    this._regionSelect.set(
                                                        'value',
                                                        (B.self && B.self.ipCntryCode) || 'WO'
                                                    );
                                                this._settings.portalProperties &&
                                                    this._settings.portalProperties.links &&
                                                    this._settings.portalProperties.links.contactUs &&
                                                    (this._linkCheckBox.set(
                                                        'checked', !!this._settings.portalProperties.links.contactUs
                                                        .visible
                                                    ), this._link.set(
                                                        'value',
                                                        this._settings.portalProperties.links.contactUs.url
                                                    ));
                                                a = B.restBaseUrl
                                                    .replace('http:', 'https:')
                                                    .replace('/rest/', '/geoip.jsp');
                                                D.getJson(
                                                    a,
                                                    this._setUsageTrackingCheckbox.bind(this),
                                                    this._setUsageTrackingCheckbox.bind(this)
                                                );
                                            }
                                        }.bind(this)
                                    );
                                }.bind(this)
                            );
                        },
                        _setUsageTrackingCheckbox: function(a) {
                            this._usageTrackingCheckBox.set(
                                'checked',
                                B.urlKey ? !!this._settings.eueiEnabled : 'US' === a.country
                            );
                        },
                        _handleUpdateAccount: function(a) {
                            if (!a || a.code || a.message)
                                this._handleError(a), this._showAlert(
                                    this.i18n.errorTitle,
                                    this.i18n.errors.unableToSave
                                ), this._saveBtn.set('disabled', !1), this._saveBtn.set(
                                    'label',
                                    this.i18n.saveContinue
                                );
                            else if (this._settings.urlKey && this._settings.customBaseUrl) {
                                a = null; -
                                1 ===
                                    window.location.host.indexOf(
                                        this._settings.urlKey + '.' + this._settings.customBaseUrl
                                    ) && (a = D.getCookie('esri_auth'));
                                var b =
                                    (this._settings.allSSL ? 'https:' : 'http:') +
                                    '//' +
                                    this._settings.urlKey +
                                    '.' +
                                    this._settings.customBaseUrl,
                                    c = B.baseUrl.indexOf(location.host),
                                    b = -1 < c ?
                                    b +
                                    (B.baseUrl.substring(c + location.host.length) +
                                        'organization.html') :
                                    this._settings.allSSL ?
                                    this.redirectUrl.replace('http:', 'https:') :
                                    this.redirectUrl.replace('https:', 'http:');
                                a && (b = D.getBridgeUrl(b, a));
                                window.location = b;
                            } else
                                window.location = 'account_admin' !== user.role ||
                                this._settings.urlKey ?
                                this._settings.allSSL ?
                                this.redirectUrl.replace('http:', 'https:') :
                                this.redirectUrl.replace('https:', 'http:') :
                                this._settings.allSSL ?
                                this.orgRedirectUrl.replace('http:', 'https:') :
                                this.orgRedirectUrl.replace('https:', 'http:');
                        },
                        _validates: function() {
                            var a = this._nameTextBox.getValue(),
                                b = this._link.get('value'),
                                c = this._linkCheckBox.get('checked'),
                                d = this.i18n.errors.pleaseCorrect,
                                e = !1;
                            a
                                ?
                                ((a = n.trim(a)), 0 < a.length ?
                                    -1 < a.indexOf('\x3c') ||
                                    -1 < a.indexOf('\x3e') ||
                                    -1 < a.indexOf('%') ?
                                    ((e = !0), (d +=
                                        '\x3cbr\x3e' +
                                        this.i18n.errors.orgNameInvalidChars)) :
                                    55 < a.length &&
                                    ((e = !0), (d +=
                                        '\x3cbr\x3e' + this.i18n.errors.orgNameTooLong)) :
                                    ((e = !0), (d +=
                                        '\x3cbr\x3e' + this.i18n.errors.orgNameRequired))) :
                                ((e = !0), (d +=
                                    '\x3cbr\x3e' + this.i18n.errors.orgNameRequired));
                            this._validUrlKey ||
                                ((e = !0), (d +=
                                    '\x3cbr\x3e' + this.i18n.errors.urlKeyRequired));
                            !c ||
                                (esri.isDefined(b) && 0 !== b.length) ||
                                ((e = !0), (d +=
                                    '\x3cbr\x3e' + this.i18n.errors.finishContactUsSetup));
                            e && this._showAlert(this.i18n.errorTitle, d);
                            return !e;
                        },
                        _setGoodUrlKeyStatus: function(a) {
                            this._validUrlKey = !0;
                            this._urlKeyStatusLabel.innerHTML = a;
                            h.remove(this._urlKeyStatusLabel, 'statusBad');
                            h.add(this._urlKeyStatusLabel, 'statusGood');
                        },
                        _setBadUrlKeyStatus: function(a) {
                            this._validUrlKey = !1;
                            this._urlKeyStatusLabel.innerHTML = a;
                            h.remove(this._urlKeyStatusLabel, 'statusGood');
                            h.add(this._urlKeyStatusLabel, 'statusBad');
                        },
                        _clearUrlKeyStatus: function() {
                            this._urlKeyStatusLabel.innerHTML = '';
                            h.remove(this._urlKeyStatusLabel, 'statusGood');
                            h.remove(this._urlKeyStatusLabel, 'statusBad');
                        },
                        checkUrlKey: function() {
                            if (!this._urlKeyAlreadySet) {
                                var a = this._urlKeyTextBox.getValue(),
                                    b = this._handleUrlKeyCheck.bind(this);
                                a && (a = n.trim(a));
                                a && 0 < a.length && 17 > a.length ?
                                    this._urlContainsInvalidChars(a) ?
                                    this._setBadUrlKeyStatus(
                                        this.i18n.errors.urlKeyInvalidChars
                                    ) :
                                    '-' === a[0] || '-' === a[a.length - 1] ?
                                    this._setBadUrlKeyStatus(
                                        this.i18n.errors.urlKeyEndHyphen
                                    ) :
                                    (e.set(
                                        this._sampleUrlTextBox,
                                        'innerHTML',
                                        'https://' +
                                        a +
                                        '.' +
                                        this._settings.customBaseUrl
                                    ), D.getJson(
                                        B.restBaseUrl +
                                        'portals/isUrlKeyAvailable?urlKey\x3d' +
                                        a,
                                        b,
                                        b
                                    )) :
                                    ((this._validUrlKey = !1), e.set(
                                            this._sampleUrlTextBox,
                                            'innerHTML',
                                            ''
                                        ), a && 16 < a.length ?
                                        this._setBadUrlKeyStatus(this.i18n.urlKeyTooLong) :
                                        this._clearUrlKeyStatus());
                            }
                        },
                        onLanguageChange: function() {
                            var a = this._languageSelect
                                .get('store')
                                .query({
                                    displayName: this._languageSelect.get('displayedValue'),
                                })
                                .shift();
                            a && this._initLanguageFormat(a.culture, a.cultureFormats);
                        },
                        onSSLCheck: function() {
                            var a = this._sslCheckBox.attr('checked');
                            this._showAlert(
                                this.i18n.warning,
                                a ? this.i18n.sslOnWarning : this.i18n.sslOffWarning
                            );
                        },
                        onSave: function() {
                            this._saveBtn.set('disabled', !0);
                            this._saveBtn.set('label', this.i18n.saving);
                            if (this._validates()) {
                                var a = this._handleUpdateAccount.bind(this),
                                    b = this._nameTextBox.getValue(),
                                    c = this._urlKeyTextBox.getValue(),
                                    d = this._sslCheckBox.attr('checked');
                                this._settings.name = n.trim(b);
                                this._settings.urlKey = n.trim(c);
                                this._settings.allSSL = d;
                                b = (c = this._languageSelect
                                        .get('store')
                                        .query({
                                            displayName: this._languageSelect.get('displayedValue'),
                                        })
                                        .shift()) && c.culture ?
                                    c.culture :
                                    this.BROWSER_DEFAULT;
                                this._settings.culture = b === this.BROWSER_DEFAULT ? '' : b;
                                c && c.cultureFormats ?
                                    (c = (c = this._languageFormatSelect
                                            .get('store')
                                            .query({
                                                displayName: this._languageFormatSelect.get(
                                                    'displayedValue'
                                                ),
                                            })
                                            .shift()) && c.format ?
                                        c.format :
                                        void 0) ?
                                    ((this._settings.culture =
                                        b + '-' + c), (this._settings.cultureFormat = c)) :
                                    (this._settings.cultureFormat = '') :
                                    (this._settings.cultureFormat = '');
                                b = this._regionSelect
                                    .get('store')
                                    .query({
                                        localizedName: this._regionSelect.get('displayedValue'),
                                    })
                                    .shift();
                                this._settings.region = (b && b.region) || '';
                                this._settings.portalProperties = this._settings
                                    .portalProperties || {};
                                this._settings.portalProperties.mustWelcome = !0;
                                this._settings.portalProperties.links = this._settings
                                    .portalProperties.links || {};
                                b = this._link.get('value');
                                A.isDefined(b) && 0 < b.length ?
                                    (0 !== b.indexOf('http') &&
                                        0 !== b.indexOf('mailto:') &&
                                        0 < b.indexOf('@') ?
                                        (b = 'mailto:' + b) :
                                        0 !== b.indexOf('http') &&
                                        0 > b.indexOf('mailto:') &&
                                        0 > b.indexOf('@') &&
                                        (b =
                                            'http://' +
                                            b), (this._settings.portalProperties.links.contactUs = {
                                            url: b,
                                            visible: !!this._linkCheckBox.get('checked'),
                                        })) :
                                    delete this._settings.portalProperties.links.contactUs;
                                this._settings.eueiEnabled = this._usageTrackingCheckBox.checked;
                                this._settings.basemapGalleryGroupQuery = null;
                                this._settings.colorSetsGroupQuery = null;
                                this._settings.defaultBasemap = null;
                                this._settings.defaultExtent = null;
                                this._settings.featuredGroups = null;
                                this._settings.featuredGroupsId = null;
                                this._settings.featuredItemsGroupQuery = null;
                                this._settings.homePageFeaturedContent = null;
                                this._settings.layerTemplatesGroupQuery = null;
                                this._settings.rotatorPanels = null;
                                this._settings.symbolSetsGroupQuery = null;
                                this._settings.templatesGroupQuery = null;
                                this._settings.contacts = this._settings.contacts || [];
                                L.updateAccount(this._settings, a, a);
                            } else
                                this._saveBtn.set('disabled', !1), this._saveBtn.set(
                                    'label',
                                    this.i18n.saveContinue
                                );
                        },
                        onSignOut: function() {
                            f('esri_webmap', '', { expires: -1, path: '/' });
                            var a = this.allSSL ? D.getSecureUrl() : D.getHttpUrl();
                            Q.signout(a + 'index.html');
                        },
                    });
                }
            );
        },
        'arcgisonline/pages/utils/culture': function() {
            define(
                ['require', 'exports', 'tslib', 'dojo/string', 'dojo/_base/kernel'],
                function(c, g, f, b, e) {
                    b = f.__importDefault(b);
                    e = f.__importDefault(e);
                    return (function() {
                        function c() {}
                        c.getString = function(d, a, f) {
                            var h,
                                g = 'id ja ko th vi zh-cn zh-hk zh-tw'.split(' '),
                                k = 'en ca da de el es et fi hi hu it nb nl pt-pt sv tr'.split(
                                    ' '
                                ),
                                p = ((h = c.getRootLocale(e.default.locale)), null !== h &&
                                    void 0 !== h ?
                                    h :
                                    'en');
                            f ? (f.number = a) : (f = { number: a });
                            return 1 === a || -1 < g.indexOf(p) ?
                                b.default.substitute(d.single, f) :
                                1 !== a && -1 < k.indexOf(p) ?
                                b.default.substitute(d.multiple, f) :
                                b.default.substitute(d.unknown, f);
                        };
                        c.stripCultureFormat = function(b, a) {
                            return (null === b || void 0 === b ? 0 : b.length) &&
                                (null === a || void 0 === a ? 0 : a.length) &&
                                ((a = b.indexOf('-' + a)), -1 < a) ?
                                b.substring(0, a) :
                                b;
                        };
                        c.getRootLocale = function(b) {
                            var a;
                            if (null === b || void 0 === b ? 0 : b.length)
                                if (
                                    ((b = b.split('-')[0]), null === (a = b) || void 0 === a ?
                                        0 :
                                        a.length)
                                )
                                    b = b.toLowerCase();
                            return b;
                        };
                        c.getLocaleFormat = function(b) {
                            if (null === b || void 0 === b ? 0 : b.length)
                                if (((b = b.split('-')), 1 < b.length))
                                    return b[1].toLowerCase();
                        };
                        c.getTrialLocale = function(b) {
                            var a = ['pt-br', 'pt-pt', 'zh-cn', 'zh-hk', 'zh-tw'];
                            return -1 <
                                (null === b || void 0 === b ? void 0 : b.indexOf('-')) &&
                                -1 === a.indexOf(b) ?
                                this.getRootLocale(b) :
                                b;
                        };
                        c.getActualCulture = function(b, a) {
                            var c,
                                d,
                                e = ((c = null === b || void 0 === b ?
                                    void 0 :
                                    b.toLowerCase()), null !== c && void 0 !== c ? c : ''),
                                f = e.split('-');
                            if (1 < f.length) {
                                if (
                                    (c = a
                                        .filter(function(a) {
                                            return a.culture === e;
                                        })
                                        .shift())
                                )
                                    return e;
                                c = a
                                    .filter(function(a) {
                                        return a.culture === f[0];
                                    })
                                    .shift();
                                if (null === (d = c) || void 0 === d ? 0 : d.cultureFormats) {
                                    if (
                                        (a = c.cultureFormats
                                            .filter(function(a) {
                                                return a.format === f[1];
                                            })
                                            .shift())
                                    )
                                        return c.culture;
                                } else if (c) return c.culture;
                            }
                            return b;
                        };
                        c.getSelectedFormat = function(b, a) {
                            return a
                                .filter(function(a) {
                                    return a.format === b;
                                })
                                .shift();
                        };
                        c.getPercentString = function(b) {
                            var a = e.default.locale.toLowerCase();
                            return 'ar' === a ?
                                '%' + 100 * b :
                                b.toLocaleString(a, { style: 'percent' });
                        };
                        return c;
                    })();
                }
            );
        },
        'arcgisonline/sharing/dijit/OrganizationStatus': function() {
            define(
                [
                    'dojo',
                    'dijit',
                    'dojox',
                    'dojo/i18n!arcgisonline/nls/arcgisonline',
                    'dojo/require!dijit/_Widget,dijit/_Templated,dijit/layout/ContentPane,dojo/DeferredList,dojox/lang/functional,dojo/store/Observable,dojo/store/Memory,dojox/charting/StoreSeries,dijit/form/DateTextBox,dgrid/OnDemandGrid,dgrid/Keyboard,dgrid/extensions/ColumnResizer,dgrid/editor,dojo/on,arcgisonline/sharing/util,arcgisonline/sharing/geow/Account,arcgisonline/sharing/dijit/dialog/GeneralDlg,arcgisonline/sharing/dijit/dialog/_UsageDlgMixin',
                ],
                function(c, g, f) {
                    c.provide('arcgisonline.sharing.dijit.OrganizationStatus');
                    c.require('dijit._Widget');
                    c.require('dijit._Templated');
                    c.require('dijit.layout.ContentPane');
                    c.require('dojo.DeferredList');
                    c.require('dojox.lang.functional');
                    c.require('dojo.store.Observable');
                    c.require('dojo.store.Memory');
                    c.require('dojox.charting.StoreSeries');
                    c.require('dijit.form.DateTextBox');
                    c.require('dgrid.OnDemandGrid');
                    c.require('dgrid.Keyboard');
                    c.require('dgrid.extensions.ColumnResizer');
                    c.require('dgrid.editor');
                    c.require('dojo.on');
                    c.require('arcgisonline.sharing.util');
                    c.require('arcgisonline.sharing.geow.Account');
                    c.require('arcgisonline.sharing.dijit.dialog.GeneralDlg');
                    c.require('arcgisonline.sharing.dijit.dialog._UsageDlgMixin');
                    c.requireLocalization('arcgisonline', 'arcgisonline');
                    c.declare(
                        'arcgisonline.sharing.dijit.OrganizationStatus', [
                            g._Widget,
                            g._Templated,
                            arcgisonline.sharing.dijit.dialog._UsageDlgMixin,
                        ], {
                            widgetsInTemplate: !0,
                            templateString: '\x3cdiv dojoAttachPoint\x3d"containerNode" class\x3d"esriItemLinks" style\x3d"width:100%;height:100%;min-height:600px;"\x3e\r\n  \x3cdiv class\x3d"organizationInfo esriFloatLeading"\x3e\r\n      \x3c!--\x3cspan class\x3d"thumbnail esriFloatLeading"\x3e\x3cimg dojoAttachPoint\x3d"_thumbnail" class\x3d"groupThumbnail" /\x3e\x3c/span\x3e--\x3e\r\n      \x3c!--\x3ch1 style\x3d"line-height: 2.9em;" dojoAttachPoint\x3d"_title"\x3e\x3c/h1\x3e\x3cspan class\x3d"state esriLeadingMargin05" dojoAttachPoint\x3d"_state"\x3e${i18n.usage.trial}\x3c/span\x3e--\x3e\r\n      \x3ca class\x3d"helpLink" target\x3d"_blank"\x3e${i18n.learnMore}\x3c/a\x3e\r\n      \x3cul dojoAttachPoint\x3d"_creditsSummary" class\x3d"container_creditsSummary"\x3e\x3c/ul\x3e\r\n  \x3c/div\x3e\r\n  \x3cdiv class\x3d"organizationStatus esriFloatLeading esriLeadingMargin0" dojoAttachPoint\x3d"_status"\x3e\r\n    \x3c!--\x3cbutton dojoAttachPoint\x3d\'_showStatistics\' style\x3d"display:\'\';" class\x3d"showStatisticsBtn" dojoType\x3d"dijit.form.Button" type\x3d"button"\x3e${i18n.showStatisticsBtn}\x3c/button\x3e--\x3e\r\n    \x3c!--\x3clabel class\x3d"showStatisticsBtn" style\x3d"display:\'\';"\x3e${i18n.forLbl}\x3c/label\x3e--\x3e\r\n    \x3clabel for\x3d"selectDateRange" class\x3d"showStatisticsLbl"\x3e${i18n.showStatistics}\x3c/label\x3e\r\n    \x3cspan dojoAttachPoint\x3d\'_selectDate\'\x3e\x3c/span\x3e\r\n    \x3cdiv class\x3d\'customdate esriLeadingMargin2\' style\x3d"display:none;"\x3e\r\n      \x3clabel class\x3d"esriLeadingMargin1" for\x3d"customStart"\x3e${i18n.customStart}\x3c/label\x3e\r\n      \x3cspan style\x3d"width:150px;" dojoType\x3d"dijit.form.DateTextBox" dojoAttachPoint\x3d\'_customStart\'\x3e\x3c/span\x3e\r\n      \x3clabel class\x3d"esriLeadingMargin1" for\x3d"customEnd"\x3e${i18n.customEnd}\x3c/label\x3e\r\n      \x3cspan style\x3d"width:150px;" dojoType\x3d"dijit.form.DateTextBox" dojoAttachPoint\x3d\'_customEnd\'\x3e\x3c/span\x3e\r\n      \x3c!--\x3cbutton dojoAttachPoint\x3d\'_customDate\' dojoType\x3d"dijit.form.Button" type\x3d"button" style\x3d"display:none;"\x3e${i18n.showReport}\x3c/button\x3e--\x3e\r\n    \x3c/div\x3e\r\n    \x3cspan dojoAttachPoint\x3d"spinnerNode" class\x3d"pleaseWaitImg"\x3e\x3c/span\x3e\r\n    \x3cdiv class\x3d"organizationGraphs" style\x3d"display:none;"\x3e\r\n      \x3cfieldset\x3e\r\n        \x3clegend class\x3d"esriLeadingMargin1 esriTrailingMargin1" dojoAttachPoint\x3d\'_creditUsage\'\x3e\x3c/legend\x3e\r\n        \x3cdiv class\x3d"organizationCredits"\x3e\r\n          \x3cdiv class\x3d"piechart esriFloatLeading"\x3e\r\n            \x3cdiv class\x3d"nodata nodatapie esriFloatLeading esriLeadingMargin7"\x3e${i18n.nodata}\x3c/div\x3e\r\n            \x3cdiv class\x3d"graph creditGraph" dojoAttachPoint\x3d"_creditsGraph"\x3e\x3c/div\x3e\r\n            \x3cdiv class\x3d"creditGraph instruction esriFloatLeading esriLeadingMargin4"\x3e${i18n.instruction}\x3c/div\x3e\r\n          \x3c/div\x3e\r\n          \x3cdiv class\x3d"table esriTrailingMargin4" dojoAttachPoint\x3d"_creditsTable"\x3e\x3c/div\x3e\r\n        \x3c/div\x3e\r\n      \x3c/fieldset\x3e\r\n      \x3cfieldset class\x3d"organizationDetails" style\x3d"display:none;"\x3e\r\n        \x3clegend class\x3d"esriLeadingMargin1 esriTrailingMargin1" dojoAttachPoint\x3d\'_creditDetailsLbl\'\x3e\x3c/legend\x3e\r\n        \x3cdiv style\x3d"margin:10px;"\x3e\r\n          \x3cdiv class\x3d"filter" style\x3d"display:none;"\x3e\r\n\t        \x3cdiv dojoAttachPoint\x3d"_creditSelect"\x3e\r\n              \x3clabel for\x3d"selectCredit"\x3e${i18n.showLbl}\x3c/label\x3e\r\n              \x3cspan dojoAttachPoint\x3d\'_selectCredit\'\x3e\x3c/span\x3e\r\n\t        \x3c/div\x3e\r\n\t        \x3cdiv dojoAttachPoint\x3d"_deomgmapsTaskSelect"\x3e\r\n              \x3clabel id\x3d"forTaskLbl" for\x3d"selectTask"\x3e${i18n.forLbl}\x3c/label\x3e\r\n              \x3cspan dojoAttachPoint\x3d\'_selectTask\'\x3e\x3c/span\x3e\r\n          \x3c/div\x3e\r\n          \x3cdiv dojoAttachPoint\x3d"_storageTaskSelect"\x3e\r\n            \x3clabel id\x3d"forTaskLbl" for\x3d"selectTask"\x3e${i18n.forLbl}\x3c/label\x3e\r\n            \x3cspan dojoAttachPoint\x3d\'_storageTask\'\x3e\x3c/span\x3e\r\n          \x3c/div\x3e\r\n\t      \x3c/div\x3e\r\n        \x3c/div\x3e\r\n        \x3cdiv class\x3d"organizationCredits"\x3e\r\n          \x3cdiv class\x3d"esriFloatLeading" style\x3d"width:50%;"\x3e\r\n            \x3cdiv dir\x3d\'ltr\' class\x3d"graph esriFloatLeading" dojoAttachPoint\x3d"_detailsGraph"\x3e\x3c/div\x3e\r\n            \x3cdiv class\x3d"esriFloatLeading" dojoAttachPoint\x3d"_lineLegend"\x3e\x3c/div\x3e\r\n          \x3c/div\x3e\r\n          \x3cdiv class\x3d"esriFloatTrailing details"\x3e\r\n            \x3cdiv class\x3d"grid esriLeadingMargin0 esriTrailingMargin4"  dojoAttachPoint\x3d"_detailsTable"\x3e\x3c/div\x3e\r\n            \x3cdiv class\x3d"detailssum esriLeadingMargin0 esriLeadingMargin05"\x3e\r\n              \x3cinput name\x3d"check" type\x3d"checkbox" style\x3d"vertical-align:bottom" checked disabled\x3d\'true\'/\x3e\r\n              \x3clabel id\x3d"_sum" dojoAttachPoint\x3d"_detailsSum" for\x3d"check"\x3e${i18n.totalcredits}\x3c/label\x3e\r\n            \x3c/div\x3e\r\n          \x3c/div\x3e\r\n        \x3c/div\x3e\r\n      \x3c/fieldset\x3e\r\n    \x3c/div\x3e\r\n  \x3c/div\x3e\r\n\x3c/div\x3e',
                            baseClass: 'esriOrganizationStatus',
                            noThumbnail: 'images/group-no-image.png',
                            _util: arcgisonline.sharing.util,
                            _acct: arcgisonline.sharing.geow.Account,
                            postMixInProperties: function() {
                                this.inherited(arguments);
                                this.i18n = c.mixin({},
                                    c.i18n.getLocalization('arcgisonline', 'arcgisonline').common
                                );
                                c.mixin(
                                    this.i18n,
                                    c.i18n.getLocalization('arcgisonline', 'arcgisonline')
                                    .usageDlg
                                );
                                c.mixin(
                                    this.i18n,
                                    c.i18n.getLocalization('arcgisonline', 'arcgisonline')
                                    .organizationStatus
                                );
                                this.noThumbnail = this._util.relativeToExplicitUrl(
                                    this.noThumbnail
                                );
                            },
                            startup: function() {
                                this._util.requireAuthentication() &&
                                    ((this._user = this._util.getUser()) && this._user.accountId ?
                                        ((this._errorDlg = arcgisonline.sharing.dijit.dialog.GeneralDlg.prototype.statics.getInstance()), (this._svcUrl =
                                            esriGeowConfig.restBaseUrl +
                                            (esriGeowConfig.restBaseUrl.lastIndexOf('/') ===
                                                esriGeowConfig.restBaseUrl.length - 1 ?
                                                '' :
                                                '/')), (this._accountsUri =
                                            this._svcUrl + 'portals/'), (this._searchUrl =
                                            this._svcUrl + 'search/'), (this._requestParams = {
                                            f: 'json',
                                            token: this._user.token,
                                        }), (this._usageParams = {
                                            vars: 'credits,bw,num,stg',
                                            groupBy: 'stype,etype,task',
                                        }), this._prepareStores(), this._initHelpMgr(), this._loadData()) :
                                        (window.location =
                                            'error.html?c\x3d' +
                                            (this._user ?
                                                'InvalidOrganization' :
                                                'AccessDeniedOrganization')));
                            },
                            destroy: function() {
                                c.forEach(this._connects, c.disconnect);
                                this._selectDate.destroy();
                                this._selectCredit.destroy();
                                this._selectTask.destroy();
                                this._storageTask.destroy();
                                this._lineChart.destroy();
                                this._selectDate = this._selectCredit = this._selectTask = this._storageTask = this._lineChart = void 0;
                            },
                            _prepareStores: function() {
                                this.inherited(arguments);
                                this._creditCategories = [{
                                        id: 'stg_tiles',
                                        value: {
                                            id: 'stg_tiles',
                                            f: 'stg_gbyte',
                                            fill: '#5B7F00',
                                            categ: this.i18n.stg_tiles,
                                            y: 0,
                                            units: 0,
                                        },
                                    },
                                    {
                                        id: 'stg_features',
                                        value: {
                                            id: 'stg_features',
                                            f: 'stg_gbyte',
                                            fill: '#4CFF00',
                                            categ: this.i18n.stg_features,
                                            y: 0,
                                            units: 0,
                                        },
                                    },
                                    {
                                        id: 'stg_portal',
                                        value: {
                                            id: 'stg_portal',
                                            f: 'stg_mbyte',
                                            fill: '#B6FF00',
                                            categ: this.i18n.stg_portal,
                                            y: 0,
                                            units: 0,
                                        },
                                    },
                                    {
                                        id: 'svcusg_elevanalysis',
                                        value: {
                                            id: 'svcusg_elevanalysis',
                                            f: 'num_analysis',
                                            fill: '#800080',
                                            categ: this.i18n.svcusg_elevanalysis,
                                            y: 0,
                                            units: 0,
                                        },
                                    },
                                    {
                                        id: 'tilegencnt_tiles',
                                        value: {
                                            id: 'tilegencnt_tiles',
                                            f: 'num_tiles',
                                            fill: '#FFD800',
                                            categ: this.i18n.tilegencnt_tiles,
                                            y: 0,
                                            units: 0,
                                        },
                                    },
                                    {
                                        id: 'svcusg_routing',
                                        value: {
                                            id: 'svcusg_routing',
                                            f: 'num_routes',
                                            fill: '#90D1E9',
                                            categ: this.i18n.svcusg_routing,
                                            y: 0,
                                            units: 0,
                                        },
                                    },
                                    {
                                        id: 'svcusg_demogmaps',
                                        value: {
                                            id: 'svcusg_demogmaps',
                                            f: 'num_maps',
                                            fill: '#FF6A00',
                                            categ: this.i18n.svcusg_demogmaps,
                                            y: 0,
                                            units: 0,
                                        },
                                    },
                                    {
                                        id: 'svcusg_geotrigger',
                                        value: {
                                            id: 'svcusg_geotrigger',
                                            f: 'num_events',
                                            fill: '#73ABD4',
                                            categ: this.i18n.svcusg_geotrigger,
                                            y: 0,
                                            units: 0,
                                        },
                                    },
                                    {
                                        id: 'svcusg_geoenrich',
                                        value: {
                                            id: 'svcusg_geoenrich',
                                            f: 'num_cost',
                                            fill: '#395FA9',
                                            categ: this.i18n.svcusg_geoenrich,
                                            y: 0,
                                            units: 0,
                                        },
                                    },
                                    {
                                        id: 'svcusg_spanalysis',
                                        value: {
                                            id: 'svcusg_spanalysis',
                                            f: 'num_analysis',
                                            fill: '#ADF8FF',
                                            categ: this.i18n.svcusg_spanalysis,
                                            y: 0,
                                            units: 0,
                                        },
                                    },
                                    {
                                        id: 'geocodecnt_geocode',
                                        value: {
                                            id: 'geocodecnt_geocode',
                                            f: 'num_locations',
                                            fill: '#00137F',
                                            categ: this.i18n.geocodecnt_geocode,
                                            y: 0,
                                            units: 0,
                                        },
                                    },
                                    {
                                        id: 'svcusg_tiles',
                                        value: {
                                            id: 'svcusg_tiles',
                                            f: 'bw_bwgbyte',
                                            fill: 'red',
                                            categ: this.i18n.svcusg_tiles,
                                            y: 0,
                                            units: 0,
                                        },
                                    },
                                    {
                                        id: 'svcusg_features',
                                        value: {
                                            id: 'svcusg_features',
                                            f: 'bw_bwgbyte',
                                            fill: '#FFA700',
                                            categ: this.i18n.svcusg_features,
                                            y: 0,
                                            units: 0,
                                        },
                                    },
                                ];
                                this._creditStore = new c.store.Observable(
                                    new c.store.Memory({
                                        data: { identifier: 'id', items: this._creditCategories },
                                    })
                                );
                                this._observeHandle = this._creditStore.query().observe(
                                    c.hitch(this, function(b) {
                                        c.query('.' + b.id).attr('innerHTML', b.value.y);
                                        c
                                            .query('.' + b.id + '_u')
                                            .attr(
                                                'innerHTML',
                                                esri.substitute(
                                                    b.value,
                                                    this.i18n[b.value.f.split('_')[1]]
                                                )
                                            );
                                    }), !0
                                );
                                this._aggregateCategories = {
                                    nasimpleroute: {
                                        stype: 'routing',
                                        filters: 'num,credits',
                                        label: this.i18n.rtsimple,
                                    },
                                    natsproute: {
                                        stype: 'routing',
                                        filters: 'num,credits',
                                        label: this.i18n.rtoptimized,
                                    },
                                    nacfroute: {
                                        stype: 'routing',
                                        filters: 'num,credits',
                                        label: this.i18n.rtclosestfacility,
                                    },
                                    naservicearea: {
                                        stype: 'routing',
                                        filters: 'num,credits',
                                        label: this.i18n.rtsvcareas,
                                    },
                                    navrproute: {
                                        stype: 'routing',
                                        filters: 'num,credits',
                                        label: this.i18n.rtmultivehicle,
                                    },
                                };
                                this._detailCategories = 'svcusg_features svcusg_tiles tilegencnt_tiles svcusg_routing svcusg_geoenrich svcusg_spanalysis svcusg_elevanalysis svcusg_demogmaps svcusg_geotrigger'.split(
                                    ' '
                                );
                                var b = this.i18n.spatialAnalysisTasks;
                                this._spanalysisTasks = {
                                    AggregatePoints: b.aggregatePoints,
                                    FindHotSpots: b.findHotSpots,
                                    CreateBuffers: b.createBuffers,
                                    CreateDriveTimeAreas: b.createDriveTimeAreas,
                                    DissolveBoundaries: b.dissolveBoundaries,
                                    MergeLayers: b.mergeLayers,
                                    SummarizeWithin: b.summarizeWithin,
                                    SummarizeNearby: b.summarizeNearby,
                                    EnrichLayer: b.enrichLayer,
                                    OverlayLayers: b.overlayLayers,
                                    ExtractData: b.extractData,
                                    FindNearest: b.findNearest,
                                    FindExistingLocations: b.findExistingLocations,
                                    DeriveNewLocations: b.deriveNewLocations,
                                    FindSimilarLocations: b.findSimilarLocations,
                                    CalculateDensity: b.calculateDensity,
                                    InterpolatePoints: b.interpolatePoints,
                                    PlanRoutes: b.planRoutes,
                                };
                                b = this.i18n.elevAnalysisTasks;
                                this._elevanalysisTasks = {
                                    Profile: b.profile,
                                    SummarizeElevation: b.summarizeElevation,
                                    Viewshed: b.viewShed,
                                    Watershed: b.waterShed,
                                    TraceDownstream: b.traceDownStream,
                                };
                                this._geoenrichTasks = {
                                    display: 'Infographic',
                                    report: 'Report',
                                    geoenrich: 'Data Enrichment',
                                };
                                this._demomapsTasks = {
                                    infographic: 'Map Queries',
                                    export: 'Map Draws',
                                };
                                this._creditDetailsStore.put({
                                    id: this.i18n.all,
                                    visible: !0,
                                    all: !0,
                                });
                                this._observeHandle1 = this._creditDetailsStore
                                    .query()
                                    .observe(
                                        c.hitch(this, function() {
                                            this._updateLineChart(this._lineChart, this._lineLegend);
                                        }), !0
                                    );
                            },
                            onDateRangeChange: function(b, e) {
                                var f;
                                'custom' !== b
                                    ?
                                    ((this._dateQuery = this._getDateQuery(b)), e ||
                                        this._query(this._dateQuery)) :
                                    ((f = new Date(
                                            this._dateQuery.startTime +
                                            6e4 * new Date().getTimezoneOffset()
                                        )), 0 != f.getMinutes() &&
                                        0 != f.getHours() &&
                                        0 != f.getSeconds() ?
                                        ((f = Date.UTC(
                                            f.getFullYear(),
                                            f.getMonth(),
                                            f.getDate() + 2
                                        )), this._customStart.set('value', new Date(f), !e)) :
                                        this._customStart.set(
                                            'value',
                                            f, !e
                                        ), this._customEnd.set(
                                            'value',
                                            new Date(
                                                this._dateQuery.endTime +
                                                6e4 * new Date().getTimezoneOffset() -
                                                1
                                            ), !e
                                        ));
                                c
                                    .query('.customdate')
                                    .style('display', 'custom' === b ? 'inline-block' : 'none');
                            },
                            onCustomDateClick: function(b) {
                                var c = new Date(this._customStart.get('value')),
                                    f = new Date(this._customEnd.get('value')),
                                    c = Date.UTC(c.getFullYear(), c.getMonth(), c.getDate()),
                                    f = Date.UTC(f.getFullYear(), f.getMonth(), f.getDate()),
                                    f = f + 864e5;
                                5184e6 < f - c &&
                                    ('s' === b ?
                                        ((f = c + 5184e6), this._customEnd.set(
                                            'value',
                                            new Date(f), !0
                                        )) :
                                        'e' === b &&
                                        ((c = f - 5184e6), this._customStart.set(
                                            'value',
                                            new Date(c), !0
                                        )));
                                this._dateQuery = { startTime: c, endTime: f, period: '1d' };
                                this._dateQuery.startTime > this._dateQuery.endTime ?
                                    this._showError({ message: this.i18n.invalidDateRange }) :
                                    this._dateQuery.endTime <= this._dateQuery.startTime ?
                                    this._showError({ message: this.i18n.invalidDateRange }) :
                                    this._query(this._dateQuery);
                            },
                            onCreditFilterChange: function(b) {
                                var e = this._selectCredit.options,
                                    f = this._selectCredit.get('displayedValue'),
                                    d = this._creditDetailsStore.get(this.i18n.all) || {},
                                    d = 'bw' === b ?
                                    this._formatBytes('mbyte', d[b + '_total']) :
                                    d[b + '_total'];
                                'num' === b
                                    ?
                                    c.attr(
                                        this._detailsSum,
                                        'innerHTML',
                                        esri.substitute({
                                                type: f,
                                                totalCredits: c.number.format(d, { places: 2 }),
                                            },
                                            '${type}: ${totalCredits}'
                                        )
                                    ) :
                                    c.attr(
                                        this._detailsSum,
                                        'innerHTML',
                                        esri.substitute({ totalCredits: c.number.format(d, { places: 2 }) },
                                            this.i18n['total' + b]
                                        )
                                    );
                                this._updateLineChart(this._lineChart, this._lineLegend);
                                c.forEach(
                                    e,
                                    c.hitch(this, function(a) {
                                        this._grid.styleColumn(
                                            a.value + '_total',
                                            'display: none;'
                                        );
                                        a.value === b && this._grid.sort(b + '_total', 'desc');
                                    })
                                );
                                this._grid.styleColumn(b + '_total', 'display:table-cell;');
                                this._grid.refresh();
                            },
                            onTaskFilterChange: function() {
                                var b;
                                'demogmaps' === this.stype ?
                                    'export' === this._selectTask.get('value') ?
                                    (b = this._drawItems) :
                                    'infographic' === this._selectTask.get('value') &&
                                    (b = this._queryItems) :
                                    'features' === this.stype &&
                                    (b = 'file' === this._storageTask.get('value') ?
                                        this._fileItems :
                                        this._dbItems);
                                this._convertResultToDataStore(b);
                                this.onCreditFilterChange(this._selectCredit.get('value'));
                            },
                            onCreditCategoryClick: function(b) {
                                var e = 'none',
                                    f = '900',
                                    d = this._detailCategories,
                                    a = b.split('_')[1];
                                c.style(this.spinnerNode, 'display', 'inline-block');
                                c.query('.hide').forEach(esri.hide);
                                this._selectedCategory = b;
                                this._resetLineChart(this._lineChart);
                                c.attr(this._creditDetailsLbl, 'innerHTML', this.i18n[b]); -
                                1 !== c.indexOf(d, b) && ((e = 'block'), (f = '400'));
                                return this._queryDetails(b, this._dateQuery).then(
                                    c.hitch(this, function() {
                                        c.query('.' + a).style('display', 'inline-block');
                                        c.query('.organizationDetails').forEach(esri.show);
                                        c.query('.details').style('display', e);
                                        c.style(this.spinnerNode, 'display', 'none');
                                        9 > c.isIE ?
                                            this._lineChart.resize({ w: f, h: '375' }) :
                                            this._lineChart.resize({ w: f });
                                        this._setFilterOptions(b);
                                        this.onCreditFilterChange(
                                            this._selectCredit.get('value')
                                        );
                                    })
                                );
                            },
                            onShowStatistics: function() {
                                this._dateQuery.startTime > this._dateQuery.endTime ?
                                    this._showError({ message: this.i18n.invalidDateRange }) :
                                    this._dateQuery.endTime < this._dateQuery.startTime ?
                                    this._showError({ message: this.i18n.invalidDateRange }) :
                                    (c.style(
                                        this.spinnerNode,
                                        'display',
                                        'inline-block'
                                    ), this._queryDate(this._dateQuery).then(
                                        c.hitch(this, function() {
                                            c
                                                .query('.organizationGraphs')
                                                .style('display', 'block');
                                            this._createPieChart();
                                            var b = this._getTotalCredits();
                                            c.attr(
                                                this._creditUsage,
                                                'innerHTML',
                                                esri.substitute({ org: this._organization.name, totalCredits: b },
                                                    this.i18n.creditUsage
                                                )
                                            );
                                            c
                                                .query('.creditssum')
                                                .attr(
                                                    'innerHTML',
                                                    esri.substitute({ total: b }, this.i18n.total)
                                                );
                                            this._selectedFilter = this._selectedServices = null;
                                            c.style(this.spinnerNode, 'display', 'none');
                                        })
                                    ));
                            },
                            _query: function(b) {
                                var e = 0;
                                c.style(this.spinnerNode, 'display', 'inline-block');
                                c.query('.organizationDetails').forEach(esri.hide);
                                return this._queryDate(b).then(
                                    c.hitch(this, function() {
                                        c.style(this.spinnerNode, 'display', 'none');
                                        e = this._getTotalCredits();
                                        c.attr(
                                            this._creditUsage,
                                            'innerHTML',
                                            esri.substitute({ org: this._organization.name, totalCredits: e },
                                                this.i18n.creditUsage
                                            )
                                        );
                                        c
                                            .query('.creditssum')
                                            .attr(
                                                'innerHTML',
                                                esri.substitute({ total: e }, this.i18n.total)
                                            );
                                    })
                                );
                            },
                            _queryDetails: function(b, e) {
                                var f = -1 < e.period.indexOf('d') ? '1d' : '1h',
                                    d = c.mixin([], this._creditFilters),
                                    a = {
                                        etype: b.split('_')[0],
                                        stype: (this._aggregateCategories[b.split('_')[1]] &&
                                                this._aggregateCategories[b.split('_')[1]].stype) ||
                                            b.split('_')[1],
                                        vars: d.join(','),
                                        period: f,
                                    },
                                    g;
                                this.stype = a.stype;
                                switch (this.stype) {
                                    case 'demogmaps':
                                        a.groupby = 'stype,etype,name,task';
                                        break;
                                    case 'spanalysis':
                                    case 'elevanalysis':
                                    case 'geoenrich':
                                        a.groupby = 'stype,etype,task';
                                        break;
                                    case 'geotrigger':
                                        a.groupby = 'stype,etype,name,deviceid';
                                }
                                'svcusg' !== a.etype ||
                                    ('tiles' !== a.stype && 'features' !== a.stype) ||
                                    (a.groupby = 'stype,etype,name');
                                return this._fetchCredits(e, a).then(
                                    c.hitch(this, function(b) {
                                        var d = -1,
                                            e = -1,
                                            f, h;
                                        this._drawItems = [];
                                        this._queryItems = [];
                                        this._dbItems = [];
                                        this._fileItems = [];
                                        for (
                                            f = b.length - 1; 0 <= f; f--
                                        )(h = b[f]), 'routing' === this.stype && ((g = this._aggregateCategories[h.stype]) ? c.mixin(h, { name: g.label, stype: 'routing' }) : b.splice(f, 1)), 'geoenrich' === this.stype && ('geoenrich' === h.task ? (d = f) : h.task || ((e = f), (h.task = 'geoenrich')), (h.name = this._geoenrichTasks[h.task])), 'spanalysis' === this.stype && (h.name = this._spanalysisTasks[h.task]), 'elevanalysis' === this.stype && (h.name = this._elevanalysisTasks[h.task]), 'demogmaps' === this.stype && ('export' === h.task ? this._drawItems.push(h) : 'infographic' === h.task && this._queryItems.push(h)), 'stg_features' ===
                                            this._selectedCategory &&
                                            (c.forEach(
                                                    h.stg,
                                                    c.hitch(this, function(a) {
                                                        a[1] = this._toFormat('gbyte', Number(a[1]));
                                                    })
                                                ), h.task && 'db' !== h.task ?
                                                'file' === h.task && this._fileItems.push(h) :
                                                this._dbItems.push(
                                                    h
                                                )), 'geotrigger' === this.stype && (h.name = this.i18n.deviceId + ': ' + h.deviceId);
                                        'geoenrich' === this.stype &&
                                            -1 !== d &&
                                            -1 !== e &&
                                            (b.push(this._combineItems([b[d], b[e]])), (f = d >= e ?
                                                e :
                                                d), b.splice(d >= e ? d : e, 1), b.splice(f, 1));
                                        'demogmaps' === this.stype ?
                                            (b = 'export' === this._selectTask.get('value') ?
                                                this._drawItems :
                                                'infographic' === this._selectTask.get('value') ?
                                                this._queryItems :
                                                this._drawItems) :
                                            'stg_features' === this._selectedCategory &&
                                            (b = 'file' === this._selectTask.get('value') ?
                                                this._fileItems :
                                                this._dbItems);
                                        this._selectedFilter = null;
                                        'svcusg' !== a.etype ||
                                            ('tiles' !== a.stype && 'features' !== a.stype) ||
                                            (this._selectedFilter = 'num');
                                        this._convertResultToDataStore(b);
                                        return !0;
                                    })
                                );
                            },
                            _convertResultToDataStore: function(b) {
                                b = c.clone(b);
                                var e = c.mixin([], this._creditFilters),
                                    h;
                                this._creditDetailsStore.setData([
                                    { id: this.i18n.all, visible: !0, all: !0 },
                                ]);
                                var d = this._creditDetailsStore.get(this.i18n.all);
                                this._creditDetails = c.mixin({}, b && b.length ? b[0] : {});
                                b && 0 !== b.length ?
                                    !b || 1 !== b.length || b[0].name || b[0].task ?
                                    (this._creditDetailsStore.setData([
                                        { id: this.i18n.all, visible: !0, all: !0 },
                                    ]), c.forEach(e, function(a) {
                                        d[a] = [];
                                    }), c.forEach(
                                        b,
                                        c.hitch(this, function(a) {
                                            h = this._postProcessItem(a, this._creditFilters);
                                            c.forEach(
                                                e,
                                                c.hitch(this, function(a) {
                                                    c.forEach(
                                                        h[a],
                                                        c.hitch(this, function(b, c) {
                                                            d[a][c] = (d[a][c] || 0) + h[a][c];
                                                        })
                                                    );
                                                    d[a + '_total'] = f.lang.functional.reduce(
                                                        d[a],
                                                        '+'
                                                    );
                                                })
                                            );
                                        })
                                    ), this._creditDetailsStore.put(d)) :
                                    ((this._item = b[0]), this._postProcessItem(
                                        this._item,
                                        e
                                    )) :
                                    this._postProcessItem(d, this._creditFilters);
                            },
                            _combineItems: function(b) {
                                if (b && 0 !== b.length) {
                                    var e, f = b[0],
                                        d;
                                    c.forEach(b, function(a, b) {
                                        if (0 < b)
                                            for (d in a)
                                                if (a.hasOwnProperty(d) && c.isArray(a[d]))
                                                    for (e = 0; e < a[d].length; e++)
                                                        f[d][e][1] = (parseFloat(f[d][e][1]) +
                                                            parseFloat(a[d][e][1])).toString();
                                    });
                                    return f;
                                }
                            },
                            _queryDate: function(b) {
                                var e, f, d, a, g, n, l;
                                return this._fetchCredits(b, this._usageParams).then(
                                    c.hitch(this, function(b) {
                                        this._creditStore.query({}).forEach(
                                            c.hitch(this, function(a) {
                                                c.mixin(a.value, { y: 0, units: 0, unitNum: 0 });
                                                this._creditStore.put(a);
                                            })
                                        );
                                        c.forEach(
                                            b,
                                            c.hitch(this, function(b) {
                                                l = b.stype;
                                                this._aggregateCategories[b.stype] &&
                                                    ((l = this._aggregateCategories[b.stype]
                                                            .stype), (b.name = this._aggregateCategories[
                                                            b.stype
                                                        ].label), this._aggregateCategories[l] &&
                                                        this._aggregateCategories[l].length ?
                                                        this._aggregateCategories[l].push(b) :
                                                        (this._aggregateCategories[l] = [b]), c.forEach(
                                                            this._aggregateCategories[b.stype].filters.split(
                                                                ','
                                                            ),
                                                            c.hitch(this, function(a) {
                                                                this._aggregateCategories[b.stype][
                                                                    a
                                                                ] = this._sumCredits(b[a]);
                                                            })
                                                        ));
                                                if ((e = this._creditStore.get(b.etype + '_' + l)))
                                                    (g = e.value.f.split('_')[0]), (a = e.value.f.split(
                                                        '_'
                                                    )[1]), (a = -1 === a.indexOf('byte') ?
                                                        'num' :
                                                        a), (d = this._sumCredits(b[g])), (d =
                                                        ('stg' === g && 1 < b[g].length ?
                                                            d / (b[g].length - 1) :
                                                            d) +
                                                        Number(
                                                            e.value.unitNum || 0
                                                        )), (f = this._toFormat(a, d)), (n =
                                                        this._sumCredits(b.credits) +
                                                        (e.value.y || 0)), c.mixin(e.value, {
                                                        y: parseInt(n, 10),
                                                    }), c.mixin(e.value, {
                                                        units: f,
                                                        unitNum: d,
                                                    }), this._creditStore.put(e);
                                            })
                                        );
                                        return !0;
                                    })
                                );
                            },
                            _findMostConsumed: function() {
                                var b = null;
                                this._creditStore.query(function(c) {
                                    b = b && b.value && b.value.y && b.value.y > c.value.y ?
                                        b :
                                        c;
                                });
                                return b;
                            },
                            _sumCredits: function(b) {
                                b = c.map(
                                    b || [],
                                    c.hitch(this, function(b) {
                                        return Number(b[1] || 0);
                                    })
                                );
                                return parseInt(
                                    c.number.round(f.lang.functional.reduce(b, '+') || 0, 0),
                                    10
                                );
                            },
                            _loadData: function() {
                                this._acct.getSelf(
                                    c.hitch(this, function(b) {
                                        this._organization = b;
                                        esriGeowConfig.userRole &&
                                            !esriGeowConfig.userRole.isAdmin() &&
                                            (window.location =
                                                'error.html?c\x3dAccessDeniedResource');
                                        return new c.DeferredList([
                                            this._fetchActiveUserCount().then(
                                                c.hitch(this, function(b) {
                                                    this._organization.activeUsers = b;
                                                    this._buildPage();
                                                })
                                            ),
                                            this._fetchUrls().then(
                                                c.hitch(this, function(b) {
                                                    this._accountUrls = c.mixin(
                                                        this._getDefaultAccountUrls(),
                                                        (b && b.urls) || {}
                                                    );
                                                    c.forEach(
                                                        ['http', 'https'],
                                                        c.hitch(this, function(b) {
                                                            c.forEach(
                                                                this._accountUrls.tiles[b],
                                                                c.hitch(this, function(c, a) {
                                                                    -1 < c.indexOf('tiles') &&
                                                                        (this._accountUrls.tiles[b][a] += '/tiles');
                                                                })
                                                            );
                                                        })
                                                    );
                                                    return this._accountUrls;
                                                })
                                            ),
                                        ]);
                                    }),
                                    c.hitch(this, function(b) {
                                        this._showError(b);
                                        throw b;
                                    })
                                );
                            },
                            _fetchItem: function(b, c) {
                                b = { q: this._getServiceUrls(b, c).join(' OR ') };
                                return this._request(this._searchUrl, b);
                            },
                            _getServiceUrls: function(b, e) {
                                var f = [],
                                    d = -1 !== e.indexOf('Feature') ? 'features' : 'tiles',
                                    a = { accountid: this._organization.id, name: b, type: e };
                                c.forEach(
                                    ['http', 'https'],
                                    c.hitch(this, function(b) {
                                        c.forEach(
                                            this._accountUrls[d][b],
                                            c.hitch(this, function(d) {
                                                f.push(
                                                    esri.substitute(
                                                        c.mixin(a, { protocol: b, server: d }),
                                                        'url:"${protocol}://${server}/${accountid}/arcgis/rest/services/${name}/${type}"'
                                                    )
                                                );
                                            })
                                        );
                                    })
                                );
                                return f;
                            },
                            _fetchActiveUserCount: function() {
                                return this._request(
                                    this._accountsUri + this._organization.id + '/users', { num: 1 }
                                ).then(
                                    c.hitch(this, function(b) {
                                        return (b && b.total) || 0;
                                    })
                                );
                            },
                            _fetchCredits: function(b, e) {
                                var f = !1;
                                e &&
                                    e.stype &&
                                    this._aggregateCategories[e.stype] &&
                                    this._aggregateCategories[e.stype].length &&
                                    (delete e.stype, (e.groupBy = 'stype, etype'), (f = !0));
                                b = c.mixin(c.mixin({}, b), e);
                                return this._request(this._usageUrl, b).then(
                                    c.hitch(this, function(b) {
                                        return f ?
                                            c.filter(
                                                b && b.data,
                                                c.hitch(this, function(a) {
                                                    return this._aggregateCategories[a.stype];
                                                })
                                            ) :
                                            (b && b.data) || [];
                                    })
                                );
                            },
                            _fetchUrls: function() {
                                return this._request(
                                    this._accountsUri + this._organization.id + '/urls'
                                );
                            },
                            _buildPage: function() {
                                this._readCookie();
                                this._createOrgDetails(this._organization);
                                this._createTopDiv();
                                this._createBottomDiv();
                                this._dateQuery =
                                    this._dateQuery || this._getDateQuery(this._dateQueryIdx);
                                this.onShowStatistics();
                            },
                            _createOrgDetails: function(b) {
                                if (b) {
                                    this._usageUrl = this._accountsUri + b.id + '/usage';
                                    this._thumbnailURL = b.thumbnail ?
                                        this._accountsUri +
                                        '/self/resources/' +
                                        b.thumbnail +
                                        '?token\x3d' +
                                        this._user.token :
                                        this.noThumbnail;
                                    this._subscriptionInfo = this._organization.subscriptionInfo;
                                    this._organization = c.mixin(b, {
                                        maxUsers: -1 === this._subscriptionInfo.maxUsers ?
                                            this.i18n.unlimited :
                                            this._subscriptionInfo.maxUsers,
                                    });
                                    this._organization.availableCredits = this._formatNumber(
                                        this._subscriptionInfo.availableCredits
                                    );
                                    this._organization.created = c.date.locale.format(
                                        new Date(this._organization.created), { selector: 'date', formatLength: 'medium' }
                                    );
                                    this._organization.expDate = c.date.locale.format(
                                        new Date(this._subscriptionInfo.expDate), { selector: 'date', formatLength: 'medium' }
                                    );
                                    var e =
                                        '\x3cli class\x3d"first esriBorderRight1"\x3e\x3cspan class\x3d"label"\x3e${createdLbl}\x3c/span\x3e\x3cspan class\x3d"value"\x3e${created}\x3c/span\x3e\x3c/li\x3e' +
                                        (this._subscriptionInfo.state &&
                                            'active' ===
                                            this._subscriptionInfo.state.toLowerCase() &&
                                            this._subscriptionInfo.type &&
                                            'trial developer' ===
                                            this._subscriptionInfo.type.toLowerCase() ?
                                            '' :
                                            '\x3cli class\x3d"esriBorderRight1"\x3e\x3cspan class\x3d"label"\x3e${expiresLbl}\x3c/span\x3e\x3cspan class\x3d"value"\x3e${expDate}\x3c/span\x3e\x3c/li\x3e') +
                                        '\x3cli class\x3d"esriBorderRight1"\x3e\x3cspan class\x3d"label"\x3e${membersLbl}\x3c/span\x3e\x3cspan class\x3d"value"\x3e${activeUsers}${ofLbl}${maxUsers}\x3c/span\x3e\x3c/li\x3e\x3cli class\x3d"last"\x3e\x3cspan class\x3d"label"\x3e${availableCreditsLbl}\x3c/span\x3e\x3cspan class\x3d"value"\x3e${availableCredits}\x3c/span\x3e\x3c/li\x3e',
                                        f =
                                        '\x3cimg src\x3d"' +
                                        (esriGeowConfig.allSSL ?
                                            this._thumbnailURL.replace('http:/', 'https:/') :
                                            this._thumbnailURL) +
                                        '" align\x3d"center" class\x3d"groupThumbnail"/\x3e ',
                                        f = f + b.name;
                                    c.place(f, 'orgTitle', 'first');
                                    c.attr(
                                        this._creditsSummary,
                                        'innerHTML',
                                        esri.substitute(
                                            c.mixin(
                                                c.mixin({}, this.i18n.usage),
                                                this._organization
                                            ),
                                            e
                                        )
                                    );
                                    c.attr(
                                        c.byId('_state'),
                                        'innerHTML',
                                        this.i18n.usage.trial
                                    );
                                    c.style(
                                        c.byId('_state'),
                                        'display', !this._subscriptionInfo.type ||
                                        ('trial' !== this._subscriptionInfo.type.toLowerCase() &&
                                            'trial press' !==
                                            this._subscriptionInfo.type.toLowerCase()) ?
                                        'none' :
                                        'inline-block'
                                    );
                                }
                            },
                            _createTopDiv: function() {
                                this._createCreditsTable();
                                this._prepareDateQueries(this._organization.created);
                                this._selectDate = new g.form.Select({ style: 'width:150px;', options: this._dateQueriesStore.data },
                                    this._selectDate
                                );
                                this._selectDate._onChangeActive = !1;
                                this._selectDate.set(
                                    'value',
                                    this._dateQueryIdx || 'last24hours', !0
                                );
                                this._selectDate._onChangeActive = !0;
                                this._creditFilters = c.map(
                                    this._creditFilterOptions,
                                    'return item.value'
                                );
                                this._connects.push(
                                    c.connect(
                                        this._selectDate,
                                        'onChange',
                                        this,
                                        'onDateRangeChange'
                                    )
                                );
                                this._connects.push(
                                    c.connect(
                                        this._customStart,
                                        'onChange',
                                        c.hitch(this, this.onCustomDateClick, 's')
                                    )
                                );
                                this._connects.push(
                                    c.connect(
                                        this._customEnd,
                                        'onChange',
                                        c.hitch(this, this.onCustomDateClick, 'e')
                                    )
                                );
                                this._connects.push(
                                    c.connect(window, 'onbeforeunload', this, '_writeCookie')
                                );
                            },
                            _createBottomDiv: function() {
                                this._selectCredit = new g.form.Select({ style: 'width:150px;', options: this._creditFilterOptions },
                                    this._selectCredit
                                );
                                this._selectTask = new g.form.Select({
                                        style: 'width:150px;',
                                        options: [
                                            { label: 'Map Draws', value: 'export' },
                                            { label: 'Map Queries', value: 'infographic' },
                                        ],
                                    },
                                    this._selectTask
                                );
                                this._storageTask = new g.form.Select({
                                        style: 'width:150px;',
                                        options: [
                                            { label: this.i18n.task_db, value: 'db' },
                                            { label: this.i18n.task_file, value: 'file' },
                                        ],
                                    },
                                    this._storageTask
                                );
                                this._createLineChart(this._detailsGraph);
                                this._createDetailsTable();
                                c.attr(
                                    this._creditDetailsLbl,
                                    'innerHTML',
                                    this.i18n.stg_tiles
                                );
                                c.query('.details').style('display', 'none');
                                this._lineChart.resize({ w: '900' });
                                this._connects.push(
                                    c.on(
                                        this._selectCredit,
                                        'change',
                                        c.hitch(this, 'onCreditFilterChange')
                                    )
                                );
                                this._connects.push(
                                    c.on(
                                        this._selectTask,
                                        'change',
                                        c.hitch(this, 'onTaskFilterChange')
                                    )
                                );
                                this._connects.push(
                                    c.on(
                                        this._storageTask,
                                        'change',
                                        c.hitch(this, 'onTaskFilterChange')
                                    )
                                );
                            },
                            _createPieChart: function() {
                                this._creditChart ||
                                    ((this._creditChart = new f.charting.Chart2D(
                                        this._creditsGraph
                                    )), this._creditChart.addPlot('default', {
                                        type: 'Pie',
                                        radius: 160,
                                        font: 'normal 10pt Verdana',
                                        fontColor: '#fff',
                                        labelOffset: 45,
                                    }), this._creditChart.addSeries(
                                        'Categories',
                                        new f.charting.StoreSeries(this._creditStore, {}, 'value')
                                    ), new f.charting.action2d.Tooltip(
                                        this._creditChart,
                                        'default', {
                                            text: c.hitch(this, function(b) {
                                                b = b.run && b.run.data && b.run.data[b.index];
                                                return (
                                                    b.categ +
                                                    ': \x3ci\x3e' +
                                                    b.y +
                                                    ' ' +
                                                    this.i18n.credits +
                                                    '\x3c/i\x3e'
                                                );
                                            }),
                                        }
                                    ), new f.charting.action2d.MoveSlice(
                                        this._creditChart,
                                        'default'
                                    ), this._creditChart.render(), this._creditChart.connectToPlot(
                                        'default',
                                        c.hitch(this, function(b) {
                                            var e = b.type;
                                            'onclick' === e
                                                ?
                                                ((b =
                                                    b.run.data[b.index] &&
                                                    b.run.data[b.index]
                                                    .id), this.onCreditCategoryClick(b)) :
                                                'onmouseover' === e ?
                                                c.style(this.domNode, 'cursor', 'pointer') :
                                                'onmouseout' === e &&
                                                c.style(this.domNode, 'cursor', 'default');
                                        })
                                    ));
                            },
                            _createCreditsTable: function() {
                                var b;
                                b =
                                    "\x3ctable class\x3d'creditsTable esriFloatTrailing' cellspacing\x3d3 cellpadding\x3d3 border\x3d0\x3e" +
                                    ('\x3ctr\x3e\x3ctd colspan\x3d"2"\x3e\x3c/td\x3e\x3ctd class\x3d"colhead esriAlignTrailing"\x3e' +
                                        this.i18n.units +
                                        '\x3c/td\x3e\x3ctd class\x3d"colhead esriAlignTrailing"\x3e' +
                                        this.i18n.credits +
                                        '\x3c/td\x3e\x3c/tr\x3e');
                                b += this._createCategory(this.i18n.storage, [
                                    'stg_tiles',
                                    'stg_features',
                                    'stg_portal',
                                ]);
                                b += this._createCategory(
                                    this.i18n.analytics,
                                    'geocodecnt_geocode svcusg_geoenrich svcusg_geotrigger svcusg_routing svcusg_spanalysis svcusg_elevanalysis'.split(
                                        ' '
                                    )
                                );
                                b += this._createCategory(this.i18n.premium, [
                                    'svcusg_demogmaps',
                                ]);
                                b += this._createCategory(this.i18n.published, [
                                    'svcusg_tiles',
                                    'svcusg_features',
                                    'tilegencnt_tiles',
                                ]);
                                b +=
                                    "\x3ctr\x3e\x3ctd class\x3d'creditssum esriAlignTrailing' colspan\x3d4 height\x3d50\x3e" +
                                    esri.substitute({ total: 0 }, this.i18n.total) +
                                    '\x3c/tr\x3e';
                                c.attr(this._creditsTable, 'innerHTML', b + '\x3c/table\x3e');
                                c.query('.catlink').connect(
                                    'onclick',
                                    this,
                                    c.hitch(this, function(b) {
                                        b.preventDefault();
                                        this._selectedCategory = b.currentTarget.hash.substring(1);
                                        this.onCreditCategoryClick(this._selectedCategory);
                                    })
                                );
                            },
                            _createCategory: function(b, e) {
                                var f =
                                    "\x3ctr\x3e\x3ctd class\x3d'categ' colspan\x3d3 height\x3d40\x3e" +
                                    b +
                                    '\x3c/td\x3e\x3c/tr\x3e';
                                c.forEach(
                                    e,
                                    c.hitch(this, function(b) {
                                        f += esri.substitute(
                                            c.mixin({ id: b }, this._creditStore.get(b).value),
                                            "\x3ctr class\x3d'categRow'\x3e\x3ctd class\x3d'chip' style\x3d'background-color:${fill}'\x3e\x26nbsp;\x3c/td\x3e\x3ctd\x3e\x3ca class\x3d'catlink' href\x3d'#${id}'\x3e${categ}\x3c/a\x3e\x3c/td\x3e\x3ctd class\x3d'esriAlignTrailing ${id}_u'\x3e${units}\x3c/td\x3e\x3ctd class\x3d'${id} esriAlignTrailing'\x3e${y}\x3c/td\x3e\x3c/tr\x3e"
                                        );
                                    })
                                );
                                return f;
                            },
                            _createDetailsTable: function() {
                                var b = {
                                    visible: dgrid.editor({ label: ' ', autoSave: !0, sortable: !1 },
                                        'checkbox'
                                    ),
                                    name: {
                                        label: this.i18n.itemName,
                                        formatter: c.hitch(this, '_toLink'),
                                    },
                                    num_total: { label: this.i18n.num },
                                    credits_total: { label: this.i18n.credits },
                                    bw_total: {
                                        label: this.i18n.bw,
                                        formatter: c.hitch(this, '_toFormat', 'mbyte'),
                                    },
                                };
                                this._grid = new(c.declare([
                                    dgrid.OnDemandGrid,
                                    dgrid.extensions.ColumnResizer,
                                    dgrid.Keyboard,
                                ]))({
                                        store: this._creditDetailsStore,
                                        columns: b,
                                        sort: 'num_total',
                                        query: function(b) {
                                            return !!b.name;
                                        },
                                    },
                                    c.create('div', {}, this._detailsTable)
                                );
                                this._grid.styleColumn('num_total', 'display: none;');
                                this._grid.styleColumn('bw_total', 'display: none;');
                                this._grid.on(
                                    '.dgrid-cell:click',
                                    c.hitch(this, function(b) {
                                        b = this._grid.cell(b);
                                        if ('name' === b.column.field && b.row && b.row.data) {
                                            var e = b.row.data,
                                                d;
                                            e.stype &&
                                                !this._aggregateCategories[e.stype] &&
                                                'geoenrich' !== this.stype &&
                                                'spanalysis' !== this.stype &&
                                                'elevanalysis' !== this.stype &&
                                                'demogmaps' !== this.stype &&
                                                'geotrigger' !== this.stype &&
                                                this._fetchItem(
                                                    e.name, -1 !== this._selectedCategory.indexOf('_features') ?
                                                    'FeatureServer' :
                                                    'MapServer'
                                                ).then(
                                                    c.hitch(this, function(a) {
                                                        a &&
                                                            a.results &&
                                                            a.results.length &&
                                                            (d = c.filter(
                                                                a.results,
                                                                c.hitch(this, function(a) {
                                                                    if (
                                                                        (a &&
                                                                            (a.title === e.name ||
                                                                                a.title ===
                                                                                this._convertUnderscores(e.name))) ||
                                                                        a.name === e.name ||
                                                                        a.name === this._convertUnderscores(e.name)
                                                                    )
                                                                        return a;
                                                                })
                                                            ));
                                                        d && d.length ?
                                                            (window.location = 'item.html?id\x3d' + d[0].id) :
                                                            this._showError({
                                                                message: this.i18n.serviceNotFound,
                                                            });
                                                    })
                                                );
                                        }
                                    })
                                );
                            },
                            _convertUnderscores: function(b) {
                                return b ? b.replace(/_/g, ' ') : b;
                            },
                            _setFilterOptions: function(b) {
                                var e = this._getCreditLabel(b);
                                this._selectCredit.set('options', this._creditFilterOptions);
                                this._selectCredit.removeOption('stg');
                                this._selectCredit.removeOption('bw');
                                'stg_features' === b
                                    ?
                                    (this._selectCredit.removeOption(
                                        'num'
                                    ), this._selectCredit.addOption(
                                        this._creditFilterOptions[3]
                                    )) :
                                    ('svcusg_tiles' !== b && 'svcusg_features' !== b) ||
                                    this._selectCredit.addOption(
                                        this._creditFilterOptions[2]
                                    );
                                this._creditFilterOptions[1].label = e;
                                this._grid.column('num_total').label = e;
                                this._grid.setColumns(this._grid.columns);
                                this._selectCredit.set(
                                    'value',
                                    this._selectedFilter || 'credits'
                                );
                                c
                                    .query('.filter')
                                    .style(
                                        'display', -1 !== this._selectedCategory.indexOf('stg') ?
                                        'none' :
                                        'block'
                                    );
                                'demogmaps' === this.stype ?
                                    (c.style(this._creditSelect, 'display', ''), c.style(
                                        this._creditSelect,
                                        'float',
                                        'left'
                                    ), c.style(
                                        this._deomgmapsTaskSelect,
                                        'display',
                                        'block'
                                    ), c.style(this._storageTaskSelect, 'display', 'none')) :
                                    'stg_features' === b ?
                                    (c
                                        .query('.filter')
                                        .style('display', 'block'), c.style(
                                            this._deomgmapsTaskSelect,
                                            'display',
                                            'none'
                                        ), c.style(
                                            this._creditSelect,
                                            'display',
                                            ''
                                        ), c.style(
                                            this._creditSelect,
                                            'float',
                                            'left'
                                        ), c.style(
                                            this._storageTaskSelect,
                                            'display',
                                            'block'
                                        )) :
                                    (c.style(
                                        this._deomgmapsTaskSelect,
                                        'display',
                                        'none'
                                    ), c.style(
                                        this._storageTaskSelect,
                                        'display',
                                        'none'
                                    ), c.style(
                                        this._creditSelect,
                                        'display',
                                        ''
                                    ), c.style(this._creditSelect, 'float', 'none'));
                            },
                            _getCreditLabel: function(b) {
                                b = this._creditStore.get(b);
                                return (
                                    this.i18n['num_' + b.value.f.split('_')[1]] || this.i18n.num
                                );
                            },
                            _updateLineChart: function(b, c) {
                                this._updateLineChartY(b);
                                this._updateLineChartX(b);
                                this._lineChart.setSeriesOrder(this._seriesOrder);
                                c.series = b.series;
                                b.render();
                                c.refresh();
                            },
                            _updateLineChartY: function(b) {
                                var e, f = this._selectCredit.get('value');
                                this._creditDetailsStore.query(
                                    c.hitch(this, function(d) {
                                        d.visible ?
                                            ((e = this._getYAxis(d.id, f)), d.id ===
                                                this.i18n.all &&
                                                b.addAxis('y', {
                                                    min: e.min,
                                                    max: e.max,
                                                    vertical: !0,
                                                }), b.getSeries(d.id) ?
                                                b.updateSeries(d.id, e.data) :
                                                (b.addSeries(
                                                    d.id,
                                                    e.data,
                                                    d.id === this.i18n.all ?
                                                    { stroke: { color: 'black' }, fill: 'black' } :
                                                    {}
                                                ), this._seriesOrder.unshift(d.id))) :
                                            (b.removeSeries(d.id), (d = c.indexOf(
                                                this._seriesOrder,
                                                d.id
                                            )), -1 !== d && this._seriesOrder.splice(d, 1));
                                    })
                                );
                            },
                            _updateLineChartX: function(b) {
                                var c = this._getXAxis(this._dateQuery);
                                b.addAxis('x', { min: c.min, max: c.max, labels: c.data || [] });
                            },
                            _getTotalCredits: function() {
                                var b = 0;
                                this._creditStore.query().forEach(function(c) {
                                    b += c.value.y || 0;
                                });
                                c.query('.nodatapie').style('display', b ? 'none' : 'block');
                                c
                                    .query('.creditGraph')
                                    .style('display', b ? 'block' : 'none');
                                return this._formatNumber(b);
                            },
                            _readCookie: function() {
                                this._dateQueryIdx =
                                    ((this._cookie =
                                            (this._cookie = this._util.getCookie('ESRI_Content')) &&
                                            this._cookie.organizationStatus) &&
                                        this._cookie.dateQuery) ||
                                    'last24hours';
                                'custom' === this._dateQueryIdx &&
                                    (this._cookie.startTime &&
                                        this._cookie.endTime &&
                                        this._cookie.period ?
                                        ((this._dateQuery = {
                                            startTime: this._cookie.startTime,
                                            endTime: this._cookie.endTime,
                                            period: this._cookie.period,
                                        }), this.onDateRangeChange(this._dateQueryIdx, !0)) :
                                        (this._dateQueryIdx = 'last24hours'));
                                this._selectedCategory =
                                    (this._cookie && this._cookie.category) ||
                                    this._findMostConsumed().value.id;
                                this._selectedFilter =
                                    (this._cookie && this._cookie.filter) || 'credits';
                                this._selectedServices =
                                    (this._cookie &&
                                        this._cookie.services &&
                                        this._cookie.services.split(',')) ||
                                    null;
                            },
                            _writeCookie: function() {
                                var b = this._creditDetailsStore
                                    .query({ visible: !0 })
                                    .map(function(b) {
                                        return b.id;
                                    }),
                                    e = this._selectDate.get('value');
                                this._cookie = (this._cookie = this._util.getCookie(
                                    'ESRI_Content'
                                )) || {};
                                this._cookie.organizationStatus = {
                                    dateQuery: e,
                                    category: this._selectedCategory,
                                    filter: this._selectCredit.get('value'),
                                    services: b.join(','),
                                };
                                'custom' === e &&
                                    (this._cookie.organizationStatus = c.mixin(
                                        this._cookie.organizationStatus,
                                        this._dateQuery
                                    ));
                                c.cookie('ESRI_Content', c.json.stringify(this._cookie), {
                                    path: '/',
                                });
                            },
                            _toLink: function(b) {
                                var c =
                                    (this._selectedCategory &&
                                        this._selectedCategory.split('_')[1]) ||
                                    '';
                                return this._aggregateCategories[c] ||
                                    'geoenrich' === this.stype ||
                                    'spanalysis' === this.stype ||
                                    'elevanalysis' === this.stype ||
                                    'demogmaps' === this.stype ||
                                    'geotrigger' === this.stype ?
                                    b :
                                    "\x3ca onclick\x3d'return false;' href\x3d'#'\x3e" +
                                    b +
                                    '\x3c/a\x3e';
                            },
                            _initHelpMgr: function() {
                                var b = arcgisonline.sharing.dijit.HelpManager.prototype.statics.getInstance(),
                                    e = setInterval(
                                        c.hitch(this, function() {
                                            if (b.isLoaded()) {
                                                clearInterval(e);
                                                var f = b.getHelpUrl('120000503');
                                                c.query('.helpLink').attr('href', f);
                                            }
                                        }),
                                        200
                                    );
                            },
                            _getDefaultAccountUrls: function() {
                                var b = esriGeowConfig.portalHostname,
                                    c = '',
                                    f = {
                                        features: { http: [], https: [] },
                                        tiles: { http: [], https: [] },
                                    }; -
                                1 !== b.indexOf('dev') ?
                                    (c = 'dev') :
                                    -1 !== b.indexOf('qa') && (c = 'qa');
                                f.features.http.push('services' + c + '.arcgis.com');
                                f.features.https.push('services' + c + '.arcgis.com');
                                f.tiles.http.push('tiles' + c + '.arcgis.com');
                                f.tiles.https.push('tiles' + c + '.arcgis.com');
                                return f;
                            },
                            _request: function(b, e) {
                                e = c.mixin(e || {}, this._requestParams);
                                return this._util.request({ url: b, content: e }).then(
                                    c.hitch(this, function(b) {
                                        return b.error ? this._showError(b.error) : b;
                                    }),
                                    c.hitch(this, function(b) {
                                        this._showError(b);
                                        throw Error();
                                    })
                                );
                            },
                            _showError: function(b) {
                                b = b.error || b || {};
                                b.code = b.code || 0;
                                b = c.mixin(c.mixin({}, this.i18n.errors.error), b);
                                this._errorDlg.show(b);
                            },
                        }
                    );
                }
            );
        },
        'dojox/charting/StoreSeries': function() {
            define(
                ['dojo/_base/array', 'dojo/_base/declare', 'dojo/_base/Deferred'],
                function(c, g, f) {
                    return g('dojox.charting.StoreSeries', null, {
                        constructor: function(b, c, f) {
                            this.store = b;
                            this.kwArgs = c;
                            this.value = f ?
                                'function' == typeof f ?
                                f :
                                'object' == typeof f ?

                                function(b) {
                                    var a = {},
                                        c;
                                    for (c in f)
                                        a[c] = b[f[c]];
                                    return a;
                                } :
                                function(b) {
                                    return b[f];
                                } :
                                function(b) {
                                    return b.value;
                                };
                            this.data = [];
                            this._initialRendering = !0;
                            this.fetch();
                        },
                        destroy: function() {
                            this.observeHandle && this.observeHandle.remove();
                        },
                        setSeriesObject: function(b) {
                            this.series = b;
                        },
                        fetch: function(b, e) {
                            function h() {
                                d.data = c.map(d.objects, function(a) {
                                    return d.value(a, d.store);
                                });
                                d._pushDataChanges();
                            }
                            var d = this;
                            this.observeHandle && this.observeHandle.remove();
                            b = this.store.query(b || this.kwArgs.query, e || this.kwArgs);
                            f.when(b, function(a) {
                                d.objects = a;
                                h();
                            });
                            b.observe && (this.observeHandle = b.observe(h, !0));
                        },
                        _pushDataChanges: function() {
                            this.series &&
                                (this.series.chart.updateSeries(
                                    this.series.name,
                                    this,
                                    this._initialRendering
                                ), (this._initialRendering = !1), this.series.chart.delayedRender());
                        },
                    });
                }
            );
        },
        'arcgisonline/sharing/dijit/dialog/_UsageDlgMixin': function() {
            define(
                [
                    'dojo',
                    'dijit',
                    'dojox',
                    'dojo/require!dojox/lang/functional,dojo/store/Observable,dojo/store/Memory,dojox/charting/StoreSeries,dojox/charting/widget/Chart2D,dojox/charting/themes/ThreeD,dojox/charting/action2d/MouseZoomAndPan,dojox/charting/action2d/TouchZoomAndPan,dojox/charting/action2d/MouseIndicator,dojo/on,dojo/mouse',
                ],
                function(c, g, f) {
                    c.provide('arcgisonline.sharing.dijit.dialog._UsageDlgMixin');
                    c.require('dojox.lang.functional');
                    c.require('dojo.store.Observable');
                    c.require('dojo.store.Memory');
                    c.require('dojox.charting.StoreSeries');
                    c.require('dojox.charting.widget.Chart2D');
                    c.require('dojox.charting.themes.ThreeD');
                    c.require('dojox.charting.action2d.MouseZoomAndPan');
                    c.require('dojox.charting.action2d.TouchZoomAndPan');
                    c.require('dojox.charting.action2d.MouseIndicator');
                    c.require('dojo.on');
                    c.require('dojo.mouse');
                    c.declare('arcgisonline.sharing.dijit.dialog._UsageDlgMixin', null, {
                        _prepareStores: function() {
                            this._dateQueries = [{
                                    id: 'last24hours',
                                    selected: !0,
                                    label: this.i18n.last24Hours,
                                    value: 'last24hours',
                                },
                                {
                                    id: 'last7days',
                                    label: this.i18n.last7Days,
                                    value: 'last7days',
                                },
                                {
                                    id: 'last30days',
                                    label: this.i18n.last30Days,
                                    value: 'last30days',
                                },
                                {
                                    id: 'curmo',
                                    label: this.i18n.currentMonth,
                                    value: 'curmo',
                                    param: {
                                        startTime: this._getFirstDay(),
                                        endTime: this._getToday(),
                                        period: new Date().getDate() - 1 + 'd',
                                    },
                                },
                            ];
                            this._creditFilterOptions = 'views' === this.stype ?
                                [{ label: this.i18n.views, value: 'num' }] :
                                [
                                    { label: this.i18n.num, value: 'num' },
                                    { label: this.i18n.stg, value: 'stg' },
                                ];
                            this._startQueryDate = new Date(
                                new Date().setDate(
                                    new Date(this._getToday()).getDate() - 60
                                )
                            );
                            this._dataCollectionStartDate = new Date(this._startQueryDate);
                            this._dateQueriesStore = new c.store.Memory({
                                data: { identifier: 'id', items: this._dateQueries },
                            });
                            this._creditDetailsStore = new c.store.Observable(
                                new c.store.Memory({
                                    data: { label: 'alias', identifier: 'id', items: [] },
                                })
                            );
                            this._seriesOrder = [];
                            this._isAdmin =
                                (this._currentUser = this._util.getUser()) &&
                                this._currentUser.accountId &&
                                'account_admin' === this._currentUser.role;
                        },
                        _prepareDateQueries: function(b) {
                            b = new Date(this._getFirstDay(new Date(b)));
                            b = b >= this._dataCollectionStartDate ?
                                b :
                                this._dataCollectionStartDate;
                            var e = new Date(),
                                f;
                            f = {};
                            for (e.setMonth(e.getMonth() - 1); b < e;)
                                'ja' === c.locale ?
                                ((f = c.date.locale.format(e, {
                                    selector: 'date',
                                    formatLength: 'long',
                                })), (f = f.substr(0, 8 < e.getMonth() ? 8 : 7))) :
                                (f = c.date.locale.format(e, {
                                    selector: 'date',
                                    formatLength: 'short',
                                    datePattern: 'MMMM_yyy',
                                })), (f = {
                                    id: f,
                                    label: f.replace('_', ' '),
                                    value: f,
                                    param: {
                                        startTime: this._getFirstDay(e),
                                        endTime: this._getLastDay(e),
                                        period: '1d',
                                    },
                                }), this._dateQueriesStore.put(f), e.setMonth(
                                    e.getMonth() - 1
                                );
                            this._dateQueriesStore.put({
                                id: 'custom',
                                label: this.i18n.customDates,
                                value: 'custom',
                            });
                        },
                        _getDateQuery: function(b) {
                            var e = null;
                            switch (b) {
                                case 'last24hours':
                                    e = c.mixin(this._getTime(24, 'h'), { period: '1h' });
                                    break;
                                case 'last7days':
                                    e = c.mixin(this._getTime(7, 'd'), { period: '1d' });
                                    break;
                                case 'last30days':
                                    e = c.mixin(this._getTime(30, 'd'), { period: '1d' });
                                    break;
                                case 'curmo':
                                    e = {
                                        startTime: this._getFirstDay(),
                                        endTime: this._getGMTEndToday(),
                                        period: '1d',
                                    };
                                    break;
                                default:
                                    e = this._dateQueriesStore.get(b).param;
                            }
                            return e;
                        },
                        _getGMTEndToday: function() {
                            var b = new Date(
                                    new Date().getTime() + 6e4 * new Date().getTimezoneOffset()
                                ),
                                b = new Date(
                                    Date.UTC(b.getFullYear(), b.getMonth(), b.getDate())
                                );
                            b.setTime(b.getTime() + 864e5);
                            return b.getTime();
                        },
                        _getTime: function(b, c, f) {
                            var d = f || new Date();
                            f = new Date(d);
                            d = new Date(d);
                            'd' === c
                                ?
                                ((d = this._getGMTEndToday()), (f = new Date(
                                    d - 864e5 * b
                                ))) :
                                'h' === c && f.setHours(d.getHours() - b + 1);
                            return {
                                startTime: new Date(f).getTime(),
                                endTime: new Date(d).getTime(),
                            };
                        },
                        _getFirstDay: function(b) {
                            b = b || new Date();
                            return Date.UTC(b.getFullYear(), b.getMonth(), 1);
                        },
                        _getLastDay: function(b) {
                            b = b || new Date();
                            return Date.UTC(b.getFullYear(), b.getMonth() + 1, 1);
                        },
                        _getToday: function(b) {
                            b = b || new Date();
                            return new Date(
                                b.getFullYear(),
                                b.getMonth(),
                                b.getDate() + 1,
                                0,
                                0,
                                0, -1
                            ).getTime();
                        },
                        _getXAxisLabel: function(b, e) {
                            var f = (b = new Date(
                                b + 6e4 * new Date().getTimezoneOffset()
                            )); -
                            1 < e.indexOf('m') ?
                                (f = c.date.locale.format(b, {
                                    selector: 'date',
                                    formatLength: 'short',
                                    datePattern: 'MMMM',
                                })) :
                                -1 < e.indexOf('d') ?
                                (f = this._formatDayLabel(b)) :
                                -1 < e.indexOf('h') &&
                                (f = c.date.locale.format(b, {
                                    selector: 'date',
                                    formatLength: 'short',
                                    datePattern: 'k',
                                }));
                            return f;
                        },
                        _getXAxis: function(b) {
                            var e = new Date(
                                    b.startTime + 6e4 * new Date().getTimezoneOffset()
                                ),
                                f = new Date(
                                    b.endTime + 6e4 * new Date().getTimezoneOffset()
                                );
                            b = b.period;
                            var d = 1,
                                a = [];
                            if (!(-1 < b.indexOf('y')))
                                if (-1 < b.indexOf('m'))
                                    for (; e <= f;)
                                        a.push({
                                            value: c.date.locale.format(e, {
                                                selector: 'date',
                                                formatLength: 'short',
                                                datePattern: 'MMMM',
                                            }),
                                        }), e.setMonth(e.getMonth() + 1);
                                else if (-1 < b.indexOf('d'))
                                for (f = f.setDate(f.getDate() + 1); e <= f;)
                                    a.push({
                                        value: d++,
                                        text: this._formatDayLabel(e),
                                    }), e.setDate(e.getDate() + 1);
                            else if (-1 < b.indexOf('h'))
                                for (f = f.setHours(f.getHours() + 1); e <= f;)
                                    a.push({
                                        value: d++,
                                        text: c.date.locale.format(e, {
                                            selector: 'date',
                                            formatLength: 'short',
                                            datePattern: 'k',
                                        }),
                                    }), e.setHours(e.getHours() + 1);
                            return { data: a, max: a.length, min: 1 };
                        },
                        _formatDayLabel: function(b) {
                            var e = c.date.locale.format(b, {
                                selector: 'date',
                                formatLength: 'short',
                                datePattern: 'd',
                            });
                            b = c.date.locale.format(b, {
                                selector: 'date',
                                formatLength: 'short',
                                datePattern: 'EEE',
                            });
                            return (
                                e +
                                (c.isIE || (7 <= c.has('trident') && void 0 === c.isIE) ?
                                    ' - ' :
                                    '\x3cbr/\x3e') +
                                b
                            );
                        },
                        _getYAxis: function(b, e) {
                            b = this._creditDetailsStore.get(b);
                            var h;
                            b = (b && b[e]) || [];
                            'bw' === e &&
                                (b = c.map(b, function(b) {
                                    return b ? c.number.round(b / 1048576, 3) : 0;
                                }));
                            h = 1.1 * f.lang.functional.reduce(b, 'Math.max(a,b)') || 1;
                            e = f.lang.functional.reduce(b, 'Math.min(a,b)') || 0;
                            return { data: b, max: 1 > h ? 1 : h, min: 1 > e ? 0 : e };
                        },
                        _postProcessItem: function(b, e) {
                            b.id = b.name || this.i18n.all;
                            c.forEach(
                                e,
                                c.hitch(this, function(e) {
                                    b[e] = c.map(
                                        b[e],
                                        'return dojo.number.round(Number(item[1] || 0), 2);'
                                    );
                                    b[e + '_total'] = c.number.round(
                                        f.lang.functional.reduce(b[e], '+') || 0,
                                        2
                                    );
                                })
                            );
                            e = this._creditDetailsStore.get(b.id);
                            b = c.mixin(e, b);
                            b.visible =
                                b.visible ||
                                (this._selectedServices &&
                                    -1 !== c.indexOf(this._selectedServices, b.id)) ||
                                !1;
                            this._creditDetailsStore.put(b);
                            return b;
                        },
                        _clearUsageChart: function() {
                            this._uChart &&
                                (this._onMouseIndicatorChange.remove(), this._mouseIndicatorTooltip.close(), this._mouseIndicatorTooltip.destroy(), this._mouseIndicator.destroy(), this._uChart.destroy(), (this._uChart = null));
                        },
                        _createUsageChart: function(b, e, h, d) {
                            this._uChart &&
                                (this._onMouseOut.remove(), this._onMouseIndicatorChange.remove(), this._mouseIndicatorTooltip.close(), this._mouseIndicatorTooltip.destroy(), this._mouseIndicator.destroy(), this._uChart.destroy(), (this._uChart = null));
                            var a = [],
                                k = [],
                                n = 0;
                            c.forEach(
                                b[0][e],
                                c.hitch(this, function(b) {
                                    a.push(this._getXAxisLabel(Number(b[0]), h.period));
                                    k.push(Number(b[1]));
                                    Number(b[1]) > n && (n = Number(b[1]));
                                })
                            );
                            var l = (this._uChart = new f.charting.Chart2D(d));
                            l.addPlot('default', {
                                type: f.charting.plot2d.Lines,
                                markers: !0,
                            });
                            l.addAxis('x', {
                                includeZero: !1,
                                labels: a,
                                minorTicks: !1,
                                fontColor: '#A6A6A6',
                                font: "normal normal normal 1.0em 'Lucida Grande', 'Segoe UI', 'Arial', sans-serif",
                                majorTickStep: 1,
                                stroke: { color: '#D5D5D5', width: 1 },
                                max: a.length + 0.5,
                                labelFunc: c.hitch(this, function(b, c) {
                                    return a[c - 1] || ' ';
                                }),
                            });
                            l.addAxis('y', {
                                vertical: !0,
                                leftBottom: !0,
                                includeZero: !0,
                                majorLabels: !0,
                                minorTicks: !1,
                                minorLabels: !1,
                                natural: !0,
                                font: "normal normal normal 1.0em 'Lucida Grande', 'Segoe UI', 'Arial', sans-serif",
                                fontColor: '#A6A6A6',
                                max: Number(n + 2),
                            });
                            l.addSeries('Series A', k, {
                                stroke: { color: '#D4D4D4', width: 2 },
                                fill: '#56A5DB',
                            });
                            this._mouseIndicator = new f.charting.action2d
                                .MouseIndicator(l, 'default', {
                                    series: 'Series A',
                                    lines: !1,
                                    labels: !1,
                                    markers: !1,
                                    start: !1,
                                    stroke: { type: 'stroke', color: '#56A5DB', width: 2 },
                                    fill: '#56A5DB',
                                    fontColor: '#FFFFFF',
                                    markerFill: '#A6A6A6',
                                    markerOutline: { type: 'stroke', color: '#56A5DB', width: 2 },
                                    mouseOver: !0,
                                });
                            this._mouseIndicatorTooltip = new g.Tooltip();
                            this._onMouseIndicatorChange = c.on(
                                this._mouseIndicator,
                                'Change',
                                c.hitch(this, function(a) {
                                    if (a.label) {
                                        var c = l.getPlot('default').toPage({ x: a.start.x, y: m });
                                        c.w = 1;
                                        c.h = 1;
                                        this._mouseIndicatorTooltip.label = this._formatValue(
                                            a.start.y,
                                            b[0][e][a.start.x - 1][0]
                                        );
                                        this._mouseIndicatorTooltip.position = ['above-centered'];
                                        p
                                            ?
                                            ((g.Tooltip._masterTT.containerNode.innerHTML = this._mouseIndicatorTooltip.label), g.place.around(
                                                g.Tooltip._masterTT.domNode,
                                                c, ['above-centered']
                                            )) :
                                            ((p = !0), this._mouseIndicatorTooltip.open(c));
                                    } else this._mouseIndicatorTooltip.close(), (p = !1);
                                })
                            );
                            l.render();
                            var m = l.getAxis('y').getScaler().bounds.to,
                                p = !1;
                            this._onMouseOut = c.on(
                                d,
                                c.mouse.leave,
                                c.hitch(this, function(a) {
                                    this._mouseIndicatorTooltip.close();
                                    p = !1;
                                })
                            );
                        },
                        _createLineChart: function(b) {
                            this._lineChart = new f.charting.Chart2D(b)
                                .setTheme(f.charting.themes.ThreeD)
                                .addAxis('y', { min: 0, max: 1, vertical: !0 })
                                .addPlot('default', {
                                    type: 'Lines',
                                    markers: !0,
                                    tension: 'S',
                                });
                            new f.charting.action2d.Tooltip(this._lineChart, 'default', {
                                text: c.hitch(this, function(b) {
                                    var e,
                                        d = b.run && b.run.data && b.run.data[b.index],
                                        a = this._selectCredit ?
                                        this._selectCredit.get('value') :
                                        '',
                                        f = this._creditDetails;
                                    f[a] &&
                                        f[a][b.index] &&
                                        f[a][b.index].length &&
                                        ((e = new Date(
                                            parseInt(f[a][b.index][0], 10) +
                                            6e4 * new Date().getTimezoneOffset()
                                        )), e.setDate(e.getDate()));
                                    f.stype = f.stype || this.stype;
                                    b = -1 !== f.stype.indexOf('routing') ?
                                        'routes' :
                                        -1 !== f.stype.indexOf('geocode') ?
                                        'locations' :
                                        -1 !== f.stype.indexOf('tiles') ?
                                        'tiles' :
                                        -1 !== f.stype.indexOf('features') ?
                                        'features' :
                                        -1 !== f.stype.indexOf('demogmaps') ?
                                        'maps' :
                                        -1 !== f.stype.indexOf('geoenrich') ?
                                        'queries' :
                                        -1 !== f.stype.indexOf('views') ?
                                        'viewstooltip' :
                                        '';
                                    return this._formatCreditTooltip(
                                        a,
                                        c.number.format(d, { pattern: '#,###,###,###.##' }),
                                        e,
                                        b
                                    );
                                }),
                            });
                            new f.charting.action2d.Magnify(this._lineChart, 'default');
                            esri.isTouchEnabled ?
                                new f.charting.action2d.TouchZoomAndPan(
                                    this._lineChart,
                                    'default'
                                ) :
                                new f.charting.action2d.MouseZoomAndPan(
                                    this._lineChart,
                                    'default'
                                );
                            this._lineChart.render();
                            this._lineLegend = new f.charting.widget.Legend({
                                    class: 'legend details esriFloatLeading',
                                    chart: this._lineChart,
                                    horizontal: 2,
                                    outline: !1,
                                },
                                this._lineLegend
                            );
                            return this._lineChart;
                        },
                        _formatValue: function(b, e) {
                            var f = this._selectCredit ?
                                this._selectCredit.get('value') :
                                '',
                                d = this._creditDetails;
                            e &&
                                ((e = new Date(
                                    Number(e) + 6e4 * new Date().getTimezoneOffset()
                                )), e.setDate(e.getDate()));
                            d.stype = d.stype || this.stype;
                            d = -1 !== d.stype.indexOf('routing') ?
                                'routes' :
                                -1 !== d.stype.indexOf('geocode') ?
                                'locations' :
                                -1 !== d.stype.indexOf('tiles') ?
                                'tiles' :
                                -1 !== d.stype.indexOf('features') ?
                                'features' :
                                -1 !== d.stype.indexOf('demogmaps') ?
                                'maps' :
                                -1 !== d.stype.indexOf('geoenrich') ?
                                'queries' :
                                -1 !== d.stype.indexOf('views') ?
                                'viewstooltip' :
                                '';
                            return this._formatCreditTooltip(
                                f,
                                c.number.format(b, { pattern: '#,###,###,###.##' }),
                                e,
                                d
                            );
                        },
                        _formatCreditTooltip: function(b, e, f, d) {
                            var a;
                            f &&
                                (a =
                                    c.date.locale.format(f, {
                                        datePattern: 'yyyy-MM-dd',
                                        selector: 'date',
                                    }) + ' GMT');
                            'bw' === b
                                ?
                                (e = esri.substitute({ units: e }, this.i18n.mbyte)) :
                                'num' === b ?
                                (e = esri.substitute({ units: e },
                                    this.i18n[d] || this.i18n.requeststooltip
                                )) :
                                'credits' === b ?
                                (e = esri.substitute({ units: e },
                                    this.i18n.creditstooltip
                                )) :
                                'views' === b &&
                                (e = esri.substitute({ units: e },
                                    this.i18n.viewstooltip
                                ));
                            return (
                                '\x3cdiv style\x3d"text-align: center"\x3e' +
                                e +
                                (a ? '\x3cbr /\x3e' + a : '') +
                                '\x3c/div\x3e'
                            );
                        },
                        _formatNumber: function(b) {
                            return c.number.format(parseInt(b, 10), {
                                pattern: '#,###,###,##0',
                            });
                        },
                        _formatBytes: function(b, e) {
                            return c.number.format(
                                e / ('mbyte' === b ? 1048576 : 1073741824), { pattern: '#,###,###,###.##' }
                            );
                        },
                        _toFormat: function(b, c) {
                            if (c)
                                return 'num' === b ?
                                    this._formatNumber(c) :
                                    this._formatBytes(b, c);
                        },
                        _resetLineChart: function() {
                            for (var b in this._lineChart.runs)
                                this._lineChart.removeSeries(b);
                        },
                    });
                }
            );
        },
        'dojox/charting/widget/Chart2D': function() {
            define(
                'dojo/_base/kernel dojo/_base/lang ./Chart ../Chart2D ../action2d/Highlight ../action2d/Magnify ../action2d/MoveSlice ../action2d/Shake ../action2d/Tooltip'.split(
                    ' '
                ),
                function(c, g, f) {
                    c.deprecated(
                        'dojox.charting.widget.Chart2D',
                        'Use dojo.charting.widget.Chart instead and require all other components explicitly',
                        '2.0'
                    );
                    return g.setObject('dojox.charting.widget.Chart2D', f);
                }
            );
        },
        'dojox/charting/widget/Chart': function() {
            define(
                'dojo/_base/kernel dojo/_base/lang dojo/_base/array dojo/dom-attr dojo/_base/declare dojo/query dijit/_WidgetBase ../Chart dojo/has dojo/has!dojo-bidi?../bidi/widget/Chart dojox/lang/utils dojox/lang/functional dojox/lang/functional/lambda'.split(
                    ' '
                ),
                function(c, g, f, b, e, h, d, a, k, n, l, m, p) {
                    var r,
                        u,
                        t,
                        q,
                        v,
                        C = function(a) {
                            return a;
                        },
                        z = g.getObject('dojox.charting');
                    r = function(a, b, c) {
                        var d = eval('(' + b + '.prototype.defaultParams)'),
                            e, f;
                        for (e in d)
                            e in c ||
                            ((f = a.getAttribute(e)), (c[e] = l.coerceType(
                                d[e],
                                null == f || 'undefined' == typeof f ? d[e] : f
                            )));
                        b = eval('(' + b + '.prototype.optionalParams)');
                        for (e in b)
                            e in c ||
                            ((f = a.getAttribute(e)), null != f &&
                                (c[e] = l.coerceType(b[e], f)));
                    };
                    u = function(a) {
                        var b = a.getAttribute('name'),
                            d = a.getAttribute('type');
                        if (!b) return null;
                        var b = { name: b, kwArgs: {} },
                            e = b.kwArgs;
                        if (d) {
                            z.axis2d[d] && (d = c._scopeName + 'x.charting.axis2d.' + d);
                            var f = eval('(' + d + ')');
                            f && (e.type = f);
                        } else d = c._scopeName + 'x.charting.axis2d.Default';
                        r(a, d, e);
                        if (e.font || e.fontColor)
                            e.tick || (e.tick = {}), e.font &&
                            (e.tick.font = e.font), e.fontColor &&
                            (e.tick.fontColor = e.fontColor);
                        return b;
                    };
                    t = function(a) {
                        var b = a.getAttribute('name'),
                            d = a.getAttribute('type');
                        if (!b) return null;
                        var b = { name: b, kwArgs: {} },
                            e = b.kwArgs;
                        if (d) {
                            z.plot2d &&
                                z.plot2d[d] &&
                                (d = c._scopeName + 'x.charting.plot2d.' + d);
                            var f = eval('(' + d + ')');
                            f && (e.type = f);
                        } else d = c._scopeName + 'x.charting.plot2d.Default';
                        r(a, d, e);
                        var d = eval('(' + d + '.prototype.baseParams)'),
                            h;
                        for (h in d)
                            h in e ||
                            ((f = a.getAttribute(h)), (e[h] = l.coerceType(
                                d[h],
                                null == f || 'undefined' == typeof f ? d[h] : f
                            )));
                        return b;
                    };
                    q = function(a) {
                        var b = a.getAttribute('plot'),
                            d = a.getAttribute('type');
                        b || (b = 'default');
                        var b = { plot: b, kwArgs: {} },
                            e = b.kwArgs;
                        if (d) {
                            z.action2d[d] && (d = c._scopeName + 'x.charting.action2d.' + d);
                            var f = eval('(' + d + ')');
                            if (!f) return null;
                            b.action = f;
                        } else return null;
                        r(a, d, e);
                        return b;
                    };
                    v = function(a) {
                        a = g.partial(b.get, a);
                        var c = a('name');
                        if (!c) return null;
                        var c = { name: c, kwArgs: {} },
                            d = c.kwArgs,
                            e;
                        e = a('plot');
                        null != e && (d.plot = e);
                        e = a('marker');
                        null != e && (d.marker = e);
                        e = a('stroke');
                        null != e && (d.stroke = eval('(' + e + ')'));
                        e = a('outline');
                        null != e && (d.outline = eval('(' + e + ')'));
                        e = a('shadow');
                        null != e && (d.shadow = eval('(' + e + ')'));
                        e = a('fill');
                        null != e && (d.fill = eval('(' + e + ')'));
                        e = a('font');
                        null != e && (d.font = e);
                        e = a('fontColor');
                        null != e && (d.fontColor = eval('(' + e + ')'));
                        e = a('legend');
                        null != e && (d.legend = e);
                        e = a('data');
                        if (null != e)
                            return (c.type = 'data'), (c.data = e ?
                                f.map(String(e).split(','), Number) :
                                []), c;
                        e = a('array');
                        if (null != e)
                            return (c.type = 'data'), (c.data = eval('(' + e + ')')), c;
                        e = a('store');
                        if (null != e) {
                            c.type = 'store';
                            c.data = eval('(' + e + ')');
                            e = a('field');
                            c.field = null != e ? e : 'value';
                            if ((e = a('query'))) d.query = e;
                            if ((e = a('queryOptions')))
                                d.queryOptions = eval('(' + e + ')');
                            if ((e = a('start'))) d.start = Number(e);
                            if ((e = a('count'))) d.count = Number(e);
                            if ((e = a('sort'))) d.sort = eval('(' + e + ')');
                            if ((e = a('valueFn'))) d.valueFn = p.lambda(e);
                            return c;
                        }
                        return null;
                    };
                    d = e(
                        k('dojo-bidi') ?
                        'dojox.charting.widget.NonBidiChart' :
                        'dojox.charting.widget.Chart',
                        d, {
                            theme: null,
                            margins: null,
                            stroke: void 0,
                            fill: void 0,
                            buildRendering: function() {
                                this.inherited(arguments);
                                var b = this.domNode,
                                    c = h('\x3e .axis', b).map(u).filter(C),
                                    d = h('\x3e .plot', b).map(t).filter(C),
                                    e = h('\x3e .action', b).map(q).filter(C),
                                    k = h('\x3e .series', b).map(v).filter(C);
                                b.innerHTML = '';
                                var n = (this.chart = new a(b, {
                                    margins: this.margins,
                                    stroke: this.stroke,
                                    fill: this.fill,
                                    textDir: this.textDir,
                                }));
                                this.theme && n.setTheme(this.theme);
                                c.forEach(function(a) {
                                    n.addAxis(a.name, a.kwArgs);
                                });
                                d.forEach(function(a) {
                                    n.addPlot(a.name, a.kwArgs);
                                });
                                this.actions = e.map(function(a) {
                                    return new a.action(n, a.plot, a.kwArgs);
                                });
                                m.foldl(
                                    k,
                                    function(a, b) {
                                        if ('data' == b.type)
                                            n.addSeries(b.name, b.data, b.kwArgs), (a = !0);
                                        else {
                                            n.addSeries(b.name, [0], b.kwArgs);
                                            var c = {};
                                            l.updateWithPattern(
                                                c,
                                                b.kwArgs, { query: '', queryOptions: null, start: 0, count: 1 }, !0
                                            );
                                            b.kwArgs.sort && (c.sort = g.clone(b.kwArgs.sort));
                                            g.mixin(c, {
                                                onComplete: function(a) {
                                                    if ('valueFn' in b.kwArgs) {
                                                        var c = b.kwArgs.valueFn;
                                                        a = f.map(a, function(a) {
                                                            return c(b.data.getValue(a, b.field, 0));
                                                        });
                                                    } else
                                                        a = f.map(a, function(a) {
                                                            return b.data.getValue(a, b.field, 0);
                                                        });
                                                    n.addSeries(b.name, a, b.kwArgs).render();
                                                },
                                            });
                                            b.data.fetch(c);
                                        }
                                        return a;
                                    }, !1
                                ) && n.render();
                            },
                            destroy: function() {
                                this.chart.destroy();
                                this.inherited(arguments);
                            },
                            resize: function(a) {
                                this.chart.resize.apply(this.chart, arguments);
                            },
                        }
                    );
                    return k('dojo-bidi') ?
                        e('dojox.charting.widget.Chart', [d, n]) :
                        d;
                }
            );
        },
        'dojox/charting/action2d/Magnify': function() {
            define(
                'dojo/_base/connect dojo/_base/declare ./PlotAction dojox/gfx/matrix dojox/gfx/fx dojo/fx dojo/fx/easing'.split(
                    ' '
                ),
                function(c, g, f, b, e, h, d) {
                    return g('dojox.charting.action2d.Magnify', f, {
                        defaultParams: { duration: 400, easing: d.backOut, scale: 2 },
                        optionalParams: {},
                        constructor: function(a, b, c) {
                            this.scale = c && 'number' == typeof c.scale ? c.scale : 2;
                            this.connect();
                        },
                        process: function(a) {
                            if (
                                a.shape &&
                                a.type in this.overOutEvents &&
                                'cx' in a &&
                                'cy' in a &&
                                'spider_plot' != a.element &&
                                'spider_poly' != a.element
                            ) {
                                var d = a.run.name,
                                    f = a.index,
                                    g = [],
                                    m, p, r;
                                d in this.anim ? (m = this.anim[d][f]) : (this.anim[d] = {});
                                m ? m.action.stop(!0) : (this.anim[d][f] = m = {});
                                'onmouseover' == a.type ?
                                    ((p = b.identity), (r = this.scale)) :
                                    ((p = b.scaleAt(this.scale, a.cx, a.cy)), (r =
                                        1 / this.scale));
                                p = {
                                    shape: a.shape,
                                    duration: this.duration,
                                    easing: this.easing,
                                    transform: [{
                                            name: 'scaleAt',
                                            start: [1, a.cx, a.cy],
                                            end: [r, a.cx, a.cy],
                                        },
                                        p,
                                    ],
                                };
                                a.shape && g.push(e.animateTransform(p));
                                a.outline &&
                                    ((p.shape = a.outline), g.push(e.animateTransform(p)));
                                a.shadow &&
                                    ((p.shape = a.shadow), g.push(e.animateTransform(p)));
                                g.length ?
                                    ((m.action = h.combine(g)), 'onmouseout' == a.type &&
                                        c.connect(m.action, 'onEnd', this, function() {
                                            this.anim[d] && delete this.anim[d][f];
                                        }), m.action.play()) :
                                    delete this.anim[d][f];
                            }
                        },
                    });
                }
            );
        },
        'dojox/charting/action2d/MoveSlice': function() {
            define(
                'dojo/_base/connect dojo/_base/declare dojo/_base/array ./PlotAction dojo/fx/easing dojox/gfx/matrix dojox/gfx/fx dojox/lang/functional dojox/lang/functional/scan dojox/lang/functional/fold'.split(
                    ' '
                ),
                function(c, g, f, b, e, h, d, a) {
                    return g('dojox.charting.action2d.MoveSlice', b, {
                        defaultParams: {
                            duration: 400,
                            easing: e.backOut,
                            scale: 1.05,
                            shift: 7,
                        },
                        optionalParams: {},
                        constructor: function(a, b, c) {
                            c || (c = {});
                            this.scale = 'number' == typeof c.scale ? c.scale : 1.05;
                            this.shift = 'number' == typeof c.shift ? c.shift : 7;
                            this.connect();
                        },
                        process: function(b) {
                            if (
                                b.shape &&
                                'slice' == b.element &&
                                b.type in this.overOutEvents
                            ) {
                                if (!this.angles) {
                                    var e = h._degToRad(b.plot.opt.startAngle);
                                    this.angles = 'number' == typeof b.run.data[0] ?
                                        a.map(
                                            a.scanl(b.run.data, '+', 0),
                                            '* 2 * Math.PI / this',
                                            a.foldl(b.run.data, '+', 0)
                                        ) :
                                        a.map(
                                            a.scanl(b.run.data, 'a + b.y', 0),
                                            '* 2 * Math.PI / this',
                                            a.foldl(b.run.data, 'a + b.y', 0)
                                        );
                                    this.angles = f.map(this.angles, function(a) {
                                        return a + e;
                                    });
                                }
                                var g = b.index,
                                    k, p, r, u, t;
                                k = (this.angles[g] + this.angles[g + 1]) / 2;
                                var q = h.rotateAt(-k, b.cx, b.cy),
                                    v = h.rotateAt(k, b.cx, b.cy);
                                (k = this.anim[g]) ?
                                k.action.stop(!0): (this.anim[g] = k = {});
                                'onmouseover' == b.type ?
                                    ((u = 0), (t = this.shift), (p = 1), (r = this.scale)) :
                                    ((u = this.shift), (t = 0), (p = this.scale), (r = 1));
                                k.action = d.animateTransform({
                                    shape: b.shape,
                                    duration: this.duration,
                                    easing: this.easing,
                                    transform: [
                                        v,
                                        { name: 'translate', start: [u, 0], end: [t, 0] },
                                        {
                                            name: 'scaleAt',
                                            start: [p, b.cx, b.cy],
                                            end: [r, b.cx, b.cy],
                                        },
                                        q,
                                    ],
                                });
                                'onmouseout' == b.type &&
                                    c.connect(k.action, 'onEnd', this, function() {
                                        delete this.anim[g];
                                    });
                                k.action.play();
                            }
                        },
                        reset: function() {
                            delete this.angles;
                        },
                    });
                }
            );
        },
        'dojox/charting/action2d/Shake': function() {
            define(
                'dojo/_base/connect dojo/_base/declare ./PlotAction dojo/fx dojo/fx/easing dojox/gfx/matrix dojox/gfx/fx'.split(
                    ' '
                ),
                function(c, g, f, b, e, h, d) {
                    return g('dojox.charting.action2d.Shake', f, {
                        defaultParams: {
                            duration: 400,
                            easing: e.backOut,
                            shiftX: 3,
                            shiftY: 3,
                        },
                        optionalParams: {},
                        constructor: function(a, b, c) {
                            c || (c = {});
                            this.shiftX = 'number' == typeof c.shiftX ? c.shiftX : 3;
                            this.shiftY = 'number' == typeof c.shiftY ? c.shiftY : 3;
                            this.connect();
                        },
                        process: function(a) {
                            if (a.shape && a.type in this.overOutEvents) {
                                var e = a.run.name,
                                    f = a.index,
                                    g = [],
                                    m;
                                e in this.anim ? (m = this.anim[e][f]) : (this.anim[e] = {});
                                m ? m.action.stop(!0) : (this.anim[e][f] = m = {});
                                var p = {
                                    shape: a.shape,
                                    duration: this.duration,
                                    easing: this.easing,
                                    transform: [{
                                            name: 'translate',
                                            start: [this.shiftX, this.shiftY],
                                            end: [0, 0],
                                        },
                                        h.identity,
                                    ],
                                };
                                a.shape && g.push(d.animateTransform(p));
                                a.oultine &&
                                    ((p.shape = a.outline), g.push(d.animateTransform(p)));
                                a.shadow &&
                                    ((p.shape = a.shadow), g.push(d.animateTransform(p)));
                                g.length ?
                                    ((m.action = b.combine(g)), 'onmouseout' == a.type &&
                                        c.connect(m.action, 'onEnd', this, function() {
                                            this.anim[e] && delete this.anim[e][f];
                                        }), m.action.play()) :
                                    delete this.anim[e][f];
                            }
                        },
                    });
                }
            );
        },
        'dojox/charting/themes/ThreeD': function() {
            define(
                'dojo/_base/lang dojo/_base/array ../Theme ./gradientGenerator ./PrimaryColors dojo/colors ./common'.split(
                    ' '
                ),
                function(c, g, f, b, e, h) {
                    var d = {
                            type: 'linear',
                            space: 'shape',
                            x1: 0,
                            y1: 0,
                            x2: 100,
                            y2: 0,
                        },
                        a = [
                            { o: 0, i: 174 },
                            {
                                o: 0.08,
                                i: 231,
                            },
                            { o: 0.18, i: 237 },
                            { o: 0.3, i: 231 },
                            { o: 0.39, i: 221 },
                            { o: 0.49, i: 206 },
                            { o: 0.58, i: 187 },
                            { o: 0.68, i: 165 },
                            { o: 0.8, i: 128 },
                            { o: 0.9, i: 102 },
                            { o: 1, i: 174 },
                        ],
                        k = g.map(
                            '#f00 #0f0 #00f #ff0 #0ff #f0f ./common'.split(' '),
                            function(e) {
                                var f = c.delegate(d);
                                e = (f.colors = b.generateGradientByIntensity(e, a))[2].color;
                                e.r += 100;
                                e.g += 100;
                                e.b += 100;
                                e.sanitize();
                                return f;
                            }
                        );
                    h.ThreeD = e.clone();
                    h.ThreeD.series.shadow = {
                        dx: 1,
                        dy: 1,
                        width: 3,
                        color: [0, 0, 0, 0.15],
                    };
                    h.ThreeD.next = function(a, b, c) {
                        if ('bar' == a || 'column' == a) {
                            var d = this._current % this.seriesThemes.length,
                                e = this.seriesThemes[d],
                                g = e.fill;
                            e.fill = k[d];
                            d = f.prototype.next.apply(this, arguments);
                            e.fill = g;
                            return d;
                        }
                        return f.prototype.next.apply(this, arguments);
                    };
                    return h.ThreeD;
                }
            );
        },
        'dojox/charting/themes/gradientGenerator': function() {
            define(
                'dojo/_base/lang dojo/_base/array dojo/_base/Color ../Theme dojox/color/_base ./common'.split(
                    ' '
                ),
                function(c, g, f, b, e, h) {
                    c = c.getObject('gradientGenerator', !0, h);
                    c.generateFills = function(c, a, e, f) {
                        return g.map(c, function(c) {
                            return b.generateHslGradient(c, a, e, f);
                        });
                    };
                    c.updateFills = function(c, a, e, f) {
                        g.forEach(c, function(c) {
                            c.fill &&
                                !c.fill.type &&
                                (c.fill = b.generateHslGradient(c.fill, a, e, f));
                        });
                    };
                    c.generateMiniTheme = function(c, a, f, h, l) {
                        return g.map(c, function(c) {
                            c = new e.Color(c);
                            return {
                                fill: b.generateHslGradient(c, a, f, h),
                                stroke: { color: b.generateHslColor(c, l) },
                            };
                        });
                    };
                    c.generateGradientByIntensity = function(b, a) {
                        b = new f(b);
                        return g.map(a, function(a) {
                            var c = a.i / 255;
                            return {
                                offset: a.o,
                                color: new f([b.r * c, b.g * c, b.b * c, b.a]),
                            };
                        });
                    };
                    return c;
                }
            );
        },
        'dojox/charting/themes/PrimaryColors': function() {
            define(['../Theme', './gradientGenerator', './common'], function(
                c,
                g,
                f
            ) {
                f.PrimaryColors = new c({
                    seriesThemes: g.generateMiniTheme(
                        '#f00 #0f0 #00f #ff0 #0ff #f0f ./common'.split(' '), { type: 'linear', space: 'plot', x1: 0, y1: 0, x2: 0, y2: 100 },
                        90,
                        40,
                        25
                    ),
                });
                return f.PrimaryColors;
            });
        },
        'dojox/charting/action2d/MouseZoomAndPan': function() {
            define(
                'dojo/_base/declare dojo/_base/window dojo/_base/array dojo/_base/event dojo/_base/connect dojo/mouse ./ChartAction dojo/sniff dojo/dom-prop dojo/keys dojo/has!dojo-bidi?../bidi/action2d/ZoomAndPan'.split(
                    ' '
                ),
                function(c, g, f, b, e, h, d, a, k, n, l) {
                    var m = a('mozilla') ? 3 : 120,
                        p = {
                            none: function(a) {
                                return !a.ctrlKey && !a.altKey && !a.shiftKey;
                            },
                            ctrl: function(a) {
                                return a.ctrlKey && !a.altKey && !a.shiftKey;
                            },
                            alt: function(a) {
                                return !a.ctrlKey && a.altKey && !a.shiftKey;
                            },
                            shift: function(a) {
                                return !a.ctrlKey && !a.altKey && a.shiftKey;
                            },
                        };
                    d = c(
                        a('dojo-bidi') ?
                        'dojox.charting.action2d.NonBidiMouseZoomAndPan' :
                        'dojox.charting.action2d.MouseZoomAndPan',
                        d, {
                            defaultParams: {
                                axis: 'x',
                                scaleFactor: 1.2,
                                maxScale: 100,
                                enableScroll: !0,
                                enableDoubleClickZoom: !0,
                                enableKeyZoom: !0,
                                keyZoomModifier: 'ctrl',
                            },
                            optionalParams: {},
                            constructor: function(a, b, c) {
                                this._listeners = [
                                    { eventName: h.wheel, methodName: 'onMouseWheel' },
                                ];
                                c || (c = {});
                                this.axis = c.axis ? c.axis : 'x';
                                this.scaleFactor = c.scaleFactor ? c.scaleFactor : 1.2;
                                this.maxScale = c.maxScale ? c.maxScale : 100;
                                this.enableScroll = void 0 != c.enableScroll ?
                                    c.enableScroll :
                                    !0;
                                this.enableDoubleClickZoom = void 0 != c.enableDoubleClickZoom ?
                                    c.enableDoubleClickZoom :
                                    !0;
                                this.enableKeyZoom = void 0 != c.enableKeyZoom ?
                                    c.enableKeyZoom :
                                    !0;
                                this.keyZoomModifier = c.keyZoomModifier ?
                                    c.keyZoomModifier :
                                    'ctrl';
                                this.enableScroll &&
                                    this._listeners.push({
                                        eventName: 'onmousedown',
                                        methodName: 'onMouseDown',
                                    });
                                this.enableDoubleClickZoom &&
                                    this._listeners.push({
                                        eventName: 'ondblclick',
                                        methodName: 'onDoubleClick',
                                    });
                                this.enableKeyZoom &&
                                    this._listeners.push({
                                        eventName: 'keypress',
                                        methodName: 'onKeyPress',
                                    });
                                this._handles = [];
                                this.connect();
                            },
                            _disconnectHandles: function() {
                                a('ie') && this.chart.node.releaseCapture();
                                f.forEach(this._handles, e.disconnect);
                                this._handles = [];
                            },
                            connect: function() {
                                this.inherited(arguments);
                                this.enableKeyZoom && k.set(this.chart.node, 'tabindex', '0');
                            },
                            disconnect: function() {
                                this.inherited(arguments);
                                this.enableKeyZoom && k.set(this.chart.node, 'tabindex', '-1');
                                this._disconnectHandles();
                            },
                            onMouseDown: function(c) {
                                var d = this.chart,
                                    f = d.getAxis(this.axis);
                                this._startCoord = f.vertical ? c.pageY : c.pageX;
                                this._startOffset = f.getWindowOffset();
                                this._isPanning = !0;
                                a('ie') ?
                                    (this._handles.push(
                                        e.connect(
                                            this.chart.node,
                                            'onmousemove',
                                            this,
                                            'onMouseMove'
                                        )
                                    ), this._handles.push(
                                        e.connect(
                                            this.chart.node,
                                            'onmouseup',
                                            this,
                                            'onMouseUp'
                                        )
                                    ), this.chart.node.setCapture()) :
                                    (this._handles.push(
                                        e.connect(g.doc, 'onmousemove', this, 'onMouseMove')
                                    ), this._handles.push(
                                        e.connect(g.doc, 'onmouseup', this, 'onMouseUp')
                                    ));
                                d.node.focus();
                                b.stop(c);
                            },
                            onMouseMove: function(a) {
                                if (this._isPanning) {
                                    var b = this.chart,
                                        c = b.getAxis(this.axis);
                                    a = this._getDelta(a);
                                    var d = c.getScaler().bounds,
                                        d = d.span / (d.upper - d.lower),
                                        c = c.getWindowScale();
                                    b.setAxisWindow(this.axis, c, this._startOffset - a / d / c);
                                    b.render();
                                }
                            },
                            onMouseUp: function(a) {
                                this._isPanning = !1;
                                this._disconnectHandles();
                            },
                            onMouseWheel: function(a) {
                                var b = a.wheelDelta / m; -
                                1 < b && 0 > b ? (b = -1) : 0 < b && 1 > b && (b = 1);
                                this._onZoom(b, a);
                            },
                            onKeyPress: function(a) {
                                p[this.keyZoomModifier](a) &&
                                    ('+' == a.keyChar || a.keyCode == n.NUMPAD_PLUS ?
                                        this._onZoom(1, a) :
                                        ('-' != a.keyChar && a.keyCode != n.NUMPAD_MINUS) ||
                                        this._onZoom(-1, a));
                            },
                            onDoubleClick: function(a) {
                                var c = this.chart,
                                    d = c.getAxis(this.axis),
                                    e = 1 / this.scaleFactor;
                                if (1 == d.getWindowScale()) {
                                    var f = d.getScaler(),
                                        d = f.bounds.from,
                                        f = f.bounds.to,
                                        g = (d + f) / 2,
                                        h = this.plot.toData({ x: a.pageX, y: a.pageY })[this.axis];
                                    c.zoomIn(this.axis, [e * (d - g) + h, e * (f - g) + h]);
                                } else c.setAxisWindow(this.axis, 1, 0), c.render();
                                b.stop(a);
                            },
                            _onZoom: function(a, c) {
                                a = 0 > a ?
                                    Math.abs(a) * this.scaleFactor :
                                    1 / (Math.abs(a) * this.scaleFactor);
                                var d = this.chart,
                                    e = d.getAxis(this.axis);
                                if (!(e.getWindowScale() / a > this.maxScale)) {
                                    var f = e.getScaler(),
                                        e = f.bounds.from,
                                        f = f.bounds.to,
                                        g = 'keypress' == c.type ?
                                        (e + f) / 2 :
                                        this.plot.toData({ x: c.pageX, y: c.pageY })[this.axis];
                                    d.zoomIn(this.axis, [a * (e - g) + g, a * (f - g) + g]);
                                    b.stop(c);
                                }
                            },
                            _getDelta: function(a) {
                                return this.chart.getAxis(this.axis).vertical ?
                                    this._startCoord - a.pageY :
                                    a.pageX - this._startCoord;
                            },
                        }
                    );
                    return a('dojo-bidi') ?
                        c('dojox.charting.action2d.MouseZoomAndPan', [d, l]) :
                        d;
                }
            );
        },
        'dojox/charting/action2d/ChartAction': function() {
            define(['dojo/_base/connect', 'dojo/_base/declare', './Base'], function(
                c,
                g,
                f
            ) {
                return g('dojox.charting.action2d.ChartAction', f, {
                    constructor: function(b, c) {},
                    connect: function() {
                        for (var b = 0; b < this._listeners.length; ++b)
                            this._listeners[b].handle = c.connect(
                                this.chart.node,
                                this._listeners[b].eventName,
                                this,
                                this._listeners[b].methodName
                            );
                    },
                    disconnect: function() {
                        for (var b = 0; b < this._listeners.length; ++b)
                            c.disconnect(this._listeners[b].handle), delete this._listeners[
                                b
                            ].handle;
                    },
                });
            });
        },
        'dojox/charting/action2d/TouchZoomAndPan': function() {
            define(
                'dojo/_base/lang dojo/_base/declare dojo/_base/event dojo/sniff ./ChartAction ../Element dojo/touch ../plot2d/common dojo/has!dojo-bidi?../bidi/action2d/ZoomAndPan'.split(
                    ' '
                ),
                function(c, g, f, b, e, h, d, a, k) {
                    var n = g(h, {
                        constructor: function(a) {},
                        render: function() {
                            this.isDirty() &&
                                (this.cleanGroup(), this.group
                                    .createRect({
                                        width: this.chart.dim.width,
                                        height: this.chart.dim.height,
                                    })
                                    .setFill('rgba(0,0,0,0)'));
                        },
                        clear: function() {
                            this.dirty = !0;
                            this.chart.stack[0] != this &&
                                this.chart.movePlotToFront(this.name);
                            return this;
                        },
                        getSeriesStats: function() {
                            return c.delegate(a.defaultStats);
                        },
                        initializeScalers: function() {
                            return this;
                        },
                        isDirty: function() {
                            return this.dirty;
                        },
                    });
                    e = g(
                        b('dojo-bidi') ?
                        'dojox.charting.action2d.NonBidiTouchZoomAndPan' :
                        'dojox.charting.action2d.TouchZoomAndPan',
                        e, {
                            defaultParams: {
                                axis: 'x',
                                scaleFactor: 1.2,
                                maxScale: 100,
                                enableScroll: !0,
                                enableZoom: !0,
                            },
                            optionalParams: {},
                            constructor: function(a, b, c) {
                                this._listeners = [
                                    { eventName: d.press, methodName: 'onTouchStart' },
                                    { eventName: d.move, methodName: 'onTouchMove' },
                                    { eventName: d.release, methodName: 'onTouchEnd' },
                                ];
                                c || (c = {});
                                this.axis = c.axis ? c.axis : 'x';
                                this.scaleFactor = c.scaleFactor ? c.scaleFactor : 1.2;
                                this.maxScale = c.maxScale ? c.maxScale : 100;
                                this.enableScroll = void 0 != c.enableScroll ?
                                    c.enableScroll :
                                    !0;
                                this.enableZoom = void 0 != c.enableScroll ? c.enableZoom : !0;
                                this._uName = 'touchZoomPan' + this.axis;
                                this.connect();
                            },
                            connect: function() {
                                this.inherited(arguments); -
                                1 != this.chart.surface.declaredClass.indexOf('svg') &&
                                    this.chart.addPlot(this._uName, { type: n });
                            },
                            disconnect: function() {
                                -1 != this.chart.surface.declaredClass.indexOf('svg') &&
                                    this.chart.removePlot(this._uName);
                                this.inherited(arguments);
                            },
                            onTouchStart: function(a) {
                                var b = this.chart,
                                    c = b.getAxis(this.axis),
                                    d = a.touches ? a.touches.length : 1,
                                    e = a.touches ? a.touches[0] : a,
                                    g = this._startPageCoord;
                                this._startPageCoord = { x: e.pageX, y: e.pageY };
                                (this.enableZoom || this.enableScroll) &&
                                b._delayedRenderHandle &&
                                    b.render();
                                this.enableZoom && 2 <= d ?
                                    ((this._startTime = 0), (this._endPageCoord = {
                                        x: a.touches[1].pageX,
                                        y: a.touches[1].pageY,
                                    }), (a = {
                                        x: (this._startPageCoord.x + this._endPageCoord.x) / 2,
                                        y: (this._startPageCoord.y + this._endPageCoord.y) / 2,
                                    }), (b = c.getScaler()), (this._initScale = c.getWindowScale()), (this._middleCoord = (this._initData = this.plot.toData())(
                                        a
                                    )[this.axis]), (this._startCoord =
                                        b.bounds.from), (this._endCoord = b.bounds.to)) :
                                    (a.touches && 1 != a.touches.length ?
                                        (this._startTime = 0) :
                                        this._startTime ?
                                        250 > new Date().getTime() - this._startTime &&
                                        30 > Math.abs(this._startPageCoord.x - g.x) &&
                                        30 > Math.abs(this._startPageCoord.y - g.y) ?
                                        ((this._startTime = 0), this.onDoubleTap(a)) :
                                        (this._startTime = 0) :
                                        (this._startTime = new Date().getTime()), this
                                        .enableScroll && (this._startScroll(c), f.stop(a)));
                            },
                            onTouchMove: function(a) {
                                var b = this.chart,
                                    c = b.getAxis(this.axis),
                                    d = a.touches ? a.touches.length : 1,
                                    e = c.vertical ? 'pageY' : 'pageX',
                                    c = c.vertical ? 'y' : 'x';
                                this._startTime = 0;
                                this.enableZoom && 2 <= d ?
                                    ((d =
                                            (this._endPageCoord[c] - this._startPageCoord[c]) /
                                            (a.touches[1][e] - a.touches[0][e])), this._initScale /
                                        d >
                                        this.maxScale ||
                                        ((e = this._initData({
                                            x: (a.touches[1].pageX + a.touches[0].pageX) / 2,
                                            y: (a.touches[1].pageY + a.touches[0].pageY) / 2,
                                        })[this.axis]), b.zoomIn(this.axis, [
                                            d * (this._startCoord - e) + this._middleCoord,
                                            d * (this._endCoord - e) + this._middleCoord,
                                        ]), f.stop(a))) :
                                    this.enableScroll &&
                                    ((d = this._getDelta(a)), b.setAxisWindow(
                                        this.axis,
                                        this._lastScale,
                                        this._initOffset -
                                        d / this._lastFactor / this._lastScale
                                    ), b.delayedRender(), f.stop(a));
                            },
                            onTouchEnd: function(a) {
                                var b = this.chart.getAxis(this.axis);
                                (a.touches && 1 != a.touches.length) ||
                                !this.enableScroll ||
                                    ((a = a.touches ? a.touches[0] : a), (this._startPageCoord = {
                                        x: a.pageX,
                                        y: a.pageY,
                                    }), this._startScroll(b));
                            },
                            _startScroll: function(a) {
                                var b = a.getScaler().bounds;
                                this._initOffset = a.getWindowOffset();
                                this._lastScale = a.getWindowScale();
                                this._lastFactor = b.span / (b.upper - b.lower);
                            },
                            onDoubleTap: function(a) {
                                var b = this.chart,
                                    c = b.getAxis(this.axis),
                                    d = 1 / this.scaleFactor;
                                if (1 == c.getWindowScale()) {
                                    var e = c.getScaler(),
                                        c = e.bounds.from,
                                        e = e.bounds.to,
                                        g = (c + e) / 2,
                                        h = this.plot.toData(this._startPageCoord)[this.axis];
                                    b.zoomIn(this.axis, [d * (c - g) + h, d * (e - g) + h]);
                                } else b.setAxisWindow(this.axis, 1, 0), b.render();
                                f.stop(a);
                            },
                            _getDelta: function(a) {
                                var b = this.chart.getAxis(this.axis),
                                    c = b.vertical ? 'pageY' : 'pageX',
                                    d = b.vertical ? 'y' : 'x';
                                a = a.touches ? a.touches[0] : a;
                                return b.vertical ?
                                    this._startPageCoord[d] - a[c] :
                                    a[c] - this._startPageCoord[d];
                            },
                        }
                    );
                    return b('dojo-bidi') ?
                        g('dojox.charting.action2d.TouchZoomAndPan', [e, k]) :
                        e;
                }
            );
        },
        'dojox/charting/action2d/MouseIndicator': function() {
            define(
                'dojo/_base/lang dojo/_base/declare dojo/_base/connect dojo/_base/window dojo/sniff ./ChartAction ./_IndicatorElement dojox/lang/utils dojo/_base/event dojo/_base/array'.split(
                    ' '
                ),
                function(c, g, f, b, e, h, d, a, k, n) {
                    return g('dojox.charting.action2d.MouseIndicator', h, {
                        defaultParams: {
                            series: '',
                            vertical: !0,
                            autoScroll: !0,
                            fixed: !0,
                            precision: 0,
                            lines: !0,
                            labels: !0,
                            markers: !0,
                        },
                        optionalParams: {
                            lineStroke: {},
                            outlineStroke: {},
                            shadowStroke: {},
                            lineFill: {},
                            stroke: {},
                            outline: {},
                            shadow: {},
                            fill: {},
                            fillFunc: null,
                            labelFunc: null,
                            font: '',
                            fontColor: '',
                            markerStroke: {},
                            markerOutline: {},
                            markerShadow: {},
                            markerFill: {},
                            markerSymbol: '',
                            offset: {},
                            start: !1,
                            mouseOver: !1,
                        },
                        constructor: function(b, d, e) {
                            this.opt = c.clone(this.defaultParams);
                            a.updateWithObject(this.opt, e);
                            a.updateWithPattern(this.opt, e, this.optionalParams);
                            this._listeners = this.opt.mouseOver ?
                                [{ eventName: 'onmousemove', methodName: 'onMouseMove' }] :
                                [{ eventName: 'onmousedown', methodName: 'onMouseDown' }];
                            this._uName = 'mouseIndicator' + this.opt.series;
                            this._handles = [];
                            this.connect();
                        },
                        _disconnectHandles: function() {
                            e('ie') && this.chart.node.releaseCapture();
                            n.forEach(this._handles, f.disconnect);
                            this._handles = [];
                        },
                        connect: function() {
                            this.inherited(arguments);
                            this.chart.addPlot(this._uName, { type: d, inter: this });
                        },
                        disconnect: function() {
                            if (this._isMouseDown) this.onMouseUp();
                            this.chart.removePlot(this._uName);
                            this.inherited(arguments);
                            this._disconnectHandles();
                        },
                        onChange: function(a) {},
                        onMouseDown: function(a) {
                            this._isMouseDown = !0;
                            e('ie') ?
                                (this._handles.push(
                                    f.connect(
                                        this.chart.node,
                                        'onmousemove',
                                        this,
                                        'onMouseMove'
                                    )
                                ), this._handles.push(
                                    f.connect(this.chart.node, 'onmouseup', this, 'onMouseUp')
                                ), this.chart.node.setCapture()) :
                                (this._handles.push(
                                    f.connect(b.doc, 'onmousemove', this, 'onMouseMove')
                                ), this._handles.push(
                                    f.connect(b.doc, 'onmouseup', this, 'onMouseUp')
                                ));
                            this._onMouseSingle(a);
                        },
                        onMouseMove: function(a) {
                            (this._isMouseDown || this.opt.mouseOver) &&
                            this._onMouseSingle(a);
                        },
                        _onMouseSingle: function(a) {
                            var b = this.chart.getPlot(this._uName);
                            b.pageCoord = { x: a.pageX, y: a.pageY };
                            b.dirty = !0;
                            this.chart.render();
                            k.stop(a);
                        },
                        onMouseUp: function(a) {
                            a = this.chart.getPlot(this._uName);
                            a.stopTrack();
                            this._isMouseDown = !1;
                            this._disconnectHandles();
                            a.pageCoord = null;
                            a.dirty = !0;
                            this.chart.render();
                        },
                    });
                }
            );
        },
        'dojox/charting/action2d/_IndicatorElement': function() {
            define(
                'dojo/_base/lang dojo/_base/array dojo/_base/declare ../plot2d/Indicator dojo/has ../plot2d/common ../axis2d/common dojox/gfx'.split(
                    ' '
                ),
                function(c, g, f, b, e) {
                    var h = function(b, a, c) {
                        var d, e = b ? { x: a[0], y: c[0][0] } : { x: c[0][0], y: a[0] };
                        1 < a.length &&
                            (d = b ? { x: a[1], y: c[1][0] } : { x: c[1][0], y: a[1] });
                        return [e, d];
                    };
                    f = f('dojox.charting.action2d._IndicatorElement', b, {
                        constructor: function(b, a) {
                            a || (a = {});
                            this.inter = a.inter;
                        },
                        _updateVisibility: function(b, a, c) {
                            var d = 'x' == c ? this._hAxis : this._vAxis,
                                e = d.getWindowScale();
                            this.chart.setAxisWindow(
                                d.name,
                                e,
                                d.getWindowOffset() + (b[c] - a[c]) / e
                            );
                            this._noDirty = !0;
                            this.chart.render();
                            this._noDirty = !1;
                            this._initTrack();
                        },
                        _trackMove: function() {
                            this._updateIndicator(this.pageCoord);
                            this._tracker = setTimeout(c.hitch(this, this._trackMove), 100);
                        },
                        _initTrack: function() {
                            this._tracker ||
                                (this._tracker = setTimeout(
                                    c.hitch(this, this._trackMove),
                                    500
                                ));
                        },
                        stopTrack: function() {
                            this._tracker &&
                                (clearTimeout(this._tracker), (this._tracker = null));
                        },
                        render: function() {
                            if (this.isDirty()) {
                                var b = this.inter,
                                    a = b.plot,
                                    e = b.opt.vertical;
                                this.opt.offset =
                                    b.opt.offset || (e ? { x: 0, y: 5 } : { x: 5, y: 0 });
                                b.opt.labelFunc &&
                                    (this.opt.labelFunc = function(a, c, d, f, g) {
                                        a = h(e, c, d);
                                        return b.opt.labelFunc(a[0], a[1], f, g);
                                    });
                                b.opt.fillFunc &&
                                    (this.opt.fillFunc = function(a, c, d) {
                                        a = h(e, c, d);
                                        return b.opt.fillFunc(a[0], a[1]);
                                    });
                                this.opt = c.delegate(b.opt, this.opt);
                                this.pageCoord ?
                                    ((this.opt.values = []), (this.opt.labels = this.secondCoord ?
                                        'trend' :
                                        'markers')) :
                                    ((this.opt.values = null), this.inter.onChange({}));
                                this.hAxis = a.hAxis;
                                this.vAxis = a.vAxis;
                                this.inherited(arguments);
                            }
                        },
                        _updateIndicator: function() {
                            var b = this._updateCoordinates(
                                this.pageCoord,
                                this.secondCoord
                            );
                            if (1 < b.length) {
                                var a = this.opt.vertical;
                                this._data = [];
                                this.opt.values = [];
                                g.forEach(
                                    b,
                                    function(b) {
                                        b &&
                                            (this.opt.values.push(a ? b.x : b.y), this._data.push([
                                                a ? b.y : b.x,
                                            ]));
                                    },
                                    this
                                );
                                this.inherited(arguments);
                            } else this.inter.onChange({});
                        },
                        _renderText: function(b, a, c, e, f, g, p, r) {
                            this.inter.opt.labels && this.inherited(arguments);
                            var d = h(this.opt.vertical, p, r);
                            this.inter.onChange({ start: d[0], end: d[1], label: a });
                        },
                        _updateCoordinates: function(b, a) {
                            e('dojo-bidi') && this._checkXCoords(b, a);
                            var c = this.inter,
                                d = c.plot,
                                f = c.opt.vertical,
                                g = this.chart.getAxis(d.hAxis),
                                h = this.chart.getAxis(d.vAxis),
                                r = g.name,
                                u = h.name,
                                t = g.getScaler().bounds,
                                q = h.getScaler().bounds,
                                h = f ? 'x' : 'y',
                                g = f ? r : u,
                                v = f ? t : q;
                            if (a) {
                                var C;
                                f
                                    ?
                                    b.x > a.x && ((C = a), (a = b), (b = C)) :
                                    b.y > a.y && ((C = a), (a = b), (b = C));
                            }
                            var z = d.toData(b),
                                y;
                            a && (y = d.toData(a));
                            var x = {};
                            x[r] = t.from;
                            x[u] = q.from;
                            C = d.toPage(x);
                            x[r] = t.to;
                            x[u] = q.to;
                            r = d.toPage(x);
                            if (z[g] < v.from) {
                                if (y || !c.opt.autoScroll || c.opt.mouseOver) {
                                    if (c.opt.mouseOver) return [];
                                    b[h] = C[h];
                                } else return this._updateVisibility(b, C, h), [];
                                z = d.toData(b);
                            } else if (z[g] > v.to) {
                                if (y || !c.opt.autoScroll || c.opt.mouseOver) {
                                    if (c.opt.mouseOver) return [];
                                    b[h] = r[h];
                                } else return this._updateVisibility(b, r, h), [];
                                z = d.toData(b);
                            }
                            b = this._snapData(z, h, f);
                            var w;
                            if (null == b.y) return [];
                            a &&
                                (y[g] < v.from ?
                                    ((a[h] = C[h]), (y = d.toData(a))) :
                                    y[g] > v.to &&
                                    ((a[h] = r[h]), (y = d.toData(a))), (w = this._snapData(
                                        y,
                                        h,
                                        f
                                    )), null == w.y && (w = null));
                            return [b, w];
                        },
                        _snapData: function(b, a, c) {
                            var d = this.chart.getSeries(this.inter.opt.series).data,
                                e,
                                f,
                                g = d.length;
                            for (e = 0; e < g; ++e)
                                if (((f = d[e]), null != f))
                                    if ('number' == typeof f) {
                                        if (e + 1 > b[a]) break;
                                    } else if (f[a] > b[a]) break;
                            var h, k;
                            'number' == typeof f
                                ?
                                ((g = e + 1), 0 < e && ((h = e), (k = d[e - 1]))) :
                                ((g = f.x), (f = f.y), 0 < e &&
                                    ((h = d[e - 1].x), (k = d[e - 1].y)));
                            0 < e &&
                                b[a] <= (c ? (g + h) / 2 : (f + k) / 2) &&
                                ((g = h), (f = k));
                            return { x: g, y: f };
                        },
                        cleanGroup: function(b) {
                            this.inherited(arguments);
                            this.group.moveToFront();
                            return this;
                        },
                        isDirty: function() {
                            return (!this._noDirty && (this.dirty || this.inter.plot.isDirty()));
                        },
                    });
                    e('dojo-bidi') &&
                        f.extend({
                            _checkXCoords: function(b, a) {
                                if (this.chart.isRightToLeft() && this.isDirty()) {
                                    var c = function(a, b) {
                                            return (
                                                a.chart.dim.width +
                                                (a.chart.offsets.l - a.chart.offsets.r) -
                                                (b.x - d) +
                                                d
                                            );
                                        },
                                        d = this.chart.node.offsetLeft;
                                    b && (b.x = c(this, b));
                                    a && (a.x = c(this, a));
                                }
                            },
                        });
                    return f;
                }
            );
        },
        'dojox/charting/plot2d/Indicator': function() {
            define(
                'dojo/_base/lang dojo/_base/array dojo/_base/declare ./CartesianBase ./_PlotEvents ./common ../axis2d/common dojox/gfx dojox/lang/utils dojox/gfx/fx dojo/has dojo/sniff'.split(
                    ' '
                ),
                function(c, g, f, b, e, h, d, a, k, n, l, m) {
                    var p = function(b, d) {
                            var e = b.declaredClass,
                                f;
                            if (-1 != e.indexOf('svg'))
                                try {
                                    var g = b.rawNode.getBBox();
                                    if (l('dojo-bidi') && m('ff')) {
                                        for (f = b.rawNode.cloneNode(); f.lastChild;)
                                            f.removeChild(f.lastChild);
                                        f.appendChild(
                                            document.createTextNode(
                                                d.replace(/[\u200E\u202A\u202C\u200f\u202B]/g, '')
                                            )
                                        );
                                        f.setAttribute('style', 'visibility: hidden');
                                        b.rawNode.parentNode.appendChild(f);
                                        g = f.getBBox();
                                        f.parentNode.removeChild(f);
                                    } else g = b.rawNode.getBBox();
                                    return c.mixin({}, g);
                                } catch (z) {}
                            else {
                                if (-1 != e.indexOf('vml'))
                                    return (e = b.rawNode), (g =
                                        e.style.display), (e.style.display = 'inline'), (d = a.pt2px(
                                        parseFloat(e.currentStyle.width)
                                    )), (f = a.pt2px(parseFloat(e.currentStyle.height))), (d = {
                                        x: 0,
                                        y: 0,
                                        width: d,
                                        height: f,
                                    }), r(b, d), (e.style.display = g), d;
                                if (-1 != e.indexOf('silverlight'))
                                    return r(
                                        b, {
                                            width: b.rawNode.actualWidth,
                                            height: b.rawNode.actualHeight,
                                        },
                                        0.75
                                    );
                                if (b.getTextWidth)
                                    return (d = b.getTextWidth()), (e = b.getFont()), (f = a.normalizedLength(
                                        e ? e.size : a.defaultFont.size
                                    )), (d = { width: d, height: f }), r(b, d, 0.75), d;
                            }
                            return null;
                        },
                        r = function(a, b, c) {
                            var d = b.width,
                                e = b.height;
                            a = a.getShape();
                            switch (a.align) {
                                case 'end':
                                    b.x = a.x - d;
                                    break;
                                case 'middle':
                                    b.x = a.x - d / 2;
                                    break;
                                default:
                                    b.x = a.x;
                            }
                            b.y = a.y - e * (c || 1);
                            return b;
                        };
                    f = f('dojox.charting.plot2d.Indicator', [b, e], {
                        defaultParams: {
                            vertical: !0,
                            fixed: !0,
                            precision: 0,
                            lines: !0,
                            labels: 'line',
                            markers: !0,
                        },
                        optionalParams: {
                            lineStroke: {},
                            outlineStroke: {},
                            shadowStroke: {},
                            lineFill: {},
                            stroke: {},
                            outline: {},
                            shadow: {},
                            fill: {},
                            fillFunc: null,
                            labelFunc: null,
                            font: '',
                            fontColor: '',
                            markerStroke: {},
                            markerOutline: {},
                            markerShadow: {},
                            markerFill: {},
                            markerSymbol: '',
                            values: [],
                            offset: {},
                            start: !1,
                            animate: !1,
                        },
                        constructor: function(a, b) {
                            this.opt = c.clone(this.defaultParams);
                            k.updateWithObject(this.opt, b);
                            'number' == typeof b.values && (b.values = [b.values]);
                            k.updateWithPattern(this.opt, b, this.optionalParams);
                            this.animate = this.opt.animate;
                        },
                        render: function(a, b) {
                            if (this.zoom) return this.performZoom(a, b);
                            if (!this.isDirty()) return this;
                            this.cleanGroup(null, !0);
                            if (!this.opt.values) return this;
                            this._updateIndicator();
                            return this;
                        },
                        _updateIndicator: function() {
                            var a = this.chart.theme,
                                b = this._hAxis.name,
                                c = this._vAxis.name,
                                d = this._hAxis.getScaler().bounds,
                                e = this._vAxis.getScaler().bounds,
                                f = {};
                            f[b] = d.from;
                            f[c] = e.from;
                            var k = this.toPage(f);
                            f[b] = d.to;
                            f[c] = e.to;
                            var l = this.toPage(f),
                                m = this.events(),
                                d = g.map(
                                    this.opt.values,
                                    function(a, d) {
                                        return this._renderIndicator(
                                            a,
                                            d,
                                            b,
                                            c,
                                            k,
                                            l,
                                            m,
                                            this.animate
                                        );
                                    },
                                    this
                                ),
                                e = d.length;
                            if ('trend' == this.opt.labels) {
                                var f = this.opt.vertical,
                                    n = this._data[0][0],
                                    p = this._data[e - 1][0] - n,
                                    n = this.opt.labelFunc ?
                                    this.opt.labelFunc(-1,
                                        this.values,
                                        this._data,
                                        this.opt.fixed,
                                        this.opt.precision
                                    ) :
                                    h.getLabel(p, this.opt.fixed, this.opt.precision) +
                                    ' (' +
                                    h.getLabel(100 * p / n, !0, 2) +
                                    '%)';
                                this._renderText(
                                    this.getGroup(),
                                    n,
                                    this.chart.theme,
                                    f ? (d[0].x + d[e - 1].x) / 2 : d[1].x,
                                    f ? d[0].y : (d[1].y + d[e - 1].y) / 2, -1,
                                    this.opt.values,
                                    this._data
                                );
                            }
                            (a = void 0 != this.opt.lineFill ?
                                this.opt.lineFill :
                                a.indicator.lineFill) &&
                            1 < e &&
                                ((f = Math.min(d[0].x1, d[e - 1].x1)), (n = Math.min(
                                        d[0].y1,
                                        d[e - 1].y1
                                    )), this.getGroup()
                                    .createRect({
                                        x: f,
                                        y: n,
                                        width: Math.max(d[0].x2, d[e - 1].x2) - f,
                                        height: Math.max(d[0].y2, d[e - 1].y2) - n,
                                    })
                                    .setFill(a)
                                    .moveToBack());
                        },
                        _renderIndicator: function(a, b, d, e, f, k, m, n) {
                            var q = this.chart.theme,
                                p = this.chart.getCoords(),
                                t = this.opt.vertical,
                                u = this.getGroup().createGroup(),
                                r = {};
                            r[d] = t ? a : 0;
                            r[e] = t ? 0 : a;
                            l('dojo-bidi') && (r.x = this._getMarkX(r.x));
                            var r = this.toPage(r),
                                v = t ? r.x >= f.x && r.x <= k.x : r.y >= k.y && r.y <= f.y,
                                C = r.x - p.x,
                                z = r.y - p.y,
                                x = t ? C : f.x - p.x,
                                y = t ? f.y - p.y : z,
                                Q = t ? x : k.x - p.x,
                                O = t ? k.y - p.y : y;
                            if (this.opt.lines && v) {
                                var P = this.opt.hasOwnProperty('lineShadow') ?
                                    this.opt.lineShadow :
                                    q.indicator.lineShadow,
                                    J = this.opt.hasOwnProperty('lineStroke') ?
                                    this.opt.lineStroke :
                                    q.indicator.lineStroke,
                                    I = this.opt.hasOwnProperty('lineOutline') ?
                                    this.opt.lineOutline :
                                    q.indicator.lineOutline;
                                P &&
                                    u
                                    .createLine({
                                        x1: x + P.dx,
                                        y1: y + P.dy,
                                        x2: Q + P.dx,
                                        y2: O + P.dy,
                                    })
                                    .setStroke(P);
                                I &&
                                    ((I = h.makeStroke(I)), (I.width =
                                            2 * I.width + (J ? J.width : 0)), u
                                        .createLine({ x1: x, y1: y, x2: Q, y2: O })
                                        .setStroke(I));
                                u
                                    .createLine({
                                        x1: x,
                                        y1: y,
                                        x2: Q,
                                        y2: O,
                                    })
                                    .setStroke(J);
                            }
                            var N;
                            if (this.opt.markers && v) {
                                var M = this._data[b],
                                    R = this;
                                M &&
                                    (N = g.map(
                                        M,
                                        function(b, c) {
                                            r[d] = t ? a : b;
                                            r[e] = t ? b : a;
                                            l('dojo-bidi') && (r.x = R._getMarkX(r.x));
                                            r = this.toPage(r);
                                            if (
                                                t ? r.y <= f.y && r.y >= k.y : r.x >= f.x && r.x <= k.x
                                            ) {
                                                C = r.x - p.x;
                                                z = r.y - p.y;
                                                c = this.opt.markerSymbol ?
                                                    this.opt.markerSymbol :
                                                    q.indicator.markerSymbol;
                                                var g = 'M' + C + ' ' + z + ' ' + c;
                                                P = void 0 != this.opt.markerShadow ?
                                                    this.opt.markerShadow :
                                                    q.indicator.markerShadow;
                                                J = void 0 != this.opt.markerStroke ?
                                                    this.opt.markerStroke :
                                                    q.indicator.markerStroke;
                                                I = void 0 != this.opt.markerOutline ?
                                                    this.opt.markerOutline :
                                                    q.indicator.markerOutline;
                                                P &&
                                                    u
                                                    .createPath(
                                                        'M' + (C + P.dx) + ' ' + (z + P.dy) + ' ' + c
                                                    )
                                                    .setFill(P.color)
                                                    .setStroke(P);
                                                I &&
                                                    ((I = h.makeStroke(I)), (I.width =
                                                            2 * I.width + (J ? J.width : 0)), u
                                                        .createPath(g)
                                                        .setStroke(I));
                                                c = u.createPath(g);
                                                g = this._shapeFill(
                                                    void 0 != this.opt.markerFill ?
                                                    this.opt.markerFill :
                                                    q.indicator.markerFill,
                                                    c.getBoundingBox()
                                                );
                                                c.setFill(g).setStroke(J);
                                            }
                                            return b;
                                        },
                                        this
                                    ));
                            }
                            M = this.opt.start ?
                                { x: x, y: t ? y : O } :
                                { x: t ? x : Q, y: t ? O : y };
                            this.opt.labels &&
                                'trend' != this.opt.labels &&
                                v &&
                                (this.opt.labelFunc ?
                                    (v = this.opt.labelFunc(
                                        b,
                                        this.opt.values,
                                        this._data,
                                        this.opt.fixed,
                                        this.opt.precision,
                                        this.opt.labels
                                    )) :
                                    'markers' == this.opt.labels ?
                                    ((v = g.map(
                                        N,
                                        function(a) {
                                            return h.getLabel(
                                                a,
                                                this.opt.fixed,
                                                this.opt.precision
                                            );
                                        },
                                        this
                                    )), (v = 1 != v.length ?
                                        '[ ' + v.join(', ') + ' ]' :
                                        v[0])) :
                                    (v = h.getLabel(
                                        a,
                                        this.opt.fixed,
                                        this.opt.precision
                                    )), this._renderText(
                                        u,
                                        v,
                                        q,
                                        M.x,
                                        M.y,
                                        b,
                                        this.opt.values,
                                        this._data
                                    ));
                            m &&
                                this._connectEvents({
                                    element: 'indicator',
                                    run: this.run ? this.run[b] : void 0,
                                    shape: u,
                                    value: a,
                                });
                            n &&
                                this._animateIndicator(u, t, t ? y : x, t ? y + O : x + Q, n);
                            return c.mixin(M, { x1: x, y1: y, x2: Q, y2: O });
                        },
                        _animateIndicator: function(a, b, d, e, f) {
                            n
                                .animateTransform(
                                    c.delegate({
                                            shape: a,
                                            duration: 1200,
                                            transform: [{
                                                    name: 'translate',
                                                    start: b ? [0, d] : [d, 0],
                                                    end: [0, 0],
                                                },
                                                {
                                                    name: 'scale',
                                                    start: b ? [1, 1 / e] : [1 / e, 1],
                                                    end: [1, 1],
                                                },
                                                { name: 'original' },
                                            ],
                                        },
                                        f
                                    )
                                )
                                .play();
                        },
                        clear: function() {
                            this.inherited(arguments);
                            this._data = [];
                        },
                        addSeries: function(a) {
                            this.inherited(arguments);
                            this._data.push(a.data);
                        },
                        _renderText: function(a, b, c, e, f, g, k, l) {
                            this.opt.offset &&
                                ((e += this.opt.offset.x), (f += this.opt.offset.y));
                            b = d.createText.gfx(
                                this.chart,
                                a,
                                e,
                                f,
                                this.opt.vertical ? 'middle' : this.opt.start ? 'start' : 'end',
                                b,
                                this.opt.font ? this.opt.font : c.indicator.font,
                                this.opt.fontColor ? this.opt.fontColor : c.indicator.fontColor
                            );
                            e = p(b, b.getShape().text);
                            this.opt.vertical &&
                                !this.opt.start &&
                                ((e.y += e.height / 2), b.setShape({ y: f + e.height / 2 }));
                            e.x -= 2;
                            --e.y;
                            e.width += 4;
                            e.height += 2;
                            e.r = this.opt.radius ? this.opt.radius : c.indicator.radius;
                            var m = void 0 != this.opt.shadow ?
                                this.opt.shadow :
                                c.indicator.shadow;
                            f = void 0 != this.opt.stroke ?
                                this.opt.stroke :
                                c.indicator.stroke;
                            var n = void 0 != this.opt.outline ?
                                this.opt.outline :
                                c.indicator.outline;
                            m && a.createRect(e).setFill(m.color).setStroke(m);
                            n &&
                                ((n = h.makeStroke(n)), (n.width =
                                        2 * n.width + (f ? f.width : 0)), a
                                    .createRect(e)
                                    .setStroke(n));
                            c = this.opt.fillFunc ?
                                this.opt.fillFunc(g, k, l) :
                                void 0 != this.opt.fill ? this.opt.fill : c.indicator.fill;
                            a.createRect(e).setFill(this._shapeFill(c, e)).setStroke(f);
                            b.moveToFront();
                        },
                        getSeriesStats: function() {
                            return c.delegate(h.defaultStats);
                        },
                    });
                    l('dojo-bidi') &&
                        f.extend({
                            _getMarkX: function(a) {
                                return this.chart.isRightToLeft() ?
                                    this.chart.axes.x.scaler.bounds.to +
                                    this.chart.axes.x.scaler.bounds.from -
                                    a :
                                    a;
                            },
                        });
                    return f;
                }
            );
        },
        'arcgisonline/sharing/dijit/Troubleshoot': function() {
            define(
                [
                    'dojo',
                    'dijit',
                    'dojox',
                    'dojo/i18n!arcgisonline/nls/arcgisonline',
                    'dojo/require!dijit/_Widget,dijit/_Templated,dijit/layout/ContentPane,arcgisonline/sharing/util,arcgisonline/sharing/dijit/dialog/GeneralDlg,arcgisonline/pages/dijit/PasswordStrength',
                ],
                function(c, g, f) {
                    c.provide('arcgisonline.sharing.dijit.Troubleshoot');
                    c.require('dijit._Widget');
                    c.require('dijit._Templated');
                    c.require('dijit.layout.ContentPane');
                    c.require('arcgisonline.sharing.util');
                    c.require('arcgisonline.sharing.dijit.dialog.GeneralDlg');
                    c.require('arcgisonline.pages.dijit.PasswordStrength');
                    c.requireLocalization('arcgisonline', 'arcgisonline');
                    c.declare(
                        'arcgisonline.sharing.dijit.Troubleshoot', [g._Widget, g._Templated], {
                            widgetsInTemplate: !0,
                            templateString: '\x3cdiv dojoAttachPoint\x3d"containerNode" class\x3d"esriItemLinks troubleshoot"\x3e\r\n        \x3cdiv class\x3d"subnav"\x3e\r\n          \x3cdiv class\x3d"container"\x3e\r\n            \x3ch1 class\x3d"padding-leader-half padding-trailer-half text-white"\x3e${i18n.troubleshootTitle}\x3c/h1\x3e\r\n          \x3c/div\x3e\r\n        \x3c/div\x3e\r\n        \x3cdiv class\x3d"respond"\x3e\r\n        \x3cp id\x3d"instructions"\x3e${i18n.instructions}\x3c/p\x3e\r\n         \x3cdiv data-dojo-attach-point\x3d"_stackContainer" class\x3d"newStyles"\x3e\r\n          \x3cdiv data-dojo-attach-point\x3d"forgotUsername" class\x3d"contentPane"\x3e\r\n              \x3ch2\x3e${i18n.forgotUsername}\x3c/h2\x3e\r\n              \x3cp\x3e${!i18n.forgotUsernameInstructions}\x3c/p\x3e\r\n              \x3clabel class\x3d"esriFloatLeading" for\x3d"email"\x3e${i18n.emailLabel}\x26nbsp;\x3c/label\x3e\r\n              \x3cinput id\x3d"email" data-dojo-attach-point\x3d"_email" name\x3d"email" data-dojo-type\x3d"dijit/form/ValidationTextBox" trim\x3d"true"/\x3e\r\n              \x3cbr /\x3e\r\n              \x3cbutton data-dojo-type\x3d"dijit/form/Button" data-dojo-attach-event\x3d"onClick:_submitEmail" class\x3d"esriFloatLeading calcite blue"\x3e${i18n.send}\x3c/button\x3e\r\n              \x3cbr/\x3e\r\n          \x3c/div\x3e\r\n          \x3cdiv data-dojo-attach-point\x3d"forgotPassword" class\x3d"contentPane"\x3e\r\n              \x3ch2\x3e${i18n.forgotPassword}\x3c/h2\x3e\r\n              \x3cp\x3e${!i18n.forgotPasswordInstructions}\x3c/p\x3e\r\n              \x3clabel class\x3d"esriFloatLeading" for\x3d"username"\x3e${i18n.usernameLabel}\x26nbsp;\x3c/label\x3e\r\n              \x3cinput id\x3d"username" name\x3d"userName" data-dojo-attach-point\x3d"_userName" data-dojo-type\x3d"dijit/form/ValidationTextBox" trim\x3d"true"/\x3e\r\n              \x3cbr /\x3e\r\n              \x3cbutton data-dojo-attach-event\x3d"onClick:_submitUsername" data-dojo-type\x3d"dijit/form/Button" class\x3d"esriFloatLeading calcite blue"\x3e${i18n.customRoles.continueLabel}\x3c/button\x3e\r\n              \x3cbr /\x3e\r\n          \x3c/div\x3e\r\n         \x3cdiv class\x3d"contentPane newStyles" dojoAttachPoint\x3d"changePassword" style\x3d"display:none;"\x3e\r\n             \x3ch2\x3e${i18n.resetPassword}\x3c/h2\x3e\r\n             \x3cp dojoAttachPoint\x3d"_securityQuestionInstructions" class\x3d"securityQuestion"\x3e${i18n.securityQuestionInstructions}\x3c/p\x3e\r\n             \x3clabel class\x3d"securityQuestion esriFloatLeading" dojoAttachPoint\x3d"_securityQuestion"\x3e\x3c/label\x3e\r\n             \x3cinput dojoAttachPoint\x3d"_securityAnswer" name\x3d"answer" dojoType\x3d"dijit.form.ValidationTextBox" trim\x3d"true" class\x3d"ieFix securityQuestion" /\x3e\r\n             \x3cdiv class\x3d"prompt securityQuestion"\x3e${i18n.securityQuestionPrompt}\x3c/div\x3e\r\n             \x3cdiv class\x3d"portal-only" style\x3d"display:none;"\x3e\r\n                 \x3cbr/\x3e\r\n                 \x3cp\x3e${i18n.enterNewPassword}\x3c/p\x3e\r\n                 \x3cdiv class\x3d"password-1"\x3e\r\n                     \x3cspan\x3e\x3clabel for\x3d"password"\x3e${i18n.newPasswordLabel}\x3c/label\x3e\r\n                      \x3cinput id\x3d"password" dojoAttachPoint\x3d"_newPassword" name\x3d"password" dojoAttachEvent\x3d"onKeyUp:isValidPassword" class\x3d"required" dojoType\x3d"dijit.form.TextBox" type\x3d"password" trim\x3d"true"\x3e\r\n                      \x3cdiv class\x3d"strength-meter"\x3e\r\n                        \x3cdiv data-dojo-attach-point\x3d"_strengthMeter"\x3e\x3c/div\x3e\r\n                        \x3cdiv class\x3d"input-error-message" data-dojo-attach-point\x3d"_passwordError"\x3e\x3c/div\x3e\r\n                      \x3c/div\x3e\r\n                    \x3c/span\x3e\r\n                 \x3c/div\x3e\r\n                 \x3cbr /\x3e\r\n                 \x3cdiv class\x3d"password-2"\x3e\r\n                     \x3clabel class\x3d"left"\x3e${i18n.reenterPasswordLabel}\x3c/label\x3e\r\n                     \x3cinput name\x3d"verify" dojoAttachPoint\x3d"_verifyPassword" type\x3d"password" dojotype\x3d"dijit.form.ValidationTextBox" trim\x3d"true"/\x3e\r\n                 \x3c/div\x3e\r\n             \x3c/div\x3e\r\n             \x3cbutton dojoAttachEvent\x3d"onClick:_submitReset" dojoType\x3d"dijit.form.Button" class\x3d"calcite blue esriFloatLeading indentBtn" style\x3d"margin-left: 205px;"\x3e${i18n.mosaicRulePanel.resetLabel}\x3c/button\x3e\r\n         \x3c/div\x3e\r\n          \x3cdiv data-dojo-attach-point\x3d"mfaHelp" class\x3d"contentPane"\x3e\r\n             \x3cbr /\x3e\r\n             \x3ch2\x3e${i18n.mfaHelpMsg}\x3c/h2\x3e\r\n             \x3cp\x3e${!i18n.mfaHelpInstructions}\x3c/p\x3e\r\n             \x3clabel class\x3d"esriFloatLeading" for\x3d"username"\x3e${i18n.usernameLabel}\x26nbsp;\x3c/label\x3e\r\n             \x3cinput id\x3d"mfa_username" name\x3d"userName" data-dojo-attach-point\x3d"_mfaUserName" data-dojo-type\x3d"dijit/form/ValidationTextBox" trim\x3d"true"/\x3e\r\n             \x3cbr /\x3e\r\n             \x3cbutton data-dojo-attach-event\x3d"onClick:_submitMfaUsername" data-dojo-type\x3d"dijit/form/Button" class\x3d"esriFloatLeading calcite blue"\x3e${i18n.customRoles.continueLabel}\x3c/button\x3e\r\n             \x3cbr /\x3e\r\n          \x3c/div\x3e\r\n         \x3cdiv class\x3d"contentPane newStyles" dojoAttachPoint\x3d"disableMfa" style\x3d"display:none;clear:both;"\x3e\r\n             \x3cbr /\x3e\r\n             \x3ch2\x3e${i18n.mfaSecurityQuestionTitle}\x3c/h2\x3e\r\n             \x3cp class\x3d"securityQuestion"\x3e${i18n.mfaSecurityQuestionMsg}\x3c/p\x3e\r\n             \x3clabel class\x3d"mfaSecurityQuestion esriFloatLeading" dojoAttachPoint\x3d"_mfaSecurityQuestion"\x3e\x3c/label\x3e\r\n             \x3cinput dojoAttachPoint\x3d"_mfaSecurityAnswer" name\x3d"answer" dojoType\x3d"dijit.form.ValidationTextBox" trim\x3d"true" class\x3d"ieFix securityQuestion" /\x3e\r\n             \x3cdiv class\x3d"prompt mfaSecurityQuestion"\x3e${i18n.securityQuestionPrompt}\x3c/div\x3e\r\n             \x3cbutton dojoAttachEvent\x3d"onClick:_submitMfaReset" dojoType\x3d"dijit.form.Button" class\x3d"calcite blue esriFloatLeading indentBtn" style\x3d"margin-left: 205px;"\x3e${i18n.send}\x3c/button\x3e\r\n         \x3c/div\x3e\r\n          \x3cdiv data-dojo-attach-point\x3d"register" title\x3d"${i18n.links.register}" style\x3d"display:none;"\x3e\r\n            \x3cp class\x3d"marginless"\x3e\x3cb\x3e${i18n.signInWidget.agsTrial}\x3c/b\x3e\x3c/p\x3e\r\n            \x3cp\x3e${i18n.signInWidget.agsSubscriptionInfo}\x3c/p\x3e\r\n            \x3ca class\x3d"calcite btn small blue" href\x3d"/about/free-trial.html?origin\x3darcgis"\x3e${i18n.signInWidget.ags30DayTrial}\x3c/a\x3e\x3cbr/\x3e\r\n            \x3cp\x3e\x3cb\x3e${i18n.signInWidget.agsNoTrial}\x3c/b\x3e\x3c/p\x3e\r\n            \x3cp\x3e${i18n.signInWidget.agsCreatePersonalMsg}.\x3c/p\x3e\r\n            \x3cp\x3e${i18n.signInWidget.agsHavePersonal}\x3c/p\x3e\r\n            \x3ca id\x3d"registerBtn" class\x3d"calcite btn small light"\x3e${i18n.signInWidget.agsRegisterPersonalBtn}\x3c/a\x3e\x3cbr/\x3e\r\n            \x3cp\x3e${i18n.signInWidget.agsCreatePersonal}\x3c/p\x3e\r\n            \x3ca id\x3d"createBtn" class\x3d"calcite btn small light"\x3e${i18n.signInWidget.agsCreatePersonalBtn}\x3c/a\x3e\r\n          \x3c/div\x3e\r\n          \x3cbr /\x3e\r\n          \x3cp data-dojo-attach-point\x3d"gotoStart" class\x3d"indent notstart" style\x3d"display:none;"\x3e${i18n.otherQuestions}\x26nbsp;\x26nbsp;\x3ca target\x3d"_blank" data-dojo-attach-event\x3d"onclick:_troubleshoot"\x3e${i18n.seeTroubleshooting}\x3c/a\x3e\x3c/p\x3e\r\n      \x3c/div\x3e\r\n      \x3c/div\x3e\r\n      \x3cbr /\x3e\r\n      \x3cbr /\x3e\r\n\x3c/div\x3e\r\n',
                            baseClass: 'esriTroubleshoot',
                            _util: arcgisonline.sharing.util,
                            _account: arcgisonline.sharing.geow.Account,
                            postMixInProperties: function() {
                                this.inherited(arguments);
                                c.mixin(
                                    this,
                                    c.queryToObject(window.location.search.slice(1))
                                );
                                if (this.returnUrl) {
                                    var b =
                                        window.location.host.split('.').slice(-2).join('.') +
                                        '/'; -
                                    1 === this.returnUrl.indexOf(b) &&
                                        -1 === this.returnUrl.indexOf('arcgis.com/') &&
                                        -1 === this.returnUrl.indexOf('esri.com/') &&
                                        (this.returnUrl = null);
                                }
                                this.i18n = c.mixin({},
                                    c.i18n.getLocalization('arcgisonline', 'arcgisonline').common
                                );
                                c.mixin(
                                    this.i18n,
                                    c.i18n.getLocalization('arcgisonline', 'arcgisonline')
                                    .troubleshoot
                                );
                                c.mixin(this.i18n, {
                                    customRoles: c.i18n.getLocalization(
                                        'arcgisonline',
                                        'arcgisonline'
                                    ).customRoles,
                                });
                                c.mixin(this.i18n, {
                                    mosaicRulePanel: c.i18n.getLocalization(
                                        'arcgisonline',
                                        'arcgisonline'
                                    ).mosaicRulePanel,
                                });
                                c.mixin(
                                    this.i18n,
                                    c.i18n.getLocalization('arcgisonline', 'arcgisonline')
                                    .newUser
                                );
                                c.mixin(this.i18n, {
                                    signInWidget: c.i18n.getLocalization(
                                        'arcgisonline',
                                        'arcgisonline'
                                    ).signInWidget,
                                });
                                this.i18n.errors = c.mixin(
                                    c.i18n.getLocalization('arcgisonline', 'arcgisonline').common
                                    .errors,
                                    c.i18n.getLocalization('arcgisonline', 'arcgisonline')
                                    .troubleshoot.errors,
                                    c.i18n.getLocalization('arcgisonline', 'arcgisonline')
                                    .newUser.errors
                                );
                                this.i18n.questions = c.mixin(
                                    c.i18n.getLocalization('arcgisonline', 'arcgisonline')
                                    .securityQuestions, { 0: this.i18n.questions.question0 }
                                );
                            },
                            startup: function() {
                                this.inherited(arguments);
                                this._connects = [];
                                esri.config.defaults.io.proxyUrl = esriGeowConfig.proxyServer;
                                this._errorDlg = arcgisonline.sharing.dijit.dialog.GeneralDlg.prototype.statics.getInstance();
                                this._svcUrl =
                                    esriGeowConfig.restBaseUrl +
                                    (esriGeowConfig.restBaseUrl.lastIndexOf('/') ===
                                        esriGeowConfig.restBaseUrl.length - 1 ?
                                        '' :
                                        '/');
                                this._communityUrl = this._svcUrl + 'community/';
                                this._userUrl = this._communityUrl + 'users/';
                                this._requestParams = { f: 'json' };
                                this._createStrengthMeter();
                                this.connect(
                                    c.byId('registerBtn'),
                                    'onclick',
                                    c.hitch(this, function() {
                                        window.location = esriGeowConfig.signup;
                                    })
                                );
                                this.connect(
                                    c.byId('createBtn'),
                                    'onclick',
                                    c.hitch(this, function() {
                                        window.location = esriGeowConfig.createAccount;
                                    })
                                );
                                this.connect(
                                    this._stackContainer,
                                    'onClick',
                                    c.hitch(this, function() {
                                        c.style(this.changePassword, 'display', 'none');
                                    })
                                );
                                this._account.getSelf(
                                    c.hitch(this, function(b) {
                                        this.portalSelf = b;
                                        this._initHelpMgr();
                                        this._troubleshoot();
                                    })
                                );
                            },
                            destroy: function() {
                                this.inherited(arguments);
                                c.forEach(this._connects, c.disconnect);
                            },
                            _initHelpMgr: function() {
                                var b = arcgisonline.sharing.dijit.HelpManager.prototype.statics.getInstance(),
                                    e = setInterval(
                                        c.hitch(this, function() {
                                            if (b.isLoaded())
                                                if (
                                                    (clearInterval(e), esriGeowConfig &&
                                                        esriGeowConfig.self &&
                                                        esriGeowConfig.self.isPortal)
                                                )
                                                    c.query('.helpLink').forEach(esri.hide), c
                                                    .query('#instructions')
                                                    .forEach(function(b) {
                                                        c.style(b, 'visibility', 'hidden');
                                                    });
                                                else {
                                                    var f = b.getHelpUrl('120000466');
                                                    c.query('.helpLink').attr('href', f);
                                                }
                                        }),
                                        200
                                    );
                            },
                            _createStrengthMeter: function() {
                                this._account.getSelf(
                                    function(b) {
                                        this._strengthMeter = new arcgisonline.pages.dijit
                                            .PasswordStrength({ portal: esriGeowConfig.self },
                                                this._strengthMeter
                                            );
                                        this._strengthMeter.update();
                                    }.bind(this)
                                );
                            },
                            isValidPassword: function() {
                                var b = this._newPassword.get('value');
                                return this._strengthMeter.update(b).then(
                                    function(b) {
                                        b = b.isValid;
                                        this._showInvalidPasswordError(b);
                                        return b;
                                    }.bind(this)
                                );
                            },
                            _showInvalidPasswordError: function(b) {
                                b
                                    ?
                                    c.addClass(this._passwordError, 'hide') :
                                    (c.attr(
                                        this._passwordError,
                                        'innerHTML',
                                        this.i18n.passwordHintText
                                    ), c.removeClass(this._passwordError, 'hide'));
                            },
                            _switchPane: function(b) {},
                            _forgotPassword: function() {
                                c.attr(
                                    this._forgotPasswordTitle,
                                    'innerHTML',
                                    this.i18n.forgotPassword
                                );
                                this._switchPane(this.forgotPassword);
                                this._userName.focus();
                            },
                            _changePassword: function() {
                                c.attr(
                                    this._forgotPasswordTitle,
                                    'innerHTML',
                                    this.i18n.resetPassword
                                );
                                this._switchPane(this.forgotPassword);
                                this._userName.focus();
                            },
                            _forgotUsername: function() {
                                this._switchPane(this.forgotUsername);
                                this._email.focus();
                            },
                            _troubleshoot: function() {
                                var b = this.portalSelf || {};
                                !1 === esriGeowConfig.showForgotUsername &&
                                    this._stackContainer.removeChild(this.forgotUsername);
                                this.isPortal = b && b.isPortal;
                                b &&
                                    (b.isPortal || b.urlKey) &&
                                    (this._stackContainer.removeChild(this.register), this
                                        .isPortal &&
                                        (c.query('.portal-only').forEach(esri.show), c.attr(
                                            this._securityQuestionInstructions,
                                            'innerHTML',
                                            this.i18n.securityQuestionInstructionsNoEmail
                                        ), this._stackContainer.removeChild(this.mfaHelp)));
                                this._clear();
                                this._securityQuestionIdx = -1;
                                this._switchPane(this._start);
                            },
                            _redirectToSignin: function() {
                                window.location = this.returnUrl || 'signin.html';
                            },
                            _submitEmail: function(b) {
                                b.preventDefault();
                                if (!this._checkRequired([this._email]))
                                    return (b =
                                        this._communityUrl + 'forgotUsername'), this._disable(!0), this._request(b, {
                                        email: this._getCleanString(this._email),
                                    }).then(
                                        c.hitch(this, function() {
                                            this._redirectToSignin();
                                        })
                                    );
                            },
                            _submitUsername: function(b) {
                                b.preventDefault();
                                this._newPassword.set('value', '');
                                this._verifyPassword.set('value', '');
                                if (!this._checkRequired([this._userName]))
                                    return (b =
                                        this._userUrl +
                                        this._getCleanString(this._userName) +
                                        '/forgotPassword'), this._disable(!0), this._request(
                                        b, {}
                                    ).then(
                                        c.hitch(this, function(b) {
                                            b = b || {};
                                            'arcgis' === b.provider ?
                                                ((this._securityQuestionIdx =
                                                        (-1 === b.securityQuestionIdx ?
                                                            0 :
                                                            b.securityQuestionIdx) || 0), c.attr(
                                                        this._securityQuestion,
                                                        'innerHTML',
                                                        this.i18n.questions[b.securityQuestionIdx]
                                                    ), this._securityQuestionIdx ||
                                                    this._showError(
                                                        this.i18n.errors[
                                                            this.isPortal ?
                                                            'noSecurityPortal' :
                                                            'noSecurity'
                                                        ]
                                                    ), c
                                                    .query('.securityQuestion', this.domNode)
                                                    .style('display', ''), c.style(
                                                        this.changePassword,
                                                        'display',
                                                        this._securityQuestionIdx ? '' : 'none'
                                                    ), this._securityAnswer.focus()) :
                                                'enterprise' === b.provider ?
                                                this._showError(this.i18n.errors.administrator) :
                                                ((this._isEcas = !0), c
                                                    .query('.securityQuestion', this.domNode)
                                                    .style('display', 'none'), c.style(
                                                        this.changePassword,
                                                        'display',
                                                        ''
                                                    ));
                                        })
                                    );
                            },
                            _getCleanString: function(b) {
                                b = b.get('value') || '';
                                return (
                                    new DOMParser().parseFromString(b, 'text/html').body
                                    .textContent || ''
                                );
                            },
                            _submitMfaUsername: function(b) {
                                b.preventDefault();
                                if (!this._checkRequired([this._mfaUserName]))
                                    return (b =
                                        this._userUrl +
                                        this._getCleanString(this._mfaUserName) +
                                        '/forgotPassword'), this._disable(!0), (this._mfaUserNameCheck = !0), this._request(b, {}).then(
                                        c.hitch(this, function(b) {
                                            b = b || {};
                                            this._securityQuestionIdx =
                                                (-1 === b.securityQuestionIdx ?
                                                    0 :
                                                    b.securityQuestionIdx) || 0;
                                            c.attr(
                                                this._mfaSecurityQuestion,
                                                'innerHTML',
                                                this.i18n.questions[b.securityQuestionIdx]
                                            );
                                            this._securityQuestionIdx ||
                                                this._showError(this.i18n.errors.noSecurity);
                                            c
                                                .query('.disableMfa', this.domNode)
                                                .style('display', '');
                                            c.style(
                                                this.disableMfa,
                                                'display',
                                                this._securityQuestionIdx ? '' : 'none'
                                            );
                                            this._mfaSecurityAnswer.focus();
                                        })
                                    );
                            },
                            _submitMfaReset: function(b) {
                                b.preventDefault();
                                b = {
                                    securityAnswer: this._getCleanString(
                                        this._mfaSecurityAnswer
                                    ),
                                    securityQuestionIdx: this._securityQuestionIdx,
                                };
                                if (!this._checkRequired([this._mfaSecurityAnswer])) {
                                    var e =
                                        this._util.getSecureUrl(this._userUrl) +
                                        this._mfaUserName.get('value') +
                                        '/disableMfaRequest';
                                    this._disable(!0);
                                    return this._request(e, b).then(
                                        c.hitch(this, function(b) {
                                            var d = c.connect(
                                                this._errorDlg,
                                                'onHide',
                                                c.hitch(this, function() {
                                                    d.remove();
                                                    this._redirectToSignin();
                                                })
                                            );
                                            this._showError(this.i18n.errors.mfaEmailSent);
                                        })
                                    );
                                }
                            },
                            _submitReset: function(b) {
                                b.preventDefault();
                                var e = {
                                    securityAnswer: this._getCleanString(this._securityAnswer),
                                    securityQuestionIdx: this._securityQuestionIdx,
                                };
                                if (this.isPortal) {
                                    b = [this._newPassword, this._verifyPassword];
                                    this._isEcas || b.unshift(this._securityAnswer);
                                    if (this._checkRequired(b)) return;
                                    if (
                                        this._newPassword.get('value') !==
                                        this._verifyPassword.get('value')
                                    )
                                        return this._verifyPassword.focus(), this._showError(
                                            this.i18n.errors.passwordsNotMatch
                                        );
                                    e.newPassword = this._newPassword.get('value');
                                } else {
                                    b = [this._securityAnswer];
                                    if (this._checkRequired(b)) return;
                                    e.email = !0;
                                }
                                if (this.isPortal)
                                    this.isValidPassword().then(
                                        function(b) {
                                            if (b) return this._makeResetRequest(e);
                                            this._newPassword.focus();
                                            return !this._showError(
                                                c.mixin(this.i18n.errors.invalidPassword, {
                                                    message: this.i18n.passwordHintText,
                                                })
                                            );
                                        }.bind(this)
                                    );
                                else return this._makeResetRequest(e);
                            },
                            _makeResetRequest: function(b) {
                                var e =
                                    this._util.getSecureUrl(this._userUrl) +
                                    this._userName.get('value') +
                                    '/reset';
                                this._disable(!0);
                                return this._request(e, b).then(
                                    c.hitch(this, function(b) {
                                        if (this.isPortal) this._redirectToSignin();
                                        else {
                                            var d = c.connect(
                                                this._errorDlg,
                                                'onHide',
                                                c.hitch(this, function() {
                                                    d.remove();
                                                    this._redirectToSignin();
                                                })
                                            );
                                            this._showError(this.i18n.errors.emailSent);
                                        }
                                    })
                                );
                            },
                            _disable: function(b) {
                                c
                                    .query(
                                        '.esriTroubleshoot .dijitTextBox, .esriTroubleshoot .dijitButton'
                                    )
                                    .map(g.byNode)
                                    .forEach(function(c) {
                                        c.set('disabled', b);
                                    });
                            },
                            _clear: function() {
                                c
                                    .query('.esriTroubleshoot .dijitTextBox')
                                    .map(g.byNode)
                                    .forEach(function(b) {
                                        b.set('value', '');
                                    });
                            },
                            _checkRequired: function(b) {
                                return (b = c.filter(
                                        b,
                                        c.hitch(this, function(b) {
                                            return this._isEmpty(b);
                                        })
                                    )) && b.length ?
                                    (b[0].focus(), this._showError(
                                        this.i18n.errors.required[b[0].name]
                                    )) :
                                    !1;
                            },
                            _isEmpty: function(b) {
                                b = b.get('value');
                                return (this.trim ? /^\s*$/ : /^$/).test(b);
                            },
                            _request: function(b, e) {
                                return this._util
                                    .request({ url: b, content: e }, { usePost: !0 })
                                    .then(
                                        c.hitch(this, function(b) {
                                            this._mfaUserNameCheck = !1;
                                            this._disable(!1);
                                            return b.error ? this._showError(b.error) : b;
                                        }),
                                        c.hitch(this, function(b) {
                                            this._disable(!1);
                                            b && 'COM_0018' === b.messageCode && this._userName ?
                                                ((b = this._mfaUserNameCheck ?
                                                    this._getCleanString(this._mfaUserName) :
                                                    this._getCleanString(this._userName)), (b = {
                                                    message: esri.substitute({ username: b },
                                                        this.i18n.errors.COM_0018
                                                    ),
                                                })) :
                                                b && 'COM_0049' === b.messageCode ?
                                                (b = { message: this.i18n.errors.COM_0049.message }) :
                                                b && 'COM_1037' === b.messageCode ?
                                                (b = { message: this.i18n.errors.COM_1037 }) :
                                                b && 'COM_1059' === b.messageCode ?
                                                (b = { message: this.i18n.errors.COM_1059 }) :
                                                b && 'COM_1055' === b.messageCode ?
                                                (b = {
                                                    message: this.i18n.errors.COM_1055,
                                                }) :
                                                b && 'DB_0003' === b.messageCode ?
                                                (b = {
                                                    message: this.i18n.errors
                                                        .DB_0003,
                                                }) :
                                                b &&
                                                'DB_0002' === b.messageCode &&
                                                (b = {
                                                    message: this.i18n.errors
                                                        .DB_0002,
                                                });
                                            this._showError(b);
                                            this._mfaUserNameCheck = !1;
                                            throw b;
                                        })
                                    );
                            },
                            _showError: function(b) {
                                b.message =
                                    (b.message &&
                                        b.message.replace(
                                            /[-a-zA-Z0-9@:%_\+.~#?&//=]{2,256}\[a-z]{2,4}\b(\/[-a-zA-Z0-9@:%_\+.~#?&//=]*)?/gi,
                                            ''
                                        )) ||
                                    '';
                                b.message = this._util.stripHTML(b.message);
                                b = b.error || b || {};
                                b.code = b.code || 0;
                                b = c.mixin(c.mixin({}, this.i18n.errors.error), b);
                                this._errorDlg.show(b);
                                return !0;
                            },
                        }
                    );
                }
            );
        },
        'arcgisonline/sharing/dijit/UserProfile': function() {
            define(
                'require dojo/_base/declare dojo/_base/kernel dojo/_base/lang dojo/_base/array dojo/cookie dojo/dom dojo/dom-attr dojo/dom-class dojo/dom-construct dojo/dom-geometry dojo/dom-style dojo/io-query dojo/json dojo/number dojo/on dojo/query dojo/string dojo/sniff dojo/promise/all dojo/Deferred dojo/data/ItemFileReadStore dojo/store/Memory dojox/html/entities dijit/_WidgetBase dijit/_TemplatedMixin dijit/_WidgetsInTemplateMixin dijit/registry dijit/Dialog dijit/form/Button dijit/form/FilteringSelect dijit/form/Form dijit/form/RadioButton dijit/layout/ContentPane dijit/Tooltip calcite-web/js/calcite-web esri/lang ../../esriGeowConfig ../util ../../pages/pageUtil ../../pages/dijit/InfoTooltip ../../pages/dijit/InviteMembers/AppIconWithLabel ../../pages/organization/widgets/LicenseTypeCard ../../pages/organization/widgets/UserTypeAppBundle ../../pages/portal/Portal ../../pages/utils/arrays ../../pages/utils/culture ../../pages/utils/dom ../../pages/utils/icons ../../pages/utils/organization ../../pages/utils/tooltips ../../pages/dijit/_CheckReadonlyMixin ../geow/Account ../geow/Community ../geow/Geow ../geow/Licenses ../geow/Roles ./ComboBox ./Role ./_LevelAwareMixin ./dialog/ChoiceDlg ./dialog/DeleteWarningDlg ./dialog/GeneralDlg ./dialog/SubscriptionStatusDlg dojo/i18n!../../nls/arcgisonline dojo/text!./templates/UserProfile.html'.split(
                    ' '
                ),
                function(
                    c,
                    g,
                    f,
                    b,
                    e,
                    h,
                    d,
                    a,
                    k,
                    n,
                    l,
                    m,
                    p,
                    r,
                    u,
                    t,
                    q,
                    v,
                    C,
                    z,
                    y,
                    x,
                    w,
                    A,
                    E,
                    B,
                    D,
                    H,
                    G,
                    F,
                    K,
                    L,
                    Q,
                    O,
                    P,
                    J,
                    I,
                    N,
                    M,
                    R,
                    Y,
                    Z,
                    U,
                    V,
                    T,
                    ca,
                    ua,
                    W,
                    ja,
                    Ba,
                    ga,
                    ka,
                    Ca,
                    na,
                    la,
                    va,
                    oa,
                    ra,
                    ea,
                    sa,
                    Fa,
                    ma,
                    S,
                    wa,
                    X,
                    xa
                ) {
                    return g(
                        'arcgisonline.sharing.dijit.UserProfile', [E, B, D, sa, ka], {
                            declaredClass: 'arcgisonline.sharing.dijit.UserProfile',
                            basePath: c.toUrl('arcgisonline/sharing/dijit'),
                            baseClass: 'esriUserProfile grid-container',
                            templateString: xa,
                            widgetsInTemplate: !0,
                            icons: ja,
                            LANDING_PAGES: {
                                HOME: 'index.html',
                                GALLERY: 'gallery.html',
                                MAP: 'webmap/viewer.html',
                                SCENE: 'webscene/viewer.html',
                                GROUPS: 'groups.html',
                                CONTENT: 'content.html',
                                ORGANIZATION: 'organization.html',
                            },
                            _self: null,
                            _portal: null,
                            _user: null,
                            _showUser: null,
                            _isOwner: !1,
                            _profile: null,
                            _isSingleTenant: !1,
                            _userProviderRetrieved: !1,
                            _proListing: null,
                            noDescriptionText: '',
                            thumbnailPath: null,
                            thumbnailImage: null,
                            label_fullName: null,
                            label_description: null,
                            label_privacy: null,
                            label_username: null,
                            label_defaultGroup: null,
                            editForm: null,
                            organization_link: null,
                            coreRoleIds: 'org_admin org_publisher org_user account_admin account_publisher account_user'.split(
                                ' '
                            ),
                            accountAdminRole: 'account_admin',
                            accountPublisherRole: 'account_publisher',
                            accountUserRole: 'account_user',
                            accountViewerRole: 'account_viewer',
                            arcgisProvider: 'arcgis',
                            bothProvider: 'both',
                            enterpriseProvider: 'enterprise',
                            socialProviders: ['google', 'facebook'],
                            descriptionTextArea: null,
                            descriptionEditorContainer: null,
                            descriptionEditor: null,
                            defaultGroupSelect: null,
                            relatedLinks: null,
                            questionSelect: null,
                            questionAnswer: null,
                            questionStore: null,
                            newPassword: null,
                            verifyNewPassword: null,
                            newEmail: null,
                            verifyNewEmail: null,
                            languageSelect: null,
                            regionSelect: null,
                            reloadOnUpdate: !1,
                            editConnects: [],
                            licenseKeywords: {
                                proBasic: 'desktopBasicN',
                                proStandard: 'desktopStdN',
                                proAdvanced: 'desktopAdvN',
                                spatialAnalyst: 'spatialAnalystN',
                                threeDAnalyst: '3DAnalystN',
                                networkAnalyst: 'networkAnalystN',
                                geostatAnalyst: 'geostatAnalystN',
                                dataReviewer: 'dataReviewerN',
                                workflowManager: 'workflowMgrN',
                                dataInterop: 'dataInteropN',
                                defenseMapping: 'defenseN',
                                fmv: 'FMVN',
                                businessBasic: 'businessBasicN',
                                businessStandard: 'businessStdN',
                                roadsHighways: 'roadsHighwaysN',
                                publisher: 'publisherN',
                                productionMap: 'productionMapN',
                                schematics: 'schematicsN',
                                tracking: 'trackingN',
                                aviation: 'aviationN',
                                airports: 'airportsN',
                                maritime: 'maritimeN',
                                bathymetry: 'bathymetryN',
                                streetMapNA: 'smpNAmericaN',
                                streetMapEU: 'smpEuropeN',
                                streetMapAPAC: 'smpAsiaPacificN',
                                streetMapMEA: 'smpMidEAfricaN',
                                streetMapLA: 'smpLAmericaN',
                                streetMapJA: 'smpJapanN',
                                locateXT: 'locateXTN',
                                locationRef: 'LocRefDesktopN',
                                imageAnalyst: 'imageAnalystN',
                            },
                            landingPageToName: {},
                            nameToLandingPage: {},
                            postMixInProperties: function() {
                                this.inherited(arguments);
                                this.i18n = b.mixin(X.common, X.userProfile);
                                this.i18n = b.mixin(this.i18n, X.siteHeader);
                                this.i18n = b.mixin(this.i18n, {
                                    securityQuestions: X.securityQuestions,
                                    licenseTypes: X.manageLicenses.licenseTypes,
                                    customRoles: X.customRoles,
                                    noDescriptionText: this.i18n.noDescriptionText,
                                    manageLicenses: X.manageLicenses,
                                });
                            },
                            postCreate: function() {
                                this.inherited(arguments);
                                this._readQueryParameters();
                                this._isSingleTenant =
                                    void 0 !== N.isMultiTenant &&
                                    null !== N.isMultiTenant &&
                                    !1 === N.isMultiTenant;
                                this.thumbnailImage.src = M.relativeToExplicitUrl(
                                    'js/arcgisonline/css/images/transparent.gif'
                                );
                                this._languageFormatHelpImg.src = M.relativeToExplicitUrl(
                                    'js/arcgisonline/css/images/helpIcon.png'
                                );
                                this._tooltipDialog = new G({
                                    id: 'roleSummaryDialog',
                                    style: { width: '315px', maxWidth: '315px', outline: 'none' },
                                    content: '',
                                });
                                this._languageFormatTooltip = ga.createTooltip(
                                    'languageFormatTooltip',
                                    this.i18n.learnNumDateFormat
                                );
                                this.coreRoleIds.push(this.SYSTEM_ROLES.VIEWER);
                                this.coreRoleIds.push(this.SYSTEM_ROLES.DATA_EDITOR);
                                this._licensesAPI = new va();
                                this._rolesAPI = new oa();
                                this.own(
                                    t(
                                        this.languageSelect,
                                        'change',
                                        this.onLanguageChange.bind(this)
                                    )
                                );
                            },
                            destroy: function() {
                                this.inherited(arguments);
                                this._tooltipDialog.destroyRecursive();
                                this._languageFormatTooltip.destroyRecursive();
                            },
                            startup: function() {
                                this.inherited(arguments);
                                this._requireSecurity &&
                                    (this._requireSecurityHandler = t(
                                        this,
                                        'onProfileLoad',
                                        function() {
                                            this._requireSecurityHandler &&
                                                this._requireSecurityHandler.remove();
                                            if (this._requireSecurity)
                                                var a = setInterval(
                                                    function() {
                                                        this._userProviderRetrieved &&
                                                            (clearInterval(
                                                                a
                                                            ), this._startEdit(), R.createSpecifiedDialog(
                                                                S
                                                            ).show({
                                                                title: this.i18n.notice,
                                                                message: this.i18n.noQuestionSetText,
                                                            }));
                                                    }.bind(this),
                                                    100
                                                );
                                        }.bind(this)
                                    ));
                                this._verifyEmail &&
                                    R.createSpecifiedDialog(S).show({
                                        title: this.i18n.confirmEmailTitle,
                                        message: v.substitute(this.i18n.confirmEmailMsg, {
                                            email: this._verifyEmail,
                                        }),
                                    });
                                Ca.getSelf(this._initUI.bind(this));
                            },
                            _readQueryParameters: function() {
                                var a = p.queryToObject(window.location.search.slice(1));
                                a.user && 0 < a.user.length && (this._showUser = a.user);
                                a.requireSecurity && (this._requireSecurity = !0);
                                a.verifyEmail &&
                                    (this._verifyEmail = M.stripHTML(a.verifyEmail));
                                a.validateEmail &&
                                    ((this._validateEmail = M.stripHTML(
                                        a.validateEmail
                                    )), M.requireAuthentication());
                            },
                            _isDevSubscription: function(a) {
                                return (
                                    a && a.type && 'trial developer' === a.type.toLowerCase()
                                );
                            },
                            _initUI: function(a) {
                                this._self = a;
                                this._portal =
                                    N.portal || new T({ url: N.restBaseUrl, self: this._self });
                                this._isDeveloperSubscription = this._isDevSubscription(
                                    this._self.subscriptionInfo
                                );
                                p.queryToObject(window.location.search.slice(1))
                                    .passwordReset &&
                                    R.createSpecifiedDialog(S).show({
                                        title: this.i18n.passwordChanged,
                                        message: this.i18n.passwordChangedMsg,
                                    });
                                this._oAuthInfo = {
                                    url: M.getSecureUrl(N.restBaseUrl) + 'oauth2/authorize',
                                    clientId: 'arcgisonline',
                                    redirectUri: N.baseUrl + 'postresetpassword.html',
                                    parent: window.location.protocol +
                                        '//' +
                                        window.location.host,
                                    expiration: 20160,
                                    locale: f.locale,
                                };
                                if (M.isLoggedIn()) {
                                    if (
                                        (this._user = M.getUser()) &&
                                        this._user.accountId &&
                                        this._user.role
                                    ) {
                                        this._isAdmin = N.userRole.isAdmin();
                                        if ((this._isCustomRole = N.userRole.isCustom()))
                                            (this._roleCanView =
                                                this._isCustomRole &&
                                                N.userRole.canViewUsers()), (this._roleCanUpdate =
                                                this._isCustomRole &&
                                                N.userRole.canUpdateUsers()), (this._roleCanManageLicenses =
                                                this._isCustomRole &&
                                                N.userRole.canManageLicenses()), (this._roleCanManageCredits =
                                                this._isCustomRole && N.userRole.canManageCredits());
                                        this._isWebTierAuth = !1;
                                        if (M.isPortal()) {
                                            var b = M.getCookie('esri_auth');
                                            b.auth_tier &&
                                                'web' === b.auth_tier &&
                                                ((this._isWebTierAuth = !0), (b = d.byId(
                                                    'landing_page_edit'
                                                )), m.set(b, 'display', 'none'), k.remove(
                                                    b,
                                                    'ownerOnly'
                                                ));
                                        }
                                    }
                                    this._personalInfoEditable = this._user &&
                                        this._user.accountId &&
                                        !this._isAdmin ?
                                        a.updateUserProfileDisabled ?
                                        !a.updateUserProfileDisabled :
                                        !0 :
                                        !0;
                                    this._isOwner = this._showUser ?
                                        this._user.email === this._showUser :
                                        !0;
                                } else this._showUser || M.requireAuthentication();
                                a = n.create;
                                this.noDescriptionText = a('span');
                                b = a('span');
                                if (this._isOwner) {
                                    a('span', { innerHTML: this.i18n.writeSomething }, b);
                                    var c = a('ul', null, b);
                                    a('li', { innerHTML: this.i18n.yourOrg }, c);
                                    a('li', { innerHTML: this.i18n.contactInfo }, c);
                                    a('li', { innerHTML: this.i18n.areaOfExpertise }, c);
                                    a('li', { innerHTML: this.i18n.interests }, c);
                                    a('li', { innerHTML: this.i18n.anyOtherInfo }, c);
                                } else
                                    a(
                                        'span', {
                                            id: 'noDescriptionSpan',
                                            innerHTML: this.i18n.userNoInfo,
                                        },
                                        b
                                    );
                                this.noDescriptionText = a('span').appendChild(b).innerHTML;
                                d.byId('user_profile_edit_title').innerHTML =
                                    '\x3cb\x3e' + this.i18n.userNameLabel + '\x3c/b\x3e';
                                N.useDefaultIdentityStore ?
                                    m.set(d.byId('user_profile_edit_link'), 'display', 'none') :
                                    N.account_edit ||
                                    m.set(
                                        d.byId('user_profile_edit_link'),
                                        'display',
                                        'none'
                                    );
                                this._user &&
                                    this._user.accountId &&
                                    this._user.role &&
                                    this._user.role ?
                                    (a(
                                            'a', { href: 'organization.html', innerHTML: this.i18n.myOrg },
                                            this.organization_link,
                                            'only'
                                        ), 10 >= C('ie') ?
                                        m.set(d.byId('organization_link_div'), 'display', '') :
                                        m.set(
                                            d.byId('organization_link_div'),
                                            'display',
                                            'block'
                                        )) :
                                    m.set(d.byId('organization_link_div'), 'display', 'none');
                                this._isOwner ||
                                    (a(
                                        'a', {
                                            id: 'viewItemsLink',
                                            href: N.baseUrl +
                                                'search.html?q\x3downer:%22' +
                                                this._showUser +
                                                '%22#content',
                                            innerHTML: this.i18n.viewItems,
                                        },
                                        a('div', null, this.relatedLinks)
                                    ), a(
                                        'a', {
                                            id: 'viewGroupsLink',
                                            href: N.baseUrl +
                                                'search.html?q\x3downer:%22' +
                                                this._showUser +
                                                '%22#groups',
                                            innerHTML: this.i18n.viewGroups,
                                        },
                                        a('div', null, this.relatedLinks)
                                    ));
                                this._isOwner &&
                                    q('.ownerOnly', this.domNode).style('display', 'block');
                                this._user &&
                                    !this._user.accountId &&
                                    q('.readOrgOnly', this.domNode).style('display', 'none');
                                q('.editOrgOnly', this.domNode).style('display', 'none');
                                this._isSingleTenant ?
                                    m.set(d.byId('region_edit'), 'display', 'none') :
                                    m.set(this.region_setting, 'display', '');
                                N.showAccountSwitcher &&
                                    !this._showUser &&
                                    k.remove(this._manageLinkedAccounts, 'hide');
                                'ja' === f.locale &&
                                    n.place(
                                        d.byId('lastNameProperty'),
                                        d.byId('firstNameProperty'),
                                        'before'
                                    );
                                Ca.getSupportedLanguagesAndRegions().then(
                                    function(a) {
                                        if (a) {
                                            this._initLanguage(a.languages);
                                            this._initRegion(a.regions);
                                            var b = (this._username = this._isOwner ?
                                                this._user.email :
                                                this._showUser);
                                            Ba.initLicensesConfig(this._portal).then(
                                                function() {
                                                    na.getProfile(
                                                        b,
                                                        this._handle_getProfile.bind(this)
                                                    );
                                                }.bind(this)
                                            );
                                        }
                                    }.bind(this),
                                    this._handleError.bind(this)
                                );
                                this._initUnits();
                            },
                            _getUserProperties: function() {
                                return M.request({
                                    url: N.restBaseUrl +
                                        'community/users/' +
                                        this._username +
                                        '/properties',
                                });
                            },
                            _updateUserProperties: function(a) {
                                return M.request({
                                    url: N.restBaseUrl +
                                        'community/users/' +
                                        this._username +
                                        '/setProperties',
                                    content: { properties: r.stringify(a) },
                                }, { usePost: !0 });
                            },
                            _getUserProvider: function() {
                                var a = new y();
                                return M.request({
                                    url: N.restBaseUrl +
                                        'community/users/' +
                                        this._username +
                                        '/forgotPassword',
                                }, {}).then(
                                    function(b) {
                                        this._userProviderRetrieved = !0;
                                        this._user && this._isOwner ?
                                            ((this._user.provider = b.provider), 'ecas' ===
                                                this._user.provider &&
                                                m.set(
                                                    this.editUsernameLink,
                                                    'display',
                                                    'inline-block'
                                                ), this._checkSocialProvider(
                                                    this._user.provider, !1
                                                ), -1 < b.securityQuestionIdx &&
                                                (this._securityIdx = b.securityQuestionIdx)) :
                                            this._profile &&
                                            ((this._profile.provider =
                                                    b.provider), this._checkSocialProvider(
                                                    this._profile.provider, !0
                                                ), -1 < b.securityQuestionIdx &&
                                                (this._securityIdx = b.securityQuestionIdx));
                                        a.resolve();
                                    }.bind(this),
                                    function() {
                                        a.resolve();
                                    }.bind(this)
                                );
                            },
                            _checkSocialProvider: function(b, c) {
                                var d, e;
                                ca.includes(['google', 'facebook'], b) ?
                                    ('google' === b ?
                                        ((d = c ?
                                            this.i18n.providerGoogle :
                                            this.i18n.signedInGoogle), (e =
                                            './pages/Account/images/small_circle_google.png')) :
                                        'facebook' === b &&
                                        ((d = c ?
                                            this.i18n.providerFacebook :
                                            this.i18n.signedInFacebook), (e =
                                            './pages/Account/images/small_circle_facebook.png')), a.set(
                                            this._socialIcon,
                                            'src',
                                            e
                                        ), a.set(this._socialIcon, 'alt', d), a.set(
                                            this._socialIcon,
                                            'title',
                                            d
                                        ), m.set(this._socialIcon, 'display', '')) :
                                    m.set(this._socialIcon, 'display', 'none');
                            },
                            _initLanguage: function(b) {
                                if (b) {
                                    var c = M.isPortal() ? '120001538' : '120001488';
                                    a.set(
                                        'languageFormatHelpLink',
                                        'href',
                                        this._self.helpBase + (this._self.helpMap.m[c] || '')
                                    );
                                    var d = [];
                                    e.forEach(
                                        b,
                                        function(a) {
                                            a.displayName = A.decode(
                                                (a.localizedName ? a.localizedName + ' - ' : '') +
                                                a.language +
                                                '\x26lrm;'
                                            );
                                            a.cultureFormats &&
                                                a.cultureFormats.length &&
                                                a.cultureFormats.forEach(function(a) {
                                                    a.displayName = A.decode(
                                                        (a.localizedName ? a.localizedName + ' - ' : '') +
                                                        a.name +
                                                        '\x26lrm;'
                                                    );
                                                });
                                            d.push(a);
                                        },
                                        this
                                    );
                                    b = new w({
                                        idProperty: 'culture',
                                        label: 'displayName',
                                        data: d,
                                    });
                                    this.languageSelect.set('store', b);
                                    this.languageSelect.set('searchAttr', 'displayName');
                                }
                            },
                            _initRegion: function(a) {
                                a &&
                                    ((a = new x({
                                        data: {
                                            identifier: 'region',
                                            label: 'localizedName',
                                            items: a,
                                        },
                                    })), this.regionSelect.set(
                                        'store',
                                        a
                                    ), this.regionSelect.set('searchAttr', 'localizedName'));
                            },
                            _initUnits: function() {
                                if (!I.isDefined(this.unitsStore)) {
                                    var a = new x({
                                        data: {
                                            identifier: 'id',
                                            label: 'name',
                                            items: [
                                                { id: 'english', name: this.i18n.unitsEnglish },
                                                { id: 'metric', name: this.i18n.unitsMetric },
                                            ],
                                        },
                                    });
                                    this.unitsSelect.set('store', a);
                                }
                            },
                            _initLandingPage: function() {
                                this._initLandingPageMappings();
                                var b = this._getAvailableLandingPages(),
                                    c = this._getCurrentLandingPage(),
                                    c = this.landingPageToName[c],
                                    b = new x({
                                        data: { identifier: 'page', label: 'name', items: b },
                                    });
                                this.landingPageSelect.set('store', b);
                                a.set(this.landing_page_setting, 'innerHTML', c);
                                this.landingPageSelect.set('displayedValue', c);
                            },
                            _initLandingPageMappings: function() {
                                Object.keys(this.LANDING_PAGES).forEach(function(a) {
                                    a = this.LANDING_PAGES[a];
                                    var b;
                                    switch (a) {
                                        case this.LANDING_PAGES.HOME:
                                            b = this.i18n.simpleHome;
                                            break;
                                        case this.LANDING_PAGES.GALLERY:
                                            b = this.i18n.gallery;
                                            break;
                                        case this.LANDING_PAGES.MAP:
                                            b = this.i18n.map;
                                            break;
                                        case this.LANDING_PAGES.SCENE:
                                            b = this.i18n.scene;
                                            break;
                                        case this.LANDING_PAGES.GROUPS:
                                            b = this.i18n.groups;
                                            break;
                                        case this.LANDING_PAGES.CONTENT:
                                            b = this.i18n.myContent;
                                            break;
                                        case this.LANDING_PAGES.ORGANIZATION:
                                            b = this.i18n.myAccount;
                                    }
                                    b && this._createLandingPageMapping(a, b);
                                }, this);
                            },
                            _createLandingPageMapping: function(a, b) {
                                this.landingPageToName[a] = b;
                                this.nameToLandingPage[b] = a;
                            },
                            _getAvailableLandingPages: function() {
                                var a = [{
                                            page: this.LANDING_PAGES.HOME,
                                            name: this.landingPageToName[this.LANDING_PAGES.HOME],
                                        },
                                        {
                                            page: this.LANDING_PAGES.GALLERY,
                                            name: this.landingPageToName[this.LANDING_PAGES.GALLERY],
                                        },
                                        {
                                            page: this.LANDING_PAGES.MAP,
                                            name: this.landingPageToName[this.LANDING_PAGES.MAP],
                                        },
                                        {
                                            page: this.LANDING_PAGES.SCENE,
                                            name: this.landingPageToName[this.LANDING_PAGES.SCENE],
                                        },
                                    ],
                                    b = this._profile.userRole;
                                b &&
                                    b.canCreateGroup() &&
                                    a.push({
                                        page: this.LANDING_PAGES.GROUPS,
                                        name: this.landingPageToName[this.LANDING_PAGES.GROUPS],
                                    });
                                b &&
                                    b.canCreateItem() &&
                                    a.push({
                                        page: this.LANDING_PAGES.CONTENT,
                                        name: this.landingPageToName[this.LANDING_PAGES.CONTENT],
                                    });
                                b &&
                                    b.canViewOrgUsers() &&
                                    a.push({
                                        page: this.LANDING_PAGES.ORGANIZATION,
                                        name: this.landingPageToName[
                                            this.LANDING_PAGES.ORGANIZATION
                                        ],
                                    });
                                return a;
                            },
                            _getCurrentLandingPage: function() {
                                var a = M.isPortal(),
                                    b = this._profile.properties &&
                                    this._profile.properties.landingPage ?
                                    this._profile.properties.landingPage.url :
                                    void 0,
                                    c = this._profile.userRole;
                                return b ?
                                    b :
                                    (c &&
                                        (!a || (a && !N.restrictOrganizationPageToAdmin)) &&
                                        c.isBasedOnAdmin()) ||
                                    (a && N.restrictOrganizationPageToAdmin && c.isAdmin()) ?
                                    this.LANDING_PAGES.ORGANIZATION :
                                    this.LANDING_PAGES.HOME;
                            },
                            _loadProfile: function(b) {
                                var c = p.queryToObject(window.location.search.substring(1)),
                                    e = -1 < ['hi'].indexOf(b.culture);
                                if (
                                    b.culture &&
                                    f.locale !== b.culture.toLowerCase() &&
                                    !e &&
                                    !c.locale &&
                                    (c = M.getCookie('esri_auth')) &&
                                    ((c.username = c.username || c.email), c &&
                                        c.username === b.username)
                                ) {
                                    9 > C('ie') &&
                                        c.auth_tier &&
                                        'web' === c.auth_tier &&
                                        ((e = new Date()), (c.expires = new Date(
                                            e.setSeconds(e.getSeconds() + Number(7200))
                                        )));
                                    if (!c.culture ||
                                        (c.culture &&
                                            c.culture.toLowerCase() !== b.culture.toLowerCase())
                                    )
                                        (c.culture = b.culture.toLowerCase()), la.setAuthCookie(
                                            c
                                        ), h('arcgisLocale', c.culture);
                                    window.location.reload();
                                }
                                this.thumbnailImage.src = b.thumbnail && 0 < b.thumbnail.length ?
                                    na.getProfileThumbnailUrl(b) :
                                    M.relativeToExplicitUrl(
                                        'js/arcgisonline/css/images/no-user-thumb.jpg'
                                    );
                                b.firstName && b.lastName ?
                                    (a.set(
                                        this._profileTitle,
                                        'innerHTML',
                                        v.substitute(this.i18n.profileTitleLabel, {
                                            name: b.firstName,
                                        })
                                    ), a.set(
                                        this._firstNameLabel,
                                        'innerHTML',
                                        b.firstName
                                    ), a.set(this._lastNameLabel, 'innerHTML', b.lastName)) :
                                    (a.set(
                                            this._profileTitle,
                                            'innerHTML',
                                            v.substitute(this.i18n.profileTitleLabel, {
                                                name: v.trim(b.fullName),
                                            })
                                        ), this._isEnterpriseUser(), (c = b.fullName.indexOf(
                                            ' '
                                        )), 0 < c ?
                                        b.culture && 'ja' === b.culture ?
                                        (a.set(
                                            this._lastNameLabel,
                                            'innerHTML',
                                            b.fullName.substring(0, c)
                                        ), a.set(
                                            this._firstNameLabel,
                                            'innerHTML',
                                            b.fullName.substring(c + 1)
                                        )) :
                                        (a.set(
                                            this._firstNameLabel,
                                            'innerHTML',
                                            b.fullName.substring(0, c)
                                        ), a.set(
                                            this._lastNameLabel,
                                            'innerHTML',
                                            b.fullName.substring(c + 1)
                                        )) :
                                        a.set(this._firstNameLabel, 'innerHTML', b.fullName));
                                c = n.create;
                                M.htmlHasText(b.description) ?
                                    ((e = M.linkifyText(b.description)), 8 > C('ie') &&
                                        (e =
                                            "\x3cpre class\x3d'esriProfileDesc'\x3e" +
                                            e +
                                            '\x3c/pre\x3e'), c(
                                            'span', { innerHTML: e, style: 'white-space:pre-wrap' },
                                            this.label_description,
                                            'only'
                                        )) :
                                    (c(
                                            'span', {
                                                innerHTML: this._personalInfoEditable ?
                                                    this.noDescriptionText :
                                                    '',
                                                class: 'dim text-dark-gray',
                                            },
                                            this.label_description,
                                            'only'
                                        ), !this._isOwner &&
                                        this._user &&
                                        this._user.accountId &&
                                        b.accountId &&
                                        this._user.accountId === b.accountId &&
                                        a.set(
                                            'noDescriptionSpan',
                                            'innerHTML',
                                            this.i18n.memberNoDescriptionText
                                        ));
                                c(
                                    'span', {
                                        innerHTML: 'public' === b.access ?
                                            this.i18n.everyone :
                                            'org' === b.access ?
                                            this.i18n.organization :
                                            this.i18n.noonePrivate,
                                    },
                                    this.label_privacy,
                                    'only'
                                );
                                c(
                                    'span', { innerHTML: b.username },
                                    this.label_username,
                                    'only'
                                );
                                b.culture = ua.getActualCulture(
                                    b.culture,
                                    this.languageSelect.get('store').query()
                                );
                                this.set('culture', b.culture);
                                this.set('cultureFormat', b.cultureFormat);
                                this.set('region', b.region);
                                this.set('units', b.units);
                                b.role && this._createRoleInfo(b.role, b.roleId, b.privileges);
                                ('enabled' !== this._self.creditAssignments &&
                                    'validated' !== this._self.creditAssignments) ||
                                !((this._self.portalProperties &&
                                        !0 === this._self.portalProperties.showCreditsOnProfile &&
                                        (this._isAdmin || this._isOwner)) ||
                                    this._isAdmin ||
                                    this._roleCanManageCredits) ?
                                m.set(d.byId('credits_div'), 'display', 'none'): (a.set(
                                    this.available_credits,
                                    'innerHTML',
                                    u.format(-1 === b.availableCredits ?
                                        b.assignedCredits :
                                        b.availableCredits
                                    )
                                ), m.set(d.byId('credits_div'), 'display', ''));
                                this._self.mfaEnabled &&
                                    N.multiFactorEnabled &&
                                    !M.isPortal() &&
                                    !this._isDeveloperSubscription &&
                                    this._isArcGISUser() &&
                                    (this._isAdmin || this._isOwner) &&
                                    this._user.accountId &&
                                    this._profile.accountId &&
                                    this._user.accountId === this._profile.accountId ?
                                    (m.set(d.byId('mfa_edit'), 'display', ''), b.mfaEnabled ?
                                        (a.set(
                                            this.mfa_setting,
                                            'innerHTML',
                                            this.i18n.enabledLabel
                                        ), m.set(
                                            this._enableMFA.domNode,
                                            'display',
                                            'none'
                                        ), m.set(this._disableMFA.domNode, 'display', '')) :
                                        (a.set(
                                            this.mfa_setting,
                                            'innerHTML',
                                            this.i18n.disabledLabel
                                        ), m.set(
                                            this._disableMFA.domNode,
                                            'display',
                                            'none'
                                        ), m.set(this._enableMFA.domNode, 'display', ''))) :
                                    m.set(d.byId('mfa_edit'), 'display', 'none');
                                (this._isArcGISUser() || this._isSocialUser()) &&
                                ((this._user && !this._user.accountId && this._isOwner) ||
                                    (N.userRole && N.userRole.isAdmin())) ?
                                (this.newEmail.set(
                                    'value',
                                    b.email
                                ), this.verifyNewEmail.set('value', ''), a.set(
                                    this._displayEmail,
                                    'innerHTML',
                                    b.email
                                )) :
                                this._isEnterpriseUser() ?
                                    a.set(this._displayEmail, 'innerHTML', b.email) :
                                    m.set(d.byId('user_email_edit'), 'display', 'none');
                                this._toggleEsriPreferences();
                                this._initLandingPage();
                            },
                            _createRoleInfo: function(b, c, e) {
                                var f = this.organization_role,
                                    g = '',
                                    h = n.create('span', {
                                        role: 'button',
                                        'aria-label': this.i18n.customRoles.roleInfo,
                                        innerHTML: ja.inline.info['16'],
                                        class: 'role-info tooltip inline-block',
                                    });
                                I.isDefined(c) ?
                                    this._rolesAPI.getRole(c).then(
                                        function(b) {
                                            b &&
                                                b.name &&
                                                (b.id === this.SYSTEM_ROLES.VIEWER ?
                                                    (b.name = this.i18n.viewerRole) :
                                                    b.id === this.SYSTEM_ROLES.DATA_EDITOR &&
                                                    (b.name = this.i18n.viewerEditRole), (N.userRole.name = g =
                                                        b.name), (N.userRole.description =
                                                        b.description), a.set(
                                                        f,
                                                        'innerHTML',
                                                        "\x3cspan class\x3d'role-name'\x3e" +
                                                        g +
                                                        '\x26nbsp;\x3c/span\x3e'
                                                    ), this.own(
                                                        t(
                                                            h,
                                                            'click',
                                                            this._openRoleSummary.bind(
                                                                this,
                                                                c,
                                                                g,
                                                                b.description,
                                                                e
                                                            )
                                                        )
                                                    ), n.place(h, f, 'last'));
                                        }.bind(this)
                                    ) :
                                    (this.accountAdminRole !== b || I.isDefined(c) ?
                                        this.accountPublisherRole !== b || I.isDefined(c) ?
                                        this.accountUserRole !== b || I.isDefined(c) ?
                                        c === this.SYSTEM_ROLES.VIEWER ?
                                        (g = this.i18n.viewerRole) :
                                        c === this.SYSTEM_ROLES.DATA_EDITOR &&
                                        (g = this.i18n.viewerEditRole) :
                                        (g = this.i18n.userRole) :
                                        (g = this.i18n.publisherRole) :
                                        (g = this.i18n.adminRole), a.set(
                                            f,
                                            'innerHTML',
                                            g + '\x26nbsp;'
                                        ), this.own(
                                            t(
                                                h,
                                                'click',
                                                this._openRoleSummary.bind(this, b, g, null, null)
                                            )
                                        ), n.place(h, f, 'last'));
                                C('ie') ?
                                    m.set(d.byId('organization_role_div'), 'display', '') :
                                    m.set(
                                        d.byId('organization_role_div'),
                                        'display',
                                        'block'
                                    );
                            },
                            _openRoleSummary: function(a, b, c, d) {
                                var f = M.isPortal(),
                                    g =
                                    '\x3cdiv class\x3d"roleSummary"\x3e\x3cstrong\x3e' +
                                    this.i18n.customRoles.descriptionLabel +
                                    '\x3c/strong\x3e\x3cp class\x3d"word-wrap"\x3e' +
                                    c +
                                    '\x3c/p\x3e',
                                    h = (c = !1);
                                ca.includes(this.coreRoleIds, a) ?
                                    ((g =
                                        '\x3cdiv class\x3d"roleSummary"\x3e\x3cstrong\x3e' +
                                        this.i18n.customRoles.descriptionLabel +
                                        '\x3c/strong\x3e\x3cbr/\x3e'), (g = 'org_admin' === a ||
                                        'account_admin' === a ?
                                        g +
                                        ('\x3cp\x3e' +
                                            (f ?
                                                this.i18n.customRoles.adminDescriptionPortal :
                                                this.i18n.customRoles.adminDescription) +
                                            '\x3c/p\x3e') :
                                        'org_publisher' === a || 'account_publisher' === a ?
                                        g +
                                        ('\x3cp\x3e' +
                                            this.i18n.customRoles.publisherDescription +
                                            '\x3c/p\x3e') :
                                        a === this.SYSTEM_ROLES.VIEWER ?
                                        g +
                                        ('\x3cp\x3e' +
                                            (f ?
                                                this.i18n.customRoles
                                                .viewerDescriptionPortal :
                                                this.i18n.customRoles
                                                .viewerDescription) +
                                            '\x3c/p\x3e') :
                                        a === this.SYSTEM_ROLES.DATA_EDITOR ?
                                        g +
                                        ('\x3cp\x3e' +
                                            (f ?
                                                this.i18n.customRoles
                                                .viewerPlusEditDescriptionPortal :
                                                this.i18n.customRoles
                                                .viewerPlusEditDescription) +
                                            '\x3c/p\x3e') :
                                        g +
                                        ('\x3cp\x3e' +
                                            this.i18n.customRoles.userDescription +
                                            '\x3c/p\x3e')), (g +=
                                        '\x3cp\x3e' +
                                        this.i18n.customRoles.coreRole +
                                        '\x3c/p\x3e\x3c/div\x3e')) :
                                    ((a = new ea({ id: a })), a.setPrivileges(d), (g +=
                                            '\x3cstrong\x3e' +
                                            this.i18n.customRoles.rolePrivilegesLabel +
                                            '\x3c/strong\x3e'), d && 0 < d.length ?
                                        ((g +=
                                                '\x3cdiv class\x3d"roleSummaryList"\x3e\x3cul class\x3d"privlist"\x3e'), a
                                            .summarize()
                                            .forEach(function(a) {
                                                g += '\x3cli\x3e' + a + '\x3c/li\x3e';
                                            }, this), (g += '\x3c/ul\x3e\x3c/div\x3e')) :
                                        (g +=
                                            '\x3cp\x3e\x3cem\x3e' +
                                            this.i18n.customRoles.noneGranted +
                                            '\x3c/em\x3e\x3c/p\x3e'), (c = e.some(
                                            d,
                                            function(a) {
                                                return -1 < a.indexOf(':admin:');
                                            },
                                            this
                                        )), (h = e.some(
                                            d,
                                            function(a) {
                                                return -1 < a.indexOf(':publisher:');
                                            },
                                            this
                                        )), c ?
                                        (g +=
                                            '\x3cp\x3e\x3cem\x3e' +
                                            this.i18n.customRoles.containsAdmin +
                                            '\x3c/em\x3e\x3c/p\x3e') :
                                        h &&
                                        (g +=
                                            '\x3cp\x3e\x3cem\x3e' +
                                            this.i18n.customRoles.containsPublisher +
                                            '\x3c/em\x3e\x3c/p\x3e'), (g += '\x3c/div\x3e'));
                                k.add(this._tooltipDialog.titleNode, 'force-word-wrap');
                                this._tooltipDialog.set('title', b);
                                this._tooltipDialog.set('content', g);
                                this._tooltipDialog.show();
                                this._tooltipDialog.focus();
                            },
                            _summarizeRole: function(a, b) {
                                a = new ea({ id: a });
                                a.setPrivileges(b);
                                return a.summarize();
                            },
                            _openEsriPreferences: function() {
                                window.location = v.substitute(N.esriPreferencesPostLink, {
                                    email: this._profile.email,
                                });
                            },
                            _toggleEsriPreferences: function() {
                                this._isOwner && 'both' === this._profile.userType ?
                                    m.set(d.byId('preferences_div'), 'display', '') :
                                    m.set(d.byId('preferences_div'), 'display', 'none');
                            },
                            _openManageAccounts: function() {
                                window
                                    .open(
                                        N.baseUrl +
                                        'pages/Account/manage_accounts.html#client_id\x3darcgisonline\x26window_title\x3dmanageAccounts',
                                        '_blank'
                                    )
                                    .focus();
                            },
                            _writeListingEntitlements: function(b) {
                                var c = [],
                                    d, e;
                                a.set(this.licensed_products_list, 'innerHTML', '');
                                for (var f = 0; f < b.length; f++)
                                    (e = b[f]), M.isProApp(e) ? (d = e) : c.push(e);
                                d
                                    ?
                                    this._writeProLicenseEntitlements(
                                        d,
                                        this._profile.username
                                    ).then(
                                        function() {
                                            this._writeAdditionalProductEntitlements(c);
                                        }.bind(this),
                                        function() {
                                            this._writeAdditionalProductEntitlements(c);
                                        }.bind(this)
                                    ) :
                                    this._writeAdditionalProductEntitlements(c);
                            },
                            _writeAdditionalProductEntitlements: function(b) {
                                var c = this.licensed_products_list,
                                    d = a.get(c, 'innerHTML');
                                b.forEach(function(a) {
                                    'licenseByUser' === a.licenseBy &&
                                        (d += a.title + '\x3cbr\x3e');
                                }, this);
                                a.set(c, 'innerHTML', d);
                            },
                            _writeProLicenseEntitlements: function(a, b) {
                                var c = new y();
                                M.request({
                                    url: N.restBaseUrl +
                                        'content/listings/' +
                                        a.itemId +
                                        '/userEntitlements/' +
                                        b,
                                }).then(
                                    function(b) {
                                        b &&
                                            b.userEntitlements &&
                                            b.userEntitlements.entitlements &&
                                            this._writeProLicenseEntitlement(
                                                a,
                                                b.userEntitlements.entitlements
                                            );
                                        c.resolve();
                                    }.bind(this),
                                    function() {
                                        c.resolve();
                                    }.bind(this)
                                );
                                return c;
                            },
                            _writeProLicenseEntitlement: function(b, c) {
                                b = this.licensed_products_list;
                                var d = '';
                                c
                                    .filter(function(a) {
                                        return (
                                            a === this.licenseKeywords.proBasic ||
                                            a === this.licenseKeywords.proStandard ||
                                            a === this.licenseKeywords.proAdvanced
                                        );
                                    }, this)
                                    .forEach(function(a) {
                                        d += va.getProEntitlementTitle(a) + '\x3cbr\x3e';
                                    }, this);
                                c
                                    .filter(function(a) {
                                        return (
                                            a !== this.licenseKeywords.proBasic &&
                                            a !== this.licenseKeywords.proStandard &&
                                            a !== this.licenseKeywords.proAdvanced
                                        );
                                    }, this)
                                    .forEach(function(a) {
                                        d += va.getProEntitlementTitle(a) + '\x3cbr\x3e';
                                    }, this);
                                a.set(b, 'innerHTML', d);
                            },
                            _loadProfileEdit: function(a) {
                                this.descriptionTextArea.value = a.description || '';
                                'public' === a.access ?
                                    H.byId('privacy_public').set('checked', !0) :
                                    'org' === a.access ?
                                    H.byId('privacy_account').set('checked', !0) :
                                    H.byId('privacy_private').set('checked', !0);
                                this._profile.accountId &&
                                    (this._self.canSharePublic || this._isAdmin ?
                                        m.set(d.byId('privacy_public_span'), 'display', '') :
                                        (m.set(
                                                d.byId('privacy_public_span'),
                                                'display',
                                                'none'
                                            ), 'public' === this._profile.access &&
                                            H.byId('privacy_account').set('checked', !0)));
                                (this._isOwner || this._isAdmin) &&
                                this._user.accountId &&
                                    this._profile.accountId &&
                                    W.hideNode(this.license_information);
                            },
                            _startEdit: function() {
                                if (!this.checkReadonly(this._portal)) {
                                    this._loadProfileEdit(this._profile);
                                    if (this._isArcGISUser() && this._isOwner) {
                                        m.set(d.byId('new_password_edit'), 'display', '');
                                        m.set(d.byId('question_edit'), 'display', '');
                                        m.set(d.byId('answer_edit'), 'display', '');
                                        this.questionSelect.set(
                                            'displayedValue',
                                            this.i18n.questionPrompt
                                        );
                                        this.questionAnswer.set('value', '');
                                        I.isDefined(this.questionStore) ||
                                            ((this.securityQuestionsArr = [
                                                { id: 1, name: this.i18n.securityQuestions[1] },
                                                { id: 2, name: this.i18n.securityQuestions[2] },
                                                { id: 3, name: this.i18n.securityQuestions[3] },
                                                { id: 4, name: this.i18n.securityQuestions[4] },
                                                { id: 5, name: this.i18n.securityQuestions[5] },
                                                { id: 6, name: this.i18n.securityQuestions[6] },
                                                { id: 7, name: this.i18n.securityQuestions[7] },
                                                { id: 8, name: this.i18n.securityQuestions[8] },
                                                { id: 9, name: this.i18n.securityQuestions[9] },
                                                { id: 10, name: this.i18n.securityQuestions[10] },
                                                { id: 11, name: this.i18n.securityQuestions[11] },
                                                { id: 12, name: this.i18n.securityQuestions[12] },
                                                { id: 13, name: this.i18n.securityQuestions[13] },
                                                { id: 14, name: this.i18n.securityQuestions[14] },
                                            ]), (this.questionStore = new x({
                                                data: {
                                                    identifier: 'id',
                                                    label: 'name',
                                                    items: this.securityQuestionsArr,
                                                },
                                            })), this.questionSelect.set(
                                                'store',
                                                this.questionStore
                                            ));
                                        this.questionSelect.set(
                                            'displayedValue', -1 < this._securityIdx ?
                                            this.i18n.securityQuestions[this._securityIdx] :
                                            this.i18n.questionPrompt
                                        );
                                        var b = !I.isDefined(this._securityIdx) ||
                                            (I.isDefined(this._securityIdx) &&
                                                0 > this._securityIdx),
                                            c = d.byId('security-question'),
                                            e = d.byId('security-answer');
                                        dojo[b ? 'removeClass' : 'addClass'](
                                            this._securityQuestionRequired,
                                            'hide'
                                        );
                                        dojo[b ? 'removeClass' : 'addClass'](
                                            this._securityAnswerRequired,
                                            'hide'
                                        );
                                        b
                                            ?
                                            (this.questionSelect.set(
                                                'required', !0
                                            ), this.questionAnswer.set(
                                                'required', !0
                                            ), c.setAttribute('required', ''), c.setAttribute(
                                                'aria-required', !0
                                            ), e.setAttribute('required', ''), e.setAttribute(
                                                'aria-required', !0
                                            )) :
                                            (this.questionSelect.set(
                                                'required', !1
                                            ), this.questionAnswer.set(
                                                'required', !1
                                            ), c.removeAttribute('required'), c.removeAttribute(
                                                'aria-required'
                                            ), e.removeAttribute('required'), e.removeAttribute(
                                                'aria-required'
                                            ));
                                    }
                                    q('.readOnly', this.domNode).style('display', 'none');
                                    q('.readOrgOnly', this.domNode).style('display', 'none');
                                    q('.editOnlyBtn', this.domNode).style('display', '');
                                    q('.editOnly', this.domNode).style('display', 'block');
                                    this._profile.accountId ?
                                        (q('.editOrgOnly', this.domNode).style(
                                            'display',
                                            ''
                                        ), q('.editNonOrgOnly', this.domNode).style(
                                            'display',
                                            'none'
                                        )) :
                                        (q('.editOrgOnly', this.domNode).style(
                                            'display',
                                            'none'
                                        ), q('.editNonOrgOnly', this.domNode).style(
                                            'display',
                                            'block'
                                        ));
                                    this._isEnterpriseUser() &&
                                        (m.set(
                                            this._emailEditContainer,
                                            'display',
                                            'none'
                                        ), m.set(this._emailDisplayContainer, 'display', ''));
                                    this._isArcGISUser() &&
                                        this._profile &&
                                        this._user.username !== this._profile.username &&
                                        !this._profile.mfaEnabled &&
                                        (m.set(this.mfa_setting.parentNode, 'display', ''), m.set(
                                            this._enableMFA.domNode.parentNode,
                                            'display',
                                            'none'
                                        ));
                                    (!this._profile.accountId ||
                                        '' === this._profile.accountId ||
                                        (void 0 !== N.isMultiTenant && !1 === N.isMultiTenant)) &&
                                    m.set(
                                        d.byId('privacy_organization_span'),
                                        'display',
                                        'none'
                                    );
                                    this._profile.firstName &&
                                        a.set('first_name', 'value', this._profile.firstName);
                                    this._profile.lastName &&
                                        a.set('last_name', 'value', this._profile.lastName);
                                    this._isEnterpriseUser() &&
                                        this._isNotSet(this._profile.firstName) &&
                                        this._isNotSet(this._profile.lastName) ?
                                        ((b = this._profile.fullName.indexOf(' ')), 0 < b ?
                                            this._profile.culture &&
                                            'ja' === this._profile.culture ?
                                            (a.set(
                                                'last_name',
                                                'value',
                                                this._profile.fullName.substring(0, b)
                                            ), a.set(
                                                'name_name',
                                                'value',
                                                this._profile.fullName.substring(b + 1)
                                            )) :
                                            (a.set(
                                                'first_name',
                                                'value',
                                                this._profile.fullName.substring(0, b)
                                            ), a.set(
                                                'last_name',
                                                'value',
                                                this._profile.fullName.substring(b + 1)
                                            )) :
                                            a.set('first_name', 'value', this._profile.fullName)) :
                                        this._isNotSet(this._profile.firstName) &&
                                        this._isNotSet(this._profile.lastName) &&
                                        ((b = this._profile.fullName.indexOf(' ')), 0 < b ?
                                            this._profile.culture &&
                                            'ja' === this._profile.culture ?
                                            (a.set(
                                                'last_name',
                                                'value',
                                                this._profile.fullName.substring(0, b)
                                            ), a.set(
                                                'first_name',
                                                'value',
                                                this._profile.fullName.substring(b + 1)
                                            )) :
                                            (a.set(
                                                'first_name',
                                                'value',
                                                this._profile.fullName.substring(0, b)
                                            ), a.set(
                                                'last_name',
                                                'value',
                                                this._profile.fullName.substring(b + 1)
                                            )) :
                                            a.set(
                                                'first_name',
                                                'value',
                                                this._profile.fullName
                                            ));
                                    N.useDefaultIdentityStore ||
                                        this._isArcGISUser() ||
                                        this._isEnterpriseUser() ||
                                        this._isSocialUser() ||
                                        (m.set(this._firstNameInput, 'display', 'none'), m.set(
                                            this._lastNameInput,
                                            'display',
                                            'none'
                                        ), m.set(this._firstNameLabel, 'display', ''), m.set(
                                            this._lastNameLabel,
                                            'display',
                                            ''
                                        ));
                                    this._personalInfoEditable ||
                                        (m.set(
                                            this.descriptionTextArea,
                                            'display',
                                            'none'
                                        ), m.set(this.label_description, 'display', ''), m.set(
                                            this.edit_privacy,
                                            'display',
                                            'none'
                                        ), m.set(this.label_privacy, 'display', ''));
                                    this.editConnects.push(
                                        t(
                                            this.thumbnailImage,
                                            'click',
                                            this._showThumbnailDialog.bind(this)
                                        )
                                    );
                                    this.editConnects.push(
                                        t(
                                            d.byId('profile-thumbnail-close'),
                                            'click',
                                            this._thumbnailCancel.bind(this)
                                        )
                                    );
                                    this.editConnects.push(
                                        t(
                                            d.byId('profile-thumbnail-ok'),
                                            'click',
                                            this._thumbnailOk.bind(this)
                                        )
                                    );
                                    this.editConnects.push(
                                        t(
                                            d.byId('profile-thumbnail-cancel'),
                                            'click',
                                            this._thumbnailCancel.bind(this)
                                        )
                                    );
                                }
                            },
                            _isNotSet: function(a) {
                                return !a || 0 === a.length;
                            },
                            _isArcGISUser: function() {
                                return (
                                    (this._isOwner &&
                                        I.isDefined(this._user.provider) &&
                                        this._user.provider === this.arcgisProvider) ||
                                    (!this._isOwner &&
                                        I.isDefined(this._profile.provider) &&
                                        this._profile.provider === this.arcgisProvider)
                                );
                            },
                            _isEnterpriseUser: function() {
                                return (
                                    (this._isOwner &&
                                        I.isDefined(this._user.provider) &&
                                        this._user.provider === this.enterpriseProvider) ||
                                    (!this._isOwner &&
                                        I.isDefined(this._profile.provider) &&
                                        this._profile.provider === this.enterpriseProvider)
                                );
                            },
                            _isSocialUser: function() {
                                return (
                                    (this._isOwner &&
                                        I.isDefined(this._user.provider) &&
                                        ca.includes(this.socialProviders, this._user.provider)) ||
                                    (!this._isOwner &&
                                        I.isDefined(this._profile.provider) &&
                                        ca.includes(this.socialProviders, this._profile.provider))
                                );
                            },
                            _hasNewIdentityQuestion: function() {
                                var a = this.questionAnswer.get('value'),
                                    b = this.questionSelect.get('item');
                                return (
                                    I.isDefined(b) &&
                                    this.questionStore.getValue(b, 'id') !== this._securityIdx &&
                                    a &&
                                    a.length
                                );
                            },
                            _hasNewIdentityQuestionInfo: function() {
                                var a = this.questionAnswer.get('value'),
                                    b = this.questionSelect.get('item');
                                return (
                                    (I.isDefined(b) &&
                                        this.questionStore.getValue(b, 'id') !==
                                        this._securityIdx) ||
                                    (a && 0 < a.length)
                                );
                            },
                            _validateNewIdentityQuestionInfo: function() {
                                var a = this.questionAnswer.get('value');
                                if (I.isDefined(a) && 0 < a.length)
                                    return 60 < a.length ?
                                        (R.createSpecifiedDialog(S).show({
                                            title: this.i18n.errorLabel,
                                            message: this.i18n.error.answerTooLong,
                                        }), this.questionAnswer.focus(), !1) :
                                        !0;
                                R.createSpecifiedDialog(S).show({
                                    title: this.i18n.errorLabel,
                                    message: this.i18n.error.answerIsBlank,
                                });
                                this.questionAnswer.focus();
                                return !1;
                            },
                            _containsAlphaNumeric: function(a) {
                                var b = /^[a-zA-Z0-9@_\.\-\s]+$/g;
                                return a && b.test(a);
                            },
                            _hasNewEmail: function() {
                                var a = this.newEmail.get('value'),
                                    b = this.verifyNewEmail.get('value');
                                return (
                                    (I.isDefined(a) &&
                                        0 < a.length &&
                                        a !== this._profile.email) ||
                                    (I.isDefined(b) && 0 < b.length)
                                );
                            },
                            _validateNewEmail: function() {
                                var a = this.newEmail.get('value'),
                                    b = this.verifyNewEmail.get('value');
                                if (I.isDefined(a) && 0 < a.length)
                                    return this._isValidEmail(a) ?
                                        -1 < a.indexOf("'") ?
                                        (R.createSpecifiedDialog(S).show({
                                            title: this.i18n.errorLabel,
                                            message: this.i18n.error.emailInvalid +
                                                ' ' +
                                                this.i18n.error.emailContainsApostrophe,
                                        }), this.verifyNewEmail.focus(), !1) :
                                        a !== b ?
                                        (R.createSpecifiedDialog(S).show({
                                            title: this.i18n.errorLabel,
                                            message: this.i18n.error.emailVerifyNoMatch,
                                        }), this.verifyNewEmail.focus(), !1) :
                                        !0 :
                                        (R.createSpecifiedDialog(S).show({
                                            title: this.i18n.errorLabel,
                                            message: this.i18n.error.emailInvalid,
                                        }), this.verifyNewEmail.focus(), !1);
                                I.isDefined(b) &&
                                    0 < b.length &&
                                    (R.createSpecifiedDialog(S).show({
                                        title: this.i18n.errorLabel,
                                        message: this.i18n.error.emailVerifyNoMatch,
                                    }), this.newEmail.focus());
                                return !1;
                            },
                            _isValidEmail: function(a) {
                                var b = /^.+\@(\[?)[a-zA-Z0-9\-\.]+\.([a-zA-Z]{2,20}|[0-9]{1,3})(\]?)$/;
                                return !/(@.*@)|(\.\.)|(@\.)|(\.@)|(^\.)/.test(a) && b.test(a) ?
                                    !0 :
                                    !1;
                            },
                            _hasNewPassword: function() {
                                var a = this.newPassword.get('value'),
                                    b = this.verifyNewPassword.get('value');
                                return (
                                    (I.isDefined(a) && 0 < a.length) ||
                                    (I.isDefined(b) && 0 < b.length)
                                );
                            },
                            _validateNewPassword: function() {
                                var a = this.newPassword.get('value'),
                                    b = this.verifyNewPassword.get('value');
                                if (I.isDefined(a) && 0 < a.length)
                                    return M.meetsPasswordStrength(a) ?
                                        a !== b ?
                                        (R.createSpecifiedDialog(S).show({
                                            title: this.i18n.errorLabel,
                                            message: this.i18n.error.passwordVerifyNoMatch,
                                        }), this.verifyNewPassword.focus(), !1) :
                                        !0 :
                                        (R.createSpecifiedDialog(S).show({
                                            title: this.i18n.errorLabel,
                                            message: this.i18n.passwordHintText,
                                        }), this.newPassword.focus(), !1);
                                I.isDefined(b) &&
                                    0 < b.length &&
                                    (R.createSpecifiedDialog(S).show({
                                        title: this.i18n.errorLabel,
                                        message: this.i18n.error.passwordVerifyNoMatch,
                                    }), this.newPassword.focus());
                                return !1;
                            },
                            _validateFirstName: function() {
                                var a = M.stripHTML(this.firstName.get('value'));
                                this.firstName.set('value', a);
                                if (I.isDefined(a) && 0 < a.length) return !0;
                                R.createSpecifiedDialog(S).show({
                                    title: this.i18n.errorLabel,
                                    message: this.i18n.firstNameIsBlank,
                                });
                                this.firstName.focus();
                                return !1;
                            },
                            _validateLastName: function() {
                                var a = M.stripHTML(this.lastName.get('value'));
                                this.lastName.set('value', a);
                                if (I.isDefined(a) && 0 < a.length) return !0;
                                R.createSpecifiedDialog(S).show({
                                    title: this.i18n.errorLabel,
                                    message: this.i18n.lastNameIsBlank,
                                });
                                this.lastName.focus();
                                return !1;
                            },
                            _validates: function() {
                                return this._validateFirstName() && this._validateLastName() ?
                                    M.isPortal() &&
                                    !N.self.supportsOAuth &&
                                    this._hasNewPassword() &&
                                    !this._validateNewPassword() ?
                                    (this.newPassword && this.newPassword.focus(), !1) :
                                    this._hasNewIdentityQuestionInfo() &&
                                    !this._validateNewIdentityQuestionInfo() ?
                                    (this.questionAnswer &&
                                        this.questionAnswer.focus(), !1) :
                                    !0 :
                                    !1;
                            },
                            _createField: function(a, b, c) {
                                return n.create(
                                    'input', { type: 'hidden', name: b, value: c },
                                    a
                                );
                            },
                            _saveEdit: function() {
                                if (this._validates()) {
                                    var b = this.editForm,
                                        c = [],
                                        d = this._profile.properties || {},
                                        e,
                                        g,
                                        h,
                                        k,
                                        l,
                                        m;
                                    c.push(
                                        this._createField(b, 'username', this._profile.username)
                                    );
                                    N.useDefaultIdentityStore ||
                                        this._isArcGISUser() ||
                                        this._isEnterpriseUser() ||
                                        this._isSocialUser() ?
                                        ((e = M.stripHTML(
                                                a.get('first_name', 'value')
                                            )), (g = M.stripHTML(
                                                a.get('last_name', 'value')
                                            )), c.push(
                                                this._createField(b, 'firstName', e)
                                            ), c.push(
                                                this._createField(b, 'lastName', g)
                                            ), this._isEnterpriseUser() &&
                                            ((h = 'ja' === f.locale ?
                                                g + ' ' + e :
                                                e + ' ' + g), c.push(
                                                this._createField(b, 'fullName', h)
                                            )), (this.reloadOnUpdate = this._isEnterpriseUser() ?
                                                h !== this._profile.fullName :
                                                e !== this._profile.firstName ||
                                                g !== this._profile.lastName)) :
                                        (c.push(
                                            this._createField(
                                                b,
                                                'firstName',
                                                this._profile.firstName
                                            )
                                        ), c.push(
                                            this._createField(
                                                b,
                                                'lastName',
                                                this._profile.lastName
                                            )
                                        ));
                                    this._personalInfoEditable &&
                                        (c.push(
                                                this._createField(
                                                    b,
                                                    'tags',
                                                    this._profile.tags ? this._profile.tags.toString() : ''
                                                )
                                            ), (e = M.stripHTML(
                                                this.descriptionTextArea.value
                                            )), c.push(this._createField(b, 'description', e)), '' ===
                                            e &&
                                            c.push(
                                                this._createField(b, 'clearEmptyFields', !0)
                                            ), (e = !0 === H.byId('privacy_public').get('checked') ?
                                                'public' :
                                                !0 === H.byId('privacy_account').get('checked') ?
                                                'org' :
                                                'private'), c.push(
                                                this._createField(b, 'access', e)
                                            ));
                                    this._profile.accountId &&
                                        ((d.landingPage = {
                                            url: this.landingPageSelect.get('value'),
                                        }), c.push(
                                            this._createField(b, 'properties', r.stringify(d))
                                        ));
                                    if (
                                        (k = (e = this.languageSelect
                                                .get('store')
                                                .query({
                                                    displayName: this.languageSelect.get('displayedValue'),
                                                })
                                                .shift()) && e.culture ?
                                            e.culture :
                                            void 0)
                                    )
                                        e && e.cultureFormats ?
                                        ((e =
                                                ((e = this.languageFormatSelect
                                                        .get('store')
                                                        .query({
                                                            format: this.languageFormatSelect.get('value'),
                                                        })
                                                        .shift()) &&
                                                    e.format) ||
                                                void 0), c.push(
                                                this._createField(
                                                    b,
                                                    'culture',
                                                    k + (e ? '-' + e : '')
                                                )
                                            ), c.push(
                                                this._createField(b, 'cultureFormat', e ? e : '')
                                            ), e ||
                                            c.push(
                                                this._createField(b, 'clearEmptyFields', !0)
                                            )) :
                                        (c.push(this._createField(b, 'culture', k)), c.push(
                                            this._createField(b, 'cultureFormat', '')
                                        ), c.push(
                                            this._createField(b, 'clearEmptyFields', !0)
                                        ));
                                    this.regionSelect.get('store').fetch({
                                        query: {
                                            localizedName: this.regionSelect.get('displayedValue'),
                                        },
                                        onItem: function(a) {
                                            a &&
                                                ((l = this.regionSelect
                                                    .get('store')
                                                    .getValue(a, 'region')), c.push(
                                                    this._createField(b, 'region', l)
                                                ));
                                        }.bind(this),
                                    });
                                    this.unitsSelect.get('store').fetch({
                                        query: { name: this.unitsSelect.get('displayedValue') },
                                        onItem: function(a) {
                                            a &&
                                                ((m = this.unitsSelect
                                                    .get('store')
                                                    .getValue(a, 'id')), c.push(
                                                    this._createField(b, 'units', m)
                                                ));
                                        }.bind(this),
                                    });
                                    var n = !1;
                                    e = !1;
                                    g = this._requireSecurity && !this._hasNewIdentityQuestion();
                                    if (this._isArcGISUser() || this._isSocialUser())
                                        if (
                                            (this._hasNewEmail() &&
                                                (this._validateNewEmail() ?
                                                    (c.push(
                                                            this._createField(
                                                                b,
                                                                'email',
                                                                this.newEmail.get('value')
                                                            )
                                                        ), this._isOwner &&
                                                        !this._profile.orgId &&
                                                        (this._emailMustBeVerified = this.newEmail.get(
                                                            'value'
                                                        ))) :
                                                    (e = !0)), M.isPortal() &&
                                                !N.self.supportsOAuth &&
                                                this._hasNewPassword() &&
                                                this._validateNewPassword() &&
                                                ((n = !0), c.push(
                                                    this._createField(
                                                        b,
                                                        'password',
                                                        this.newPassword.get('value')
                                                    )
                                                )), this._hasNewIdentityQuestionInfo() &&
                                                this._validateNewIdentityQuestionInfo())
                                        ) {
                                            var q = this.questionSelect.get('store'),
                                                p = this.questionSelect.get('displayedValue'),
                                                t = this.questionSelect.get('item'),
                                                u;
                                            if (t) u = q.getValue(t, 'id');
                                            else
                                                for (q = 0; q < this.securityQuestionsArr.length; q++)
                                                    if (p === this.securityQuestionsArr[q].name) {
                                                        u = this.securityQuestionsArr[q].id;
                                                        break;
                                                    }
                                            this._securityIdx = u;
                                            c.push(this._createField(b, 'securityQuestionIdx', u));
                                            c.push(
                                                this._createField(
                                                    b,
                                                    'securityAnswer',
                                                    this.questionAnswer.get('value')
                                                )
                                            );
                                        }
                                    var v = function(a) {
                                        if (a && !0 === a.success)
                                            if ((this._cleanupForm(c), this._isOwner)) {
                                                var b = M.getCookie('esri_auth');
                                                h !== this._profile.fullName && (b.fullName = h);
                                                k &&
                                                    b.culture !== k &&
                                                    ((b.culture = k.toLowerCase()), (this.reloadOnUpdate = !0));
                                                b.region !== l && (b.region = l);
                                                la.setAuthCookie(b);
                                                this._requireSecurity && (this.reloadOnUpdate = !0);
                                                M.isPortal() && !N.self.supportsOAuth && n ?
                                                    ((a =
                                                        M.getSecureUrl(N.baseUrl) +
                                                        N.signin), la.signout(a)) :
                                                    this._handle_updateProfile(a);
                                            } else this._handle_updateProfile(a);
                                        else this._handle_updateProfile(a);
                                    }.bind(this);
                                    e
                                        ?
                                        this._cleanupForm(c) :
                                        g ?
                                        (R.createSpecifiedDialog(S).show({
                                            title: this.i18n.notice,
                                            message: this.i18n.questionRequired,
                                        }), this._cleanupForm(c)) :
                                        M.isPortal() && !N.self.supportsOAuth ?
                                        ((u = {
                                            title: this.i18n.newPwdLabel,
                                            message: this.i18n.changePwdWarning,
                                            choiceOneTitle: this.i18n.yesLabel,
                                            choiceTwoTitle: this.i18n.noLabel,
                                        }), (u.choiceOneHandler = function() {
                                            z({
                                                updateProfile: this._updateProfile(b),
                                                updateProperties: this._updateUserProperties(
                                                    d
                                                ),
                                            }).then(
                                                function(a) {
                                                    v(a.updateProfile);
                                                }.bind(this),
                                                function(a) {
                                                    this._handle_updateProfile(
                                                        a.updateProfile
                                                    );
                                                }.bind(this)
                                            );
                                        }.bind(
                                            this
                                        )), Fa.prototype.statics.getInstance().show(u)) :
                                        z({
                                            updateProfile: this._updateProfile(b),
                                            updateProperties: this._profile.accountId ?
                                                this._updateUserProperties(d) :
                                                null,
                                        }).then(
                                            function(a) {
                                                v(a.updateProfile);
                                            }.bind(this),
                                            function(a) {
                                                this._handle_updateProfile(a.updateProfile);
                                            }.bind(this)
                                        );
                                }
                            },
                            _cleanupForm: function(a) {
                                a.forEach(function(a) {
                                    n.destroy(a);
                                }, this);
                            },
                            _updateProfile: function(a) {
                                var b;
                                b = M.getUser();
                                b = this._isAdmin || this._roleCanUpdate ?
                                    a.username.value || this._profile.username :
                                    b.email;
                                b =
                                    M.getSecureUrl(N.restBaseUrl) +
                                    'community/users/' +
                                    b +
                                    '/update';
                                return M.postForm(a, b);
                            },
                            _cancelEdit: function() {
                                this._stopEdit();
                                this.editForm.reset();
                            },
                            _stopEdit: function() {
                                m.set(d.byId('new_password_edit'), 'display', 'none');
                                m.set(d.byId('question_edit'), 'display', 'none');
                                m.set(d.byId('answer_edit'), 'display', 'none');
                                q('.editOrgOnly', this.domNode).style('display', 'none');
                                q('.editNonOrgOnly', this.domNode).style('display', 'none');
                                q('.editOnly', this.domNode).style('display', 'none');
                                q('.editOnlyBtn', this.domNode).style('display', 'none');
                                q('.readOnly', this.domNode).style('display', '');
                                q('.readOrgOnly', this.domNode).style(
                                    'display',
                                    this._profile.accountId ? '' : 'none'
                                );
                                m.set(
                                    H.byId('profileEditButton').domNode,
                                    'display',
                                    C('ie') ? 'inline-block' : ''
                                );
                                this.thumbnailPath.value = '';
                                e.forEach(
                                    this.editConnects,
                                    function(a) {
                                        a.remove();
                                    },
                                    this
                                );
                                this.editConnects = [];
                                this.regionSelect.reset();
                                this.languageSelect.reset();
                                this.set('culture', this._profile.culture);
                                this.set('region', this._profile.region);
                                (this._isOwner || this._isAdmin) &&
                                this._user.accountId &&
                                    this._profile.accountId ?
                                    W.showNode(this.license_information) :
                                    W.hideNode(this.license_information);
                                this._toggleEsriPreferences();
                            },
                            _showThumbnailDialog: function(a) {
                                a.stopPropagation();
                                a = l.position(this._thumbnailDiv);
                                m.set(
                                    d.byId('profile-thumbnail-dialog'),
                                    'top',
                                    Math.round(a.y) + 'px'
                                );
                                m.set(
                                    d.byId('profile-thumbnail-dialog'),
                                    'left',
                                    (N.isRightToLeft ?
                                        Math.round(a.x) +
                                        a.w -
                                        m.get('profile-thumbnail-dialog', 'width') :
                                        Math.round(a.x)) + 'px'
                                );
                                m.set(d.byId('profile-thumbnail-dialog'), 'display', 'block');
                            },
                            _thumbnailOk: function() {
                                var a = d.byId('profile-thumbnail-file').value,
                                    b = a.lastIndexOf('.'),
                                    a = a.substring(b + 1, a.length).toLowerCase();
                                'png' !== a && 'gif' !== a && 'jpg' !== a && 'jpeg' !== a ?
                                    R.createSpecifiedDialog(S).show({
                                        title: this.i18n.errorLabel,
                                        message: this.i18n.error.imageTypeError,
                                    }) :
                                    ('' !== d.byId('profile-thumbnail-file').value &&
                                        (this.thumbnailImage.src = M.relativeToExplicitUrl(
                                            'images/item-thumbnail-update.png'
                                        )), m.set(
                                            d.byId('profile-thumbnail-dialog'),
                                            'display',
                                            'none'
                                        ));
                            },
                            _thumbnailCancel: function() {
                                m.set(d.byId('profile-thumbnail-dialog'), 'display', 'none');
                                e.forEach(
                                    this.editConnects,
                                    function(a) {
                                        a.remove();
                                    },
                                    this
                                );
                                this.editConnects = [];
                                d.byId('profile-thumbnail-dialog').innerHTML = d.byId(
                                    'profile-thumbnail-dialog'
                                ).innerHTML;
                                this.editConnects.push(
                                    t(
                                        this.thumbnailImage,
                                        'click',
                                        this._showThumbnailDialog.bind(this)
                                    )
                                );
                                this.editConnects.push(
                                    t(
                                        d.byId('profile-thumbnail-close'),
                                        'click',
                                        this._thumbnailCancel.bind(this)
                                    )
                                );
                                this.editConnects.push(
                                    t(
                                        d.byId('profile-thumbnail-ok'),
                                        'click',
                                        this._thumbnailOk.bind(this)
                                    )
                                );
                                this.editConnects.push(
                                    t(
                                        d.byId('profile-thumbnail-cancel'),
                                        'click',
                                        this._thumbnailCancel.bind(this)
                                    )
                                );
                            },
                            _isInvalidSubscription: function(a) {
                                a = a && a.error ? a.error : a;
                                var b = ['SB_0001', 'SB_0002', 'SB_0003', 'SB_0004'];
                                return a && a.messageCode && ca.includes(b, a.messageCode);
                            },
                            _isOtherInvalidSubscription: function(a) {
                                a = a && a.error ? a.error : a;
                                var b = ['SB_0005', 'SB_0006', 'SB_0007'];
                                return a && a.messageCode && ca.includes(b, a.messageCode);
                            },
                            _handleError: function(a) {},
                            _setCultureAttr: function(b) {
                                var c = this.languageSelect
                                    .get('store')
                                    .query()
                                    .some(function(a) {
                                        return a.culture === b;
                                    }) ?
                                    b :
                                    'en';
                                (c = this.languageSelect
                                    .get('store')
                                    .query({ culture: c })
                                    .shift()) &&
                                c.culture &&
                                    (this.languageSelect.set('value', c.culture), a.set(
                                        this.language_setting,
                                        'innerHTML',
                                        c.displayName
                                    ));
                            },
                            _setCultureFormatAttr: function(b) {
                                var c = this._profile.culture,
                                    d = this.languageSelect
                                    .get('store')
                                    .query()
                                    .some(function(a) {
                                        return a.culture === c;
                                    }) ?
                                    c :
                                    'en',
                                    d = this.languageSelect
                                    .get('store')
                                    .query({ culture: d })
                                    .shift();
                                (b = ua.getSelectedFormat(b, d.cultureFormats || [])) &&
                                b.format ?
                                    (this.languageFormatSelect.set('value', b.format), a.set(
                                        this.language_format_setting,
                                        'innerHTML',
                                        this.languageFormatSelect.get('displayedValue')
                                    )) :
                                    (b = d && d.cultureFormats ? d.cultureFormats : null) &&
                                    b.length &&
                                    (this.languageFormatSelect.set(
                                        'value',
                                        b[0].format
                                    ), a.set(
                                        this.language_format_setting,
                                        'innerHTML',
                                        this.languageFormatSelect.get('displayedValue')
                                    ));
                            },
                            _setRegionAttr: function(b) {
                                var c = this.regionSelect.get('store');
                                c.fetchItemByIdentity({
                                    identity: b || (N.self && N.self.ipCntryCode) || 'WO',
                                    onItem: function(d) {
                                        d &&
                                            (b &&
                                                this.regionSelect.set(
                                                    'value',
                                                    c.getValue(d, 'region')
                                                ), a.set(
                                                    this.region_setting,
                                                    'innerHTML',
                                                    d.localizedName
                                                ));
                                    }.bind(this),
                                });
                            },
                            _setUnitsAttr: function(b) {
                                var c = this.unitsSelect.get('store');
                                c.fetchItemByIdentity({
                                    identity: b || 'english',
                                    onItem: function(d) {
                                        d &&
                                            (b &&
                                                this.unitsSelect.set(
                                                    'value',
                                                    c.getValue(d, 'id')
                                                ), a.set(this.units_setting, 'innerHTML', d.name));
                                    }.bind(this),
                                });
                            },
                            _handle_getAccount: function(b) {
                                if (b && !b.code && !b.message) {
                                    if (
                                        this._user.username === this._profile.username ||
                                        this._user.accountId === this._profile.accountId
                                    ) {
                                        if (this._user.username === this._profile.username)
                                            a.set(
                                                d.byId('myProfile'),
                                                'innerHTML',
                                                this.i18n.myProfile
                                            );
                                        else if (
                                            this._profile.firstName &&
                                            this._profile.lastName
                                        ) {
                                            var c = 'ja' === f.locale ?
                                                this._profile.lastName + ' ' + this._profile.firstName :
                                                this._profile.firstName +
                                                ' ' +
                                                this._profile.lastName;
                                            a.set(d.byId('myProfile'), 'innerHTML', '' + c);
                                        } else
                                            a.set(
                                                d.byId('myProfile'),
                                                'innerHTML',
                                                '' + this._profile.fullName + ''
                                            );
                                        m.set(d.byId('myProfile'), 'display', 'inline-block');
                                        !this._isOwner &&
                                            this._user.accountId &&
                                            this._user.accountId === this._profile.accountId &&
                                            (a.set(
                                                d.byId('viewItemsLink'),
                                                'innerHTML',
                                                this.i18n.viewMembersItems
                                            ), a.set(
                                                d.byId('viewGroupsLink'),
                                                'innerHTML',
                                                this.i18n.viewMembersGroups
                                            ));
                                    }
                                    M.isPortal() &&
                                        N.restrictOrganizationPageToAdmin &&
                                        this._user.role !== this.accountAdminRole ?
                                        n.create(
                                            'span', { innerHTML: b.name },
                                            this.organization_link,
                                            'only'
                                        ) :
                                        n.create(
                                            'a', { href: 'organization.html', innerHTML: b.name },
                                            this.organization_link,
                                            'only'
                                        );
                                    b.urlKey &&
                                        b.customBaseUrl &&
                                        (10 >= C('ie') ?
                                            m.set(d.byId('organization_url_div'), 'display', '') :
                                            m.set(
                                                d.byId('organization_url_div'),
                                                'display',
                                                'block'
                                            ), (this.organization_url_link.innerHTML =
                                                location.protocol +
                                                '//' +
                                                b.urlKey +
                                                '.' +
                                                b.customBaseUrl));
                                }
                            },
                            _buildOrganizationThumbnail: function(a) {
                                var b = M.getToken();
                                return (
                                    N.restBaseUrl +
                                    'portals/self/resources/' +
                                    a.thumbnail +
                                    (b ? '?token\x3d' + b : '')
                                );
                            },
                            _handle_getProfile: function(c) {
                                this._profile = c;
                                I.isDefined(c.orgId) && (this._profile.accountId = c.orgId);
                                I.isDefined(c.role) &&
                                    ((this._profile.role = M.normalizeOrgRole(
                                            c.role
                                        )), (this._profile.userRole = new ea({
                                            id: c.roleId ? c.roleId : c.role,
                                            role: c.role,
                                        })), c.privileges &&
                                        this._profile.userRole.setPrivileges(c.privileges));
                                if (this._isAdmin || this._roleCanView)
                                    if (
                                        ((this._profile.accountId &&
                                                this._profile.accountId === this._user.accountId) ||
                                            (this._isAdmin = !1), this._isAdmin ||
                                            (this._roleCanView &&
                                                this._profile.accountId &&
                                                this._profile.accountId === this._user.accountId))
                                    )
                                        q('.ownerOnly', this.domNode).style(
                                            'display',
                                            'block'
                                        ), this._isOwner ||
                                        this._isAdmin ||
                                        this._roleCanUpdate ||
                                        m.set(
                                            d.byId('editMenu'),
                                            'display',
                                            'none'
                                        ), ((N.useDefaultIdentityStore || this._isOwner) &&
                                            this._roleCanUpdate) ||
                                        m.set(
                                            d.byId('user_profile_edit_link'),
                                            'display',
                                            'none'
                                        ), this._profile.username !== this._user.email &&
                                        H.byId('profileEditButton').set(
                                            'label',
                                            this.i18n.editProfile
                                        );
                                if (
                                    (this._isOwner || this._isAdmin) &&
                                    this._user.accountId &&
                                    this._profile.accountId
                                ) {
                                    W.showNode(this.license_information);
                                    c = M.isPortal() ? '120001163' : '120001561';
                                    var e;
                                    this._userTypeInfo = new Y({
                                            content: this.i18n.userTypesInfo +
                                                ' ' +
                                                ('\x3ca href\x3d"' +
                                                    (N.self.helpBase + (N.self.helpMap.m[c] || '')) +
                                                    '" target\x3d"_blank"\x3e' +
                                                    X.myOrganization.licensesTab.learnMore +
                                                    ' ' +
                                                    ja.inline.launch['16'] +
                                                    '\x3c/a\x3e'),
                                            buttonAriaLabel: this.i18n.learnMoreAboutUserTypes,
                                            buttonClasses: 'tooltip',
                                        },
                                        this.organization_usertype_info
                                    );
                                    z({
                                        userType: this._licensesAPI.getUserLicenseType(
                                            this._profile.username
                                        ),
                                        bundles: this._licensesAPI.getUserAppBundles(
                                            this._profile.username
                                        ),
                                        listings: this._licensesAPI.getUserProvisionedListings(
                                            this._profile.username
                                        ),
                                    }).then(
                                        function(a) {
                                            this.organization_usertype.innerHTML = '';
                                            this.licensed_products_list.innerHTML = '';
                                            a.userType ?
                                                ((this._licenseCard = new U({
                                                        portal: this._portal,
                                                        licenseType: a.userType,
                                                    },
                                                    n.create('div', null, this.organization_usertype)
                                                )), this._licenseCard.startup(), this._licenseCard.expand(), J.accordion(), (e = Ba.getProFromUserTypes(
                                                    [a.userType]
                                                ))) :
                                                W.hideNode(this.organization_usertype_div);
                                            if (a.bundles && a.bundles.length) {
                                                W.showNode(this.organization_licensed_for_div);
                                                var c = [];
                                                a.bundles.forEach(
                                                    function(d) {
                                                        d = b.mixin(d, { title: d.name, isAppBundle: !0 });
                                                        c.push(
                                                            new V({
                                                                appBundle: d,
                                                                portal: this._portal,
                                                                level: (a.userType && a.userType.level) ||
                                                                    this._profile.level ||
                                                                    '2',
                                                            })
                                                        );
                                                    }.bind(this)
                                                );
                                                e || (e = Ba.getProFromAppBundles(a.bundles));
                                                W.appendChildren(
                                                    c.map(function(a) {
                                                        return a.domNode;
                                                    }, this),
                                                    this.app_bundles_list
                                                );
                                            } else W.hideNode(this.app_bundles_list);
                                            if (a.listings && a.listings.length) {
                                                W.showNode(this.organization_licensed_for_div);
                                                var d = [],
                                                    f;
                                                a.listings.forEach(
                                                    function(a) {
                                                        f =
                                                            'ArcGIS Pro' === a.title &&
                                                            -1 !== a.tags.indexOf('pro');
                                                        var b = new Z({
                                                            app: a,
                                                            portal: this._portal,
                                                            cssClasses: 'app-card',
                                                            textCssClasses: 'licenses-card__app-icon',
                                                        });
                                                        (!f || (f && !e)) && d.push(b);
                                                        f && !e && (e = a);
                                                    }.bind(this)
                                                );
                                                W.appendChildren(
                                                    d.map(function(a) {
                                                        return a.domNode;
                                                    }, this),
                                                    this.licensed_products_list
                                                );
                                            } else W.hideNode(this.licensed_products_list);
                                            if (e && (e.id || e.itemId)) {
                                                var g = [];
                                                this._licensesAPI
                                                    .retrieveProvisionedUserEntitlement(
                                                        e.id || e.itemId,
                                                        this._profile.username
                                                    )
                                                    .then(
                                                        function(a) {
                                                            a = ((a && a.userEntitlements) || {
                                                                    entitlements: [],
                                                                }).entitlements
                                                                .map(function(a) {
                                                                    return {
                                                                        key: a,
                                                                        title: va.getProEntitlementTitle(a),
                                                                    };
                                                                }, this) || [];
                                                            Ba.getProExtensions(a).forEach(
                                                                function(a) {
                                                                    a.isExtension = !0;
                                                                    a = new Z({
                                                                        app: a,
                                                                        portal: this._portal,
                                                                        cssClasses: 'app-card',
                                                                        textCssClasses: 'licenses-card__app-icon',
                                                                    });
                                                                    g.push(a);
                                                                }.bind(this)
                                                            );
                                                            g.length &&
                                                                (W.showNode(
                                                                    this.organization_licensed_for_div
                                                                ), W.appendChildren(
                                                                    g.map(function(a) {
                                                                        return a.domNode;
                                                                    }, this),
                                                                    this.licensed_products_list
                                                                ));
                                                        }.bind(this)
                                                    );
                                            }
                                        }.bind(this)
                                    );
                                } else
                                    W.hideNodes([
                                        this.license_information,
                                        this.organization_usertype_div,
                                        this.organization_licensed_for_div,
                                    ]);
                                this._profile.accountId ?
                                    this._handle_getAccount(this._self) :
                                    a.set(
                                        d.byId('myProfile'),
                                        'innerHTML',
                                        this._profile.fullName
                                    );
                                c =
                                    this._isOwner ||
                                    this._isAdmin ||
                                    (this._roleCanView &&
                                        this._profile.accountId &&
                                        this._profile.accountId === this._user.accountId);
                                z({
                                    userProvider: this._getUserProvider(),
                                    userProperties: c ? this._getUserProperties() : null,
                                }).then(
                                    function(a) {
                                        this._profile.properties = (a.userProperties &&
                                            a.userProperties.properties) || {};
                                        this._loadProfile(this._profile);
                                        this.onProfileLoad(this._profile);
                                    }.bind(this)
                                );
                            },
                            onProfileLoad: function(a) {
                                if (this._validateEmail) {
                                    var b = M.getUser(),
                                        c = n.create('form', {
                                            method: 'post',
                                            enctype: 'multipart/form-data',
                                        });
                                    n.create(
                                        'input', {
                                            type: 'hidden',
                                            name: 'validateEmail',
                                            value: this._validateEmail,
                                        },
                                        c
                                    );
                                    n.create(
                                        'input', { type: 'hidden', name: 'token', value: b.token },
                                        c
                                    );
                                    n.create(
                                        'input', { type: 'hidden', name: 'f', value: 'json' },
                                        c
                                    );
                                    this._updateProfile(c).then(
                                        function() {
                                            this._validateEmail = void 0;
                                            R.createSpecifiedDialog(S).show({
                                                title: this.i18n.notice,
                                                message: this.i18n.verifiedEmailMsg,
                                            });
                                            na.getProfile(
                                                this._username,
                                                this._handle_getProfile.bind(this)
                                            );
                                        }.bind(this)
                                    );
                                }
                                return a;
                            },
                            _handle_updateProfile: function(a) {
                                var b = this._isOwner ? this._user.email : this._showUser;
                                a.success ?
                                    this.reloadOnUpdate ?
                                    ((a = this._emailMustBeVerified ?
                                            'verifyEmail\x3d' + this._emailMustBeVerified :
                                            ''), this._requireSecurity ?
                                        ((this._requireSecurity = !1), (window.location =
                                            window.location.href.split('?')[0] +
                                            (a ? '?' + a : ''))) :
                                        (window.location = this._showUser ?
                                            N.baseUrl +
                                            'user.html?user\x3d' +
                                            this._showUser +
                                            (a ? '\x26' + a : '') :
                                            N.baseUrl + 'user.html' + (a ? '?' + a : ''))) :
                                    (na.getProfile(
                                            b,
                                            this._handle_getProfile.bind(this)
                                        ), this._stopEdit(), this._emailMustBeVerified &&
                                        (R.createSpecifiedDialog(S).show({
                                            title: this.i18n.confirmEmailTitle,
                                            message: v.substitute(this.i18n.confirmEmailMsg, {
                                                email: this._emailMustBeVerified,
                                            }),
                                        }), (this._emailMustBeVerified = void 0))) :
                                    (this._isInvalidSubscription(a) ?
                                        (na.getProfile(
                                                b,
                                                this._handle_getProfile.bind(this)
                                            ), wa.prototype.statics
                                            .getInstance()
                                            .show(N.self.subscriptionInfo)) :
                                        this._isOtherInvalidSubscription(a) ?
                                        (na.getProfile(
                                                b,
                                                this._handle_getProfile.bind(this)
                                            ), (a = a && a.error ?
                                                a.error :
                                                a), wa.prototype.statics
                                            .getInstance()
                                            .showOther(a.messageCode)) :
                                        a.error &&
                                        a.error.message &&
                                        -1 <
                                        a.error.message.indexOf(
                                            'file exceeds the max size'
                                        ) ?
                                        R.createSpecifiedDialog(S).show({
                                            title: this.i18n.cannotAddThumbnail,
                                            message: a.error.message,
                                        }) :
                                        a &&
                                        a.messageCode &&
                                        'COM_1035' === a.messageCode ?
                                        R.createSpecifiedDialog(S).show({
                                            title: this.i18n.errorUpdatingProfile,
                                            message: this.i18n
                                                .errorUpdatingProfileMsg,
                                        }) :
                                        ((a = a && a.error ?
                                            a.error :
                                            a), (b = a.message ?
                                            a.message :
                                            a), (b += a.details ?
                                            ' ' + a.details :
                                            ''), R.createSpecifiedDialog(S).show({
                                            title: this.i18n.errorUpdatingProfile,
                                            message: b,
                                        })), this._stopEdit(), this._profile
                                        .thumbnail &&
                                        0 < this._profile.thumbnail.length &&
                                        (this.thumbnailImage.src = na.getProfileThumbnailUrl(
                                            this._profile
                                        )));
                            },
                            onLanguageChange: function() {
                                var a = this.languageSelect
                                    .get('store')
                                    .query({
                                        displayName: this.languageSelect.get('displayedValue'),
                                    })
                                    .shift();
                                a && this._initLanguageFormat(a.culture, a.cultureFormats);
                            },
                            _initLanguageFormat: function(b, c) {
                                if (b && c && c.length) {
                                    b = ua.getSelectedFormat(
                                        this._profile.cultureFormat,
                                        c || []
                                    );
                                    var d = new w({
                                        idProperty: 'format',
                                        label: 'displayName',
                                        data: c,
                                    });
                                    this.languageFormatSelect.set('store', d);
                                    this.languageFormatSelect.set('searchAttr', 'displayName');
                                    b
                                        ?
                                        (a.set(
                                            this.language_format_setting,
                                            'innerHTML',
                                            b.displayName
                                        ), this.languageFormatSelect.set(
                                            'displayedValue',
                                            b.displayName
                                        )) :
                                        (a.set(
                                            this.language_format_setting,
                                            'innerHTML',
                                            c[0].displayName
                                        ), this.languageFormatSelect.set(
                                            'displayedValue',
                                            c[0].displayName
                                        ));
                                    m.set(this.languageFormatContainer, 'display', '');
                                } else m.set(this.languageFormatContainer, 'display', 'none');
                            },
                            onChangePassword: function() {
                                this._oAuthInfo.redirectUri = encodeURIComponent(
                                    this._oAuthInfo.redirectUri +
                                    '?isPortal\x3d' +
                                    N.self.isPortal
                                );
                                window.location = v.substitute(
                                    '${url}?client_id\x3d${clientId}\x26redirect_uri\x3d${redirectUri}\x26response_type\x3dtoken\x26expiration\x3d${expiration}\x26locale\x3d${locale}\x26resetPassword\x3dtrue',
                                    this._oAuthInfo
                                );
                            },
                            onEnableMFA: function() {
                                this._oAuthInfo.redirectUri = encodeURIComponent(
                                    N.baseUrl + 'postmfa.html'
                                );
                                window.location = v.substitute(
                                    '${url}?client_id\x3d${clientId}\x26redirect_uri\x3d${redirectUri}\x26response_type\x3dtoken\x26expiration\x3d${expiration}\x26locale\x3d${locale}\x26enableMfa\x3dtrue',
                                    this._oAuthInfo
                                );
                            },
                            onDisableMFA: function() {
                                R.createSpecifiedDialog(ma).showMsgTitleButton(
                                    this.i18n.disableMultiFactorMsg,
                                    this.i18n.disable + ' ' + this.i18n.multiFactorAuth,
                                    this.i18n.disable,
                                    this.reallyDisableMFA.bind(this, this._profile.username)
                                );
                                k.remove(
                                    H.byId('button_delete-warning-submit').domNode,
                                    'orange'
                                );
                                k.add(
                                    H.byId('button_delete-warning-submit').domNode,
                                    'caution'
                                );
                            },
                            reallyDisableMFA: function(b) {
                                var c =
                                    M.getSecureUrl(N.restBaseUrl) +
                                    'community/users/' +
                                    b +
                                    '/disableMfa';
                                M.request({ url: c }, { usePost: !0 }).then(
                                    function() {
                                        R.createSpecifiedDialog(S).show({
                                            title: this.i18n.notice,
                                            message: this.i18n.disableMultiFactorSuccess,
                                        });
                                        this._profile.mfaEnabled = !1;
                                        a.set(
                                            this.mfa_setting,
                                            'innerHTML',
                                            this.i18n.disabledLabel
                                        );
                                        m.set(this._disableMFA.domNode, 'display', 'none');
                                        m.set(this._enableMFA.domNode, 'display', '');
                                        this._profile &&
                                            this._user.username !== this._profile.username &&
                                            (m.set(
                                                this.mfa_setting.parentNode,
                                                'display',
                                                ''
                                            ), m.set(
                                                this._enableMFA.domNode.parentNode,
                                                'display',
                                                'none'
                                            ));
                                        k.remove(
                                            H.byId('button_delete-warning-submit').domNode,
                                            'caution'
                                        );
                                        k.add(
                                            H.byId('button_delete-warning-submit').domNode,
                                            'orange'
                                        );
                                    }.bind(this),
                                    function(a) {
                                        a = v.substitute(this.i18n.error.disableMultiFactor, {
                                            user: b,
                                        });
                                        R.createSpecifiedDialog(S).show({
                                            title: this.i18n.noticeLabel,
                                            message: a,
                                        });
                                    }.bind(this)
                                );
                            },
                        }
                    );
                }
            );
        },
        'calcite-web/js/calcite-web': function() {
            (function(c, g) {
                'object' === typeof exports && 'undefined' !== typeof module ?
                    (module.exports = g()) :
                    'function' === typeof define && define.amd ?
                    define(g) :
                    (c.calcite = g());
            })(this, function() {
                function c(a, b) {
                    for (; b; b = b.parentNode) {
                        var c = (b && b.getAttribute && b.getAttribute('class')) || '',
                            c = new RegExp('(\\s|^)' + a + '(\\s|$)').test(c);
                        if (1 === b.nodeType && c) break;
                    }
                    return b;
                }

                function g(a) {
                    return Array.isArray(a) ? a : Array.prototype.slice.call(a);
                }

                function f(a, b) {
                    a = (b || document).querySelectorAll(a);
                    return g(a);
                }

                function b(a, b) {
                    return new RegExp('(\\s|^)' + b + '(\\s|$)').test(
                        a.getAttribute('class')
                    );
                }

                function e(a, c) {
                    c.split(' ').forEach(function(c) {
                        if (!b(a, c)) {
                            var d = a.getAttribute('class') || '';
                            a.setAttribute('class', d + ' ' + c);
                        }
                    });
                }

                function h(a, c) {
                    c.split(' ').forEach(function(c) {
                        var d = (a.getAttribute('class') || '')
                            .replace(new RegExp('(\\s|^)' + c + '(\\s|$)', 'g'), '$2');
                        b(a, c) && a.setAttribute('class', d);
                    });
                }

                function d(a) {
                    a = g(a);
                    a.forEach(function(a) {
                        h(a, 'is-active');
                    });
                }

                function a(a, b) {
                    d(a);
                    e(b, 'is-active');
                }

                function k(a, b, c) {
                    if (a.addEventListener) return a.addEventListener(b, c, !1);
                    if (a.attachEvent) return a.attachEvent('on' + b, c);
                }

                function n(a, b, c) {
                    if (a.removeEventListener) return a.removeEventListener(b, c, !1);
                    if (a.detachEvent) return a.detachEvent('on' + b, c);
                }

                function l(a) {
                    if (a.preventDefault) return a.preventDefault();
                    a.returnValue && (a.returnValue = !1);
                }

                function m(a) {
                    a = a || window.event;
                    if (a.stopPropagation) return a.stopPropagation();
                    a.cancelBubble && (a.cancelBubble = !0);
                }

                function p() {}

                function r(a) {
                    for (
                        var b = '', c = 0; c < a; c++
                    ) b += ((65536 * (1 + Math.random())) | 0).toString(16).substring(1);
                    return b;
                }

                function u(a) {
                    if (!a)
                        throw new TypeError('Invalid argument `value` has no value.');
                    this.value = u.EMPTY;
                    a && a instanceof u ?
                        (this.value = a.toString()) :
                        a &&
                        '[object String]' === Object.prototype.toString.call(a) &&
                        u.isGuid(a) &&
                        (this.value = a);
                    this.equals = function(a) {
                        return u.isGuid(a) && this.value === a;
                    };
                    this.isEmpty = function() {
                        return this.value === u.EMPTY;
                    };
                    this.toString = function() {
                        return this.value;
                    };
                    this.toJSON = function() {
                        return this.value;
                    };
                }

                function t(a) {
                    m(a);
                    a = c('accordion-section', a.target || a.srcElement);
                    J.emit('accordion:toggle', { node: a });
                }

                function q(a) {
                    var c = a.node;
                    b(c, 'is-active') ? h(c, 'is-active') : e(c, 'is-active');
                    (a = a.node.querySelector('.accordion-title')) &&
                    (a.getAttribute('aria-expanded') ?
                        a.removeAttribute('aria-expanded') :
                        a.setAttribute('aria-expanded', 'true'));
                }

                function v(a) {
                    (13 !== a.keyCode && 32 !== a.keyCode) ||
                    !b(a.target || a.srcElement, 'accordion-title') ||
                        (l(a), m(a), t(a));
                }

                function C(a) {
                    var b = f('.js-accordion');
                    a
                        ?
                        z(a.node) :
                        b.forEach(function(a) {
                            z(a);
                        });
                }

                function z(a) {
                    a.setAttribute('aria-live', 'polite');
                    a.setAttribute('role', 'tablist');
                    g(a.children).forEach(function(a) {
                        var c = a.querySelector('.accordion-title'),
                            d = a.querySelector('.accordion-content'),
                            e = d.id || u.raw();
                        d.id = e;
                        c.setAttribute('role', 'tab');
                        c.setAttribute('tabindex', '0');
                        c.setAttribute('aria-controls', e);
                        b(a, 'is-active') && c.setAttribute('aria-expanded', 'true');
                        var f = !1;
                        P.accordions.forEach(function(a) {
                            a.target === c && 'click' === a.event && a.fn === t && (f = !0);
                        });
                        f ||
                            (P.accordions.push({
                                target: c,
                                event: 'click',
                                fn: t,
                            }), P.accordions.push({ target: a, event: 'keydown', fn: v }), k(
                                c,
                                'click',
                                t
                            ), k(a, 'keydown', v));
                    });
                }

                function y() {
                    N ||
                        (J.on('accordion:bind', C), J.on(
                            'accordion:toggle',
                            q
                        ), (N = !0));
                    J.emit('accordion:bind');
                }

                function x(a) {
                    n(document.body, 'click', x);
                    f('.js-dropdown').forEach(function(a) {
                        h(a, 'is-active');
                    });
                    f('.js-dropdown-toggle').forEach(function(a) {
                        a.setAttribute('aria-expanded', 'false');
                    });
                    n(document, 'keydown', E);
                    n(document.body, 'focusin', w);
                }

                function w(a) {
                    a.target && !c('js-dropdown', a.target) && J.emit('dropdown:close');
                }

                function A(a) {
                    if (a) {
                        var c = b(a.node, 'is-active');
                        J.emit('dropdown:close');
                        c ||
                            (e(a.node, 'is-active'), a.target &&
                                a.target.setAttribute('aria-expanded', 'true'), k(
                                    document,
                                    'keydown',
                                    E
                                ));
                        b(a.node, 'is-active') &&
                            (k(document.body, 'click', x), k(document.body, 'focusin', w));
                    }
                }

                function E(a) {
                    (40 === a.keyCode) | (38 === a.keyCode) && a.preventDefault();
                }

                function B(a) {
                    f('.js-dropdown-toggle').forEach(function(a) {
                        var b = !1;
                        P.dropdowns.forEach(function(c) {
                            c.target === a && 'click' === c.event && c.fn === K && (b = !0);
                        });
                        b ||
                            (P.dropdowns.push({
                                target: a,
                                event: 'click',
                                fn: K,
                            }), k(a, 'click', K));
                    });
                }

                function D() {
                    var a = document.querySelector('.js-dropdown.is-active');
                    return a ? a : !1;
                }

                function H(a) {
                    var b = a.links.indexOf(document.activeElement); -
                    1 === b ?
                        (b = a.forward ? 0 : a.links.length - 1) :
                        a.forward ?
                        ((b += 1), b === a.links.length && (b = 0)) :
                        (--b, -1 === b && (b = a.links.length - 1));
                    a.links[b].focus();
                }

                function G() {
                    var a = D();
                    a &&
                        ((a = f('.dropdown-link', a).filter(function(a) {
                            return null !== a.offsetParent;
                        })), J.emit('dropdown:focus', { links: a, forward: !0 }));
                }

                function F() {
                    var a = D();
                    a &&
                        ((a = f('.dropdown-link', a).filter(function(a) {
                            return null !== a.offsetParent;
                        })), J.emit('dropdown:focus', { links: a, forward: !1 }));
                }

                function K(a) {
                    l(a);
                    m(a);
                    var b = c('js-dropdown', a.target);
                    J.emit('dropdown:toggle', { node: b, target: a.target });
                }

                function L() {
                    M ||
                        (J.on('dropdown:toggle', A), J.on('dropdown:close', x), J.on(
                            'keyboard:escape',
                            x
                        ), J.on('keyboard:arrow:down', G), J.on(
                            'keyboard:arrow:up',
                            F
                        ), J.on('dropdown:focus', H), (M = !0));
                    B();
                }

                function Q() {
                    J.on('scrolling:at', function(c) {
                        a.forEach(function(a) {
                            var d = a.element;
                            b(a.element, 'is-sticky') &&
                                ((d = a.element.getAttribute(
                                    'data-sticky-id'
                                )), (d = document.querySelector(
                                    '.js-shim[data-sticky-id\x3d"' + d + '"]'
                                )));
                            if (d) {
                                var e = d.getAttribute('data-top') || 0;
                                a.top = d.offsetTop - parseInt(e, 0);
                            }
                            a.top < c ?
                                J.emit('sticky:stick', a) :
                                J.emit('sticky:unstick', a);
                        });
                    });
                    J.on('sticky:stick', function(a) {
                        var b = a.element.getAttribute('data-sticky-id'),
                            c = document.querySelector(
                                '.js-shim[data-sticky-id\x3d"' + b + '"]'
                            );
                        b && c && (e(a.element, 'is-sticky'), (c.style.display = ''));
                    });
                    J.on('sticky:unstick', function(a) {
                        var b = a.element.getAttribute('data-sticky-id'),
                            c = document.querySelector(
                                '.js-shim[data-sticky-id\x3d"' + b + '"]'
                            );
                        b && c && (h(a.element, 'is-sticky'), (c.style.display = 'none'));
                    });
                    var a = f('.js-sticky').map(function(a) {
                        var b = a.offsetTop,
                            c = a.getAttribute('data-top') || 0;
                        a.style.top = c + 'px';
                        if (!a.getAttribute('data-sticky-id')) {
                            var d = u.raw();
                            a.setAttribute('data-sticky-id', d);
                            var f = a.parentNode,
                                g = a.cloneNode('deep');
                            e(g, 'js-shim');
                            h(g, 'js-sticky');
                            g.setAttribute('data-sticky-id', d);
                            g.style.visibility = 'hidden';
                            g.style.display = 'none';
                            f.insertBefore(g, a);
                        }
                        return {
                            top: b - parseInt(c, 0),
                            element: a,
                        };
                    });
                }

                function O() {
                    function d(a) {
                        var b = a.getAttribute('data-tab');
                        if (b) return b;
                        b = u.raw();
                        a.setAttribute('data-tab', b);
                        return b;
                    }

                    function e(a) {
                        var e = a.target;
                        b(e, 'js-tab') || (e = a.currentTarget);
                        a = c('js-tab-group', e);
                        var f = d(a);
                        return { parent: a, id: f, active: e };
                    }

                    function h(a) {
                        a.preventDefault();
                        a = e(a);
                        J.emit('tabs:active', a);
                    }

                    function l(a) {
                        var c = e(a);
                        if (13 === a.keyCode || 32 === a.keyCode)
                            a.preventDefault(), J.emit('tabs:active', c);
                        if (39 === a.keyCode || 37 === a.keyCode) {
                            var d = g(c.parent.querySelectorAll('.js-tab')),
                                f = d.indexOf(document.activeElement); -
                            1 < f &&
                                b(document.activeElement, 'js-tab') &&
                                ((c = d[f + 1] || d[0]), (d =
                                    d[f - 1] || d[d.length - 1]), (39 === a.keyCode ?
                                    c :
                                    d).focus());
                        }
                    }
                    J.on('tabs:bind', function() {
                        var a = f('.js-tab'),
                            c = f('.js-tab-group'),
                            e = f('.js-tab-section');
                        c.forEach(function(a) {
                            a.setAttribute('aria-live', 'polite');
                            d(a);
                            a.children[0].setAttribute('role', 'tablist');
                            a = a.querySelectorAll('.js-tab');
                            for (
                                var b = 100 / a.length, c = 0; c < a.length; c++
                            ) a[c].style.maxWidth = b + '%';
                        });
                        a.forEach(function(a) {
                            a.setAttribute('aria-expanded', 'false');
                            a.setAttribute('role', 'tab');
                            a.setAttribute('tabindex', '0');
                            k(a, 'click', h);
                            k(a, 'keydown', l);
                        });
                        e.forEach(function(a) {
                            a.setAttribute('role', 'tabpanel');
                            b(a, 'is-active') ?
                                a.setAttribute('aria-expanded', !0) :
                                a.setAttribute('aria-expanded', !1);
                        });
                    });
                    J.on('tabs:active', function(b) {
                        var c = b.parent,
                            d = g(c.querySelectorAll('.js-tab'));
                        b = b.active;
                        var c = g(c.querySelectorAll('.js-tab-section')),
                            e = d.indexOf(b),
                            e = c[e];
                        d.forEach(function(a) {
                            a.setAttribute('aria-expanded', !1);
                        });
                        b.setAttribute('aria-expanded', !0);
                        a(d, b);
                        c.forEach(function(a) {
                            a.setAttribute('aria-expanded', !1);
                        });
                        e.setAttribute('aria-expanded', !0);
                        a(c, e);
                        b.focus();
                    });
                    J.emit('tabs:bind');
                }
                var P = { dropdowns: [], accordions: [], modals: [] };
                p.prototype = {
                    on: function(a, b, c) {
                        var d = this.e || (this.e = {});
                        (d[a] || (d[a] = [])).push({ fn: b, ctx: c });
                        return this;
                    },
                    once: function(a, b, c) {
                        function d() {
                            e.off(a, d);
                            b.apply(c, arguments);
                        }
                        var e = this;
                        d._ = b;
                        return this.on(a, d, c);
                    },
                    emit: function(a) {
                        var b = [].slice.call(arguments, 1),
                            c = ((this.e || (this.e = {}))[a] || []).slice(),
                            d = 0,
                            e = c.length;
                        for (d; d < e; d++)
                            c[d].fn.apply(c[d].ctx, b);
                        return this;
                    },
                    off: function(a, b) {
                        var c = this.e || (this.e = {}),
                            d = c[a],
                            e = [];
                        if (d && b)
                            for (var f = 0, g = d.length; f < g; f++)
                                d[f].fn !== b && d[f].fn._ !== b && e.push(d[f]);
                        e.length ? (c[a] = e) : delete c[a];
                        return this;
                    },
                };
                var J = new p(),
                    I = /^[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}$/i;
                u.EMPTY = '00000000-0000-0000-0000-000000000000';
                u.isGuid = function(a) {
                    return a && (a instanceof u || I.test(a.toString()));
                };
                u.create = function() {
                    return new u([r(2), r(1), r(1), r(1), r(3)].join('-'));
                };
                u.raw = function() {
                    return [r(2), r(1), r(1), r(1), r(3)].join('-');
                };
                var N = !1,
                    M = !1;
                k(document, 'keyup', function(a) {
                    27 === a.keyCode ?
                        J.emit('keyboard:escape') :
                        13 === a.keyCode ?
                        J.emit('keyboard:return') :
                        32 === a.keyCode ?
                        J.emit('keyboard:space') :
                        38 === a.keyCode ?
                        J.emit('keyboard:arrow:up') :
                        40 === a.keyCode ?
                        J.emit('keyboard:arrow:down') :
                        37 === a.keyCode ?
                        J.emit('keyboard:arrow:left') :
                        39 === a.keyCode &&
                        J.emit('keyboard:arrow:right');
                });
                k(
                    window,
                    'scroll',
                    (function(a, b, c) {
                        var d, e, f, g;
                        g = function() {
                            d = !1;
                            e && (f.apply(c, e), (e = !1));
                        };
                        return (f = function() {
                            d
                                ?
                                (e = arguments) :
                                (a.apply(c, arguments), setTimeout(g, b), (d = !0));
                        });
                    })(function() {
                        J.emit('scrolling:at', window.pageYOffset);
                    }, 100)
                );
                return {
                    bus: J,
                    accordion: y,
                    dropdown: L,
                    sticky: Q,
                    tabs: O,
                    init: function() {
                        [y, L, Q, O].forEach(function(a) {
                            a();
                        });
                    },
                };
            });
        },
        'arcgisonline/pages/dijit/InfoTooltip': function() {
            define(
                'require exports tslib dojo/text!./InfoTooltip/templates/InfoTooltip.html dojo/i18n!../../nls/arcgisonline dojo/on dijit/_TemplatedMixin dijit/_WidgetBase dijit/TooltipDialog dijit/popup dijit/a11yclick ../utils/dom ../utils/icons ../../tsutils/declareDecorator'.split(
                    ' '
                ),
                function(c, g, f, b, e, h, d, a, k, n, l, m, p, r) {
                    b = f.__importDefault(b);
                    e = f.__importDefault(e);
                    h = f.__importDefault(h);
                    d = f.__importDefault(d);
                    a = f.__importDefault(a);
                    k = f.__importDefault(k);
                    n = f.__importDefault(n);
                    l = f.__importDefault(l);
                    m = f.__importDefault(m);
                    p = f.__importDefault(p);
                    r = f.__importDefault(r);
                    return (function() {
                        function c(a, c) {
                            this.templateString = b.default;
                            this.i18n = e.default;
                            this.buttonClasses = this.content = this.title = '';
                            this.dialogClasses = [];
                            this.orient = ['above-centered', 'below-centered'];
                            this.tooltipId = '';
                            this.icons = p.default;
                            this.preventInfoButtonEventDefault = !1;
                        }
                        c.prototype.postMixInProperties = function() {
                            this.inherited(arguments);
                            this.buttonAriaLabel || (this.buttonAriaLabel = this.title);
                        };
                        c.prototype.postCreate = function() {
                            this.inherited(arguments);
                            this._popoverContent.innerHTML = this.content;
                            this._dialog = new k.default({
                                id: this.tooltipId,
                                class: 'popover',
                                title: this.title,
                                content: this._popover,
                            });
                            0 < this.dialogClasses.length &&
                                m.default.addClasses(this._dialog.domNode, this.dialogClasses);
                            this._addEventListeners();
                        };
                        c.prototype.destroy = function() {
                            this.inherited(arguments);
                            this._dialog && this._dialog.destroy();
                        };
                        c.prototype._addEventListeners = function() {
                            var a = this;
                            this.own(
                                l.default(this._closeIcon, function() {
                                    n.default.close(a._dialog);
                                    a._infoButton.focus();
                                }),
                                l.default(this._infoButton, function(b) {
                                    b.stopPropagation();
                                    a.preventInfoButtonEventDefault && b.preventDefault();
                                    n.default.open({
                                        popup: a._dialog,
                                        orient: a.orient,
                                        around: a._infoButton,
                                    });
                                    m.default.showNode(a._popover);
                                    a._closeIcon.focus();
                                }),
                                h.default(this._popover, 'click', function(a) {
                                    a.stopPropagation();
                                }),
                                h.default(document.body, 'click', function(b) {
                                    n.default.close(a._dialog);
                                })
                            );
                        };
                        return (c = f.__decorate([r.default(a.default, d.default)], c));
                    })();
                }
            );
        },
        'arcgisonline/pages/dijit/InviteMembers/AppIconWithLabel': function() {
            define(
                'require exports tslib dojo/text!./templates/AppIconWithLabel.html dijit/_TemplatedMixin dijit/_WidgetBase ../../../sharing/geow/Licenses ../../utils/organization ./AppIcon ../../../tsutils/declareDecorator'.split(
                    ' '
                ),
                function(c, g, f, b, e, h, d, a, k, n) {
                    b = f.__importDefault(b);
                    e = f.__importDefault(e);
                    h = f.__importDefault(h);
                    d = f.__importDefault(d);
                    a = f.__importDefault(a);
                    k = f.__importDefault(k);
                    n = f.__importDefault(n);
                    return (function() {
                        function c(a, c) {
                            this.templateString = b.default;
                            this.cssClasses = this.textCssClasses = '';
                            this.hideIcon = !1;
                        }
                        c.prototype.postCreate = function() {
                            this.inherited(arguments);
                            var b = this.app.title;
                            if (!a.default.isEntitlement(this.app)) {
                                var c = this.app;
                                c.entitlements &&
                                    1 === c.entitlements.length &&
                                    ((c = d.default.getProEntitlementTitle(
                                        c.entitlements[0]
                                    )), 0 < c.length && (b = c));
                            }
                            this._titleLabel.textContent = b;
                            this._titleLabel.title = b;
                            this.hideIcon ?
                                (this.domNode.removeChild(
                                    this._appIcon
                                ), (this._appIcon = void 0)) :
                                (this._appIcon = new k.default({ app: this.app, portal: this.portal },
                                    this._appIcon
                                ));
                        };
                        c.prototype.addAsterisk = function() {
                            this._titleLabel.textContent += ' *';
                        };
                        c.prototype.showAddonBadge = function() {
                            this._appIcon.showAddonBadge();
                        };
                        return (c = f.__decorate([n.default(h.default, e.default)], c));
                    })();
                }
            );
        },
        'arcgisonline/pages/dijit/InviteMembers/AppIcon': function() {
            define(
                'require exports tslib dojo/text!./templates/AppIcon.html dojo/on dijit/_TemplatedMixin dijit/_WidgetBase ../../utils/organization ../../utils/dom ../../../tsutils/declareDecorator'.split(
                    ' '
                ),
                function(c, g, f, b, e, h, d, a, k, n) {
                    b = f.__importDefault(b);
                    e = f.__importDefault(e);
                    h = f.__importDefault(h);
                    d = f.__importDefault(d);
                    a = f.__importDefault(a);
                    k = f.__importDefault(k);
                    n = f.__importDefault(n);
                    return (function() {
                        function c(a, c) {
                            this.templateString = b.default;
                            this.defaultIcon = this.cssClasses = '';
                            this.hasTooltip = !1;
                        }
                        c.prototype.postCreate = function() {
                            var b = this;
                            this.hasTooltip &&
                                (this.domNode.classList.add(
                                    'tooltip'
                                ), this.domNode.setAttribute('aria-label', this.app.title));
                            a.default.initLicensesConfig(this.portal).then(function() {
                                var c;
                                b.icon = a.default.getAppIcon(b.app, b.defaultIcon);
                                0 <
                                    (null === (c = b.icon.shapeClass) || void 0 === c ?
                                        void 0 :
                                        c.length) && b.domNode.classList.add(b.icon.shapeClass);
                                b._img.src = b.icon.imagePath;
                                b.icon.showAbbr &&
                                    ((b._abbr.innerHTML = b.icon.abbr), k.default.showNode(
                                        b._abbr
                                    ));
                                b.own(
                                    e.default(b._img, 'error', function() {
                                        b._img.src =
                                            'js/arcgisonline/sharing/dijit/css/images/app-icons/generic-app.png';
                                    })
                                );
                            });
                        };
                        c.prototype.setAbbr = function(a) {
                            this.icon.showAbbr &&
                                ((this._abbr.innerHTML = a), k.default.showNode(this._abbr));
                        };
                        c.prototype.showAddonBadge = function() {
                            k.default.showNode(this.addonBadge);
                        };
                        return (c = f.__decorate([n.default(d.default, h.default)], c));
                    })();
                }
            );
        },
        'arcgisonline/pages/organization/widgets/LicenseTypeCard': function() {
            define(
                'require exports tslib dojo/text!./templates/licenses/LicenseTypeCard.html dojo/i18n!../../../nls/arcgisonline dijit/_TemplatedMixin dijit/_WidgetBase dijit/a11yclick esri/lang ../../utils/dom ../../utils/organization ./LicensesAvailable ./AvailableText ./UserTypeName ../../dijit/InviteMembers/AppIconWithLabel ../../utils/icons ./UserTypeAppBundle ./LicenseExpirationBadge ./MobileUserTypeOverlay ./RoleInfo ../../../sharing/dijit/_LevelAwareMixin ../../../tsutils/declareDecorator'.split(
                    ' '
                ),
                function(
                    c,
                    g,
                    f,
                    b,
                    e,
                    h,
                    d,
                    a,
                    k,
                    n,
                    l,
                    m,
                    p,
                    r,
                    u,
                    t,
                    q,
                    v,
                    C,
                    z,
                    y,
                    x
                ) {
                    b = f.__importDefault(b);
                    e = f.__importDefault(e);
                    h = f.__importDefault(h);
                    d = f.__importDefault(d);
                    a = f.__importDefault(a);
                    k = f.__importDefault(k);
                    n = f.__importDefault(n);
                    l = f.__importDefault(l);
                    m = f.__importDefault(m);
                    p = f.__importDefault(p);
                    r = f.__importDefault(r);
                    u = f.__importDefault(u);
                    t = f.__importDefault(t);
                    q = f.__importDefault(q);
                    v = f.__importDefault(v);
                    C = f.__importDefault(C);
                    z = f.__importDefault(z);
                    y = f.__importDefault(y);
                    x = f.__importDefault(x);
                    return (function() {
                        function c(a, c) {
                            this.templateString = b.default;
                            this.i18n = e.default;
                            this.icons = t.default;
                            this._compatibleLicenses = [];
                            this._compatibleRoles = [];
                        }
                        c.prototype.postCreate = function() {
                            var a = this,
                                b;
                            this.inherited(arguments);
                            this._userTypeName = new r.default({
                                    userType: this.licenseType,
                                    portal: this.portal,
                                    cssClasses: 'avenir-bold flex-1',
                                },
                                this._userTypeName
                            );
                            k.default.isDefined(this.licenseType.assigned) &&
                                k.default.isDefined(this.licenseType.maxUsers) &&
                                ((this._licensesAvailable = new m.default({
                                        used: this.licenseType.assigned,
                                        total: this.licenseType.maxUsers,
                                        cssClasses: 'flex-wrap hide-on-mobile',
                                    },
                                    this.domNode.querySelector('.js-licenses-available')
                                )), (this._availableText = new p.default({
                                        used: this.licenseType.assigned,
                                        total: this.licenseType.maxUsers,
                                        cssClasses: 'only-on-mobile',
                                    },
                                    this.domNode.querySelector('.js-available-text')
                                )));
                            this._renderApps();
                            this._compatibleLicenses = [];
                            this._compatibleRoles = [];
                            this.licenseType.supportsSignInOnlyFromUTApps ?
                                (this._compatibleLicensesEl.textContent = this.i18n.myOrganization.licensesTab.notCompatibleWithAnyAddOn) :
                                0 <
                                (null === (b = this.apps) || void 0 === b ?
                                    void 0 :
                                    b.length) ?
                                (this.apps.forEach(function(b) {
                                        if (-1 !==
                                            b.allowedLevels.indexOf(a.licenseType.level) ||
                                            0 === b.allowedLevels.length
                                        ) {
                                            var c = l.default.userTypePassesRequired(
                                                    a.licenseType,
                                                    b
                                                ),
                                                d = l.default.alreadyIncludedInUserType(
                                                    a.licenseType,
                                                    b
                                                ),
                                                e =
                                                (b.expiration &&
                                                    -1 !== b.expiration &&
                                                    b.expiration < Date.now()) ||
                                                (0 === b.total && 0 < b.used);
                                            d || e || !c || a._compatibleLicenses.push(b);
                                        }
                                    }), 0 < this._compatibleLicenses.length ?
                                    this._appendAppIcons(
                                        this._compatibleLicenses,
                                        this._compatibleLicensesEl
                                    ) :
                                    (this._compatibleLicensesEl.textContent = this.i18n.myOrganization.licensesTab.noCompatibleLicenses)) :
                                n.default.hideNode(this._compatibleLicensesBtn);
                            this.roles ?
                                (this.roles.forEach(function(b) {
                                    var c = !0;
                                    a.portal.isPortal &&
                                        a.licenseType.supportsSignInOnlyFromUTApps &&
                                        (c = !l.default.isAdminRole(b)); -
                                    1 !== b.compatibleLevels.indexOf(a.licenseType.level) &&
                                        c &&
                                        a._compatibleRoles.push(b);
                                }), (b = this._compatibleRoles.map(function(a) {
                                    return new z.default({ role: a });
                                })), n.default.appendChildren(
                                    b.map(function(a) {
                                        return a.domNode;
                                    }),
                                    this._compatibleRolesEl
                                )) :
                                n.default.hideNode(this._compatibleRolesBtn);
                            0 === this.licenseType.apps.length &&
                                0 === this.licenseType.extensions.length ?
                                n.default.hideNode(this._includedLicensesBtn) :
                                this._includedLicensesBtn.addEventListener(
                                    'click',
                                    function() {
                                        a._toggleExpandedSection(
                                            a._includedLicenses,
                                            a._includedLicensesBtn
                                        );
                                    }
                                );
                            this._includedLicensesBtn.classList.contains('hide') ?
                                this._compatibleLicensesBtn.classList.contains('hide') ?
                                this._compatibleRolesBtn.classList.contains('hide') ||
                                this._toggleExpandedSection(
                                    this._compatibleRolesEl,
                                    this._compatibleRolesBtn
                                ) :
                                this._toggleExpandedSection(
                                    this._compatibleLicensesEl,
                                    this._compatibleLicensesBtn
                                ) :
                                this._toggleExpandedSection(
                                    this._includedLicenses,
                                    this._includedLicensesBtn
                                );
                            0 !== this.licenseType.apps.length ||
                                this.apps ||
                                this.roles ||
                                this.domNode.classList.add('license-type-card--no-divider');
                            this._addEventListeners();
                            this.portal.isPortal &&
                                ((this.licenseType.expiration &&
                                        0 < this.licenseType.expiration) ||
                                    (0 === this.licenseType.maxUsers &&
                                        0 < this.licenseType.assigned)) &&
                                ((this._expiresBadge = new v.default({
                                        portal: this.portal,
                                        expiration: this.licenseType.expiration,
                                        used: this.licenseType.assigned,
                                        total: this.licenseType.maxUsers,
                                        isTemporary: -1 < this.licenseType.id.indexOf('Temporary'),
                                    },
                                    this._expiresBadge
                                )), this._expiresBadge.startup());
                        };
                        c.prototype.hide = function() {
                            n.default.hideNode(this.domNode);
                        };
                        c.prototype.show = function() {
                            n.default.showNode(this.domNode);
                        };
                        c.prototype.expand = function() {
                            this.accordionSection.classList.add('is-active');
                        };
                        c.prototype.matchSearch = function(a) {
                            var b = !1;
                            a = a.toLowerCase(); -
                            1 !== this.licenseType.name.toLowerCase().indexOf(a) &&
                                (b = !0);
                            this.licenseType.apps.some(function(c) {
                                -1 !== c.title.toLowerCase().indexOf(a) && (b = !0);
                                return b;
                            });
                            return b;
                        };
                        c.prototype._addEventListeners = function() {
                            var b = this;
                            this._compatibleLicensesBtn.addEventListener(
                                'click',
                                function() {
                                    b._toggleExpandedSection(
                                        b._compatibleLicensesEl,
                                        b._compatibleLicensesBtn
                                    );
                                }
                            );
                            this._compatibleRolesBtn.addEventListener('click', function() {
                                b._toggleExpandedSection(
                                    b._compatibleRolesEl,
                                    b._compatibleRolesBtn
                                );
                            });
                            this.own(
                                a.default(this.domNode, this._onCardClick.bind(this))
                            );
                        };
                        c.prototype._onCardClick = function() {
                            l.default.isMobile() &&
                                new C.default({
                                    userType: this.licenseType,
                                    portal: this.portal,
                                    includedApps: this.licenseType.apps,
                                    compatibleApps: this._compatibleLicenses,
                                    compatibleRoles: this._compatibleRoles,
                                }).open();
                        };
                        c.prototype._appendAppIcons = function(a, b) {
                            var c = this,
                                d = [];
                            a.forEach(function(a) {
                                a = new u.default({
                                    app: a,
                                    portal: c.portal,
                                    textCssClasses: 'licenses-card__app-icon',
                                });
                                d.push(a);
                            });
                            n.default.appendChildren(
                                d.map(function(a) {
                                    return a.domNode;
                                }),
                                b
                            );
                            return d;
                        };
                        c.prototype._renderApps = function() {
                            var a = this,
                                b = this.licenseType.apps,
                                c = [],
                                d = [],
                                e = [],
                                f = b.filter(function(a) {
                                    return a.isAppBundle;
                                }),
                                b = b.filter(function(a) {
                                    return !a.isAppBundle;
                                }),
                                g = this.licenseType.extensions,
                                h = [],
                                k = [],
                                m = [],
                                p = [],
                                t = [],
                                r = [];
                            b.forEach(function(a) {
                                'ArcGIS Pro' === a.title ?
                                    h.push(a) :
                                    'Application SDK' === a.type ? t.push(a) : k.push(a);
                            });
                            h.forEach(function(b) {
                                m.push(
                                    new u.default({
                                        app: b,
                                        portal: a.portal,
                                        cssClasses: 'user-type-app',
                                        textCssClasses: 'licenses-card__app-icon',
                                    })
                                );
                            });
                            n.default.appendChildren(
                                m.map(function(a) {
                                    return a.domNode;
                                }),
                                this.includedPro
                            );
                            n.default.showHide(this.proContainer, 0 < h.length);
                            f.forEach(function(b) {
                                c.push(
                                    new q.default({
                                        appBundle: b,
                                        portal: a.portal,
                                        level: a.licenseType.level,
                                    })
                                );
                            });
                            n.default.appendChildren(
                                c.map(function(a) {
                                    return a.domNode;
                                }),
                                this._includedAppBundles
                            );
                            n.default.showHide(this.appBundlesContainer, 0 < f.length);
                            k = l.default.transformAppBundleApps(k, this.portal.isPortal);
                            k.sort(function(a, b) {
                                return a.title > b.title ? 1 : a.title < b.title ? -1 : 0;
                            });
                            k.forEach(function(b) {
                                var c = new u.default({
                                    app: b,
                                    portal: a.portal,
                                    cssClasses: 'user-type-app',
                                    textCssClasses: 'licenses-card__app-icon',
                                });
                                b.isViewOnly ? e.push(c) : d.push(c);
                            });
                            n.default.appendChildren(
                                d.map(function(a) {
                                    return a.domNode;
                                }),
                                this.includedApps
                            );
                            n.default.showHide(this.appsContainer, 0 < d.length);
                            n.default.appendChildren(
                                e.map(function(a) {
                                    return a.domNode;
                                }),
                                this.includedViewOnly
                            );
                            n.default.showHide(this.viewOnlyContainer, 0 < e.length);
                            g.forEach(function(b) {
                                p.push(
                                    new u.default({
                                        app: b,
                                        portal: a.portal,
                                        cssClasses: 'user-type-app',
                                        textCssClasses: 'licenses-card__app-icon',
                                    })
                                );
                            });
                            n.default.appendChildren(
                                p.map(function(a) {
                                    return a.domNode;
                                }),
                                this.includedExtensions
                            );
                            n.default.showHide(this.extensionsContainer, 0 < g.length);
                            t.forEach(function(b) {
                                r.push(
                                    new u.default({
                                        app: b,
                                        portal: a.portal,
                                        cssClasses: 'user-type-app',
                                        textCssClasses: 'licenses-card__app-icon',
                                    })
                                );
                            });
                            n.default.appendChildren(
                                r.map(function(a) {
                                    return a.domNode;
                                }),
                                this.includedRuntime
                            );
                            n.default.showHide(this.runtimeContainer, 0 < t.length);
                        };
                        c.prototype._toggleExpandedSection = function(a, b) {
                            a.classList.contains('hide') ?
                                (n.default.forEachNode(
                                    this.domNode.querySelectorAll('.js-bottom-section'),
                                    function(a) {
                                        n.default.hideNode(a);
                                    }
                                ), n.default.forEachNode(
                                    this.domNode.querySelectorAll(
                                        '.license-type-card__expand-link'
                                    ),
                                    function(a) {
                                        a.classList.remove(
                                            'license-type-card__expand-link--selected'
                                        );
                                    }
                                ), n.default.showNode(a), b.classList.add(
                                    'license-type-card__expand-link--selected'
                                )) :
                                (n.default.hideNode(a), b.classList.remove(
                                    'license-type-card__expand-link--selected'
                                ));
                        };
                        return (c = f.__decorate(
                            [x.default(d.default, h.default, y.default)],
                            c
                        ));
                    })();
                }
            );
        },
        'arcgisonline/pages/organization/widgets/LicensesAvailable': function() {
            define(
                'require exports tslib dojo/text!./templates/_licensesAvailable.html dojo/i18n!../../../nls/arcgisonline dijit/_TemplatedMixin dijit/_WidgetBase ../../utils/culture ../../utils/dom ../../utils/icons ./ProgressBar ../../../tsutils/declareDecorator'.split(
                    ' '
                ),
                function(c, g, f, b, e, h, d, a, k, n, l, m) {
                    b = f.__importDefault(b);
                    e = f.__importDefault(e);
                    h = f.__importDefault(h);
                    d = f.__importDefault(d);
                    a = f.__importDefault(a);
                    k = f.__importDefault(k);
                    n = f.__importDefault(n);
                    l = f.__importDefault(l);
                    m = f.__importDefault(m);
                    return (function() {
                        function c(a, c) {
                            this.templateString = b.default;
                            this.i18n = e.default;
                            this.icons = n.default;
                            this.totalTextCss = this.assignedTextCss = '';
                            this.progressBarCss =
                                'licenses-card__progress-bar-container margin-left-half margin-right-half';
                            this.cssClasses = '';
                            this.warnPercent = -1;
                        }
                        c.prototype.postCreate = function() {
                            this.inherited(arguments);
                            this.render();
                        };
                        c.prototype.update = function(a, b) {
                            this.used = a;
                            this.total = b;
                            this.render();
                        };
                        c.prototype.warn = function() {
                            this._assignedText.classList.remove(
                                'text-' + this._availableProgressBar.progressCss.color
                            );
                            this._availableProgressBar.warn();
                            this._assignedText.classList.add(
                                'text-' + this._availableProgressBar.progressCss.color
                            );
                            k.default.showNode(this._highContrastWarning);
                        };
                        c.prototype.render = function() {
                            this._assignedText.textContent = a.default.getString(
                                this.i18n.myOrganization.licensesTab.numberAssigned,
                                this.used
                            );
                            if (this._availableProgressBar)
                                this._availableProgressBar.update(
                                    this.used,
                                    this.total
                                ), this._mobileProgressBar.update(this.used, this.total);
                            else {
                                var b = {
                                    used: this.used,
                                    total: this.total,
                                    cssClasses: this.progressBarCss,
                                    warnPercent: this.warnPercent,
                                };
                                this._availableProgressBar = new l.default(
                                    b,
                                    this.domNode.querySelector('.js-progress-bar')
                                );
                                this._availableProgressBar.domNode.classList.add(
                                    'hide-on-mobile'
                                );
                                this._mobileProgressBar = new l.default(b);
                                this._mobileProgressContainer.appendChild(
                                    this._mobileProgressBar.domNode
                                );
                            }
                            this._assignedText.classList.add(
                                'text-' + this._availableProgressBar.progressCss.color
                            );
                            var b = a.default.getString(
                                    this.i18n.myOrganization.licensesTab.numberTotal,
                                    this.total
                                ),
                                c = a.default.getString(
                                    this.i18n.myOrganization.licensesTab.numberAvailable,
                                    this.total - this.used
                                );
                            this._totalText.innerHTML =
                                c +
                                ' \x3cspan class\x3d"margin-left-half margin-right-half licenses-available__divider"\x3e|\x3c/span\x3e ' +
                                b;
                        };
                        return (c = f.__decorate([m.default(d.default, h.default)], c));
                    })();
                }
            );
        },
        'arcgisonline/pages/organization/widgets/ProgressBar': function() {
            define(
                'require exports tslib dojo/text!./templates/_progressBar.html dojo/on dijit/_TemplatedMixin dijit/_WidgetBase arcgisonline/pages/utils/dom ../../../tsutils/declareDecorator ./_ProgressMixin'.split(
                    ' '
                ),
                function(c, g, f, b, e, h, d, a, k, n) {
                    b = f.__importDefault(b);
                    e = f.__importDefault(e);
                    h = f.__importDefault(h);
                    d = f.__importDefault(d);
                    a = f.__importDefault(a);
                    k = f.__importDefault(k);
                    n = f.__importDefault(n);
                    return (function() {
                        function c(a, c) {
                            this.templateString = b.default;
                            this._classPrefix = 'progress-bar-fill';
                        }
                        c.prototype.postCreate = function() {
                            this.inherited(arguments);
                            this._addCssClasses();
                            document.body.appendChild(this.hoverLabel);
                            this.addEventListeners();
                        };
                        c.prototype.destroy = function() {
                            document.body.removeChild(this.hoverLabel);
                            this.inherited(arguments);
                        };
                        c.prototype.update = function(a, b) {
                            var c = this;
                            this.used = a;
                            this.total = b;
                            this._cssClasses.forEach(function(a) {
                                c._bar.classList.remove(a);
                            });
                            this._addCssClasses();
                        };
                        c.prototype.warn = function() {
                            this._bar.classList.remove(
                                this._classPrefix + '--' + this._green
                            );
                            this._bar.classList.contains(
                                    this._classPrefix + '--' + this._red
                                ) ||
                                this._bar.classList.add(this._classPrefix + '--' + this._red);
                            this.progressCss.color = this._red;
                        };
                        c.prototype._addCssClasses = function() {
                            var a = this,
                                b = this.getProgressCss();
                            this._cssClasses = [
                                this._classPrefix + '-' + b.percent,
                                this._classPrefix + '--' + b.color,
                            ];
                            this._cssClasses.forEach(function(b) {
                                a._bar.classList.add(b);
                            });
                        };
                        c.prototype.addEventListeners = function() {
                            this.own(
                                e.default(
                                    this._bar,
                                    'mouseover',
                                    this.handleMouseOver.bind(this)
                                ),
                                e.default(
                                    this._bar,
                                    'mouseout',
                                    this.handleMouseOut.bind(this)
                                )
                            );
                        };
                        c.prototype.handleMouseOver = function(b) {
                            if (this.hoverLabelFunc) {
                                var c = this._bar.getBoundingClientRect();
                                this.hoverLabel.style.top = c.top + c.height + 10 + 'px';
                                this.hoverLabel.style.left = b.clientX + 'px';
                                this.hoverLabel.innerHTML = this.hoverLabelFunc();
                                a.default.showNode(this.hoverLabel);
                            }
                        };
                        c.prototype.handleMouseOut = function() {
                            a.default.hideNode(this.hoverLabel);
                        };
                        return (c = f.__decorate(
                            [k.default(d.default, h.default, n.default)],
                            c
                        ));
                    })();
                }
            );
        },
        'arcgisonline/pages/organization/widgets/_ProgressMixin': function() {
            define(['require', 'exports'], function(c, g) {
                return (function() {
                    function c() {
                        this.cssClasses = '';
                        this.showAvailable = !1;
                        this.warnPercent = 90;
                        this._green = 'dark-green';
                        this._red = 'red';
                    }
                    c.prototype.getProgressCss = function() {
                        var b = this.used,
                            c = this.total;
                        0 === b && 0 < c ?
                            (b = 0) :
                            (0 < b && 0 === c) || b > c ?
                            (b = 100) :
                            ((b = Math.round(b / c * 100) / 10), (b =
                                10 * Math[1 > b && 0 < b ? 'ceil' : 'round'](b)));
                        return (this.progressCss = {
                            percent: this.showAvailable ? 100 - b : b,
                            color: this.getProgressColor(b),
                        });
                    };
                    c.prototype.getProgressColor = function(b) {
                        return 0 === b ?
                            this._green :
                            this.used > this.total ?
                            this._red :
                            -1 !== this.warnPercent && b >= this.warnPercent ?
                            this._red :
                            this._green;
                    };
                    return c;
                })();
            });
        },
        'arcgisonline/pages/organization/widgets/AvailableText': function() {
            define(
                'require exports tslib esri/lang dojo/i18n!../../../nls/arcgisonline dijit/_TemplatedMixin dijit/_WidgetBase ./_ProgressMixin ../../utils/culture ../../../tsutils/declareDecorator'.split(
                    ' '
                ),
                function(c, g, f, b, e, h, d, a, k, n) {
                    b = f.__importDefault(b);
                    e = f.__importDefault(e);
                    h = f.__importDefault(h);
                    d = f.__importDefault(d);
                    a = f.__importDefault(a);
                    k = f.__importDefault(k);
                    n = f.__importDefault(n);
                    return (function() {
                        function c(a, c) {
                            this.templateString =
                                '\x3cdiv class\x3d"${cssClasses}"\x3e\x3c/div\x3e';
                            this.i18n = e.default;
                            this.cssClasses = '';
                            b.default.isDefined(a.warnPercent) || (this.warnPercent = -1);
                        }
                        c.prototype.postCreate = function() {
                            this.inherited(arguments);
                            this._render();
                        };
                        c.prototype._render = function() {
                            this._currentColor = this.getProgressCss().color;
                            this.domNode.classList.add('text-' + this._currentColor);
                            this.domNode.textContent = k.default.getString(
                                this.i18n.myOrganization.licensesTab.numberAvailable,
                                this.total - this.used
                            );
                        };
                        c.prototype.update = function(a) {
                            this.used = a;
                            this.domNode.classList.remove(this._currentColor);
                            this._render();
                        };
                        return (c = f.__decorate(
                            [n.default(d.default, h.default, a.default)],
                            c
                        ));
                    })();
                }
            );
        },
        'arcgisonline/pages/organization/widgets/UserTypeName': function() {
            define(
                'require exports tslib dojo/text!./templates/licenses/UserTypeName.html dojo/i18n!../../../nls/arcgisonline dijit/_TemplatedMixin dijit/_WidgetBase ../../../tsutils/declareDecorator'.split(
                    ' '
                ),
                function(c, g, f, b, e, h, d, a) {
                    b = f.__importDefault(b);
                    e = f.__importDefault(e);
                    h = f.__importDefault(h);
                    d = f.__importDefault(d);
                    a = f.__importDefault(a);
                    return (function() {
                        function c(a, c) {
                            this.templateString = b.default;
                            this.i18n = e.default;
                            this.labelText = this.cssClasses = '';
                        }
                        return (c = f.__decorate([a.default(d.default, h.default)], c));
                    })();
                }
            );
        },
        'arcgisonline/pages/organization/widgets/UserTypeAppBundle': function() {
            define(
                'require exports tslib dojo/i18n!../../../nls/arcgisonline dojo/text!./templates/licenses/UserTypeAppBundle.html dijit/_TemplatedMixin dijit/_WidgetBase ../../dijit/InviteMembers/AppIconWithLabel ../../utils/dom ../../utils/organization ../../utils/icons ../../../sharing/dijit/_LevelAwareMixin ../../../tsutils/declareDecorator'.split(
                    ' '
                ),
                function(c, g, f, b, e, h, d, a, k, n, l, m, p) {
                    b = f.__importDefault(b);
                    e = f.__importDefault(e);
                    h = f.__importDefault(h);
                    d = f.__importDefault(d);
                    a = f.__importDefault(a);
                    k = f.__importDefault(k);
                    n = f.__importDefault(n);
                    l = f.__importDefault(l);
                    m = f.__importDefault(m);
                    p = f.__importDefault(p);
                    return (function() {
                        function c(a, c) {
                            this.i18n = b.default;
                            this.templateString = e.default;
                            this.icons = l.default;
                            this.numberOfColumns = 4;
                        }
                        c.prototype.postCreate = function() {
                            var b = this;
                            this.inherited(arguments);
                            this.level === this.LICENSE_LEVELS.ONE &&
                                k.default.showNode(this._viewOnly);
                            var c = new a.default({
                                app: this.appBundle,
                                portal: this.portal,
                                textCssClasses: 'licenses-card__app-icon font-size-1 avenir-demi',
                            });
                            this._titleContainer.appendChild(c.domNode);
                            c = n.default.transformAppBundleApps(
                                this.appBundle.apps,
                                this.portal.isPortal
                            );
                            c.sort(function(a, b) {
                                return a.title > b.title ? 1 : a.title < b.title ? -1 : 0;
                            });
                            c = c.map(function(c) {
                                return new a.default({
                                    app: c,
                                    portal: b.portal,
                                    textCssClasses: 'licenses-card__app-icon font-size--1',
                                });
                            });
                            k.default.appendChildren(
                                c.map(function(a) {
                                    return a.domNode;
                                }),
                                this._appsContainer
                            );
                        };
                        return (c = f.__decorate(
                            [p.default(d.default, h.default, m.default)],
                            c
                        ));
                    })();
                }
            );
        },
        'arcgisonline/pages/organization/widgets/LicenseExpirationBadge': function() {
            define(
                'require exports tslib dojo/string moment/moment ./ExpirationBadgeBase ../../utils/formatters ../../utils/dom ../../../tsutils/declareDecorator'.split(
                    ' '
                ),
                function(c, g, f, b, e, h, d, a, k) {
                    b = f.__importDefault(b);
                    e = f.__importDefault(e);
                    h = f.__importDefault(h);
                    d = f.__importDefault(d);
                    a = f.__importDefault(a);
                    k = f.__importDefault(k);
                    return (function() {
                        function c(a, b) {}
                        c.prototype._render = function() {
                            if (this.isTemporary)
                                this._expiresBadge.classList.add(
                                    this.DANGER_CLASS
                                ), (this._expiresBadge.innerHTML =
                                    this._warningIcon +
                                    this.i18n.myOrganization.licensesTab
                                    .temporary), this._initTooltip();
                            else if (
                                (this.expiration && 0 < this.expiration) ||
                                (0 === this.total && 0 < this.used)
                            ) {
                                var c = e
                                    .default(e.default(this.expiration))
                                    .diff(new Date(), 'days');
                                this.portal.isPortal ?
                                    this._initTooltip() :
                                    this._expiresBadge.classList.add(
                                        'license-expiration-badge--inactive'
                                    );
                                this.expiration && 0 < this.expiration && 0 < this.total ?
                                    30 >= c ?
                                    (this._expiresBadge.classList.add(
                                            this.DANGER_CLASS
                                        ), 0 <= c ?
                                        (this._expiresBadge.innerHTML =
                                            this._warningIcon +
                                            b.default.substitute(
                                                this.i18n.myOrganization.licensesTab
                                                .expiresDate, { date: d.default.fullDate(this.expiration) }
                                            )) :
                                        ((this._expiresBadge.innerHTML =
                                                this._warningIcon +
                                                this.i18n.myOrganization.licensesTab
                                                .expired), this.portal.isPortal ||
                                            (this._initTooltip(), this._expiresBadge.classList.remove(
                                                'license-expiration-badge--inactive'
                                            )))) :
                                    (this._expiresBadge.textContent = 328822272e5 ===
                                        this.expiration ?
                                        this.i18n.myOrganization.licensesTab.expiresNever :
                                        b.default.substitute(
                                            this.i18n.myOrganization.licensesTab.expiresDate, { date: d.default.fullDate(this.expiration) }
                                        )) :
                                    (this._expiresBadge.classList.add(
                                        this.DANGER_CLASS
                                    ), (this._expiresBadge.innerHTML =
                                        this._warningIcon +
                                        this.i18n.myOrganization.licensesTab.expired));
                                a.default.showNode(this._expiresBadge);
                            } else a.default.hideNode(this._expiresBadge);
                        };
                        return (c = f.__decorate([k.default(h.default)], c));
                    })();
                }
            );
        },
        'arcgisonline/pages/organization/widgets/ExpirationBadgeBase': function() {
            define(
                'require exports tslib dojo/on dojo/text!./templates/ExpirationBadge.html dojo/i18n!../../../nls/arcgisonline dijit/_TemplatedMixin dijit/_WidgetBase ./ExpirationTooltip ../../utils/icons ../../../tsutils/declareDecorator'.split(
                    ' '
                ),
                function(c, g, f, b, e, h, d, a, k, n, l) {
                    b = f.__importDefault(b);
                    e = f.__importDefault(e);
                    h = f.__importDefault(h);
                    d = f.__importDefault(d);
                    a = f.__importDefault(a);
                    k = f.__importDefault(k);
                    n = f.__importDefault(n);
                    l = f.__importDefault(l);
                    return (function() {
                        function c() {
                            this.templateString = e.default;
                            this.i18n = h.default;
                            this.DANGER_CLASS = 'license-expiration-badge--danger';
                            this._warningIcon =
                                n.default.inline['exclamation-mark-triangle']['16'];
                        }
                        c.prototype.postCreate = function() {
                            this.inherited(arguments);
                            this._render();
                            this._addEventListeners();
                        };
                        c.prototype._render = function() {};
                        c.prototype._addEventListeners = function() {
                            var a = this;
                            this._expiresBadge.addEventListener('click', function(b) {
                                b.stopPropagation();
                                a._expirationTooltip.open(a._expiresBadge);
                            });
                        };
                        c.prototype._initTooltip = function() {
                            var a = this;
                            this._expirationTooltip = new k.default({ portal: this.portal, isTemporary: this.isTemporary },
                                this.domNode.querySelector('.js-expiration-tooltip')
                            );
                            this.own(
                                b.default(this._expirationTooltip, 'close', function() {
                                    a._expiresBadge.focus();
                                })
                            );
                        };
                        return (c = f.__decorate([l.default(a.default, d.default)], c));
                    })();
                }
            );
        },
        'arcgisonline/pages/organization/widgets/ExpirationTooltip': function() {
            define(
                'require exports tslib dojo/on dojo/topic dojo/string dojo/Evented dojo/text!./templates/ExpirationTooltip.html dojo/i18n!../../../nls/arcgisonline dijit/TooltipDialog dijit/popup dijit/_TemplatedMixin dijit/_WidgetBase dijit/a11yclick ../../utils/icons ../../utils/keys ../../../tsutils/declareDecorator'.split(
                    ' '
                ),
                function(c, g, f, b, e, h, d, a, k, n, l, m, p, r, u, t, q) {
                    b = f.__importDefault(b);
                    e = f.__importDefault(e);
                    h = f.__importDefault(h);
                    d = f.__importDefault(d);
                    a = f.__importDefault(a);
                    k = f.__importDefault(k);
                    n = f.__importDefault(n);
                    l = f.__importDefault(l);
                    m = f.__importDefault(m);
                    p = f.__importDefault(p);
                    r = f.__importDefault(r);
                    u = f.__importDefault(u);
                    t = f.__importDefault(t);
                    q = f.__importDefault(q);
                    return (function() {
                        function c(b, c) {
                            this.templateString = a.default;
                            this.i18n = k.default;
                            this.icons = u.default;
                            this.isTemporary = !1;
                        }
                        c.prototype.postCreate = function() {
                            this.inherited(arguments);
                            this._render();
                            this._addEventListeners();
                        };
                        c.prototype.destroy = function() {
                            this.inherited(arguments);
                            this._dialog &&
                                (this._closeDialog(), this._dialog.destroy(), (this._dialog = void 0));
                        };
                        c.prototype._render = function() {
                            var a;
                            if (this.portal.isPortal) {
                                var c = (null === (a = this.portal.helpMap) || void 0 === a ?
                                    void 0 :
                                    a.m) || {};
                                a = h.default.substitute(
                                    this.i18n.myOrganization.licensesTab.portalUserTypeRenew, {
                                        linkStart: '\x3ca href\x3d"' +
                                            (this.portal.helpBase + (c['120001586'] || '')) +
                                            '" class\x3d"js-help-link" target\x3d"_blank"\x3e',
                                        linkEnd: '\x3c/a\x3e',
                                    }
                                );
                                this._content.innerHTML = this.isTemporary ?
                                    this.i18n.myOrganization.licensesTab.temporaryDesc :
                                    a;
                                var d = this._content.querySelector('.js-help-link');
                                d &&
                                    this.own(
                                        b.default(d, 'keyup', function(a) {
                                            a.keyCode === t.default.ENTER && d.click();
                                        })
                                    );
                            } else
                                this._content.innerHTML =
                                '\x3cp class\x3d"trailer-half"\x3e' +
                                this.i18n.myOrganization.licensesTab.licenseExpired +
                                '\x3c/p\x3e\x3cp class\x3d"trailer-0"\x3e' +
                                h.default.substitute(
                                    this.i18n.subscriptionStatusDlg.contactCustomerService, {
                                        linkStart: '\x3ca href\x3d"https://www.esri.com/en-us/contact#c\x3dus\x26t\x3d3" target\x3d"_blank"\x3e',
                                        linkEnd: '\x3c/a\x3e',
                                    }
                                ) +
                                '\x3c/p\x3e';
                            this._dialog = new n.default({
                                class: 'popover',
                                content: this.domNode,
                            });
                        };
                        c.prototype._addEventListeners = function() {
                            this.own(
                                r.default(this._closeIcon, this._closeDialog.bind(this)),
                                r.default(this.domNode, function(a) {
                                    a.stopPropagation();
                                }),
                                b.default(
                                    document.body,
                                    'click',
                                    this._closeDialog.bind(this)
                                ),
                                e.default.subscribe(
                                    'expires-tooltip/close',
                                    this._closeDialog.bind(this, !0)
                                )
                            );
                        };
                        c.prototype._closeDialog = function(a) {
                            l.default.close(this._dialog);
                            a || this.emit('close');
                        };
                        c.prototype.open = function(a) {
                            l.default.open({
                                popup: this._dialog,
                                orient: ['below-alt', 'above-alt'],
                                around: a,
                            });
                            this._dialog.focus();
                        };
                        return (c = f.__decorate(
                            [q.default(p.default, m.default, d.default)],
                            c
                        ));
                    })();
                }
            );
        },
        'arcgisonline/pages/utils/keys': function() {
            define(['require', 'exports'], function(c, g) {
                Object.defineProperty(g, '__esModule', { value: !0 });
                g.ESCAPE = 27;
                g.ENTER = 13;
                g.SPACEBAR = 32;
                g.TAB = 9;
                g.UP = 38;
                g.DOWN = 40;
                g.default = {
                    ESCAPE: g.ESCAPE,
                    ENTER: g.ENTER,
                    TAB: g.TAB,
                    UP: g.UP,
                    DOWN: g.DOWN,
                    SPACEBAR: g.SPACEBAR,
                };
            });
        },
        'arcgisonline/pages/organization/widgets/MobileUserTypeOverlay': function() {
            define(
                'require exports tslib calcite-web/js/calcite-web dojo/text!./templates/licenses/MobileUserTypeOverlay.html dojo/i18n!../../../nls/arcgisonline dojo/string dojo/dom-construct dojo/text!./templates/licenses/roleItem.html dijit/_TemplatedMixin dijit/_WidgetBase ../../dijit/Overlay ../../utils/icons ../../utils/dom ../../pageUtil ../../dijit/RoleSummaryDlg ../../dijit/InviteMembers/AppIconWithLabel ./UserTypeName ./AvailableText arcgisonline/tsutils/declareDecorator'.split(
                    ' '
                ),
                function(c, g, f, b, e, h, d, a, k, n, l, m, p, r, u, t, q, v, C, z) {
                    b = f.__importDefault(b);
                    e = f.__importDefault(e);
                    h = f.__importDefault(h);
                    d = f.__importDefault(d);
                    a = f.__importDefault(a);
                    k = f.__importDefault(k);
                    n = f.__importDefault(n);
                    l = f.__importDefault(l);
                    m = f.__importDefault(m);
                    p = f.__importDefault(p);
                    r = f.__importDefault(r);
                    u = f.__importDefault(u);
                    t = f.__importDefault(t);
                    q = f.__importDefault(q);
                    v = f.__importDefault(v);
                    C = f.__importDefault(C);
                    z = f.__importDefault(z);
                    return (function() {
                        function c(a, b) {
                            this.title = '';
                            this.i18n = h.default;
                            this.icons = p.default;
                            this.overlayContents = d.default.substitute(e.default, {
                                i18n: this.i18n,
                                chevronDown: this.icons['chevron-down']['24'],
                            });
                            this.includedApps = [];
                            this.compatibleApps = [];
                            this.compatibleRoles = [];
                            this.showActionBar = !1;
                        }
                        c.prototype.postCreate = function() {
                            this.inherited(arguments);
                            this._render();
                        };
                        c.prototype.open = function() {
                            this.inherited(arguments);
                            b.default.accordion();
                        };
                        c.prototype.close = function() {
                            this.inherited(arguments);
                        };
                        c.prototype._render = function() {
                            this._includedAppsEl = this.domNode.querySelector(
                                '.js-included-apps'
                            );
                            this._compatibleAppsEl = this.domNode.querySelector(
                                '.js-compatible-apps'
                            );
                            this._compatibleRolesEl = this.domNode.querySelector(
                                '.js-compatible-roles'
                            );
                            this.domNode.classList.add('mobile-user-type');
                            this._renderHeader();
                            this._appendAppIcons(this.includedApps, this._includedAppsEl);
                            this._appendAppIcons(
                                this.compatibleApps,
                                this._compatibleAppsEl
                            );
                            this._renderCompatibleRoles();
                        };
                        c.prototype._renderHeader = function() {
                            var b = this.domNode.querySelector('#overlay-title');
                            b.parentElement.removeChild(b);
                            var b = new v.default({
                                    userType: this.userType,
                                    portal: this.portal,
                                }),
                                c = new C.default({
                                    used: this.userType.assigned,
                                    total: this.userType.maxUsers,
                                }),
                                d = a.default.place(
                                    '\x3cdiv class\x3d"flex-1"\x3e\x3c/div\x3e',
                                    this.domNode.querySelector('.overlay-mobile__title'),
                                    'after'
                                );
                            r.default.appendChildren([b.domNode, c.domNode], d);
                        };
                        c.prototype._renderCompatibleRoles = function() {
                            var a = this,
                                b = '',
                                c = p.default.info;
                            this.compatibleRoles.forEach(function(a) {
                                b += d.default.substitute(k.default, {
                                    roleName: a.name,
                                    roleId: a.id,
                                    infoIcon: c['16'],
                                });
                            });
                            this._compatibleRolesEl.innerHTML = b;
                            var e = this.domNode.querySelectorAll('.role-item-info');
                            r.default.forEachNode(e, function(b) {
                                b.addEventListener('click', function() {
                                    var c = a.compatibleRoles.filter(function(a) {
                                            return a.id === b.dataset.roleId;
                                        })[0],
                                        d = u.default.createSpecifiedDialog(t.default, { role: c });
                                    setTimeout(function() {
                                        d.show();
                                    });
                                });
                            });
                        };
                        c.prototype._appendAppIcons = function(a, b) {
                            var c = this,
                                d = [];
                            a.forEach(function(a) {
                                a = new q.default({
                                    app: a,
                                    portal: c.portal,
                                    textCssClasses: 'licenses-card__app-icon',
                                });
                                d.push(a);
                            });
                            r.default.appendChildren(
                                d.map(function(a) {
                                    return a.domNode;
                                }),
                                b
                            );
                        };
                        return (c = f.__decorate(
                            [z.default(l.default, n.default, m.default)],
                            c
                        ));
                    })();
                }
            );
        },
        'arcgisonline/pages/dijit/RoleSummaryDlg': function() {
            define(
                'require exports tslib dojo/text!./RoleSummaryDlg/RoleSummaryDlg.html dojo/i18n!../../nls/arcgisonline dijit/_TemplatedMixin dijit/_WidgetBase dijit/Dialog ./InviteMembers/MobileError ../../sharing/util ../../sharing/dijit/_LevelAwareMixin ../../sharing/dijit/Role ../../tsutils/declareDecorator ../../pages/utils/dom'.split(
                    ' '
                ),
                function(c, g, f, b, e, h, d, a, k, n, l, m, p, r) {
                    b = f.__importDefault(b);
                    e = f.__importDefault(e);
                    h = f.__importDefault(h);
                    d = f.__importDefault(d);
                    a = f.__importDefault(a);
                    k = f.__importDefault(k);
                    n = f.__importDefault(n);
                    l = f.__importDefault(l);
                    m = f.__importDefault(m);
                    p = f.__importDefault(p);
                    r = f.__importDefault(r);
                    return (function() {
                        function c() {
                            this.templateString = b.default;
                            this.i18n = e.default;
                            this._isMobile = 480 >= window.innerWidth;
                            this._coreRoleIds = 'org_admin org_publisher org_user account_admin account_publisher account_user'.split(
                                ' '
                            );
                        }
                        c.prototype.postCreate = function() {
                            this.inherited(arguments);
                            this._isPortal = n.default.isPortal();
                            this._isMobile ?
                                ((this.dialog = new k.default()), this.dialog.domNode.classList.add(
                                    'role-summary-alert'
                                )) :
                                ((this.dialog = new a.default({
                                    title: this.role.name,
                                    style: { width: '315px', maxWidth: '315px', outline: 'none' },
                                })), this.dialog.set({ content: this.domNode }));
                            this._coreRoleIds.push(
                                this.SYSTEM_ROLES.VIEWER,
                                this.SYSTEM_ROLES.DATA_EDITOR
                            );
                            this._render();
                        };
                        c.prototype.show = function() {
                            var a = this;
                            this._isMobile ?
                                this.dialog.show({
                                    title: this.role.name,
                                    description: this._content.innerHTML,
                                    hideActionBar: !0,
                                    isInfo: !0,
                                }) :
                                this.dialog.show().then(function() {
                                    var b = a.domNode.querySelector('.dijitDialogCloseIcon');
                                    b && b.focus();
                                    a.dialog.closeButtonNode.tabIndex = 0;
                                });
                        };
                        c.prototype._render = function() {
                            var a, b = '';
                            if (-1 === this._coreRoleIds.indexOf(this.role.id)) {
                                b = this.role.description;
                                if (
                                    0 <
                                    (null === (a = this.role.privileges) || void 0 === a ?
                                        void 0 :
                                        a.length)
                                ) {
                                    var c = '';
                                    this._summarizeRole().forEach(function(a) {
                                        c += '\x3cli\x3e' + a + '\x3c/li\x3e';
                                    });
                                    this._privilegesList.innerHTML = c;
                                    r.default.showNode(this._privilegesList);
                                    r.default.showNode(this.privilegesTitle);
                                    a = this.role.privileges.some(function(a) {
                                        return -1 < a.indexOf(':admin:');
                                    });
                                    var d = this.role.privileges.some(function(a) {
                                        return -1 < a.indexOf(':publisher:');
                                    });
                                    a
                                        ?
                                        (this._extraInfo.textContent = this.i18n.customRoles.containsAdmin) :
                                        d &&
                                        (this._extraInfo.textContent = this.i18n.customRoles.containsPublisher);
                                } else
                                    this._extraInfo.textContent = this.i18n.customRoles.noneGranted;
                                0 < this._extraInfo.textContent.length &&
                                    r.default.showNode(this._extraInfoContainer);
                            } else {
                                switch (this.role.id) {
                                    case 'org_admin':
                                    case 'account_admin':
                                        b = this._isPortal ?
                                            this.i18n.customRoles.adminDescriptionPortal :
                                            this.i18n.customRoles.adminDescription;
                                        break;
                                    case 'org_publisher':
                                    case 'account_publisher':
                                        b = this.i18n.customRoles.publisherDescription;
                                        break;
                                    case 'org_user':
                                    case 'account_user':
                                        b = this.i18n.customRoles.userDescription;
                                        break;
                                    case this.SYSTEM_ROLES.VIEWER:
                                        b = this._isPortal ?
                                            this.i18n.customRoles.viewerDescriptionPortal :
                                            this.i18n.customRoles.viewerDescription;
                                        break;
                                    case this.SYSTEM_ROLES.DATA_EDITOR:
                                        b = this._isPortal ?
                                            this.i18n.customRoles.viewerPlusEditDescriptionPortal :
                                            this.i18n.customRoles.viewerPlusEditDescription;
                                }
                                r.default.showNode(this._coreRole);
                            }
                            this._description.textContent = b;
                        };
                        c.prototype._summarizeRole = function() {
                            var a = new m.default({ id: this.role.id });
                            a.setPrivileges(this.role.privileges);
                            return a.summarize();
                        };
                        return (c = f.__decorate(
                            [p.default(d.default, h.default, l.default)],
                            c
                        ));
                    })();
                }
            );
        },
        'arcgisonline/pages/dijit/InviteMembers/MobileError': function() {
            define(
                'require exports tslib dojo/Deferred dojo/text!./templates/MobileError.html dojo/i18n!../../../nls/arcgisonline dojo/Evented dijit/a11yclick dijit/_TemplatedMixin dijit/_WidgetBase ../../utils/icons ../../../tsutils/declareDecorator ../../utils/dom'.split(
                    ' '
                ),
                function(c, g, f, b, e, h, d, a, k, n, l, m, p) {
                    b = f.__importDefault(b);
                    e = f.__importDefault(e);
                    h = f.__importDefault(h);
                    d = f.__importDefault(d);
                    a = f.__importDefault(a);
                    k = f.__importDefault(k);
                    n = f.__importDefault(n);
                    l = f.__importDefault(l);
                    m = f.__importDefault(m);
                    p = f.__importDefault(p);
                    return (function() {
                        function c(a) {
                            this.templateString = e.default;
                            this.i18n = h.default;
                            this.icons = l.default;
                            this.description = this.title = '';
                            this.buttonText = this.i18n.common.ok;
                            this.cancelText = this.i18n.common.cancel;
                            this.actionText = '';
                            this.ACTIVE_CLASS = 'invite-members__mobile-error--is-active';
                        }
                        c.prototype.postCreate = function() {
                            this.inherited(arguments);
                            document.body.appendChild(this.domNode);
                            this._addEventListeners();
                        };
                        c.prototype._addEventListeners = function() {
                            this.own(
                                a.default(this._closeButton, this._close.bind(this)),
                                a.default(
                                    this._confirmButton,
                                    this._hideAndTakeAction.bind(this)
                                ),
                                a.default(this._cancelButton, this._cancel.bind(this))
                            );
                        };
                        c.prototype._hideAndTakeAction = function() {
                            this.hide();
                            this._showDfd && this._showDfd.resolve('onOk');
                        };
                        c.prototype._close = function() {
                            this.hide();
                            this._showDfd && this._showDfd.resolve('onClose');
                        };
                        c.prototype._cancel = function() {
                            this.hide();
                            this._showDfd && this._showDfd.resolve('onCancel');
                        };
                        c.prototype.show = function(a) {
                            var c = a.title,
                                c = void 0 === c ? '' : c,
                                d = a.description,
                                d = void 0 === d ? '' : d,
                                e = a.buttonText,
                                e = void 0 === e ? this.i18n.common.ok : e,
                                f = a.cancelText,
                                f = void 0 === f ? this.i18n.common.cancel : f,
                                g = a.isConfirm,
                                g = void 0 === g ? !1 : g,
                                h = a.isInfo,
                                h = void 0 === h ? !1 : h,
                                k = a.isSuccess,
                                k = void 0 === k ? !1 : k,
                                l = a.isRedButton,
                                l = void 0 === l ? !1 : l,
                                m = a.hideActionBar,
                                m = void 0 === m ? !1 : m,
                                n = a.showClose,
                                n = void 0 === n ? !1 : n,
                                r = a.hideConfirm,
                                r = void 0 === r ? !1 : r,
                                u = a.hideCancel,
                                u = void 0 === u ? !1 : u,
                                H = a.hideHeader,
                                H = void 0 === H ? !1 : H;
                            a = a.isBlueCancel;
                            a = void 0 === a ? !1 : a;
                            this.title = c;
                            this._title.textContent = c;
                            this.description = d;
                            this._description.innerHTML = d;
                            this.buttonText = e;
                            this._confirmButton.textContent = e;
                            this._cancelButton.textContent = f;
                            this.domNode.classList[this.title ? 'remove' : 'add'](
                                'mobile-alert--no-title'
                            );
                            this.domNode.classList[h ? 'add' : 'remove'](
                                'mobile-alert--info'
                            );
                            this.domNode.classList[k ? 'add' : 'remove'](
                                'mobile-alert--success'
                            );
                            k || m ?
                                p.default.hideNode(this._actionBar) :
                                p.default.showNode(this._actionBar);
                            this._confirmButton.classList[l ? 'add' : 'remove'](
                                'mobile-alert__btn--red'
                            );
                            g
                                ?
                                (p.default.showNode(this._cancelButton), p.default.hideNode(
                                    this._closeButton
                                )) :
                                (p.default.hideNode(this._cancelButton), p.default.showNode(
                                    this._closeButton
                                ));
                            n && p.default.showNode(this._closeButton);
                            r &&
                                (p.default.hideNode(
                                    this._confirmButton
                                ), this._cancelButton.classList.remove('leader-half'));
                            u && p.default.hideNode(this._cancelButton);
                            H && p.default.hideNode(this._header);
                            this._cancelButton.classList[a ? 'remove' : 'add'](
                                'btn-link-darker-gray'
                            );
                            window.getComputedStyle(this.domNode).opacity;
                            this.domNode.classList.add(this.ACTIVE_CLASS);
                            return (this._showDfd = new b.default());
                        };
                        c.prototype.hide = function() {
                            var a = this;
                            this.domNode.classList.remove(this.ACTIVE_CLASS);
                            setTimeout(function() {
                                a.emit('hide');
                            }, 300);
                        };
                        return (c = f.__decorate(
                            [m.default(n.default, k.default, d.default)],
                            c
                        ));
                    })();
                }
            );
        },
        'arcgisonline/pages/organization/widgets/RoleInfo': function() {
            define(
                'require exports tslib dojo/on dojo/text!./templates/RoleInfo.html dijit/_TemplatedMixin dijit/_WidgetBase arcgisonline/pages/utils/icons arcgisonline/pages/pageUtil arcgisonline/pages/dijit/RoleSummaryDlg arcgisonline/tsutils/declareDecorator'.split(
                    ' '
                ),
                function(c, g, f, b, e, h, d, a, k, n, l) {
                    b = f.__importDefault(b);
                    e = f.__importDefault(e);
                    h = f.__importDefault(h);
                    d = f.__importDefault(d);
                    a = f.__importDefault(a);
                    k = f.__importDefault(k);
                    n = f.__importDefault(n);
                    l = f.__importDefault(l);
                    return (function() {
                        function c(b, c) {
                            this.templateString = e.default;
                            this.icons = a.default;
                        }
                        c.prototype.postCreate = function() {
                            this.inherited(arguments);
                            this.addEventListeners();
                        };
                        c.prototype.addEventListeners = function() {
                            this.own(
                                b.default(
                                    this.infoBtn,
                                    'click',
                                    this.handleInfoClick.bind(this)
                                )
                            );
                        };
                        c.prototype.handleInfoClick = function() {
                            k.default
                                .createSpecifiedDialog(n.default, { role: this.role })
                                .show();
                        };
                        return (c = f.__decorate([l.default(d.default, h.default)], c));
                    })();
                }
            );
        },
        'arcgisonline/pages/dijit/_CheckReadonlyMixin': function() {
            define(
                'require exports tslib dojo/i18n!../../nls/arcgisonline ../pageUtil arcgisonline/sharing/dijit/dialog/GeneralDlg'.split(
                    ' '
                ),
                function(c, g, f, b, e, h) {
                    b = f.__importDefault(b);
                    e = f.__importDefault(e);
                    h = f.__importDefault(h);
                    return (function() {
                        function c() {}
                        c.prototype.checkReadonly = function(a) {
                            var c;
                            a || (a = this.portal);
                            return (null === (c = a) || void 0 === c ? 0 : c.isPortal) &&
                                a.isReadOnly ?
                                (e.default
                                    .createSpecifiedDialog(h.default)
                                    .show({
                                        title: b.default.common.errorTitle,
                                        message: b.default.common.errors.portalInReadOnlyModeMsg,
                                    }), !0) :
                                !1;
                        };
                        c.prototype.memberActionGuard = function(a, b) {
                            return -1 < ['manageItems', 'viewGroups', 'viewProfile'].indexOf(a) ?
                                !1 :
                                this.checkReadonly(b);
                        };
                        return c;
                    })();
                }
            );
        },
        'arcgisonline/sharing/dijit/dialog/ExportDlg': function() {
            define(
                [
                    'dojo',
                    'dijit',
                    'dojox',
                    'dojo/require!dijit/Dialog,dijit/_WidgetBase,dijit/_TemplatedMixin,dijit/_WidgetsInTemplateMixin,dijit/form/Button,dijit/form/TextBox,dijit/layout/BorderContainer,dijit/layout/ContentPane,dijit/form/RadioButton,dojo/data/ItemFileWriteStore,arcgisonline/pages/utils/categories,arcgisonline/sharing/dijit/dialog/GeneralDlg,arcgisonline/sharing/dijit/ComboBox,arcgisonline/sharing/dijit/SaveItem,arcgisonline/sharing/geow/Folder,arcgisonline/sharing/util,esri/Evented',
                ],
                function(c, g, f) {
                    c.provide('arcgisonline.sharing.dijit.dialog.ExportDlg');
                    c.require('dijit.Dialog');
                    c.require('dijit._WidgetBase');
                    c.require('dijit._TemplatedMixin');
                    c.require('dijit._WidgetsInTemplateMixin');
                    c.require('dijit.form.Button');
                    c.require('dijit.form.TextBox');
                    c.require('dijit.layout.BorderContainer');
                    c.require('dijit.layout.ContentPane');
                    c.require('dijit.form.RadioButton');
                    c.require('dojo.data.ItemFileWriteStore');
                    c.require('arcgisonline.pages.utils.categories');
                    c.require('arcgisonline.sharing.dijit.dialog.GeneralDlg');
                    c.require('arcgisonline.sharing.dijit.ComboBox');
                    c.require('arcgisonline.sharing.dijit.SaveItem');
                    c.require('arcgisonline.sharing.geow.Folder');
                    c.require('arcgisonline.sharing.util');
                    c.require('esri.Evented');
                    c.declare(
                        'arcgisonline.sharing.dijit.dialog.ExportDlg', [
                            g._WidgetBase,
                            g._TemplatedMixin,
                            g._WidgetsInTemplateMixin,
                            esri.Evented,
                        ], {
                            widgetsInTemplate: !0,
                            templateString: '\x3cdiv class\x3d"widgetContent"\x3e\r\n  \x3cdiv data-dojo-type\x3d"dijit/Dialog" data-dojo-attach-point\x3d"exportDialog" id\x3d"export-dialog" title\x3d"${i18n.exportDialogTitle}" execute\x3d""\x3e\r\n    \x3cdiv data-dojo-attach-point\x3d"saveItemForm" data-dojo-type\x3d"arcgisonline/sharing/dijit/SaveItem"\x3e\x3c/div\x3e\r\n    \x3cfieldset data-dojo-attach-point\x3d"_featureCollectionDiv" class\x3d"featureCollectionOnly hide"\x3e\r\n        \x3clabel\x3e\x3cinput type\x3d"radio" data-dojo-attach-point\x3d"generalizeChk" data-dojo-type\x3d"dijit/form/RadioButton" data-dojo-props\x3d"checked:false" name\x3d"generalize"/\x3e${i18n.generalize}\x3c/label\x3e\r\n        \x3clabel\x3e\x3cinput type\x3d"radio" data-dojo-type\x3d"dijit/form/RadioButton"  name\x3d"generalize"/\x3e${i18n.keepOrig}\x3c/label\x3e\r\n    \x3c/fieldset\x3e\r\n\r\n  \x3cdiv class\x3d"esriFloatTrailing right"\x3e\r\n    \x3cspan dojoAttachPoint\x3d"exportingLabel" style\x3d"visibility:hidden;"\x3e${i18n.exportingLabel}\x3c/span\x3e\r\n    \x3cdiv class\x3d"cancel" data-dojo-attach-point\x3d"cancelBtn" data-dojo-attach-event\x3d"onClick:onCancel"\r\n         data-dojo-type\x3d"dijit/form/Button" data-dojo-props\x3d"type:\'button\'"\x3e${i18n.cancel}\x3c/div\x3e\r\n    \x3cdiv class\x3d"primary" data-dojo-attach-point\x3d"exportBtn" data-dojo-attach-event\x3d"onClick:onExport"\r\n         data-dojo-type\x3d"dijit/form/Button" data-dojo-props\x3d"type:\'button\'"\x3e${i18n.exportLabel}\x3c/div\x3e\r\n  \x3c/div\x3e\r\n\x3c/div\x3e',
                            util: arcgisonline.sharing.util,
                            folder: arcgisonline.sharing.geow.Folder,
                            item: null,
                            layerId: -1,
                            init: !1,
                            exportType: null,
                            exportResponse: null,
                            checkStatusInterval: null,
                            checkingStatus: !1,
                            statusCheckIntervalTime: 4e3,
                            saveItemForm: null,
                            exportDialog: null,
                            exportBtn: null,
                            cancelBtn: null,
                            i18n: null,
                            statics: {
                                _instance: null,
                                getInstance: function() {
                                    null === this._instance &&
                                        (this._instance = new arcgisonline.sharing.dijit.dialog
                                            .ExportDlg());
                                    return this._instance;
                                },
                            },
                            onDone: function() {},
                            postMixInProperties: function() {
                                this.inherited(arguments);
                                this.i18n = c.i18n.getLocalization(
                                    'arcgisonline',
                                    'arcgisonline'
                                ).common;
                                c.mixin(
                                    this.i18n,
                                    c.i18n.getLocalization('arcgisonline', 'arcgisonline')
                                    .exportDlg
                                );
                                c.mixin(this.i18n, {
                                    generalize: c.i18n.getLocalization(
                                        'arcgisonline',
                                        'arcgisonline'
                                    ).addLayerFromFileDlg.generalize,
                                });
                                c.mixin(this.i18n, {
                                    keepOrig: c.i18n.getLocalization(
                                        'arcgisonline',
                                        'arcgisonline'
                                    ).addLayerFromFileDlg.keepOrig,
                                });
                                this._webMercatorValues = {
                                    3857: 1,
                                    102113: 1,
                                    102100: 1,
                                    900913: 1,
                                };
                            },
                            postCreate: function() {
                                this.inherited(arguments);
                                this.init || (this.init = !0);
                            },
                            startup: function() {
                                this.inherited(arguments);
                                esri.config.defaults.io.proxyUrl = esriGeowConfig.proxyServer;
                                esriGeowConfig.proxyUrl &&
                                    (esri.config.defaults.io.proxyUrl = esriGeowConfig.proxyUrl);
                            },
                            destroy: function() {
                                this._onSaveItemValidateHandle &&
                                    (this._onSaveItemValidateHandle.remove(), (this._onSaveItemValidateHandle = null));
                                this.exportDialog.destroyRecursive();
                                this.exportDialog = null;
                                this.inherited(arguments);
                            },
                            show: function(b, c, f) {
                                this._showDlg(b, c, f);
                            },
                            showShapefile: function(b, c) {
                                this._showDlg(
                                    b,
                                    c,
                                    arcgisonline.sharing.dijit.dialog.ExportDlg.util.shapefileType
                                );
                            },
                            showCSV: function(b, c) {
                                this._showDlg(
                                    b,
                                    c,
                                    arcgisonline.sharing.dijit.dialog.ExportDlg.util.csvType
                                );
                            },
                            showFileGDB: function(b, c) {
                                this._showDlg(
                                    b,
                                    c,
                                    arcgisonline.sharing.dijit.dialog.ExportDlg.util.fileGDB
                                );
                            },
                            showGeoJson: function(b, c) {
                                this._showDlg(
                                    b,
                                    c,
                                    arcgisonline.sharing.dijit.dialog.ExportDlg.util.geoJson
                                );
                            },
                            showFeatureCollection: function(b, c) {
                                this._showDlg(
                                    b,
                                    c,
                                    arcgisonline.sharing.dijit.dialog.ExportDlg.util
                                    .featureCollection
                                );
                            },
                            _showDlg: function(b, e, f) {
                                this.clear();
                                this.item = b;
                                this._setDialogTitle(f);
                                this._setLayerDetails(e);
                                this._initTags();
                                this._initCategories();
                                this.exportDialog.show();
                                this.own(
                                    c.connect(
                                        this.exportDialog,
                                        'onHide',
                                        c.hitch(this, function() {
                                            this.destroy();
                                        })
                                    )
                                );
                            },
                            _initTags: function() {
                                this.saveItemForm.loadTags().then(
                                    c.hitch(this, function() {
                                        this.saveItemForm.set('tags', '');
                                    })
                                );
                            },
                            _initCategories: function() {
                                this.saveItemForm.loadCategories(this.item.categories);
                            },
                            _setDialogTitle: function(b) {
                                this.exportType = b;
                                arcgisonline.sharing.dijit.dialog.ExportDlg.util
                                    .shapefileType === this.exportType ?
                                    this.exportDialog.set(
                                        'title',
                                        this.i18n.exportDialogTitle + ' ' + this.i18n.toShapefile
                                    ) :
                                    arcgisonline.sharing.dijit.dialog.ExportDlg.util.csvType ===
                                    this.exportType ?
                                    this.exportDialog.set(
                                        'title',
                                        this.i18n.exportDialogTitle + ' ' + this.i18n.toCSV
                                    ) :
                                    arcgisonline.sharing.dijit.dialog.ExportDlg.util
                                    .fileGDB === this.exportType ?
                                    this.exportDialog.set(
                                        'title',
                                        this.i18n.exportDialogTitle +
                                        ' ' +
                                        this.i18n.toFileGDB
                                    ) :
                                    arcgisonline.sharing.dijit.dialog.ExportDlg.util
                                    .geoJson === this.exportType ?
                                    this.exportDialog.set(
                                        'title',
                                        this.i18n.exportDialogTitle +
                                        ' ' +
                                        this.i18n.toGeoJson
                                    ) :
                                    arcgisonline.sharing.dijit.dialog.ExportDlg.util
                                    .featureCollection === this.exportType ?
                                    this.exportDialog.set(
                                        'title',
                                        this.i18n.exportDialogTitle +
                                        ' ' +
                                        this.i18n.toFeatureCollection
                                    ) :
                                    arcgisonline.sharing.dijit.dialog.ExportDlg
                                    .util.kmlType === this.exportType ?
                                    this.exportDialog.set(
                                        'title',
                                        this.i18n.exportDialogTitle +
                                        ' ' +
                                        this.i18n.toKML
                                    ) :
                                    arcgisonline.sharing.dijit.dialog
                                    .ExportDlg.util.excelType ===
                                    this.exportType &&
                                    this.exportDialog.set(
                                        'title',
                                        this.i18n.exportDialogTitle +
                                        ' ' +
                                        this.i18n.toExcel
                                    );
                            },
                            _setLayerDetails: function(b) {
                                this._isTableLayer = this._isWebMercator = !1;
                                b && esri._isDefined(b.id) ?
                                    ((this.layerId = b.id), (this._layers = [
                                        b,
                                    ]), this.saveItemForm.set(
                                        'title',
                                        b.name
                                    ), (this._isWebMercator =
                                        b.extent &&
                                        b.extent.spatialReference &&
                                        b.extent.spatialReference.wkid in
                                        this._webMercatorValues), (this._extent = b.extent)) :
                                    b &&
                                    b.length &&
                                    ((this._layers = b), (this._isWebMercator =
                                        b[0].extent &&
                                        b[0].extent.spatialReference &&
                                        b[0].extent.spatialReference.wkid in
                                        this
                                        ._webMercatorValues), (this._isTableLayer = c.every(
                                        b,
                                        function(b) {
                                            return 'Table' === b.type;
                                        }
                                    )), (this._extent = b[0].extent), this.saveItemForm.set(
                                        'title',
                                        1 === b.length ? b[0].name : this.item.title
                                    ));
                                this._isWebMercator &&
                                    !this._isTableLayer &&
                                    this.exportType ===
                                    arcgisonline.sharing.dijit.dialog.ExportDlg.util
                                    .featureCollection &&
                                    (c.removeClass(
                                        this._featureCollectionDiv,
                                        'hide'
                                    ), this.generalizeChk.set('checked', !0));
                            },
                            clear: function() {
                                this.exportDialog.set('title', this.i18n.exportDialogTitle);
                                this.item = null;
                                this.layerId = -1;
                                this.checkStatusInterval = this.exportResponse = this.exportType = null;
                                this.checkingStatus = !1;
                                this.saveItemForm.set('title', '');
                                this.saveItemForm.set('tags', '');
                                this.saveItemForm.set('summary', '');
                                this.saveItemForm.set('requires', ['title', 'tags']);
                                c.style(this.exportingLabel, 'visibility', 'hidden');
                                this.exportBtn.set('disabled', !0);
                                this._onSaveItemValidateHandle = c.subscribe(
                                    'onSaveItemValidate',
                                    c.hitch(this, this.validate)
                                );
                                this.saveItemForm.hideRow('folder');
                                c
                                    .query(
                                        '.select2-container.select2-container-multi',
                                        this.saveItemForm.domNode
                                    )
                                    .style({ minWidth: '334px' });
                                c.addClass(this._featureCollectionDiv, 'hide');
                                this.generalizeChk.set('checked', !1);
                            },
                            hide: function() {
                                return this.exportDialog.hide();
                            },
                            validate: function(b) {
                                b = this.saveItemForm.get('title');
                                var c = this.saveItemForm.get('tags');
                                this.exportBtn.set('disabled', !b || !c);
                            },
                            validates: function() {
                                var b = this.saveItemForm.get('title'),
                                    c = this.saveItemForm.get('tags');
                                return b && c;
                            },
                            setWait: function() {
                                c.query('#export-dialog').style('cursor', 'wait');
                                c.style(this.exportingLabel, 'visibility', 'visible');
                                this.exportBtn.set('disabled', !0);
                            },
                            unsetWait: function() {
                                c.query('#export-dialog').style('cursor', 'default');
                                c.style(this.exportingLabel, 'visibility', 'hidden');
                                this.exportBtn.set('disabled', !1);
                            },
                            exportItem: function() {
                                if (this._moveFailed)
                                    this.updateItem(this._moveFailed.itemId, '/').then(
                                        c.hitch(this, function(a) {
                                            this.unsetWait();
                                            this.onDone(a);
                                        })
                                    );
                                else {
                                    this.setWait();
                                    var b = this.saveItemForm.get('title'),
                                        e = this.generalizeChk.get('checked'),
                                        f = {
                                            maxAllowableOffset: 1,
                                            quantizationParameters: { tolerance: 1 },
                                        },
                                        d =
                                        arcgisonline.sharing.dijit.dialog.ExportDlg.util
                                        .shapefileType;
                                    arcgisonline.sharing.dijit.dialog.ExportDlg.util.csvType ==
                                        this.exportType ?
                                        (d =
                                            arcgisonline.sharing.dijit.dialog.ExportDlg.util
                                            .csvType) :
                                        arcgisonline.sharing.dijit.dialog.ExportDlg.util
                                        .fileGDB == this.exportType ?
                                        (d =
                                            arcgisonline.sharing.dijit.dialog.ExportDlg.util
                                            .fileGDB) :
                                        arcgisonline.sharing.dijit.dialog.ExportDlg.util
                                        .geoJson == this.exportType ?
                                        (d =
                                            arcgisonline.sharing.dijit.dialog.ExportDlg.util
                                            .geoJson) :
                                        arcgisonline.sharing.dijit.dialog.ExportDlg.util
                                        .featureCollection == this.exportType ?
                                        (d =
                                            arcgisonline.sharing.dijit.dialog.ExportDlg
                                            .util.featureCollection) :
                                        arcgisonline.sharing.dijit.dialog.ExportDlg
                                        .util.kmlType == this.exportType ?
                                        (d = 'kml') :
                                        arcgisonline.sharing.dijit.dialog
                                        .ExportDlg.util.excelType ==
                                        this.exportType && (d = 'excel');
                                    var a = c.map(
                                            this._layers,
                                            c.hitch(this, function(a) {
                                                return e ? c.mixin({ id: a.id }, f) : { id: a.id };
                                            })
                                        ),
                                        b = {
                                            itemId: this.item.id,
                                            title: b,
                                            exportFormat: d,
                                            exportParameters: -1 < this.layerId ?
                                                { layers: a } :
                                                e ? f : null,
                                        };
                                    this.item.isOwner &&
                                        this.item.isDataView &&
                                        (b.exportParameters = c.mixin(b.exportParameters || {}, {
                                            enforceFieldVisibility: !0,
                                        }));
                                    b.exportParameters &&
                                        (b.exportParameters = JSON.stringify(b.exportParameters));
                                    d = this.util.getUser();
                                    this.util
                                        .request({
                                            url: esriGeowConfig.restBaseUrl +
                                                'content/users/' +
                                                d.email +
                                                '/export',
                                            content: b,
                                        }, { usePost: !0 })
                                        .then(
                                            c.hitch(this, this.handleExport),
                                            c.hitch(this, this.displayError)
                                        );
                                }
                            },
                            handleExport: function(b) {
                                !b || b.code || b.message ?
                                    this.displayError(b) :
                                    ((this.exportResponse = b), (this.checkStatusInterval = setInterval(
                                        c.hitch(this, this.checkStatus),
                                        this.statusCheckIntervalTime
                                    )));
                            },
                            checkStatus: function() {
                                if (this.exportResponse && !this.checkingStatus) {
                                    var b = { jobId: this.exportResponse.jobId, jobType: 'export' },
                                        e = this.util.getUser(),
                                        e =
                                        esriGeowConfig.restBaseUrl +
                                        'content/users/' +
                                        e.email +
                                        '/items/' +
                                        this.exportResponse.exportItemId +
                                        '/status';
                                    this.checkingStatus = !0;
                                    this.util.request({ url: e, content: b }).then(
                                        c.hitch(this, function(b) {
                                            this.handleStatusCheck(b);
                                            this.checkingStatus = !1;
                                        }),
                                        c.hitch(this, function(b) {
                                            this.displayError(b);
                                            this.checkingStatus = !1;
                                        })
                                    );
                                }
                            },
                            handleStatusCheck: function(b) {
                                b.status &&
                                    ('completed' === b.status ?
                                        (clearInterval(
                                            this.checkStatusInterval
                                        ), this.updateExportedItemDetails(b)) :
                                        'failed' === b.status &&
                                        (clearInterval(
                                            this.checkStatusInterval
                                        ), this.updateExportedItemDetailsAndFail(b)));
                            },
                            updateExportedItemDetailsAndFail: function(b) {
                                this.getItemDetails(this.exportResponse.exportItemId).then(
                                    c.hitch(this, function(e) {
                                        var f = [],
                                            d = (esriGeowConfig.self.hasCategorySchema &&
                                                this.saveItemForm.get('categories')) || [];
                                        0 < d.length &&
                                            f.push(
                                                arcgisonline.pages.utils.categories.setItemCategories(
                                                    [e.id],
                                                    d
                                                )
                                            );
                                        f.push(this.updateItem(e.id, e.ownerFolder));
                                        c.promise.all(f).then(
                                            c.hitch(this, function() {
                                                this.unsetWait();
                                                this.displayFailure(b.statusMessage);
                                            })
                                        );
                                    })
                                );
                            },
                            updateExportedItemDetails: function(b) {
                                this.getItemDetails(b.itemId).then(
                                    c.hitch(this, function(e) {
                                        var f = [],
                                            d = (esriGeowConfig.self.hasCategorySchema &&
                                                this.saveItemForm.get('categories')) || [];
                                        0 < d.length &&
                                            f.push(
                                                arcgisonline.pages.utils.categories.setItemCategories(
                                                    [e.id],
                                                    d
                                                )
                                            );
                                        f.push(this.updateItem(e.id, e.ownerFolder));
                                        c.promise.all(f).then(
                                            c.hitch(this, function() {
                                                this.unsetWait();
                                                this.onDone(b);
                                            })
                                        );
                                    })
                                );
                            },
                            moveItem: function(b, e) {
                                var f = new c.Deferred(),
                                    d = this.util.getUser(),
                                    d =
                                    esriGeowConfig.restBaseUrl +
                                    'content/users/' +
                                    d.email +
                                    '/items/' +
                                    b +
                                    '/move',
                                    a = { folder: e || '/' };
                                this._moveFailed = null;
                                e && '/' !== e && '' !== e ?
                                    this.util
                                    .request({ url: d, content: a }, { usePost: !0 })
                                    .then(
                                        c.hitch(this, function(a) {
                                            f.resolve(a);
                                        }),
                                        c.hitch(this, function(a) {
                                            if (a && 'CONT_0011' === a.messageCode) {
                                                var d = this.saveItemForm.get('title'),
                                                    d = c.string.substitute(
                                                        this.i18n.duplicateFound, { type: this.exportType, title: d }
                                                    );
                                                arcgisonline.sharing.dijit.dialog.GeneralDlg.prototype.statics
                                                    .getInstance()
                                                    .show({
                                                        title: this.i18n.errorTitle,
                                                        message: d,
                                                    });
                                                this._moveFailed = c.mixin(a, {
                                                    itemId: b,
                                                    folderId: e,
                                                });
                                                this.unsetWait();
                                            }
                                        })
                                    ) :
                                    f.resolve({ itemId: b });
                                return f;
                            },
                            updateItem: function(b, e) {
                                var f = this.saveItemForm.get('title'),
                                    d = this.saveItemForm.get('tags'),
                                    a = this.saveItemForm.get('summary'),
                                    g = this.saveItemForm.get('folderId'),
                                    n =
                                    esriGeowConfig.restBaseUrl +
                                    'content/items/' +
                                    this.exportResponse.exportItemId +
                                    '/data',
                                    l = this.util.getUser(),
                                    l = esriGeowConfig.restBaseUrl + 'content/users/' + l.email;
                                e && 0 < e.length && (l += '/' + e);
                                l += '/items/' + this.exportResponse.exportItemId + '/update';
                                e = { title: f, tags: d, snippet: a };
                                this._moveFailed || (e = c.mixin(e, { folderId: g }));
                                arcgisonline.sharing.dijit.dialog.ExportDlg.util.kmlType ==
                                    this.exportType && (e.url = n);
                                return this.util
                                    .request({ url: l, content: e }, { usePost: !0 })
                                    .then(c.hitch(this, 'moveItem', b, g));
                            },
                            getItemDetails: function(b) {
                                return this.util.request({
                                    url: esriGeowConfig.restBaseUrl + 'content/items/' + b,
                                });
                            },
                            goToItem: function(b) {
                                this.hide().then(
                                    c.hitch(this, function() {
                                        this.unsetWait();
                                        window.location =
                                            esriGeowConfig.baseUrl + 'item.html?id\x3d' + b;
                                    })
                                );
                            },
                            checkTitle: function() {
                                var b = this.saveItemForm.get('title'),
                                    c = this.saveItemForm.get('folderId'),
                                    f =
                                    arcgisonline.sharing.dijit.dialog.ExportDlg.util[
                                        this.exportType
                                    ] || this.exportType,
                                    d = this.util.getUser().username;
                                return this.util.request({
                                    url: esriGeowConfig.restBaseUrl + 'search',
                                    content: {
                                        q: 'title:"' +
                                            b +
                                            '" AND type:"' +
                                            f +
                                            '" AND owner:"' +
                                            d +
                                            '" AND ownerfolder:"' +
                                            (c && '/' !== c ? c : 'root') +
                                            '"',
                                    },
                                });
                            },
                            displayFailure: function(b) {
                                var e;
                                if (b)
                                    try {
                                        e = c.json.parse(b);
                                    } catch (d) {
                                        e = b;
                                    }
                                var f = arcgisonline.sharing.dijit.dialog.GeneralDlg.prototype.statics.getInstance();
                                f.onOkClick = c.hitch(
                                    this,
                                    function(b) {
                                        b.hide();
                                        this.onCancel();
                                    },
                                    f
                                );
                                e.message && (b = e.message);
                                f.show({ title: this.i18n.errorTitle, message: b });
                            },
                            displayError: function(b) {
                                if (b) {
                                    var e = arcgisonline.sharing.dijit.dialog.GeneralDlg.prototype.statics.getInstance();
                                    e.onOkClick = c.hitch(
                                        this,
                                        function(b) {
                                            b.hide();
                                            this.onCancel();
                                        },
                                        e
                                    );
                                    b.code && b.message ?
                                        e.show({ title: this.i18n.errorTitle, message: b.message }) :
                                        e.show({ title: this.i18n.errorTitle, message: b });
                                }
                            },
                            onChooseTags: function() {
                                arcgisonline.sharing.dijit.dialog.TagsDlg.prototype.statics
                                    .getInstance()
                                    .show();
                            },
                            onExport: function() {
                                this.validates() &&
                                    this.checkTitle().then(
                                        c.hitch(this, function(b) {
                                            0 < b.total ?
                                                ((b = this.saveItemForm.get(
                                                        'title'
                                                    )), (b = c.string.substitute(
                                                        this.i18n.duplicateFound, {
                                                            type: arcgisonline.sharing.dijit.dialog.ExportDlg
                                                                .util[this.exportType] || this.exportType,
                                                            title: b,
                                                        }
                                                    )), arcgisonline.sharing.dijit.dialog.GeneralDlg.prototype.statics
                                                    .getInstance()
                                                    .show({ title: this.i18n.errorTitle, message: b })) :
                                                this.exportItem();
                                        })
                                    );
                            },
                            onCancel: function(b) {
                                b && b.preventDefault();
                                this.hide();
                                this.destroy();
                            },
                        }
                    );
                    arcgisonline.sharing.dijit.dialog.ExportDlg.util = {
                        shapefileType: 'Shapefile',
                        csvType: 'CSV',
                        fileGDB: 'File Geodatabase',
                        geoJson: 'GeoJson',
                        featureCollection: 'Feature Collection',
                        kmlType: 'KML',
                        excelType: 'Excel',
                        CSV: 'CSV Collection',
                        KML: 'KML Collection',
                        Excel: 'Microsoft Excel',
                        requiredBorder: '1px dotted orangered',
                        normalBorder: '1px solid #bbb',
                    };
                }
            );
        },
        'arcgisonline/sharing/dijit/SaveItem': function() {
            define(
                'require exports tslib ../../esriGeowConfig ../../pages/pageUtil ../../pages/utils/arrays ../../pages/utils/dom ../../pages/dijit/CategoryPicker ../util ../geow/Folder ../../tsutils/declareDecorator dijit/_TemplatedMixin dijit/_WidgetBase dijit/_WidgetsInTemplateMixin dojo/aspect dojo/cookie dojo/Deferred dojo/i18n!../../nls/arcgisonline dojo/on dojo/query dojo/topic dojo/_base/lang dojo/data/ItemFileWriteStore dojo/text!./templates/SaveItem.html'.split(
                    ' '
                ),
                function(
                    c,
                    g,
                    f,
                    b,
                    e,
                    h,
                    d,
                    a,
                    k,
                    n,
                    l,
                    m,
                    p,
                    r,
                    u,
                    t,
                    q,
                    v,
                    C,
                    z,
                    y,
                    x,
                    w,
                    A
                ) {
                    b = f.__importDefault(b);
                    e = f.__importDefault(e);
                    h = f.__importDefault(h);
                    d = f.__importDefault(d);
                    a = f.__importDefault(a);
                    k = f.__importDefault(k);
                    n = f.__importDefault(n);
                    l = f.__importDefault(l);
                    m = f.__importDefault(m);
                    p = f.__importDefault(p);
                    r = f.__importDefault(r);
                    u = f.__importDefault(u);
                    t = f.__importDefault(t);
                    q = f.__importDefault(q);
                    v = f.__importDefault(v);
                    C = f.__importDefault(C);
                    z = f.__importDefault(z);
                    y = f.__importDefault(y);
                    x = f.__importDefault(x);
                    w = f.__importDefault(w);
                    return (function() {
                        function c() {
                            this.declaredClass = 'arcgisonline.sharing.dijit.SaveItem';
                            this.widgetsInTemplate = !0;
                            this.templateString = A;
                            this.baseClass = 'esriAGOSaveItemForm';
                            this.init = !1;
                            this.folders = {};
                        }
                        c.prototype.postMixInProperties = function() {
                            this.i18n = x.default.mixin(
                                v.default.common,
                                v.default.saveItem
                            );
                        };
                        c.prototype.postCreate = function() {
                            this.inherited(arguments);
                            this.init || (this._getFolders(), (this.init = !0));
                        };
                        c.prototype.startup = function() {
                            this.inherited(arguments);
                            this._loadConnections();
                        };
                        c.prototype.hideRow = function(a) {
                            z.default('.save-item-' + a + '-row').forEach(function(a) {
                                d.default.hideNode(a);
                            });
                        };
                        c.prototype.loadTags = function(a) {
                            var b = this,
                                c = k.default.getUser();
                            a && (c = a);
                            return k.default.loadUserTags(c.username).then(function(a) {
                                var c = b.saveItemTags.domNode,
                                    d = b._validate.bind(b);
                                b.saveItemTags.set('knownTags', a);
                                b.own(
                                    C.default(c, 'blur', d),
                                    e.default.registerKeystrokeHandler(c, d),
                                    u.default.after(b.saveItemTags, 'validate', d)
                                );
                            });
                        };
                        c.prototype.loadCategories = function(c) {
                            var e = this,
                                f = new q.default(),
                                g = z.default('.categories-container', this.domNode);
                            b.default.self.hasCategorySchema ?
                                k.default
                                .request({
                                    url: b.default.restBaseUrl +
                                        'portals/self/categorySchema',
                                })
                                .then(
                                    function(b) {
                                        e._categories = new a.default({ categories: c || [], schema: b.categorySchema },
                                            e.saveItemCategories
                                        );
                                        e._categories.startup();
                                        d.default.showNodes(g);
                                        f.resolve();
                                    },
                                    function() {
                                        d.default.hideNodes(g);
                                        f.resolve();
                                    }
                                ) :
                                (d.default.hideNodes(g), f.resolve());
                            return f;
                        };
                        c.prototype._loadConnections = function() {
                            var a = this._validate.bind(this);
                            this.own(
                                C.default(this.saveItemTitle, 'change', a),
                                C.default(this.saveItemSummary, 'change', a),
                                e.default.registerKeystrokeHandler(this.saveItemTitle, a),
                                e.default.registerKeystrokeHandler(this.saveItemSummary, a)
                            );
                        };
                        c.prototype._validate = function() {
                            if (!this._beingDestroyed) {
                                var a = !0,
                                    b = this.saveItemTitle.get('value'),
                                    c = this.saveItemTags.get('tags'),
                                    d = this.saveItemSummary.get('value');
                                null === this.requires ?
                                    (a = !!(b && c && d)) :
                                    (h.default.includes(this.requires, 'title') &&
                                        (a = a && !!b), h.default.includes(
                                            this.requires,
                                            'tags'
                                        ) && (a = a && 0 !== c.length), h.default.includes(
                                            this.requires,
                                            'summary'
                                        ) && (a = a && !!d));
                                y.default.publish('onSaveItemValidate', [a]);
                            }
                        };
                        c.prototype._getFolders = function() {
                            var a = this,
                                b = k.default.getUser();
                            if (null !== b) {
                                var c = new w.default({
                                    url: null,
                                    data: { identifier: 'name', items: [] },
                                });
                                c.newItem({ name: b.email, id: '' });
                                this.saveItemFolder.set('store', c);
                                this.saveItemFolder.set('value', b.email);
                                n.default.getFolders(
                                    function(b) {
                                        var d = null;
                                        if (t.default('ESRI_Content')) {
                                            var e = k.default.getCookie('ESRI_Content');
                                            e.folderId && (d = e.folderId);
                                        }
                                        a.foldersJson = b.folders;
                                        b.folders.forEach(function(b, e) {
                                            c.newItem({ name: b.title, id: b.id });
                                            a.folders['id' + b.id] = b.title.replace(/\"/g, '\\"');
                                            d === b.id &&
                                                (a.saveItemFolder.set(
                                                    'value',
                                                    b.title
                                                ), (a.folderId = d), (a.folderName = b.title));
                                        });
                                        c.save({});
                                    },
                                    function(a) {}
                                );
                            }
                        };
                        c.prototype._onFolderChange = function(a) {
                            var b = this;
                            this.saveItemFolder.get('store').fetch({
                                onComplete: function(c) {
                                    c.forEach(function(c) {
                                        c.name[0] === a &&
                                            ((b.folderId = c.id[0]), (b.folderName = c.name[0]));
                                    });
                                },
                            });
                        };
                        c.prototype._setTitleAttr = function(a) {
                            this.saveItemTitle.set('value', a);
                        };
                        c.prototype._getTitleAttr = function() {
                            return this.saveItemTitle.get('value');
                        };
                        c.prototype._setTagsAttr = function(a) {
                            this.saveItemTags.set('tags', a);
                        };
                        c.prototype._getTagsAttr = function() {
                            return this.saveItemTags.get('tags');
                        };
                        c.prototype._setCategoriesAttr = function(a) {
                            var b = this;
                            a &&
                                a.forEach(function(a) {
                                    b._categories.addCategory(a);
                                });
                        };
                        c.prototype._getCategoriesAttr = function() {
                            return this._categories.getCategories(!0);
                        };
                        c.prototype._setSummaryAttr = function(a) {
                            this.saveItemSummary.set('value', a);
                        };
                        c.prototype._getSummaryAttr = function() {
                            return this.saveItemSummary.get('value');
                        };
                        c.prototype._setFolderAttr = function(a) {
                            var b = this;
                            this.saveItemFolder.get('store').fetch({
                                onComplete: function(c) {
                                    c.forEach(function(c) {
                                        c.name[0] === a &&
                                            ((b.folderId = c.id[0]), (b.folderName =
                                                c.name[0]), b.saveItemFolder.set(
                                                'value',
                                                b.folderName
                                            ));
                                    });
                                },
                            });
                        };
                        c.prototype._getFolderAttr = function() {
                            return this.folderName;
                        };
                        c.prototype._setFolderIdAttr = function(a) {
                            var b = this;
                            this.saveItemFolder.get('store').fetch({
                                onComplete: function(c) {
                                    c.forEach(function(c) {
                                        c.id[0] === a &&
                                            ((b.folderId = c.id[0]), (b.folderName =
                                                c.name[0]), b.saveItemFolder.set('value', c.name[0]));
                                    });
                                },
                            });
                        };
                        c.prototype._getFolderIdAttr = function() {
                            return this.folderId;
                        };
                        c.prototype._setRequiresAttr = function(a) {
                            this.requires = a ? a : null;
                        };
                        c.prototype._setTitlePlaceHolderAttr = function(a) {
                            this.saveItemTitle.set('placeHolder', a);
                        };
                        c.prototype._setTagsPlaceHolderAttr = function(a) {
                            this.saveItemTitle.set('placeHolder', a);
                        };
                        c.prototype._setSummaryPlaceHolderAttr = function(a) {
                            this.saveItemSummary.set('placeHolder', a);
                        };
                        return (c = f.__decorate(
                            [l.default(p.default, m.default, r.default)],
                            c
                        ));
                    })();
                }
            );
        },
        'arcgisonline/sharing/dijit/dialog/InvitationsDlg': function() {
            define(
                'require esri/declare esri/Evented esri/lang dojo/_base/lang dojo/_base/array dojo/dom-construct dojo/on dojo/query dojo/string dojo/topic dojo/mouse dijit/a11yclick dojo/promise/all dojo/date/locale dojo/store/Memory dijit/Tooltip dijit/Dialog dijit/form/Button dijit/_WidgetBase dijit/_TemplatedMixin dijit/_WidgetsInTemplateMixin ../../util ../../../pages/pageUtil ../../../pages/utils/formatters ../../../pages/utils/icons ../Grid ./ConfirmDialog ./GeneralDlg dojo/i18n!../../../nls/arcgisonline dojo/text!./templates/InvitationsDlg.html dojo/text!./templates/InvitationsDlgGroup.html'.split(
                    ' '
                ),
                function(
                    c,
                    g,
                    f,
                    b,
                    e,
                    h,
                    d,
                    a,
                    k,
                    n,
                    l,
                    m,
                    p,
                    r,
                    u,
                    t,
                    q,
                    v,
                    C,
                    z,
                    y,
                    x,
                    w,
                    A,
                    E,
                    B,
                    D,
                    H,
                    G,
                    F,
                    K,
                    L
                ) {
                    var Q = g(
                        'arcgisonline.sharing.dijit.dialog.InvitationsDlg', [z, y, x, f], {
                            basePath: c.toUrl('arcgisonline/sharing/dijit/dialog'),
                            baseClass: 'esriInvitationsDlg',
                            widgetsInTemplate: !0,
                            templateString: K,
                            invitations: null,
                            groupsUser: null,
                            postMixInProperties: function() {
                                this.inherited(arguments);
                                this.i18n = e.mixin({}, F.common);
                                e.mixin(this.i18n, F.invitationsDlg);
                                e.mixin(this.i18n, F.invitationsGrid);
                            },
                            postCreate: function() {
                                this.loadConnections();
                            },
                            show: function(a, b) {
                                this.clearStore();
                                b && (b.username || b.email) && (this.groupsUser = b);
                                this.invitations = a;
                                this.getGroupInfos();
                                this._dialog.show();
                            },
                            update: function(a) {
                                this.clearStore();
                                this.invitations = a;
                                this.getGroupInfos();
                                this._dialog.show();
                            },
                            getGroupInfos: function() {
                                var a = w.getUser(),
                                    b = [],
                                    c;
                                if (null !== a) {
                                    c = this.groupsUser && this.groupsUser.username ?
                                        this.groupsUser.username :
                                        this.groupsUser && this.groupsUser.email ?
                                        this.groupsUser.email :
                                        a.email;
                                    for (a = 0; a < this.invitations.length; a++)
                                        b.push(
                                            w.request({
                                                url: esriGeowConfig.restBaseUrl +
                                                    'community/users/' +
                                                    c +
                                                    '/invitations/' +
                                                    this.invitations[a].groupId,
                                            })
                                        );
                                    r(b).then(
                                        function(a) {
                                            h.forEach(
                                                a,
                                                function(a, b) {
                                                    this.invitations[b].fromUsername =
                                                        a.fromUsername.username;
                                                    this.invitations[b].fromUserFullname =
                                                        a.fromUsername.fullname;
                                                    this.invitations[b].groupTitle = a.group.title;
                                                    this.invitations[b].groupOwner = a.group.owner;
                                                    this.invitations[b].groupIsPrivate =
                                                        'private' === a.group.access;
                                                    this.invitations[b].groupAccess = a.group.access;
                                                    this.invitations[b].groupDescription =
                                                        a.group.description;
                                                    this.invitations[b].groupThumbnail =
                                                        a.group.thumbnail;
                                                    this.invitations[b].leavingDisallowed =
                                                        a.group.leavingDisallowed;
                                                    this.groupsUser && (this.invitations[b].asUser = c);
                                                }.bind(this)
                                            );
                                            var b = this._invitationsGrid._grid.store;
                                            h.forEach(
                                                this.invitations,
                                                function(a) {
                                                    b.put(a);
                                                }.bind(this)
                                            );
                                            this.refresh();
                                        }.bind(this)
                                    );
                                }
                            },
                            loadConnections: function() {
                                this.own(
                                    k('.jevent').on('click', function(a) {
                                        a && a instanceof Event && a.preventDefault();
                                    }),
                                    a(
                                        this._closeBtn,
                                        'click',
                                        function() {
                                            this._dialog.hide();
                                        }.bind(this)
                                    ),
                                    l.subscribe(
                                        'onInvitationAccept',
                                        this.onInvitationAccept.bind(this)
                                    ),
                                    l.subscribe(
                                        'onInvitationDecline',
                                        this.onInvitationDecline.bind(this)
                                    )
                                );
                            },
                            createGrid: function() {
                                this._invitationsGrid = new D({
                                        id: 'invitationsGrid',
                                        columns: this.getInvitationGridColumns(),
                                        noDataMessage: this.i18n.noGroupInvites,
                                        showLoadingMessage: !1,
                                        showHeader: !1,
                                        showFooter: !1,
                                        selectionMode: 'none',
                                        rowsPerPage: 5,
                                        className: 'invitations-grid',
                                        store: new t({
                                            idProperty: 'id',
                                            label: 'groupTitle',
                                            data: [],
                                        }),
                                        sort: [{ attribute: 'received', descending: !1 }],
                                    },
                                    this._invitationsGridContainer
                                );
                                this._invitationsGrid.startup();
                            },
                            clearStore: function() {
                                this._invitationsGrid || this.createGrid();
                                var a =
                                    (this._invitationsGrid &&
                                        this._invitationsGrid._grid &&
                                        this._invitationsGrid._grid.store) ||
                                    void 0;
                                a &&
                                    h.forEach(e.clone(a.query()), function(b) {
                                        a.remove(b.id);
                                    });
                            },
                            getInvitationGridColumns: function() {
                                return {
                                    groupTitle: {
                                        label: this.i18n.groupName,
                                        sortable: !1,
                                        renderCell: function(a) {
                                            var b = !1;
                                            this.groupsUser &&
                                                (this.groupsUser.privileges &&
                                                    -1 <
                                                    this.groupsUser.privileges.indexOf(
                                                        'portal:admin:viewGroups'
                                                    ) ?
                                                    (b = !0) :
                                                    this.groupsUser.privileges &&
                                                    -1 <
                                                    this.groupsUser.privileges.indexOf(
                                                        'portal:user:viewOrgGroups'
                                                    ) &&
                                                    'private' !== a.groupAccess ?
                                                    (b = !0) :
                                                    'public' === a.groupAccess && (b = !0));
                                            var c = a.groupThumbnail ?
                                                esriGeowConfig.restBaseUrl +
                                                'community/groups/' +
                                                a.groupId +
                                                '/info/' +
                                                a.groupThumbnail +
                                                '?token\x3d' +
                                                w.getToken() :
                                                '',
                                                e = u.format(new Date(a.received), {
                                                    selector: 'date',
                                                    formatLength: 'long',
                                                }),
                                                e = n.substitute(
                                                    F.GroupWidget.invitedEventDescription, { fullName: a.fromUserFullname, fullDate: e }
                                                ),
                                                b = {
                                                    i18n: F,
                                                    icons: B,
                                                    id: a.groupId,
                                                    title: a.groupTitle,
                                                    thumbnail: a.groupThumbnail,
                                                    thumbnailUrl: c,
                                                    notificationSummary: e,
                                                    fillColor: '#' +
                                                        a.groupId.substr(a.groupId.length - 6),
                                                    useLetter: a.groupTitle.charAt(0) &&
                                                        a.groupTitle.charAt(0).match(/^\w+$/),
                                                    isPrivate: !b,
                                                },
                                                b = d.toDom(
                                                    n.substitute(L, b, null, {
                                                        hide: E.hide,
                                                        show: E.show,
                                                        firstChar: E.firstChar,
                                                        stripHTML: E.stripHTML,
                                                    })
                                                ),
                                                c = k('.js-accept-invitation', b).shift(),
                                                e = k('.js-decline-invitation', b).shift(),
                                                f = a.asUser ? a.asUser : null,
                                                g = a.leavingDisallowed ?
                                                this.confirmLeavingDisallowed.bind(this, a, f) :
                                                this.acceptInvitation.bind(this, a, f);
                                            a = this.declineInvitation.bind(this, a, f);
                                            this.own(p(c, g), p(e, a));
                                            return b;
                                        }.bind(this),
                                    },
                                };
                            },
                            confirmLeavingDisallowed: function(a, b) {
                                var c = F.invitationsDlg.leavingDisabled,
                                    d = A.createSpecifiedDialog(H, {
                                        class: 'general-dialog',
                                        title: F.invitationsDlg.joinGroup,
                                        buttonOkLabel: F.invitationsDlg.joinGroup,
                                        style: { height: 'auto' },
                                    });
                                d.setContent(c);
                                d.show().then(
                                    function(c) {
                                        'onOk' === c && (this.acceptInvitation(a, b), d.hide());
                                    }.bind(this)
                                );
                            },
                            acceptInvitation: function(a, b) {
                                var c = w.getUser(),
                                    d = this._invitationsGrid._grid.store,
                                    e = a.groupId;
                                c &&
                                    w
                                    .request({
                                        url: esriGeowConfig.restBaseUrl +
                                            'community/users/' +
                                            (b ? b : c.email) +
                                            '/invitations/' +
                                            e +
                                            '/accept',
                                        content: {},
                                    }, { usePost: !0 })
                                    .then(
                                        function(b) {
                                            d.remove(a.id);
                                            l.publish('onInvitationAccept', {});
                                        }.bind(this),
                                        function(a) {
                                            a = w.getUser();
                                            A.createSpecifiedDialog(G).show({
                                                title: this.i18n.errorTitle,
                                                message: a && a.orgId ?
                                                    this.i18n.acceptFailure :
                                                    this.i18n.acceptFailurePublic,
                                            });
                                        }.bind(this)
                                    );
                            },
                            declineInvitation: function(a, b) {
                                var c = w.getUser(),
                                    d = a.groupId,
                                    e = this._invitationsGrid._grid.store;
                                c &&
                                    w
                                    .request({
                                        url: esriGeowConfig.restBaseUrl +
                                            'community/users/' +
                                            (b ? b : c.email) +
                                            '/invitations/' +
                                            d +
                                            '/decline',
                                    }, { usePost: !0 })
                                    .then(
                                        function() {
                                            e.remove(a.id);
                                            l.publish('onInvitationDecline', {});
                                        }.bind(this)
                                    );
                            },
                            onInvitationAccept: function() {
                                0 === this._invitationsGrid._grid.store.query().length ?
                                    this.hide() :
                                    this.refresh();
                            },
                            onInvitationDecline: function() {
                                0 === this._invitationsGrid._grid.store.query().length ?
                                    this.hide() :
                                    this.refresh();
                            },
                            hide: function() {
                                this._dialog.hide();
                            },
                            refresh: function() {
                                if (
                                    this._invitationsGrid._grid &&
                                    this._invitationsGrid._grid._started
                                ) {
                                    var b = this._invitationsGrid._grid._currentPage || 1,
                                        c = this._invitationsGrid._grid.store ?
                                        this._invitationsGrid._grid.store.query().length :
                                        0;
                                    a.once(
                                        this._invitationsGrid._grid,
                                        'dgrid-refresh-complete',
                                        function(a) {
                                            a.grid._currentPage !== b && 0 < c && a.grid.gotoPage(b);
                                        }
                                    );
                                    this._invitationsGrid._grid.resize();
                                    this._invitationsGrid._grid.refresh();
                                }
                            },
                        }
                    );
                    Q.prototype.statics = {
                        getInstance: function() {
                            this._instance || (this._instance = new Q());
                            return this._instance;
                        },
                    };
                    return Q;
                }
            );
        },
        'arcgisonline/sharing/dijit/Grid': function() {
            define(
                'dojo/_base/declare dojo/_base/lang dojo/string dojo/_base/array dojo/date/locale dojo/on dojo/dom esri/lang dojo/aspect dijit/_WidgetBase dojo/_base/window dijit/TooltipDialog dijit/popup dijit/_TemplatedMixin dijit/_WidgetsInTemplateMixin dijit/form/DropDownButton dijit/DropDownMenu dijit/MenuItem dgrid/Grid dgrid/extensions/Pagination dgrid/extensions/DijitRegistry dgrid/OnDemandGrid dgrid/extensions/ColumnResizer dgrid/Keyboard ./_RefreshMixin ./Rating dojo/query dojo/dom-class dojo/dom-style dojo/dom-geometry dojo/dom-construct dojo/when dojo/store/Memory dgrid/Selection dgrid/selector dojo/store/Observable put-selector/put dgrid/util/mouse dgrid/util/touch arcgisonline/sharing/util ../../pages/utils/keys arcgisonline/sharing/geow/Content dojo/i18n!arcgisonline/nls/arcgisonline'.split(
                    ' '
                ),
                function(
                    c,
                    g,
                    f,
                    b,
                    e,
                    h,
                    d,
                    a,
                    k,
                    n,
                    l,
                    m,
                    p,
                    r,
                    u,
                    t,
                    q,
                    v,
                    C,
                    z,
                    y,
                    x,
                    w,
                    A,
                    E,
                    B,
                    D,
                    H,
                    G,
                    F,
                    K,
                    L,
                    Q,
                    O,
                    P,
                    J,
                    I,
                    N,
                    M,
                    R,
                    Y,
                    Z,
                    U
                ) {
                    esri.i18nBundle = U;
                    return c('arcgisonline.sharing.dijit.Grid', [n], {
                        postMixInProperties: function() {
                            this.inherited(arguments);
                            this._util = R;
                            this._content = Z;
                            this._supportedViews = ['gallery', 'details', 'table'];
                            this._favorites = {};
                            this._portalUser = this._util.getUser();
                            this._galleryTemplate =
                                this._galleryTemplate ||
                                "\x3cdiv style\x3d'opacity:0;' class\x3d'grid-item gallery-view'\x3e${item:_formatThumbnail}\x3ch5\x3e${item:_formatItemTitle}\x3c/h5\x3e${item:_formatItemTypeIcon}\x3c/div\x3e";
                            this._detailsTemplate =
                                this._detailsTemplate ||
                                '\x3cdiv style\x3d\'opacity:0;\' class\x3d\'grid-item detail-view\'\x3e${item:_formatThumbnail}\x3ch5\x3e${item:_formatItemTitle}\x3c/h5\x3e\x3cdiv class\x3d"rating-system"\x3e\x3cdiv data-dojo-type\x3d\'arcgisonline/sharing/dijit/Rating\' data-dojo-props\x3d\'numStars:5,value:${item.avgRating},disabled:true\'\x3e\x3c/div\x3e\x26nbsp;\x3cspan\x3e(${item.numRatings})\x3c/span\x3e\x3c/div\x3e${item:_formatItemTypeIcon}\x3cp class\x3d"grid-item-type"\x3e${item:_formatType}\x3c/p\x3e\x3cp class\x3d"grid-item-desc"\x3e${item.snippet}\x3c/p\x3e${item:_formatPremiumContentIcon}\x3cspan class\x3d"openItem" id\x3d"openItem"\x3e\x3c/span\x3e\x3ca href\x3d"item.html?id\x3d${item.id}" class\x3d"calcite btn small primary details-button"\x3e${i18n.gallery.details}\x3c/a\x3e\x3c/div\x3e';
                            this._itemPopupTemplate =
                                this._itemPopupTemplate ||
                                '\x3cdiv class\x3d"grid-item-hover"\x3e\x3ch5\x3e${item:_formatItemTitle}\x3c/h5\x3e\x3cspan id\x3d\'openItem\'\x3e\x3c/span\x3e\x3ca href\x3d"item.html?id\x3d${item.id}" class\x3d"calcite btn small primary details-button"\x3e${i18n.details}\x3c/a\x3e\x3cp class\x3d"item-hover-type"\x3e${item:_formatItemTypeIcon}${item:_formatType} by\x26nbsp;${item.owner:_formatOwnerLink}\x3c/p\x3e\x3cp class\x3d"item-hover-desc"\x3e${item.snippet}\x3c/p\x3e${item:_formatPremiumContentIcon}\x3cdiv class\x3d"rating-system"\x3e\x3cdiv data-dojo-type\x3d\'arcgisonline/sharing/dijit/Rating\' data-dojo-props\x3d\'numStars:5,value:${item.avgRating},disabled:true\'\x3e\x3c/div\x3e\x26nbsp;\x3cspan\x3e(${item.numRatings})\x3c/span\x3e\x3c/div\x3e\x3c/div\x3e';
                            this._renderers = g.mixin(this._renderers || {}, {
                                gallery: g.hitch(this, function(a) {
                                    a.snippet = a.snippet || '';
                                    var b = I('div'),
                                        d = new(c([n, r, u], {
                                            templateString: f.substitute(
                                                this._galleryTemplate, { item: a, i18n: U.gallery },
                                                null,
                                                this
                                            ),
                                        }))();
                                    a.widget = d;
                                    b.appendChild(d.domNode);
                                    return b;
                                }),
                                details: g.hitch(this, function(a) {
                                    a.snippet = a.snippet || '';
                                    var b = I('div'),
                                        d = new(c([n, r, u], {
                                            templateString: f.substitute(
                                                this._detailsTemplate, { item: a, i18n: U },
                                                null,
                                                this
                                            ),
                                        }))(),
                                        e = new t({
                                                label: U.gallery.open,
                                                className: 'btn calcite primary',
                                                dropDown: this._getOpenInMenu(a),
                                            },
                                            D('.openItem', b)[0]
                                        );
                                    a.widget = d;
                                    b.appendChild(d.domNode);
                                    D('.openItem', b).replaceWith(e.domNode);
                                    0 === e.dropDown.getChildren().length &&
                                        e.set('disabled', !0);
                                    return b;
                                }),
                                table: function() {
                                    return I(
                                        'div',
                                        C.prototype.renderRow.apply(this, arguments)
                                    );
                                },
                            });
                        },
                        buildRendering: function() {
                            this.inherited(arguments);
                            var a = c([C, y, z, w, O, E]),
                                b = this.columns || {
                                    title: { label: 'title' },
                                    type: { label: 'type' },
                                    modified: { label: 'last modified' },
                                    access: { label: 'sharing' },
                                };
                            this._view = this.view || 'table';
                            this._query = this.query;
                            this._sort = this.sort || [{ attribute: 'title', descending: !1 }];
                            this._queryOptions = this.queryOptions || { sort: this.sort };
                            this._store = this.store || new Q({ data: [] });
                            this._rowsPerPage = this.rowsPerPage || 9;
                            this._pagingLinks = this.pagingLinks ? this.pagingLinks : 3;
                            this._showHeader = this.showHeader || !1;
                            this._selectionMode = this.selectionMode || 'extended';
                            this._useTouchScroll = this.useTouchScroll || !1;
                            this._grid = new a({
                                    columns: b,
                                    renderRow: this._renderers[this._view],
                                    noDataMessage: this.noDataMessage || '',
                                    showHeader: this._showHeader,
                                    store: this._store,
                                    query: this._query,
                                    showLoadingMessage: !1,
                                    firstLastArrows: this._pagingLinks,
                                    previousNextArrows: this._pagingLinks,
                                    rowsPerPage: this._rowsPerPage,
                                    pagingLinks: this._pagingLinks,
                                    allowSelectAll: !0,
                                    selectionMode: this._selectionMode,
                                    sort: this._sort,
                                },
                                this.domNode
                            );
                            this._grid.startup();
                        },
                        postCreate: function() {
                            this.inherited(arguments);
                            this.own(
                                this._grid.on(
                                    'refresh',
                                    g.hitch(this, function() {
                                        this._grid.showFooter =
                                            this._grid._total > this._grid.rowsPerPage;
                                        this._onGridRefresh();
                                    })
                                ),
                                k.before(
                                    this._grid,
                                    'removeRow',
                                    g.hitch(this, function(a) {
                                        a &&
                                            ((a = this._grid.row(a)), (a = (a.data || a).widget) &&
                                                a.destroyRecursive());
                                    })
                                ),
                                this._grid.on(
                                    '.fav-icon a:click',
                                    g.hitch(this, function(a) {
                                        a.preventDefault();
                                        var b = this._grid.row(a),
                                            c = a.target.parentNode.parentNode.parentNode,
                                            d = H.contains(a.target.parentNode, 'fav-off');
                                        a = this._content[d ? 'addToFavorites' : 'removeFromFavorites'](b.data)
                                            .then(
                                                g.hitch(this, function() {
                                                    this._favorites[b.data.id].id = d ? b.data.id : !1;
                                                })
                                            );
                                        D('.fav-on', c).style({ display: d ? '' : 'none' });
                                        D('.fav-off', c).style({ display: d ? 'none' : '' });
                                        setTimeout(
                                            g.hitch(this, function() {
                                                D('.fav-on', c).style({ width: d ? '200px' : '24px' });
                                                D('.fav-off', c).style({ width: d ? '24px' : '200px' });
                                                setTimeout(
                                                    g.hitch(this, function() {
                                                        D('.fav-on, .fav-off').style({ width: '24px' });
                                                    }),
                                                    2500
                                                );
                                            }),
                                            50
                                        );
                                        a.then(g.hitch(this, function() {}));
                                    })
                                ),
                                this._grid.on(
                                    '.fav-icon a:mouseout',
                                    g.hitch(this, function(a) {
                                        G.set(a.target.parentNode, { width: '24px' });
                                    })
                                )
                            );
                            !esri.isTouchEnabled ||
                                ('gallery' !== this._view && 'details' !== this._view) ?
                                ('gallery' !== this._view && 'details' !== this._view) ||
                                this.own(
                                    this._grid.on(
                                        N.enterRow,
                                        g.hitch(this, function(a) {
                                            if (
                                                a.relatedTarget &&
                                                !1 === H.contains(a.relatedTarget, 'dijitMenu') &&
                                                !1 === H.contains(a.relatedTarget, 'dijitReset')
                                            ) {
                                                var b = this._grid.row(a),
                                                    c = D('img', b.element)[0];
                                                clearTimeout(this._showPopupTimeout);
                                                c &&
                                                    (this._showPopupTimeout = setTimeout(
                                                        g.hitch(this, function() {
                                                            this._portalUser ?
                                                                this._isFavorite(b.data.id).then(
                                                                    g.hitch(this, function(a) {
                                                                        this._showPopup(
                                                                            b.data,
                                                                            c.parentNode
                                                                        );
                                                                    })
                                                                ) :
                                                                this._showPopup(b.data, c);
                                                        }),
                                                        400
                                                    ));
                                            }
                                        })
                                    ),
                                    this._grid.on(
                                        N.leaveRow,
                                        g.hitch(this, function(a) {
                                            a.relatedTarget &&
                                                !1 ===
                                                H.contains(
                                                    a.relatedTarget,
                                                    'dijitTooltipDialog'
                                                ) &&
                                                !1 ===
                                                H.contains(
                                                    a.relatedTarget,
                                                    'dijitTooltipConnector'
                                                ) &&
                                                (clearTimeout(
                                                    this._showPopupTimeout
                                                ), clearTimeout(
                                                    this._closePopupTimeout
                                                ), (this._closePopupTimeout = setTimeout(
                                                    g.hitch(this, function() {
                                                        D('.fav-on, .fav-off', this.domNode)
                                                            .style('display', 'none')
                                                            .style('width', '24px');
                                                        this._closePopup();
                                                    }),
                                                    10
                                                )));
                                        })
                                    )
                                ) :
                                this.own(
                                    this._grid.on(
                                        M.selector('.dgrid-content .dgrid-row', M.tap),
                                        g.hitch(this, function(a) {
                                            a.preventDefault();
                                            var b = this._grid.row(a);
                                            this._portalUser ?
                                                this._isFavorite(b.data.id).then(
                                                    g.hitch(this, function(a) {
                                                        this._showPopup(
                                                            b.data,
                                                            D('img', b.element)[0].parentNode
                                                        );
                                                    })
                                                ) :
                                                this._showPopup(b.data, D('img', b.element)[0]);
                                        })
                                    ),
                                    this._grid.on(
                                        '.dgrid-row:click',
                                        g.hitch(this, function(a) {
                                            a.preventDefault();
                                            var b = this._grid.row(a);
                                            this._portalUser ?
                                                this._isFavorite(b.data.id).then(
                                                    g.hitch(this, function(a) {
                                                        this._showPopup(
                                                            b.data,
                                                            D('img', b.element)[0].parentNode
                                                        );
                                                    })
                                                ) :
                                                this._showPopup(b.data, D('img', b.element)[0]);
                                        })
                                    )
                                );
                        },
                        _onGridRefresh: function(a) {
                            this.emit('onRefresh', { currentPage: this._grid._currentPage });
                            this._pagingLinks &&
                                (D('.dgrid-navigation', this._grid.domNode)[
                                    this._grid._total <= this._grid.rowsPerPage ?
                                    'addClass' :
                                    'removeClass'
                                ]('hide'), D('.dgrid-pagination', this._grid.domNode)[
                                    0 === this._grid._total ? 'addClass' : 'removeClass'
                                ]('hide'));
                        },
                        _getGridAttr: function() {
                            return this._grid;
                        },
                        _showPopup: function(a, b) {
                            'details' === this._view ?
                                this._portalUser &&
                                this._isFavorite(a.id).then(
                                    g.hitch(this, function(a) {
                                        D('.fav-on', b.parentNode).style(
                                            'display',
                                            a.id ? '' : 'none'
                                        );
                                        D('.fav-off', b.parentNode).style(
                                            'display',
                                            a.id ? 'none' : ''
                                        );
                                    })
                                ) :
                                'gallery' === this._view &&
                                a.id &&
                                a.id !== this._popupId &&
                                (this._portalUser &&
                                    this._isFavorite(a.id).then(
                                        g.hitch(this, function(a) {
                                            D('.fav-on', b.parentNode).style(
                                                'display',
                                                a.id ? '' : 'none'
                                            );
                                            D('.fav-off', b.parentNode).style(
                                                'display',
                                                a.id ? 'none' : ''
                                            );
                                        })
                                    ), this._closePopup(), (this._popupId =
                                        a.id), (this._tooltip = new m({
                                        onMouseLeave: g.hitch(this, '_closePopup'),
                                        content: new(c([n, r, u], {
                                            templateString: f.substitute(
                                                this._itemPopupTemplate, { item: a, i18n: U.gallery },
                                                null,
                                                this
                                            ),
                                        }))(),
                                    })), p.open({
                                        popup: this._tooltip,
                                        around: b,
                                        orient: ['after-centered', 'before-centered'],
                                    }), (this._popupButton = new t({
                                        label: U.gallery.open,
                                        className: 'calcite btn small primary',
                                        dropDown: this._getOpenInMenu(a),
                                    })), D('#openItem').replaceWith(
                                        this._popupButton.domNode
                                    ), 0 === this._popupButton.dropDown.getChildren().length &&
                                    this._popupButton.set('disabled', !0));
                        },
                        _closePopup: function(a) {
                            (a &&
                                a.relatedTarget &&
                                (!0 === H.contains(a.relatedTarget, 'dijitBackgroundIframe') ||
                                    !0 === H.contains(a.relatedTarget, 'dijitMenu') ||
                                    !0 === H.contains(a.relatedTarget, 'dijitReset'))) ||
                            !this._tooltip ||
                                (p.close(this._tooltip), this._popupConnect &&
                                    this._popupConnect.remove(), this._popupButton &&
                                    this._popupButton.destroyRecursive(), this._tooltip.destroyRecursive(), (this._popupId = this._tooltip = null));
                        },
                        _isFavorite: function(a) {
                            return L(
                                this._favorites[a] ||
                                this._searchItems(
                                    '(group:"' +
                                    this._portalUser.favGroupId +
                                    '" AND id:"' +
                                    a +
                                    '")'
                                ).then(
                                    g.hitch(this, function(b) {
                                        this._favorites[a] = b.results[0] || { id: !1 };
                                        return this._favorites[a];
                                    })
                                )
                            );
                        },
                        _searchItems: function(a) {
                            return this._util.request({
                                url: esriGeowConfig.restBaseUrl + 'search',
                                content: { q: a, f: 'json' },
                            });
                        },
                        refresh: function() {
                            this._grid &&
                                (this._grid.set('query', this._query, this._queryOptions), D(
                                    '.dgrid-row',
                                    this._grid.domNode
                                ).attr('tabindex', '0'), this.own(
                                    h(
                                        this._grid.domNode.querySelector('.dgrid-content'),
                                        'keyup',
                                        function(a) {
                                            var b = a.target;
                                            b.classList.contains('dgrid-row') &&
                                                a.keyCode === Y.ENTER &&
                                                ('single' === this._grid.selectionMode &&
                                                    this._grid.clearSelection(), this._grid.select(b));
                                        }.bind(this)
                                    )
                                ));
                        },
                        gotoPage: function(a) {
                            this._grid.query = this._query;
                            this._grid.queryOptions = this._queryOptions;
                            this._grid._sort = this._queryOptions.sort;
                            this._grid.gotoPage(a);
                        },
                        _formatItemTitle: function(a) {
                            return a.title || a.name || '';
                        },
                        _formatType: function(a) {
                            return (
                                this._content.changeTypename({ type: a.type, typeKeywords: a.typeKeywords }, !1) || a.type
                            );
                        },
                        _formatLargeThumbnail: function(a) {
                            return a ?
                                "\x3cimg class\x3d'grid-item-thumb' alt\x3d'' src\x3d'" +
                                a +
                                "'\x3e" :
                                "\x3cimg class\x3d'grid-item-thumb' alt\x3d'' src\x3d'" +
                                this._util.getStaticImagesUrl() +
                                "/desktopapp.png'\x3e";
                        },
                        _getDefaultThumbnail: function(a) {
                            var b = this._util.getStaticImagesUrl();
                            return 'web mapping application' == a ?
                                b + '/webapp.png' :
                                'mobile application' == a ?
                                b + '/mobileapp.png' :
                                'workforce project' === a ?
                                b + '/workforceproject.png' :
                                'hub initiative' === a ?
                                b + '/hubinitiative.png' :
                                'hub page' === a ?
                                b + '/hubpage.png' :
                                'hub site application' === a ?
                                b + '/hubsite.png' :
                                'dashboard' === a ?
                                b + '/opsdashboard.png' :
                                'geoprocessing service' === a &&
                                esriGeowConfig.self &&
                                esriGeowConfig.self.isPortal ?
                                b + '/webtool.png' :
                                'web scene' === a ||
                                'scene service' === a ?
                                b + '/scene.png' :
                                'ortho mapping project' === a ?
                                b +
                                '/orthomappingproject.png' :
                                'ortho mapping template' ===
                                a ?
                                b +
                                '/orthomappingtemplate.png' :
                                b + '/desktopapp.png';
                        },
                        _formatThumbnail: function(a) {
                            var b =
                                a.thumbnailUrl ||
                                this._getDefaultThumbnail(a.type && a.type.toLowerCase()),
                                c = this._util.getHomePageGalleryLinkInfo(a),
                                d = -1 <
                                dojo.indexOf(a.typeKeywords, 'Web AppBuilder for ArcGIS'),
                                d =
                                (esriGeowConfig.self && esriGeowConfig.self.isPortal && d) ||
                                'Application' === a.type ||
                                ('Web Mapping Application' === a.type && !d) ||
                                'Mobile Application' === a.type ||
                                'Document Link' === a.type,
                                e =
                                'Application' === a.type ||
                                'Web Mapping Application' === a.type ||
                                'Mobile Application' === a.type ||
                                'Document Link' === a.type ||
                                'CityEngine Web Scene' === a.type ||
                                'Dashboard' === a.type;
                            a =
                                '\x3ca href\x3d"' +
                                (esri.isTouchEnabled ?
                                    '#' :
                                    d ?
                                    a.url || 'item.html?id\x3d' + a.id :
                                    (c && c.href && c.href.replace(/"/g, "'")) ||
                                    'item.html?id\x3d' + a.id) +
                                '" target\x3d"' +
                                (e ? '_blank' : '') +
                                '"\x3e\x3cimg class\x3d"grid-item-thumb" alt\x3d"" src\x3d"' +
                                b +
                                '" /\x3e\x3c/a\x3e';
                            b =
                                esriGeowConfig.userRole && esriGeowConfig.userRole.isCustom();
                            b = !b || (b && esriGeowConfig.userRole.canShareItemToGroup());
                            c =
                                '\x3cdiv class\x3d"gallery-img"\x3e\x3cdiv class\x3d"fav-icon"\x3e\x3ca href\x3d"#"\x3e\x3cdiv class\x3d"fav-on" style\x3d"display:none;"\x3e\x3cdiv class\x3d"star-on"\x3e\x3c/div\x3e\x3cp id\x3d"addString"\x3e' +
                                U.gallery.addFavorite +
                                '\x3c/p\x3e\x3c/div\x3e\x3c/a\x3e\x3ca href\x3d"#"\x3e\x3cdiv class\x3d"fav-off" style\x3d"display:none;"\x3e\x3cdiv class\x3d"star-off"\x3e\x3c/div\x3e\x3cp id\x3d"remString"\x3e' +
                                U.gallery.removeFavorite +
                                '\x3c/p\x3e\x3c/div\x3e\x3c/a\x3e\x3c/div\x3e' +
                                a +
                                '\x3c/div\x3e';
                            return b && this._portalUser ? c : a;
                        },
                        _formatItemTypeIcon: function(a) {
                            return (
                                "\x3cimg class\x3d'grid-item-icon' alt\x3d'' src\x3d'" +
                                this._content._getItemIconUrl(a) +
                                "'\x3e"
                            );
                        },
                        _formatPremiumContentIcon: function(a) {
                            var c = a.isPremiumContent,
                                d = a.getTypeInfo(),
                                e = esriGeowConfig.self && esriGeowConfig.self.isPortal ?
                                'portal' :
                                '';
                            a = -1 < b.indexOf(a.typeKeywords, 'Requires Credits');
                            return c ?
                                '\x3cp class\x3d"grid-item-type" title\x3d"' +
                                (a ?
                                    U.common['premiumcontentcreditstitle' + e] :
                                    U.common['premiumcontenttitle' + e]) +
                                "\"\x3e\x3cimg class\x3d'grid-premium-icon' alt\x3d'' src\x3d'" +
                                d.premiumIconUrl +
                                "'\x3e" +
                                (a ?
                                    U.common.premiumcontent :
                                    U.common.subscriptioncontent) +
                                '\x3c/p\x3e' :
                                '';
                        },
                        _formatDate: function(a) {
                            !1 === a instanceof Date && (a = new Date(a));
                            return a ?
                                e.format(a, { selector: 'date', datePattern: 'MMMM yyy' }) :
                                '';
                        },
                        _formatOwnerLink: function(a) {
                            return (
                                '\x3ca href\x3d"user.html?user\x3d' +
                                a +
                                '"\x3e' +
                                a +
                                '\x3c/a\x3e'
                            );
                        },
                        _getOpenInMenu: function(a) {
                            a = this._util.getItemOpenLinkObjects(a);
                            var c, d;
                            c = new q({ autoFocus: !0, _destroyOnRemove: !0, showTitle: !1 });
                            b.forEach(a, function(a) {
                                d = new v({
                                    label: a.label,
                                    onClick: function() {
                                        a.onClick();
                                    },
                                });
                                c.addChild(d);
                            });
                            c.startup();
                            return c;
                        },
                        _setViewAttr: function(a) {
                            this._view = a = -1 === b.indexOf(this._supportedViews, a) ?
                                this._view :
                                a;
                            this._grid &&
                                ((this._grid.renderRow = this._renderers[a]), I(
                                    this._grid.domNode,
                                    '!table!gallery!details.' + a
                                ), this._grid.set('showHeader', 'table' === this._view));
                        },
                        _setStoreAttr: function(a) {
                            this._store = a;
                        },
                        _setQueryAttr: function(a, b) {
                            this._query = a || this._query;
                            this._queryOptions = b || this._queryOptions;
                        },
                        _setItemsAttr: function(a) {
                            ((this._store =
                                    this._store ||
                                    new J(new Q({ data: a, identifier: 'id', label: 'id' }))), this
                                ._store.setData) ?
                            this._store.setData(a): (this._store = new J(new Q({ data: a })));
                            this.set('store', this._store);
                            this.set('view', this._view);
                        },
                    });
                }
            );
        },
        'arcgisonline/sharing/dijit/Rating': function() {
            define(
                'dojo/_base/declare dojox/form/Rating dojo/dom-attr dojo/dom-construct dojo/string ../../pages/utils/icons dojo/i18n!../../nls/arcgisonline'.split(
                    ' '
                ),
                function(c, g, f, b, e, h, d) {
                    return c([g], {
                        constructor: function(a) {
                            c.safeMixin(this, a);
                        },
                        postCreate: function() {
                            this.inherited(arguments);
                            var a = e.substitute(d.common.ratingMsg2, {
                                stars: this.params.value,
                            });
                            f.set(this.domNode, 'aria-label', a);
                            f.set(this.domNode, 'tabindex', 0);
                            [].slice
                                .call(this.domNode.querySelectorAll('.dojoxRatingInput'))
                                .forEach(function(a) {
                                    b.place(h['star-f']['16'], a, 'after');
                                    b.place(h.star['16'], a, 'after');
                                });
                        },
                        _onMouse: function() {
                            this.get('disabled') || this.inherited(arguments);
                        },
                        onStarClick: function() {
                            this.get('disabled') || this.inherited(arguments);
                        },
                        _setValueAttr: function(a) {
                            a = Math.round(a);
                            this.inherited(arguments);
                        },
                    });
                }
            );
        },
        'dojox/form/Rating': function() {
            define(
                'dojo/_base/declare dojo/_base/lang dojo/dom-attr dojo/dom-class dojo/mouse dojo/on dojo/string dojo/query dijit/form/_FormWidget'.split(
                    ' '
                ),
                function(c, g, f, b, e, h, d, a, k) {
                    return c('dojox.form.Rating', k, {
                        templateString: null,
                        numStars: 3,
                        value: 0,
                        buildRendering: function(a) {
                            for (
                                var b =
                                    '\x3clabel class\x3d"dojoxRatingStar dijitInline ${hidden}"\x3e\x3cspan class\x3d"dojoxRatingLabel"\x3e${value} stars\x3c/span\x3e\x3cinput type\x3d"radio" name\x3d"rating-' +
                                    Math.random().toString(36).substring(2) +
                                    '" value\x3d"${value}" dojoAttachPoint\x3d"focusNode" class\x3d"dojoxRatingInput"\x3e\x3c/label\x3e',
                                    c =
                                    '\x3cdiv dojoAttachPoint\x3d"domNode" class\x3d"dojoxRating dijitInline"\x3e\x3cdiv data-dojo-attach-point\x3d"list"\x3e' +
                                    d.substitute(b, { value: 0, hidden: 'dojoxRatingHidden' }) +
                                    '${stars}\x3c/div\x3e\x3c/div\x3e',
                                    e = '',
                                    f = 0; f < this.numStars; f++
                            )
                                e += d.substitute(b, { value: f + 1, hidden: '' });
                            this.templateString = d.substitute(c, { stars: e });
                            this.inherited(arguments);
                        },
                        postCreate: function() {
                            this.inherited(arguments);
                            this._renderStars(this.value);
                            this.own(
                                h(
                                    this.list,
                                    h.selector('.dojoxRatingStar', 'mouseover'),
                                    g.hitch(this, '_onMouse')
                                ),
                                h(
                                    this.list,
                                    h.selector('.dojoxRatingStar', 'click'),
                                    g.hitch(this, '_onClick')
                                ),
                                h(
                                    this.list,
                                    h.selector('.dojoxRatingInput', 'change'),
                                    g.hitch(this, 'onStarChange')
                                ),
                                h(
                                    this.list,
                                    e.leave,
                                    g.hitch(this, function() {
                                        this._renderStars(this.value);
                                    })
                                )
                            );
                        },
                        _onMouse: function(a) {
                            var b = +f.get(a.target.querySelector('input'), 'value');
                            this._renderStars(b, !0);
                            this.onMouseOver(a, b);
                        },
                        _onClick: function(a) {
                            if ('LABEL' === a.target.tagName) {
                                var b = +f.get(a.target.querySelector('input'), 'value');
                                a.target.value = b;
                                this.onStarClick(a, b);
                                b == this.value && (a.preventDefault(), this.onStarChange(a));
                            }
                        },
                        _renderStars: function(c, d) {
                            a('.dojoxRatingStar', this.domNode).forEach(function(a, e) {
                                e > c ?
                                    (b.remove(a, 'dojoxRatingStarHover'), b.remove(
                                        a,
                                        'dojoxRatingStarChecked'
                                    )) :
                                    (b.remove(
                                        a,
                                        'dojoxRatingStar' + (d ? 'Checked' : 'Hover')
                                    ), b.add(
                                        a,
                                        'dojoxRatingStar' + (d ? 'Hover' : 'Checked')
                                    ));
                            });
                        },
                        onStarChange: function(a) {
                            a = +f.get(a.target, 'value');
                            this.setAttribute('value', a == this.value ? 0 : a);
                            this._renderStars(this.value);
                            this.onChange(this.value);
                        },
                        onStarClick: function(a, b) {},
                        onMouseOver: function() {},
                        setAttribute: function(a, b) {
                            this.set(a, b);
                        },
                        _setValueAttr: function(b) {
                            this._set('value', b);
                            this._renderStars(b);
                            var c = a('input[type\x3dradio]', this.domNode)[b];
                            c && (c.checked = !0);
                            this.onChange(b);
                        },
                    });
                }
            );
        },
        'arcgisonline/sharing/dijit/dialog/InviteAccountUsersDlg': function() {
            define(
                [
                    'dojo',
                    'dijit',
                    'dojox',
                    'dojo/require!dijit/Dialog,dijit/_Widget,dijit/_Templated,dijit/Tooltip,dijit/form/CheckBox,dijit/form/SimpleTextarea,dijit/form/TextBox,arcgisonline/sharing/geow/Account,arcgisonline/sharing/dijit/dialog/GeneralDlg,arcgisonline/sharing/util',
                ],
                function(c, g, f) {
                    c.provide('arcgisonline.sharing.dijit.dialog.InviteAccountUsersDlg');
                    c.require('dijit.Dialog');
                    c.require('dijit._Widget');
                    c.require('dijit._Templated');
                    c.require('dijit.Tooltip');
                    c.require('dijit.form.CheckBox');
                    c.require('dijit.form.SimpleTextarea');
                    c.require('dijit.form.TextBox');
                    c.require('arcgisonline.sharing.geow.Account');
                    c.require('arcgisonline.sharing.dijit.dialog.GeneralDlg');
                    c.require('arcgisonline.sharing.util');
                    c.declare(
                        'arcgisonline.sharing.dijit.dialog.InviteAccountUsersDlg', [g._Widget, g._Templated], {
                            widgetsInTemplate: !0,
                            templateString: '\x3cdiv class\x3d"widgetContent" \x3e\r\n    \x3cdiv dojotype\x3d"dijit.Dialog" id\x3d"invite-account-users-dialog" title\x3d"Invite Users" execute\x3d""\x3e\r\n      \x3cdiv id\x3d"invite-account-users-search"\x3e\r\n        \x3cspan id\x3d"invite-account-users-search-label"\x3e\x3c/span\x3e\r\n      \x3c/div\x3e\r\n      \x3cbr /\x3e\r\n      \x3ctable cellpadding\x3d"0" cellspacing\x3d"0"\x3e\r\n        \x3ctr\x3e\r\n          \x3ctd valign\x3d"top"\x3e\x3clabel\x3eTo:\x3c/label\x3e\x3c/td\x3e\r\n          \x3ctd valign\x3d"top"\x3e\r\n            \x3cdiv id\x3d"invite-account-users-email" dojoType\x3d"dijit.form.TextBox" type\x3d"textbox" dojoAttachPoint\x3d"_email" dojoAttachEvent\x3d"onFocus:onEmailFocus,onBlur:onEmailBlur" style\x3d"width:400px;"\x3e\x3c/div\x3e\r\n          \x3c/td\x3e\r\n        \x3c/tr\x3e\r\n        \x3ctr\x3e\x3ctd valign\x3d"top"\x3e\x3cbr/\x3e\x3c/td\x3e\x3c/tr\x3e\r\n        \x3ctr\x3e\r\n          \x3ctd valign\x3d"top"\x3e\x3clabel\x3eMessage:\x3c/label\x3e\x3c/td\x3e\r\n          \x3ctd valign\x3d"top"\x3e\r\n            \x3cdiv id\x3d"invite-account-users-message" dojoType\x3d"dijit.form.SimpleTextarea" type\x3d"textarea" dojoAttachPoint\x3d"_message" style\x3d"width:400px; min-height:150px; resize:none;"\x3e\x3c/div\x3e\r\n          \x3c/td\x3e\r\n        \x3c/tr\x3e\r\n        \x3ctr\x3e\x3ctd valign\x3d"top"\x3e\x3cbr/\x3e\x3c/td\x3e\x3c/tr\x3e\r\n        \x3ctr\x3e\r\n          \x3ctd valign\x3d"top" colspan\x3d"2"\x3e\r\n            \x3cdiv id\x3d"invite-account-users-must-approve" dojoType\x3d"dijit.form.CheckBox" dojoAttachPoint\x3d"_mustApprove" type\x3d"checkbox"\x3e\x3c/div\x3e\r\n            \x3cspan id\x3d"invite-account-users-must-approve-label"\x3e\x3c/span\x3e\r\n          \x3c/td\x3e\r\n        \x3c/tr\x3e\r\n      \x3c/table\x3e\r\n      \x3cbr /\x3e\r\n      \x3cdiv style\x3d"float: right; padding-top:0px; padding-bottom:5px;"\x3e\r\n        \x3cbutton id\x3d"button_send-invite" class\x3d"jevent primary" dojoType\x3d"dijit.form.Button" type\x3d"button"\x3eSend\x3c/button\x3e\r\n        \x3cbutton id\x3d"button_invite-account-users-close" class\x3d"jevent cancel" dojoType\x3d"dijit.form.Button" type\x3d"button"\x3eCancel\x3c/button\x3e\r\n      \x3c/div\x3e\r\n    \x3c/div\x3e\r\n\x3c/div\x3e',
                            _organization: null,
                            _admin: null,
                            _handler: null,
                            _email: null,
                            _subject: null,
                            _message: null,
                            _mustApprove: null,
                            defaultEmailMsg: 'Enter a comma-delimited list of email addresses.',
                            defaultMessage: '',
                            statics: {
                                _instance: null,
                                getInstance: function() {
                                    null == this._instance &&
                                        (this._instance = new arcgisonline.sharing.dijit.dialog
                                            .InviteAccountUsersDlg());
                                    return this._instance;
                                },
                            },
                            postCreate: function() {
                                this.loadConnections();
                            },
                            show: function(b, e, f) {
                                this._organization = b;
                                this._admin = e;
                                this._handler = f;
                                this.createLabels();
                                this.createSubject();
                                this.createDefaultMessage();
                                g.byId('invite-account-users-dialog').show();
                                this._email.setValue(this.defaultEmailMsg);
                                setTimeout(
                                    c.hitch(this, function() {
                                        this._mustApprove.focus();
                                    }),
                                    350
                                );
                            },
                            clear: function() {
                                this._email.value = '';
                            },
                            loadConnections: function() {
                                c.query('.jevent').connect('onclick', function(b) {
                                    b.preventDefault();
                                });
                                c
                                    .query('#button_invite-account-users-close')
                                    .connect('onclick', function() {
                                        g.byId('invite-account-users-dialog').hide();
                                    });
                                c.connect(
                                    c.byId('button_send-invite'),
                                    'onclick',
                                    this,
                                    'sendInvite'
                                );
                                c.connect(
                                    g.byId('invite-account-users-dialog'),
                                    'hide',
                                    this,
                                    'clear'
                                );
                            },
                            sendInvite: function(b) {
                                if (this.validates()) {
                                    b = this.createTextMessage();
                                    var e = this.createHTMLMessage();
                                    arcgisonline.sharing.geow.Account.inviteAccountUsersByEmail(
                                        this._organization.id, {
                                            emails: this._email.value,
                                            subject: this._subject,
                                            text: b,
                                            html: e,
                                            mustApprove: this._mustApprove.checked,
                                            role: 'account_user',
                                            expiration: 20160,
                                        },
                                        c.hitch(this, this._handler),
                                        c.hitch(this, this._handler)
                                    );
                                    this.hide();
                                }
                            },
                            validates: function() {
                                var b = !0,
                                    c = '',
                                    f = this._email.value;
                                if (f === this.defaultEmailMsg)
                                    (c = 'Please enter at least one email address.'), (b = !1);
                                else
                                    for (var f = f.split(','), d = 0; d < f.length; d++)
                                        if (!this.containsRequiredEmailChars(f[d])) {
                                            c =
                                                "Email address '" +
                                                f[d] +
                                                "' does not appear to be a valid email address.";
                                            b = !1;
                                            break;
                                        }
                                b ||
                                    arcgisonline.sharing.dijit.dialog.GeneralDlg.prototype.statics
                                    .getInstance()
                                    .show({ title: 'Notice', message: c });
                                return b;
                            },
                            hide: function() {
                                g.byId('invite-account-users-dialog').hide();
                            },
                            createHTMLLineBreaks: function(b) {
                                if (b)
                                    for (var c = -1; - 1 < (c = b.indexOf('\n'));)
                                        b = 0 === c ?
                                        '\x3cbr/\x3e' + b.substring(c + 1) :
                                        b.substring(0, c) +
                                        '\x3cbr/\x3e' +
                                        b.substring(c + 1);
                                return b;
                            },
                            createLabels: function() {
                                var b;
                                b =
                                    'Invite people to join your ' +
                                    (esriGeowConfig.useDefaultIdentityStore ?
                                        'portal' :
                                        'organization');
                                b += ' by sending them an email.';
                                c.byId('invite-account-users-search-label').innerHTML = b;
                                b =
                                    'Invited users must be approved before they are accepted to the ' +
                                    (esriGeowConfig.useDefaultIdentityStore ?
                                        'portal.' :
                                        'organization.');
                                c.byId(
                                    'invite-account-users-must-approve-label'
                                ).innerHTML = b;
                            },
                            createSubject: function() {
                                this._subject =
                                    'Invitation to join ' +
                                    this._organization.name +
                                    ' on ' +
                                    (esriGeowConfig.useDefaultIdentityStore ?
                                        esriGeowConfig.portalName || 'ArcGIS' :
                                        'ArcGIS Online');
                            },
                            createHTMLMessage: function() {
                                var b = esriGeowConfig.useDefaultIdentityStore ?
                                    esriGeowConfig.portalName || 'ArcGIS' :
                                    'ArcGIS Online',
                                    c = esriGeowConfig.baseUrl.replace('http:', 'https:'),
                                    f = this.createHTMLLineBreaks(this._message.value),
                                    c =
                                    '\x3cp\x3e@@user.fullname@@ has invited you to join @@org.name@@ at ' +
                                    b +
                                    '. ' +
                                    ('\x3ca href\x3d"' +
                                        c +
                                        esriGeowConfig.signin +
                                        '?invitation\x3d@@invitation.id@@\x26org\x3d@@org.name@@"\x3eClick here to join\x3c/a\x3e.\x3c/p\x3e'),
                                    c =
                                    c +
                                    ('\x3cp\x3e' + f + '\x3c/p\x3e') +
                                    '\x3cp style\x3d"color:gray;"\x3eThis is an automated email, please do not reply. Contact the ',
                                    c =
                                    c +
                                    '\x3ca href\x3d"mailto:arcgisonline_feedback@esri.com?subject\x3dA comment about ArcGIS Online accounts."\x3e';
                                return (
                                    c + (b + '\x3c/a\x3e team if you have questions.\x3c/p\x3e')
                                );
                            },
                            createTextMessage: function() {
                                var b = esriGeowConfig.useDefaultIdentityStore ?
                                    esriGeowConfig.portalName || 'ArcGIS' :
                                    'ArcGIS Online',
                                    c = esriGeowConfig.baseUrl.replace('http:', 'https:'),
                                    c =
                                    '@@user.fullname@@ has invited you to join @@org.name@@ at ' +
                                    b +
                                    '. ' +
                                    ('Visit the following link to join:\n\r' +
                                        c +
                                        esriGeowConfig.signin +
                                        '?invitation\x3d@@invitation.id@@\x26org\x3d@@org.name@@\n\r'),
                                    c = c + (this._message.value + '\n\r');
                                return (
                                    c +
                                    ('This is an automated email, please do not reply. Contact the ' +
                                        b +
                                        ' team at ') +
                                    'arcgisonline_feedback@esri.com if you have questions.'
                                );
                            },
                            createDefaultMessage: function() {
                                this.defaultMessage =
                                    "To join, you'll need an " +
                                    (esriGeowConfig.useDefaultIdentityStore ?
                                        'account' :
                                        'Esri Global Account') +
                                    ' that references the same email address this invitation was sent to. ' +
                                    ('You can create a new account or use an existing account that is registered with ' +
                                        (esriGeowConfig.useDefaultIdentityStore ?
                                            esriGeowConfig.portalName || 'ArcGIS' :
                                            'ArcGIS Online') +
                                        '.');
                                this._message.setValue(this.defaultMessage);
                            },
                            onEmailFocus: function(b) {
                                this._email.value === this.defaultEmailMsg &&
                                    this._email.setValue('');
                            },
                            onEmailBlur: function(b) {
                                (this._email.value && '' !== this._email.value) ||
                                this._email.setValue(this.defaultEmailMsg);
                            },
                            containsRequiredEmailChars: function(b) {
                                var c = /^.+\@(\[?)[a-zA-Z0-9\-\.]+\.([a-zA-Z]{2,20}|[0-9]{1,3})(\]?)$/;
                                return !/(@.*@)|(\.\.)|(@\.)|(\.@)|(^\.)/.test(b) && c.test(b) ?
                                    !0 :
                                    !1;
                            },
                        }
                    );
                }
            );
        },
        'arcgisonline/sharing/dijit/dialog/JoinGroupDlg': function() {
            define(
                'require dojo/_base/declare dojo/_base/lang dojo/_base/array dojo/on dijit/a11yclick dijit/Dialog dijit/form/Button dijit/_WidgetBase dijit/_TemplatedMixin dijit/_WidgetsInTemplateMixin ../../util ../../../pages/utils/dom dojo/i18n!../../../nls/arcgisonline dojo/text!./templates/JoinGroupDlg.html'.split(
                    ' '
                ),
                function(c, g, f, b, e, h, d, a, k, n, l, m, p, r, u) {
                    var t = g(
                        'arcgisonline.sharing.dijit.dialog.JoinGroupDlg', [k, n, l], {
                            declaredClass: 'arcgisonline.sharing.dijit.dialog.JoinGroupDlg',
                            basePath: c.toUrl('arcgisonline/sharing/dijit/dialog'),
                            templateString: u,
                            widgetsInTemplate: !0,
                            postMixInProperties: function() {
                                this.inherited(arguments);
                                this.i18n = f.mixin(r.common, r.joinGroupDlg);
                            },
                            postCreate: function() {
                                this.inherited(arguments);
                                this._loadConnections();
                            },
                            show: function(a, b, c) {
                                this.groupId = a;
                                this.leavingDisallowed = b;
                                c && (this.successHandler = c);
                                this.leavingDisallowed &&
                                    p.showNode(this._administrativeGroup);
                                this._dialog.show();
                            },
                            hide: function(a) {
                                a && a.preventDefault();
                                this._dialog.hide();
                            },
                            _loadConnections: function() {
                                this.own(
                                    h(this._okBtn, f.hitch(this, '_submitRequest')),
                                    h(this._cancelBtn, f.hitch(this, 'hide'))
                                );
                            },
                            _submitRequest: function(a) {
                                a && a.preventDefault();
                                var b;
                                b = m
                                    .request({
                                        url: esriGeowConfig.restBaseUrl +
                                            'community/groups/' +
                                            this.groupId +
                                            '/join',
                                    }, { usePost: !0 })
                                    .then(
                                        dojo.hitch(this, function(a, b) {
                                            this.hide();
                                            this.successHandler && this.successHandler(a, b);
                                        }),
                                        dojo.hitch(this, function(a) {
                                            if (!b.canceled) {
                                                var c = a.message;
                                                a.messageCode && 'COM_1082' === a.messageCode ?
                                                    (c = this.i18n.levelOneSharedUpdateCapabilities) :
                                                    -1 <
                                                    c.indexOf(
                                                        'You have already applied to join this group.'
                                                    ) ?
                                                    (c =
                                                        this.i18n.alreadyRequested +
                                                        '\x3cbr\x3e' +
                                                        this.i18n.applicationConsidered) :
                                                    -1 <
                                                    c.indexOf('Unable to apply to join group:') ?
                                                    (c = this.i18n.cannotAccept) :
                                                    -1 <
                                                    c.indexOf(' is by invitation only.') &&
                                                    (c = this.i18n.byInviteOnly);
                                                arcgisonline.sharing.dijit.dialog.GeneralDlg.prototype.statics
                                                    .getInstance()
                                                    .show({
                                                        title: this.i18n.joinGroupError,
                                                        message: c,
                                                    });
                                            }
                                            this.hide();
                                        })
                                    );
                            },
                        }
                    );
                    t.prototype.statics = {
                        _instance: null,
                        getInstance: function() {
                            null == this._instance && (this._instance = new t());
                            return this._instance;
                        },
                    };
                    return t;
                }
            );
        },
        'arcgisonline/sharing/dijit/dialog/ManageSubscriptionDlg': function() {
            define(
                [
                    'dojo',
                    'dijit',
                    'dojox',
                    'dojo/require!dijit/Dialog,dijit/_Widget,dijit/_Templated,dijit/form/Button,dijit/form/RadioButton,arcgisonline/sharing/util,arcgisonline/sharing/geow/Geow,arcgisonline/sharing/dijit/dialog/ChoiceDlg,arcgisonline/sharing/dijit/dialog/GeneralDlg',
                ],
                function(c, g, f) {
                    c.provide('arcgisonline.sharing.dijit.dialog.ManageSubscriptionDlg');
                    c.require('dijit.Dialog');
                    c.require('dijit._Widget');
                    c.require('dijit._Templated');
                    c.require('dijit.form.Button');
                    c.require('dijit.form.RadioButton');
                    c.require('arcgisonline.sharing.util');
                    c.require('arcgisonline.sharing.geow.Geow');
                    c.require('arcgisonline.sharing.dijit.dialog.ChoiceDlg');
                    c.require('arcgisonline.sharing.dijit.dialog.GeneralDlg');
                    c.declare(
                        'arcgisonline.sharing.dijit.dialog.ManageSubscriptionDlg', [g._Widget, g._Templated], {
                            widgetsInTemplate: !0,
                            templateString: '\x3cdiv class\x3d"widgetContent" \x3e\r\n  \x3cdiv data-dojo-type\x3d"dijit.Dialog" id\x3d"manage-subscription-dialog" data-dojo-attach-point\x3d"_manageSubscriptionDlg" title\x3d"${i18n.manageSubscriptionTitle}" execute\x3d"" style\x3d"width:400px;"\x3e\r\n    \x3cdiv data-dojo-attach-point\x3d"_upgradeSubscriptionDiv" style\x3d"display:none;"\x3e\r\n      \x3cdiv data-dojo-attach-point\x3d"_inUSDiv"\x3e\x3c/div\x3e\x3cbr/\x3e\r\n      \x3cdiv data-dojo-attach-point\x3d"_outsideUSDiv"\x3e\x3c/div\x3e\r\n    \x3c/div\x3e\r\n    \x3cdiv data-dojo-attach-point\x3d"_manageSubscriptionDiv" style\x3d"display:none;"\x3e\r\n      \x3cdiv data-dojo-attach-point\x3d"_manageSubscriptionContainer"\x3e\r\n        \x3cp\x3e${i18n.manageSubscriptionDesc}\x3c/p\x3e\r\n        \x3cinput data-dojo-type\x3d"dijit.form.RadioButton" type\x3d"radio" name\x3d"manageOption" data-dojo-attach-point\x3d"_upgradeRadioBtn" id\x3d"upgrade-radio-button" value\x3d"upgrade" checked\x3d"true"\x3e\r\n        \x3cspan\x3e\x3clabel for\x3d"upgrade-radio-button"\x3e\x3cb\x3e${i18n.upgradeOption}\x3c/b\x3e\x3c/label\x3e\x3c/span\x3e\x3cbr/\x3e\r\n        \x3cdiv class\x3d"esriLeadingMargin15"\x3e${i18n.upgradeDesc}\x3c/div\x3e\x3cbr/\x3e\r\n        \x3cdiv data-dojo-attach-point\x3d"_convertOptionDiv"\x3e\r\n          \x3cinput data-dojo-type\x3d"dijit.form.RadioButton" type\x3d"radio" name\x3d"manageOption" data-dojo-attach-point\x3d"_convertRadioBtn" id\x3d"convert-radio-button" value\x3d"convert"\x3e\r\n          \x3cspan\x3e\x3clabel for\x3d"convert-radio-button"\x3e\x3cb\x3e${i18n.convertOption}\x3c/b\x3e\x3c/label\x3e\x3c/span\x3e\x3cbr/\x3e\r\n          \x3cdiv class\x3d"esriLeadingMargin15"\x3e${i18n.convertDesc}\x3c/div\x3e\r\n        \x3c/div\x3e\r\n      \x3c/div\x3e\r\n      \x3cdiv data-dojo-attach-point\x3d"_evalSubscriptionContainer" style\x3d"display: none;"\x3e\r\n        \x3cp\x3e${i18n.upgradeOption} ${i18n.upgradeDesc}\x3c/p\x3e\r\n        \x3cdiv data-dojo-attach-point\x3d"_purchaseInUSDiv"\x3e\x3c/div\x3e\x3cbr/\x3e\r\n        \x3cdiv data-dojo-attach-point\x3d"_purchaseOutsideUSDiv"\x3e\x3c/div\x3e\r\n      \x3c/div\x3e\r\n    \x3c/div\x3e\r\n    \x3cdiv data-dojo-attach-point\x3d"_convertSubscriptionDiv" style\x3d"display:none;"\x3e\r\n      \x3cp\x3e${i18n.convertSubscriptionDesc}\x3c/p\x3e\r\n      \x3cp\x3e\x3cb\x3e${i18n.deleteHostedMsg}\x3c/b\x3e\x3cbr/\x3e${i18n.notAvailableMsg}\x3c/p\x3e\r\n      \x3cdiv\x3e\x3cb\x3e${i18n.importantMsg}\x3c/b\x3e\x3cdiv data-dojo-attach-point\x3d"_importantMsgDiv"\x3e\x3c/div\x3e\x3c/div\x3e\r\n      \x3cp\x3e\x3cb\x3e${i18n.intendToUpgradeMsg}\x3c/b\x3e\x3c/p\x3e\r\n    \x3c/div\x3e\r\n    \x3cbr/\x3e\r\n    \x3cdiv data-dojo-attach-point\x3d"_buttonDiv" class\x3d"esriFloatTrailing"\x3e\r\n      \x3cbutton data-dojo-attach-point\x3d"_okBtn" data-dojo-attach-event\x3d"onClick:onCancel" class\x3d"jevent cancel" type\x3d"button" data-dojo-type\x3d"dijit.form.Button"\x3e${i18n.ok}\x3c/button\x3e\r\n      \x3cbutton data-dojo-attach-point\x3d"_nextBtn" data-dojo-attach-event\x3d"onClick:onNext" class\x3d"jevent primary" type\x3d"button" data-dojo-type\x3d"dijit.form.Button"\x3e${i18n.next}\x3c/button\x3e\r\n      \x3cbutton data-dojo-attach-point\x3d"_convertBtn" data-dojo-attach-event\x3d"onClick:onConvert" class\x3d"jevent primary" type\x3d"button" data-dojo-type\x3d"dijit.form.Button"\x3e${i18n.convertLabel}\x3c/button\x3e\r\n      \x3cbutton data-dojo-attach-point\x3d"_cancelBtn" data-dojo-attach-event\x3d"onClick:onCancel" class\x3d"jevent cancel" type\x3d"button" data-dojo-type\x3d"dijit.form.Button"\x3e${i18n.cancel}\x3c/button\x3e\r\n    \x3c/div\x3e\r\n    \x3cbr style\x3d"clear:both;"/\x3e\r\n  \x3c/div\x3e\r\n\x3c/div\x3e',
                            util: arcgisonline.sharing.util,
                            geow: arcgisonline.sharing.geow.Geow,
                            statics: {
                                _instance: null,
                                getInstance: function() {
                                    null == this._instance &&
                                        (this._instance = new arcgisonline.sharing.dijit.dialog
                                            .ManageSubscriptionDlg());
                                    return this._instance;
                                },
                            },
                            _converting: !1,
                            _choiceDlg: null,
                            _selfResource: null,
                            postMixInProperties: function() {
                                this.inherited(arguments);
                                this.i18n = c.i18n.getLocalization(
                                    'arcgisonline',
                                    'arcgisonline'
                                ).common;
                                c.mixin(
                                    this.i18n,
                                    c.i18n.getLocalization('arcgisonline', 'arcgisonline')
                                    .manageSubscriptionDlg
                                );
                            },
                            postCreate: function() {
                                this.inherited(arguments);
                                this._dialog = this._manageSubscriptionDlg;
                                this.loadConnections();
                            },
                            show: function(b) {
                                this.selfResource = b;
                                this._showManageView();
                            },
                            showManage: function(b) {
                                this.selfResource = b;
                                this.clear();
                                this._showManageView();
                                this._manageSubscriptionDlg.show();
                            },
                            showUpgrade: function(b) {
                                this.selfResource = b;
                                this.clear();
                                this._showUpgradeView();
                                this._manageSubscriptionDlg.show();
                            },
                            _showUpgradeView: function() {
                                this._manageSubscriptionDlg.set(
                                    'title',
                                    this.i18n.upgradeSubscriptionTitle
                                );
                                ('Trial' !== this.selfResource.subscriptionInfo.type &&
                                    'Trial Press' !== this.selfResource.subscriptionInfo.type &&
                                    'Evaluation' !== this.selfResource.subscriptionInfo.type) ||
                                this._manageSubscriptionDlg.set(
                                    'title',
                                    this.i18n.manageSubscriptionTitle
                                );
                                c.attr(
                                    this._inUSDiv,
                                    'innerHTML',
                                    esri.substitute({
                                            officeLinkStart: '\x3cspan class\x3d"esriItemLinks"\x3e\x3ca target\x3d"_blank" href\x3d"http://www.esri.com/about-esri/offices/"\x3e',
                                            officeLinkEnd: '\x3c/a\x3e\x3c/span\x3e',
                                        },
                                        this.i18n.upgradeInsideUS
                                    )
                                );
                                c.attr(
                                    this._outsideUSDiv,
                                    'innerHTML',
                                    esri.substitute({
                                            officeLinkStart: '\x3cspan class\x3d"esriItemLinks"\x3e\x3ca target\x3d"_blank" href\x3d"http://www.esri.com/about-esri/offices/"\x3e',
                                            officeLinkEnd: '\x3c/a\x3e\x3c/span\x3e',
                                        },
                                        this.i18n.upgradeOutsideUS
                                    )
                                );
                                c.style(this._manageSubscriptionDiv, 'display', 'none');
                                c.style(this._convertSubscriptionDiv, 'display', 'none');
                                c.style(this._nextBtn.domNode, 'display', 'none');
                                c.style(this._convertBtn.domNode, 'display', 'none');
                                c.style(this._cancelBtn.domNode, 'display', 'none');
                                'active' !== this.selfResource.subscriptionInfo.state ||
                                    ('Trial' !== this.selfResource.subscriptionInfo.type &&
                                        'Trial Press' !== this.selfResource.subscriptionInfo.type &&
                                        'Evaluation' !== this.selfResource.subscriptionInfo.type) ||
                                    this._manageSubscriptionDlg.set(
                                        'title',
                                        this.i18n.manageSubscriptionTitle
                                    );
                                c.style(this._upgradeSubscriptionDiv, 'display', '');
                                c.style(this._okBtn.domNode, 'display', '');
                            },
                            _showManageView: function() {
                                this._manageSubscriptionDlg.set(
                                    'title',
                                    this.i18n.manageSubscriptionTitle
                                );
                                c.style(this._upgradeSubscriptionDiv, 'display', 'none');
                                c.style(this._convertSubscriptionDiv, 'display', 'none');
                                c.style(this._okBtn.domNode, 'display', 'none');
                                c.style(this._convertBtn.domNode, 'display', 'none');
                                this.selfResource.subscriptionInfo &&
                                    'Evaluation' === this.selfResource.subscriptionInfo.type ?
                                    (c.style(
                                        this._convertOptionDiv,
                                        'display',
                                        'none'
                                    ), c.style(
                                        this._manageSubscriptionContainer,
                                        'display',
                                        'none'
                                    ), c.style(
                                        this._evalSubscriptionContainer,
                                        'display',
                                        ''
                                    ), c.attr(
                                        this._purchaseInUSDiv,
                                        'innerHTML',
                                        esri.substitute({
                                                officeLinkStart: '\x3cspan class\x3d"esriItemLinks"\x3e\x3ca target\x3d"_blank" href\x3d"http://www.esri.com/about-esri/offices/"\x3e',
                                                officeLinkEnd: '\x3c/a\x3e\x3c/span\x3e',
                                            },
                                            this.i18n.upgradeInsideUS
                                        )
                                    ), c.attr(
                                        this._purchaseOutsideUSDiv,
                                        'innerHTML',
                                        esri.substitute({
                                                officeLinkStart: '\x3cspan class\x3d"esriItemLinks"\x3e\x3ca target\x3d"_blank" href\x3d"http://www.esri.com/about-esri/offices/"\x3e',
                                                officeLinkEnd: '\x3c/a\x3e\x3c/span\x3e',
                                            },
                                            this.i18n.upgradeOutsideUS
                                        )
                                    ), c.style(this._okBtn.domNode, 'display', ''), c.style(
                                        this._nextBtn.domNode,
                                        'display',
                                        'none'
                                    ), c.style(this._cancelBtn.domNode, 'display', 'none')) :
                                    (c.style(this._nextBtn.domNode, 'display', ''), c.style(
                                        this._cancelBtn.domNode,
                                        'display',
                                        ''
                                    ));
                                c.style(this._manageSubscriptionDiv, 'display', '');
                            },
                            _showConvertView: function() {
                                this._manageSubscriptionDlg.set(
                                    'title',
                                    this.i18n.convertToPersonalTitle
                                );
                                c.attr(
                                    this._importantMsgDiv,
                                    'innerHTML',
                                    esri.substitute({
                                            helpLinkStart: '\x3cspan class\x3d"esriItemLinks"\x3e\x3ca target\x3d"_blank" href\x3d"' +
                                                (this.selfResource.helpBase +
                                                    this.selfResource.helpMap.m['120000592']) +
                                                '"\x3e',
                                            helpLinkEnd: '\x3c/a\x3e',
                                        },
                                        this.i18n.completeDetailsWithLinkMsg
                                    )
                                );
                                c.style(this._upgradeSubscriptionDiv, 'display', 'none');
                                c.style(this._manageSubscriptionDiv, 'display', 'none');
                                c.style(this._okBtn.domNode, 'display', 'none');
                                c.style(this._nextBtn.domNode, 'display', 'none');
                                c.style(this._convertSubscriptionDiv, 'display', '');
                                c.style(this._convertBtn.domNode, 'display', '');
                                c.style(this._cancelBtn.domNode, 'display', '');
                            },
                            loadConnections: function() {
                                c.query('.jevent').connect('onclick', function(b) {
                                    b.preventDefault();
                                });
                            },
                            clear: function() {
                                this._converting = !1;
                                this._choiceDlg = arcgisonline.sharing.dijit.dialog.ChoiceDlg.prototype.statics.getInstance();
                                this._manageSubscriptionDlg.set('title', '');
                                c.style(this._upgradeSubscriptionDiv, 'display', 'none');
                                c.style(this._manageSubscriptionDiv, 'display', 'none');
                                c.style(this._convertSubscriptionDiv, 'display', 'none');
                                c.style(this._convertOptionDiv, 'display', '');
                                c.style(this._manageSubscriptionContainer, 'display', '');
                                c.style(this._evalSubscriptionContainer, 'display', 'none');
                                this._upgradeRadioBtn.set('checked', !0);
                            },
                            hide: function() {
                                this._manageSubscriptionDlg.hide();
                            },
                            onNext: function(b) {
                                this._convertRadioBtn.get('checked') ?
                                    this._showConvertView() :
                                    this._showUpgradeView();
                            },
                            onConvert: function(b) {
                                this._converting ||
                                    ((b = {
                                        title: this.i18n.convertToPersonalTitle,
                                        message: this.i18n.noReturnMsg,
                                        choiceOneTitle: this.i18n.yesLabel,
                                        choiceTwoTitle: this.i18n.noLabel,
                                        choiceOneHandler: c.hitch(this, this.doConvert),
                                    }), this._choiceDlg.show(b));
                            },
                            doConvert: function() {
                                if (!this._converting &&
                                    esriGeowConfig.self &&
                                    esriGeowConfig.self.id
                                ) {
                                    this._converting = !0;
                                    this._convertBtn.set('disabled', !0);
                                    var b =
                                        esriGeowConfig.baseUrl.replace(
                                            location.host,
                                            esriGeowConfig.self.portalHostname
                                        ) + esriGeowConfig.signin,
                                        b = b.replace('http:', 'https:');
                                    this.util
                                        .request({
                                            url: esriGeowConfig.restBaseUrl +
                                                'portals/self/convert',
                                            content: { target: 'personal', timeout: 12e4 },
                                        }, { usePost: !0 })
                                        .then(
                                            c.hitch(this, function(c) {
                                                this.geow.signout(b);
                                            }),
                                            c.hitch(this, function(b) {
                                                this._converting = !1;
                                                this._convertBtn.set('disabled', !1);
                                                var e = arcgisonline.sharing.dijit.dialog.GeneralDlg.prototype.statics.getInstance();
                                                e.onOkClick = c.hitch(this, function() {
                                                    e.hide();
                                                    this._manageSubscriptionDlg.hide();
                                                });
                                                e.show({
                                                    title: this.i18n.errorTitle,
                                                    message: this.i18n.unableToConvert,
                                                });
                                            })
                                        );
                                }
                            },
                            onCancel: function(b) {
                                g.byId('manage-subscription-dialog').hide();
                            },
                            onHide: function() {},
                        }
                    );
                }
            );
        },
        'arcgisonline/sharing/dijit/dialog/ManageTilesDlg': function() {
            define(
                'require esri/declare esri/Evented esri/config esri/lang esri/request dojo/_base/lang dojo/_base/array dojo/on dojo/query dojo/sniff dojo/topic dojo/json dijit/a11yclick dojo/number dojo/string dojo/dom dojo/dom-attr dojo/dom-class dojo/dom-construct dojo/Deferred dijit/_WidgetBase dijit/_TemplatedMixin dijit/_WidgetsInTemplateMixin dijit/Dialog dojo/store/Memory dojo/store/Observable dgrid/OnDemandGrid dgrid/selector dgrid/Selection dgrid/extensions/DijitRegistry esri/geometry/Extent esri/geometry/webMercatorUtils ../../../map/core/projectExtent ../../../map/utils/clipOnHorizon ../DefineExtent ./GeneralDlg ./ChoiceDlg ../../../pages/pageUtil ../../../pages/utils/arrays ../../../pages/utils/dom ../../../pages/serviceUtil ../../util calcite-web/js/calcite-web dojo/i18n!../../../nls/arcgisonline dojo/text!./templates/ManageTilesDlg.html'.split(
                    ' '
                ),
                function(
                    c,
                    g,
                    f,
                    b,
                    e,
                    h,
                    d,
                    a,
                    k,
                    n,
                    l,
                    m,
                    p,
                    r,
                    u,
                    t,
                    q,
                    v,
                    C,
                    z,
                    y,
                    x,
                    w,
                    A,
                    E,
                    B,
                    D,
                    H,
                    G,
                    F,
                    K,
                    L,
                    Q,
                    O,
                    P,
                    J,
                    I,
                    N,
                    M,
                    R,
                    Y,
                    Z,
                    U,
                    V,
                    T,
                    ca
                ) {
                    var ua = g(null, {
                            showFooter: !0,
                            buildRendering: function() {
                                this.inherited(arguments);
                                var a = (this.summaryAreaNode = z.create(
                                    'div', {
                                        className: 'summary-row',
                                        role: 'row',
                                        style: { overflow: 'hidden' },
                                    },
                                    this.footerNode
                                ));
                                this.on(
                                    'scroll',
                                    d.hitch(this, function() {
                                        a.scrollLeft = this.getScrollPosition().x;
                                    })
                                );
                                this.summary && this._setSummary(this.summary);
                            },
                            _updateColumns: function() {
                                this.inherited(arguments);
                                this.summary && this._setSummary(this.summary);
                            },
                            _renderSummaryCell: function(a, b, c) {
                                b.appendChild(document.createTextNode(a[c.field] || ''));
                            },
                            _setSummary: function(a) {
                                var b = this.summaryTableNode;
                                this.summary = a;
                                b && z.destroy(b);
                                b = this.summaryTableNode = this.createRowCells(
                                    'td',
                                    d.hitch(this, '_renderSummaryCell', a)
                                );
                                this.summaryAreaNode.appendChild(b);
                                this._started && this.resize();
                            },
                        }),
                        W = g(
                            'arcgisonline.sharing.dijit.dialog.ManageTilesDlg', [x, w, A], {
                                declaredClass: 'arcgisonline.sharing.dijit.dialog.ManageTilesDlg',
                                templateString: ca,
                                widgetsInTemplate: !0,
                                basePath: c.toUrl('arcgisonline/sharing/dijit/dialog'),
                                baseClass: 'esriManageTiles',
                                PROCESSING: 'PROCESSING',
                                SUBMITTED: 'SUBMITTED',
                                DEFAULT_TILE_WIDTH: 256,
                                DEFAULT_TILE_HEIGHT: 256,
                                TIME_TO_NEXT_UPDATE: 1e4,
                                TABS: { LEVELS: 'levels', EXTENT: 'extent' },
                                _noSourceData: !1,
                                _isSourceTilePackage: !1,
                                _isVisible: !1,
                                _isProcessing: !1,
                                _wasProcessing: !1,
                                _allTilesComplete: !1,
                                _createClicked: !1,
                                _tab: 'levels',
                                postMixInProperties: function() {
                                    this.inherited(arguments);
                                    this.i18n = d.mixin({}, T.common);
                                    this.i18n = d.mixin(this.i18n, T.manageTilesDlg);
                                },
                                postCreate: function() {
                                    this.inherited(arguments);
                                    b.defaults.io.proxyUrl = esriGeowConfig.proxyServer;
                                    esriGeowConfig.proxyUrl &&
                                        (b.defaults.io.proxyUrl = esriGeowConfig.proxyUrl);
                                    var a = d.hitch(this, 'hide');
                                    this.own(
                                        r(this._buildButton, d.hitch(this, '_createClick')),
                                        r(this._cancelButton, d.hitch(this, '_cancelClick')),
                                        r(this._closeButton, a),
                                        r(this.dialog.closeButtonNode, a),
                                        r(this._levelsTab, d.hitch(this, '_levelsTabClick')),
                                        r(this._extentTab, d.hitch(this, '_extentTabClick'))
                                    );
                                },
                                destroy: function() {
                                    this.inherited(arguments);
                                    this._defineExtent && this._defineExtent.destroy();
                                },
                                setServerTokens: function(a, b, c) {
                                    this._hostedServer = a;
                                    this._serverToken = b;
                                    this._adminServerToken = c;
                                },
                                displayTabs: function(a) {
                                    this._mustDisplayTabs = a;
                                },
                                show: function(a, b, c, e) {
                                    b = d.hitch(this, '_handleServiceInfo', b);
                                    V.tabs();
                                    this._setFlags();
                                    this.item = a;
                                    this._isSourceTilePackage = !(!c || !c.tilePackage);
                                    this._isSourceServiceDefinition = !(!c ||
                                        !c.serviceDefinition);
                                    this._isSourceTilePackage ?
                                        (v.set(
                                            this._buildButton,
                                            'innerHTML',
                                            this.i18n.publishButton
                                        ), v.set(
                                            this.dialog,
                                            'title',
                                            this.i18n.publishButton
                                        ), (this._canShowTabs = !1)) :
                                        this._isPortal ?
                                        (this._canShowTabs = !1) :
                                        (v.set(
                                            this.dialog,
                                            'title',
                                            this.i18n.buildTitle
                                        ), (this._canShowTabs = !(!esriGeowConfig.tilesOnDemandEnabled ||
                                            !this._mustDisplayTabs)));
                                    this._showTabs(this._canShowTabs);
                                    e
                                        ?
                                        b(e) :
                                        ((a = this._isPortal ?
                                            h({
                                                url: this.item.url,
                                                content: { f: 'json', token: this._serverToken },
                                            }) :
                                            U.request({ url: this.item.url })), a.then(b, b));
                                },
                                showNoSource: function(a, b) {
                                    this._noSourceData = !0;
                                    this.show(a, b, !1);
                                },
                                hide: function() {
                                    this._noSourceData = !1;
                                    this.dialog.hide();
                                    (this._createClicked || this._wasProcessing) &&
                                    m.publish('manage-tiles/update', { tileInfoChanged: !0 });
                                    this._isVisible = this._wasProcessing = this._createClicked = !1;
                                },
                                _showTabs: function(a) {
                                    Y.showHide(this._tabNav, a);
                                    n('.tab-contents').forEach(function(b) {
                                        C[a ? 'remove' : 'add'](b, 'no-border');
                                    });
                                },
                                _setFlags: function() {
                                    this._isPortal = U.isPortal();
                                    this._roleCanPublishTiles =
                                        (this._roleCanCreateItem = esriGeowConfig.userRole.canCreateItem()) &&
                                        esriGeowConfig.userRole.canPublishTiles();
                                    this._createClicked = this._allTilesComplete = this._wasProcessing = this._isProcessing = this._isVisible = this._isSourceTilePackage = this._noSourceData = !1;
                                    this._refreshTilesEnabled = !this._isPortal && esriGeowConfig.tilesOnDemandEnabled;
                                },
                                _handleServiceInfo: function(a, b) {
                                    !b ||
                                        b.code ||
                                        b.message ||
                                        ((this._serviceFullExtent =
                                            b.fullExtent), (this._serviceTileInfo =
                                            b.tileInfo), (this._serviceTileInfo.width =
                                            this._serviceTileInfo.width ||
                                            this.DEFAULT_TILE_WIDTH), (this._serviceTileInfo.height =
                                            this._serviceTileInfo.height ||
                                            this
                                            .DEFAULT_TILE_HEIGHT), (this.serviceMinScale = b.minScale ?
                                            b.minScale :
                                            this._serviceTileInfo.lods[0]
                                            .scale), (this.serviceMaxScale = b.maxScale ?
                                            b.maxScale :
                                            this._serviceTileInfo.lods[
                                                this._serviceTileInfo.lods.length - 1
                                            ].scale), (this.serviceMinLOD = e.isDefined(b.minLOD) ?
                                            b.minLOD :
                                            void 0), (this.serviceMaxLOD = e.isDefined(b.maxLOD) ?
                                            b.maxLOD :
                                            void 0), this.dialog.show(), (this._isVisible = !0), this._updateStatus(
                                            a
                                        ));
                                },
                                _handleReportCacheStatus: function(a) {
                                    a &&
                                        a.results &&
                                        !a.message &&
                                        ((a =
                                            a
                                            .results[0]), (a.serviceName = this._lastTileStatus.serviceName), (a.type = this._lastTileStatus.type), (a.lodInfos =
                                            a.value.lodInfos), (a.cacheExecutionStatus =
                                            a.value.cacheExecutionStatus), (a.minScale = this._lastTileStatus.minScale), (a.maxScale = this._lastTileStatus.maxScale));
                                    this._updateStatus(a);
                                },
                                _getStatus: function() {
                                    var a = this;
                                    if (this._isVisible)
                                        if (a._isPortal) {
                                            var b = d.hitch(a, '_handleReportCacheStatus'),
                                                c = a.item.url.indexOf('/services/') + 10,
                                                e =
                                                a.item.url.indexOf(
                                                    '/' + a._lastTileStatus.serviceName + '/'
                                                ) + 1,
                                                c =
                                                a.item.url.substring(c, e) +
                                                a._lastTileStatus.serviceName +
                                                ':' +
                                                a._lastTileStatus.type,
                                                f =
                                                Z.adjustHostedServerForProtocol(
                                                    a._hostedServer.url
                                                ) +
                                                '/rest/services/System/ReportingTools/GPServer/ReportCacheStatus/execute',
                                                g = {
                                                    service_url: c,
                                                    report_mode: 'esriCacheStatus',
                                                    f: 'json',
                                                    token: a._serverToken,
                                                    job_id: a._jobId,
                                                    ts: new Date().getTime(),
                                                };
                                            a._jobId ?
                                                h({ url: f, content: g }).then(b, b) :
                                                ((c = {
                                                    service_url: c,
                                                    report_mode: 'esriJobSummary',
                                                    f: 'json',
                                                    token: a._serverToken,
                                                    ts: new Date().getTime(),
                                                }), h({ url: f, content: c }).then(function(c) {
                                                    c &&
                                                        c.results &&
                                                        c.results[0] &&
                                                        c.results[0].value.esriJobStatus &&
                                                        c.results[0].value.esriJobStatus[0] &&
                                                        ((a._jobId =
                                                            c.results[0].value.esriJobStatus[0].cancelJobID), (g.job_id =
                                                            a._jobId));
                                                    h({ url: f, content: g }).then(b, b);
                                                }));
                                        } else
                                            (c = a.item.url.replace(
                                                '/rest/',
                                                '/rest/admin/'
                                            )), (e = d.hitch(a, '_updateStatus')), U.request({
                                                url: c,
                                                content: { ts: new Date().getTime() },
                                            }).then(e, e);
                                },
                                _updateStatus: function(a) {
                                    if (
                                        this._isVisible &&
                                        (!a ||
                                            'Error' !== a.name ||
                                            'Unknown runtime error' !== a.message)
                                    ) {
                                        this._lastTileStatus = a;
                                        this._lastTileStatus.minScale =
                                            this._lastTileStatus.minScale || this.serviceMinScale;
                                        this._lastTileStatus.maxScale =
                                            this._lastTileStatus.maxScale || this.serviceMaxScale;
                                        this._lastTileStatus.minLOD =
                                            this._lastTileStatus.minLOD ||
                                            this.serviceMinLOD ||
                                            void 0;
                                        this._lastTileStatus.maxLOD =
                                            this._lastTileStatus.maxLOD ||
                                            this.serviceMaxLOD ||
                                            void 0;
                                        if (
                                            (this._isProcessing =
                                                a.cacheExecutionStatus === this.PROCESSING ||
                                                a.cacheExecutionStatus === this.SUBMITTED)
                                        )
                                            (this._wasProcessing = !0), setTimeout(
                                                d.hitch(this, '_getStatus'),
                                                this.TIME_TO_NEXT_UPDATE
                                            );
                                        this._refreshUI();
                                    }
                                },
                                _refreshUI: function() {
                                    this._updateData();
                                    this._grid ? this._updateGrid() : this._createGrid();
                                    this._updateTotals();
                                    this._updateExtent();
                                    this._updateDescription();
                                    this._updateButtons();
                                    this._updateMessage();
                                    this._updateTabs();
                                },
                                _updateExtent: function() {
                                    if (
                                        this._defineExtent &&
                                        this._defineExtent._started &&
                                        !this._updatedExtent
                                    ) {
                                        var a = [
                                                [],
                                                []
                                            ],
                                            b;
                                        4326 !== this._serviceFullExtent.spatialReference.wkid &&
                                            (b = Q.webMercatorToGeographic(
                                                new L(this._serviceFullExtent)
                                            ));
                                        a[1][1] = parseFloat(b.ymax);
                                        a[0][0] = parseFloat(b.xmin);
                                        a[1][0] = parseFloat(b.xmax);
                                        a[0][1] = parseFloat(b.ymin);
                                        this._defineExtent.set('extent', a);
                                    }
                                },
                                _updateTabs: function() {
                                    this._isProcessing ?
                                        (this._canShowTabs &&
                                            (C.remove(this._extentTab, 'is-active'), C.remove(
                                                this._extentSection,
                                                'is-active'
                                            ), C.add(this._levelsTab, 'is-active'), C.add(
                                                this._levelsSection,
                                                'is-active'
                                            )), this._showTabs(!1)) :
                                        this._showTabs(this._canShowTabs);
                                },
                                _updateButtons: function() {
                                    this._roleCanPublishTiles ?
                                        this._isProcessing ||
                                        (this._allTilesComplete && !this._refreshTilesEnabled) ?
                                        (this._hideButtons(), this._isProcessing &&
                                            this._isPortal &&
                                            this._jobId ?
                                            this._showCancel() :
                                            this._hideCancel()) :
                                        (this._showButtons(), this._hideCancel()) :
                                        this._hideButtons();
                                },
                                _updateMessage: function() {
                                    this._isProcessing ||
                                        (this._allTilesComplete && !this._refreshTilesEnabled) ||
                                        (this._noSourceData ?
                                            v.set(
                                                this._messageDiv,
                                                'innerHTML',
                                                this.i18n._noSourceData
                                            ) :
                                            v.set(
                                                this._messageDiv,
                                                'innerHTML',
                                                this._isSourceTilePackage ?
                                                this.i18n.selectTilesPublish :
                                                this.i18n.selectTiles +
                                                '\x3cbr\x3e' +
                                                this.i18n.adjustVisibleRange
                                            ));
                                },
                                _updateData: function() {
                                    var b = this.i18n.totals,
                                        c = this._lastTileStatus;
                                    this._gridStore = new D(
                                        new B({ data: this._getTileStatusData(), identifier: 'id' })
                                    );
                                    this._gridStore.getTotals ||
                                        (this._gridStore.getTotals = function() {
                                            var d = {},
                                                e = 0,
                                                f = 0,
                                                g = 0,
                                                h;
                                            a.forEach(this.data, function(a) {
                                                e += parseInt(a.created, 10);
                                                f += parseInt(a.expected, 10);
                                                g += a.storageSize ? parseInt(a.storageSize, 10) : 0;
                                            });
                                            h = u.round(e / f * 100, 2) || 0;
                                            h = 100 < h ? 100 : h;
                                            d.selected = '';
                                            d.scaleLevel = b;
                                            d.created = u.format(e);
                                            d.expected = u.format(f);
                                            d.pctComplete = String(h);
                                            d.storageSize = M.sizeInMB((c && c.size) || g);
                                            return d;
                                        });
                                    if (this._noSourceData) Y.hideNode(this._scalesSelectedSpan);
                                    else {
                                        var d = t.substitute(this.i18n.scalesSelected, {
                                            scales: 0,
                                        });
                                        v.set(this._scalesSelectedSpan, 'innerHTML', d);
                                    }
                                },
                                _getTileStatusData: function() {
                                    var b = this,
                                        c = [],
                                        d = 0,
                                        e = 0,
                                        f, g, h, k;
                                    a.forEach(b._serviceTileInfo.lods, function(a) {
                                        Math.floor(a.scale) <= b._lastTileStatus.minScale &&
                                            Math.ceil(a.scale) >= b._lastTileStatus.maxScale &&
                                            ((f = M.calculateExpectedTiles(
                                                b._serviceTileInfo,
                                                b._serviceFullExtent,
                                                a
                                            )), c.push({
                                                id: a.level,
                                                selected: !1,
                                                scaleLevel: '1:' +
                                                    u.format(Math.round(a.scale), {
                                                        pattern: '#,###,###,##0',
                                                    }),
                                                scale: a.scale,
                                                created: 0,
                                                expected: f,
                                                pctComplete: 0,
                                                storageSize: 0,
                                            }));
                                    });
                                    b._lastTileStatus &&
                                        b._lastTileStatus.lodInfos &&
                                        0 < b._lastTileStatus.lodInfos.length &&
                                        a.forEach(b._lastTileStatus.lodInfos, function(a) {
                                            for (k = 0; k < c.length; k++)
                                                if (
                                                    c[k] &&
                                                    c[k].id === a.levelID
                                                ) {
                                                    g = Math.round(
                                                        a.tileCount / a.expectedTileCount * 100
                                                    );
                                                    100 < g && (g = 100);
                                                    b._isPortal && a.pct && (g = a.pct);
                                                    h = c[k];
                                                    h.created = a.tileCount;
                                                    h.expected = a.expectedTileCount;
                                                    h.pctComplete = g;
                                                    h.storageSize = a.tilesSize ? a.tilesSize : 0;
                                                    break;
                                                }
                                        });
                                    a.forEach(c, function(a) {
                                        d += a.created;
                                        e += a.expected;
                                    });
                                    b._allTilesComplete = d === e;
                                    b._disableButtons();
                                    return c;
                                },
                                _updateTotals: function() {
                                    var a = this,
                                        b = a._grid.on('dgrid-refresh-complete', function() {
                                            a._scrollNode &&
                                                a._currentScrollPos &&
                                                (a._scrollNode.scrollTop = a._currentScrollPos);
                                            b.remove();
                                        });
                                    a._scrollPos && (a._currentScrollPos = a._scrollPos);
                                    a._grid.set('summary', a._gridStore.getTotals());
                                    a._grid.resize();
                                    a._grid.refresh();
                                },
                                _updateDescription: function() {
                                    v.set(
                                        this._dialogDescription,
                                        'innerHTML',
                                        '\x3cstrong\x3e' +
                                        (this._isProcessing ?
                                            this._isSourceTilePackage ?
                                            this.i18n.jobStatusPublishing :
                                            this.i18n.jobStatus :
                                            this.i18n.noJobStatus) +
                                        '\x3c/strong\x3e\x3cbr/\x3e'
                                    );
                                },
                                _hideButtons: function() {
                                    Y.hideNodes(n('div.messageContainer'));
                                    Y.hideNodes(n('div.selected-scales-container'));
                                    Y.hideNode(this._buildButton);
                                },
                                _showButtons: function() {
                                    Y.showNode(this._buildButton);
                                    Y.showNodes(n('div.selected-scales-container'));
                                    Y.showNodes(n('div.messageContainer'));
                                },
                                _hideCancel: function() {
                                    Y.hideNode(this._cancelButton);
                                },
                                _showCancel: function() {
                                    Y.showNode(this._cancelButton);
                                },
                                _updateGrid: function() {
                                    this._grid.set('columns', this._getGridLayout());
                                    this._grid.set('store', this._gridStore);
                                },
                                _createGrid: function() {
                                    this._grid = new(g([H, K, F, ua]))({
                                            id: 'scaleGrid',
                                            columns: this._getGridLayout(),
                                            showLoadingMessage: !1,
                                            showFooter: !0,
                                            noDataMessage: '',
                                            selectionMode: 'none',
                                            gridScope: this,
                                            allowSelectAll: !0,
                                            store: this._gridStore,
                                            sort: [{ attribute: 'id', descending: !1 }],
                                        },
                                        this._gridContainer
                                    );
                                    this._grid.startup();
                                    this.own(
                                        this._grid.on(
                                            '.dgrid-header-row .field-selected:click',
                                            d.hitch(this, function(a) {
                                                this._toggleAll(
                                                    'INPUT' === a.target.tagName ?
                                                    a.target :
                                                    a.target.childNodes[0]
                                                );
                                            })
                                        )
                                    );
                                    this.own(
                                        this._grid.on(
                                            '.dgrid-row .field-selected:click',
                                            d.hitch(this, function(a) {
                                                a = 'INPUT' === a.target.tagName ?
                                                    a.target :
                                                    a.target.childNodes[0];
                                                var b =
                                                    a.parentNode.parentNode.parentNode.parentNode.id,
                                                    b = b.substring(b.indexOf('scaleGrid-row-') + 14);
                                                this._toggleScale(a, b);
                                            })
                                        )
                                    );
                                    this.own(
                                        this._grid.on(
                                            'scroll',
                                            d.hitch(this, function(a) {
                                                this._scrollPos =
                                                    ((this._scrollNode = (a && a.scrollTarget) || null) &&
                                                        this._scrollNode.scrollTop) ||
                                                    0;
                                            })
                                        )
                                    );
                                },
                                _getGridLayout: function() {
                                    var a = [];
                                    this._isProcessing ||
                                        (this._allTilesComplete && !this._refreshTilesEnabled) ||
                                        this._noSourceData ||
                                        !this._roleCanPublishTiles ||
                                        a.push(
                                            G({
                                                field: 'selected',
                                                sortable: !1,
                                                selectorType: 'checkbox',
                                            })
                                        );
                                    a.push({
                                        field: 'scaleLevel',
                                        label: this.i18n.grid.scaleLevel,
                                        sortable: !1,
                                        formatter: this._contentFormatter,
                                    });
                                    a.push({
                                        field: 'created',
                                        label: this._isSourceTilePackage ?
                                            this.i18n.grid.tilesPublished :
                                            this.i18n.grid.tilesCreated,
                                        sortable: !1,
                                        formatter: this._tilesFormatter,
                                    });
                                    a.push({
                                        field: 'expected',
                                        label: this.i18n.grid.totalTiles,
                                        sortable: !1,
                                        formatter: this._tilesFormatter,
                                    });
                                    a.push({
                                        field: 'pctComplete',
                                        label: this.i18n.grid.percentComplete,
                                        sortable: !1,
                                        formatter: this._contentFormatter,
                                    });
                                    a.push({
                                        field: 'storageSize',
                                        label: this.i18n.grid.storageSize,
                                        sortable: !1,
                                        formatter: this._sizeFormatter,
                                    });
                                    return a;
                                },
                                _levelsTabClick: function() {
                                    this._tab = this.TABS.LEVELS;
                                    this._updateMessage();
                                    this._checkToggled();
                                },
                                _extentTabClick: function() {
                                    var a = [
                                            [],
                                            []
                                        ],
                                        b;
                                    this._tab = this.TABS.EXTENT;
                                    this._defineExtent ||
                                        ((this._defineExtent = new J({ id: 'defineExtent' },
                                                this._extentContainer
                                            )), this._defineExtent.startup(), 4326 !==
                                            this._serviceFullExtent.spatialReference.wkid &&
                                            (b = Q.webMercatorToGeographic(
                                                new L(this._serviceFullExtent)
                                            )), (a[1][1] = parseFloat(
                                                b.ymax
                                            )), (a[0][0] = parseFloat(b.xmin)), (a[1][0] = parseFloat(
                                                b.xmax
                                            )), (a[0][1] = parseFloat(
                                                b.ymin
                                            )), this._defineExtent.set('extent', a), this.own(
                                                m.subscribe(
                                                    'define-extent/change',
                                                    d.hitch(this, '_onExtentChange')
                                                )
                                            ));
                                    v.set(this._messageDiv, 'innerHTML', this.i18n.defineExtent);
                                    this._checkToggled();
                                },
                                _onExtentChange: function(a) {
                                    this._serviceFullExtent.spatialReference.wkid ===
                                        a.spatialReference.wkid ?
                                        (this._updatedExtent = a) :
                                        O(
                                            a,
                                            this._serviceFullExtent.spatialReference,
                                            d.hitch(this, function(a) {
                                                a && a.length && (a = a.shift());
                                                this._updatedExtent = P(a);
                                            }),
                                            null,
                                            this._defineExtent.map
                                        );
                                    this._checkToggled();
                                },
                                _calculateIntersection: function(a, b) {
                                    a = new L(a);
                                    b = new L(b);
                                    return (b = a.intersects(b)) ? b.toJson() : null;
                                },
                                _cancelClick: function() {
                                    var a = this;
                                    Y.disableNode(a._cancelButton, !0);
                                    var b = function(b) {
                                        e.isDefined(b.error) &&
                                            (M.createSpecifiedDialog(I).show({
                                                title: a.i18n.errorTitle,
                                                message: a.i18n.cantCancelJob,
                                            }), a._cancelButton.set('disabled', !1));
                                    };
                                    h({
                                        url: a._hostedServer.adminUrl +
                                            '/rest/services/System/CachingControllers/GPServer/Manage%20Map%20Cache%20Tiles/jobs/' +
                                            a._jobId +
                                            '/cancel',
                                        content: { f: 'json', token: a._adminServerToken },
                                    }, { usePost: !0 }).then(b, b);
                                },
                                _checkCredits: function(a) {
                                    var b = new y(),
                                        c = esriGeowConfig.restBaseUrl + 'portals/self/cost';
                                    a = { generatedTileCount: a };
                                    this._isPortal || this._isSourceTilePackage ?
                                        b.resolve() :
                                        U.request({ url: c, content: a }).then(
                                            function(a) {
                                                b.resolve(a);
                                            },
                                            function() {
                                                b.resolve();
                                            }
                                        );
                                    return b;
                                },
                                _createClick: function() {
                                    var b = this._getAvgTileSize(this._serviceTileInfo),
                                        c = 0,
                                        f = 0,
                                        g = 0,
                                        k = [],
                                        m = [],
                                        n,
                                        q,
                                        r,
                                        v,
                                        w,
                                        z = 0,
                                        x = 0,
                                        C;
                                    a.forEach(
                                        this._grid.store.query(),
                                        d.hitch(this, function(a) {
                                            r = parseInt(a.created, 10);
                                            v = parseInt(a.expected, 10);
                                            w = parseInt(a.storageSize, 10);
                                            !0 === a.selected &&
                                                ((n =
                                                        parseInt(a.expected, 10) -
                                                        parseInt(a.created, 10)), 0 < n &&
                                                    (this._isPortal ?
                                                        k.push('' + a.scale) :
                                                        k.push(
                                                            a.id
                                                        )), esriGeowConfig.tilesOnDemandEnabled &&
                                                    !this._isPortal &&
                                                    this._updatedExtent ?
                                                    (z = (C = this._calculateIntersection(
                                                            this._updatedExtent,
                                                            this._serviceFullExtent
                                                        )) ?
                                                        z +
                                                        M.calculateExpectedTiles(
                                                            this._serviceTileInfo,
                                                            C,
                                                            this._serviceTileInfo.lods[a.id]
                                                        ) :
                                                        z + 0) :
                                                    (z += r <= v ? r : v), (x += v));
                                            f += r;
                                            g += w;
                                        })
                                    );
                                    m = this._grid.store.query().filter(
                                        function(a) {
                                            return !0 === a.selected;
                                        }.bind(this)
                                    );
                                    q = esriGeowConfig.tilesOnDemandEnabled &&
                                        !this._isPortal &&
                                        this._updatedExtent ?
                                        p.stringify(this._updatedExtent) :
                                        this._serviceFullExtent.xmin +
                                        ',' +
                                        this._serviceFullExtent.ymin +
                                        ',' +
                                        this._serviceFullExtent.xmax +
                                        ',' +
                                        this._serviceFullExtent.ymax;
                                    if (0 < k.length) {
                                        var c = esriGeowConfig.tilesOnDemandEnabled &&
                                            !this._isPortal &&
                                            this._updatedExtent ?
                                            z :
                                            x - z,
                                            y = this._formatSizeWithUnits(
                                                (0 < g && 0 < f ? g / f : b) * c
                                            ),
                                            A = this._isPortal ? k.join(';') : k.join(',');
                                        this._checkCredits(c).then(
                                            d.hitch(this, function(a) {
                                                var b =
                                                    '\x3cp\x3e' +
                                                    t.substitute(
                                                        this._isSourceTilePackage ?
                                                        this.i18n.aboutToPublish :
                                                        this.i18n.aboutToCreate, { tiles: c, storage: y }
                                                    ) +
                                                    '\x3c/p\x3e',
                                                    f = !1;
                                                !this._isPortal &&
                                                    !this._isSourceTilePackage &&
                                                    e.isDefined(a.transactionCreditCost) &&
                                                    e.isDefined(a.availableCredits) &&
                                                    (a.transactionCreditCost > a.availableCredits ?
                                                        (f = !0) :
                                                        (b +=
                                                            '\x3cp\x3e' +
                                                            t.substitute(this.i18n.aboutToCreateCost, {
                                                                credits: u.format(a.transactionCreditCost),
                                                                creditsLeft: u.format(a.availableCredits),
                                                            }) +
                                                            '\x3c/p\x3e'));
                                                b +=
                                                    '\x3cp\x3e' +
                                                    (this._isSourceTilePackage ?
                                                        this.i18n.reallyPublishTiles :
                                                        this.i18n.reallyCreateTiles) +
                                                    '\x3c/p\x3e';
                                                !this._isPortal && f ?
                                                    M.createSpecifiedDialog(I).show({
                                                        title: this.i18n.notice,
                                                        message: this.i18n.notEnoughCredits,
                                                    }) :
                                                    ((a = {
                                                        title: this._isSourceTilePackage ?
                                                            this.i18n.publishTiles :
                                                            this.i18n.createTiles,
                                                        message: b,
                                                        choiceOneTitle: this._isSourceTilePackage ?
                                                            this.i18n.yesPublishTiles :
                                                            this.i18n.yesCreateTiles,
                                                        choiceTwoTitle: this._isSourceTilePackage ?
                                                            this.i18n.noPublishTiles :
                                                            this.i18n.noCreateTiles,
                                                    }), (a.choiceOneHandler = d.hitch(
                                                        this,
                                                        function() {
                                                            this._createClicked = !0;
                                                            if (this._isPortal) {
                                                                Y.disableNode(this._cancelButton, !1);
                                                                var a =
                                                                    this.item.url.indexOf('/services/') + 10,
                                                                    b = this.item.url.indexOf(
                                                                        this._lastTileStatus.serviceName
                                                                    ),
                                                                    b = this.item.url.substring(a, b),
                                                                    a =
                                                                    this._hostedServer.adminUrl +
                                                                    '/rest/services/System/CachingControllers/GPServer/Manage%20Map%20Cache%20Tiles/submitJob',
                                                                    b = {
                                                                        f: 'json',
                                                                        token: this._adminServerToken,
                                                                        service_url: b +
                                                                            this._lastTileStatus.serviceName +
                                                                            ':' +
                                                                            this._lastTileStatus.type,
                                                                        constraining_extent: q,
                                                                        levels: A,
                                                                        update_mode: 'RECREATE_ALL_TILES',
                                                                        thread_count: -1,
                                                                    },
                                                                    c = d.hitch(this, function(a) {
                                                                        a.code && a.message ?
                                                                            M.createSpecifiedDialog(I).show({
                                                                                title: this.i18n.errorTitle,
                                                                                message: a.message,
                                                                            }) :
                                                                            ((this._jobId =
                                                                                    a.jobId), (this._isProcessing = !0), this
                                                                                ._isVisible &&
                                                                                ((this._updatedExtent = void 0), this._refreshUI(), setTimeout(
                                                                                    d.hitch(this, '_getStatus'),
                                                                                    this.TIME_TO_NEXT_UPDATE
                                                                                )));
                                                                    });
                                                                h({ url: a, content: b }, { usePost: !0 }).then(
                                                                    c,
                                                                    c
                                                                );
                                                            } else {
                                                                var f =
                                                                    this.item.url.replace(
                                                                        '/rest/',
                                                                        '/rest/admin/'
                                                                    ) + '/updateTiles';
                                                                9 >= l('ie') &&
                                                                    ((a = f.indexOf(
                                                                        'admin/services/'
                                                                    )), (b = f.indexOf('/MapServer')), (f =
                                                                        f.substring(0, a + 15) +
                                                                        encodeURIComponent(
                                                                            f.substring(a + 15, b)
                                                                        ) +
                                                                        f.substring(b)));
                                                                var a =
                                                                    (m.length && m[0]) ||
                                                                    R.find(function(a) {
                                                                        return this.serviceMinScale === a.scale;
                                                                    }),
                                                                    b =
                                                                    (m.length && m[m.length - 1]) ||
                                                                    R.find(function(a) {
                                                                        return this.serviceMaxScale === a.scale;
                                                                    }),
                                                                    g = !this.isPortal &&
                                                                    (e.isDefined(this.serviceMinLOD) ||
                                                                        e.isDefined(this.serviceMaxLOD)),
                                                                    c = g && a && a.id < this.serviceMinLOD,
                                                                    g = g && b && b.id > this.serviceMaxLOD,
                                                                    k =
                                                                    this._isSourceServiceDefinition &&
                                                                    (c || g),
                                                                    n = { levels: A, extent: q },
                                                                    p = d.hitch(this, function(a) {
                                                                        if (a.code && a.message) {
                                                                            var b = a.message;
                                                                            a.message &&
                                                                                -1 <
                                                                                a.message
                                                                                .toLowerCase()
                                                                                .indexOf('credit') ?
                                                                                (b = this.i18n.notEnoughCredits) :
                                                                                a.message &&
                                                                                -1 <
                                                                                a.message
                                                                                .toLowerCase()
                                                                                .indexOf('invalid extent') &&
                                                                                (b = this.i18n.invalidExtent);
                                                                            M.createSpecifiedDialog(I).show({
                                                                                title: this.i18n.errorTitle,
                                                                                message: b,
                                                                            });
                                                                        } else(this._isProcessing = !0), this._isVisible && ((this._updatedExtent = void 0), this._refreshUI(), setTimeout(d.hitch(this, '_getStatus'), this.TIME_TO_NEXT_UPDATE));
                                                                    });
                                                                k
                                                                    ?
                                                                    ((k = {}), c && (k.minLOD = a.id), g &&
                                                                        (k.maxLOD = b.id), U.request({
                                                                            url: f.replace(
                                                                                '/updateTiles',
                                                                                '/edit'
                                                                            ),
                                                                            content: {
                                                                                serviceDefinition: JSON.stringify(
                                                                                    k
                                                                                ),
                                                                            },
                                                                        }, { usePost: !0 }).then(
                                                                            function(a) {
                                                                                U.request({ url: f, content: n }, { usePost: !0 }).then(p, p);
                                                                            },
                                                                            function(a) {}
                                                                        )) :
                                                                    U.request({ url: f, content: n }, { usePost: !0 }).then(p, p);
                                                            }
                                                        }
                                                    )), (a.choiceTwoHandler = d.hitch(
                                                        this,
                                                        function() {}
                                                    )), this._createChoiceDlg().show(a));
                                            })
                                        );
                                    }
                                },
                                _createChoiceDlg: function() {
                                    var a;
                                    q.byId('choice-dialog') ?
                                        (a = N.prototype.statics.getInstance()) :
                                        ((a = new N()), k.once(a._dialog, 'hide', function() {
                                            a._dialog.destroyRecursive();
                                            a.destroyRecursive();
                                        }));
                                    return a;
                                },
                                _contentFormatter: function(a) {
                                    return (
                                        '\x3cspan class\x3d"esriContentTypeName"\x3e' +
                                        a +
                                        '\x3c/span\x3e'
                                    );
                                },
                                _tilesFormatter: function(a) {
                                    var b = 'esriContentTypeName';
                                    a && 1e10 <= a && (b = 'esriContentTypeNameSmall');
                                    return (
                                        '\x3cspan class\x3d"' +
                                        b +
                                        '"\x3e' +
                                        u.format(a) +
                                        '\x3c/span\x3e'
                                    );
                                },
                                _sizeFormatter: function(a) {
                                    return (
                                        '\x3cspan class\x3d"esriContentTypeName"\x3e' +
                                        M.sizeInMB(a) +
                                        '\x3c/span\x3e'
                                    );
                                },
                                _getAvgTileSize: function(a) {
                                    return 1e3 * (a.rows ? a.rows / 10 : 25.6);
                                },
                                _formatSizeWithUnits: function(a) {
                                    var b = a,
                                        c = ' ' + this.i18n.megabytes;
                                    1048567e3 < a ?
                                        ((b = a / 1048567e3), (c = ' ' + this.i18n.gigabytes)) :
                                        0 < a && (b = a / 1048567);
                                    b = Math.round(100 * b) / 100;
                                    return u.format(b) + c;
                                },
                                _enableButtons: function(a, b, c) {
                                    var d = this._tab === this.TABS.LEVELS ?
                                        this.i18n.tilesToCreate :
                                        this.i18n.tilesToCreateInExtent,
                                        e = this.i18n.tilesToPublish,
                                        f = this.i18n.noTilesToCreate,
                                        g = this.i18n.noTilesToPublish,
                                        h = '';
                                    a !== b ?
                                        ((a = b - a), (c = this._formatSizeWithUnits(
                                            c * a
                                        )), (h = t.substitute(
                                            this._isSourceTilePackage ? e : d, { tiles: a, storage: c }
                                        )), Y.disableNode(this._buildButton, !1)) :
                                        ((h = t.substitute(this._isSourceTilePackage ? g : f, {
                                            tiles: 0,
                                        })), Y.disableNode(this._buildButton, !0));
                                    v.set(this._messageDiv, 'innerHTML', h);
                                },
                                _disableButtons: function() {
                                    v.set(
                                        this._messageDiv,
                                        'innerHTML',
                                        this._isSourceTilePackage ?
                                        this.i18n.selectTilesPublish :
                                        this.i18n.selectTiles +
                                        '\x3cbr\x3e' +
                                        this.i18n.adjustVisibleRange
                                    );
                                    Y.disableNode(this._buildButton, !0);
                                },
                                _setScalesSelected: function(a) {
                                    a = t.substitute(this.i18n.scalesSelected, { scales: a });
                                    this._scalesSelectedSpan &&
                                        v.set(this._scalesSelectedSpan, 'innerHTML', a);
                                },
                                _toggleAll: function(b) {
                                    var c;
                                    b &&
                                        ((c = v.get(b, 'checked')), this._grid &&
                                            this._grid.store &&
                                            (a.forEach(this._grid.store.query(), function(a) {
                                                a.selected = c;
                                            }), this._checkToggled()));
                                },
                                _toggleScale: function(a, b) {
                                    if (this._grid.store) {
                                        if ((b = this._grid.store.query({ id: b }).shift()))
                                            b.selected = v.get(a, 'checked');
                                        this._checkToggled();
                                    }
                                },
                                _checkToggled: function() {
                                    var b = this,
                                        c = 0,
                                        d = 0,
                                        e = 0,
                                        f = 0,
                                        g = 0,
                                        h, k;
                                    b._grid.store ?
                                        (a.forEach(b._grid.store.query(), function(a) {
                                                var k = parseInt(a.created, 10),
                                                    l = parseInt(a.expected, 10),
                                                    m = parseInt(a.storageSize, 10);
                                                a.selected &&
                                                    (c++, esriGeowConfig.tilesOnDemandEnabled &&
                                                        !b._isPortal &&
                                                        b._updatedExtent ?
                                                        (d = (h = b._calculateIntersection(
                                                                b._updatedExtent,
                                                                b._serviceFullExtent
                                                            )) ?
                                                            d +
                                                            M.calculateExpectedTiles(
                                                                b._serviceTileInfo,
                                                                h,
                                                                b._serviceTileInfo.lods[a.id]
                                                            ) :
                                                            d + 0) :
                                                        (d += k <= l ? k : l), (e += l));
                                                f += k;
                                                g += m;
                                            }), c ?
                                            ((k = 0 < g ?
                                                    g / f :
                                                    b._getAvgTileSize(
                                                        b._serviceTileInfo
                                                    )), esriGeowConfig.tilesOnDemandEnabled &&
                                                !b._isPortal &&
                                                b._updatedExtent ?
                                                b._enableButtons(e - d, e, k) :
                                                b._enableButtons(d, e, k)) :
                                            b._disableButtons()) :
                                        b._disableButtons();
                                    b._setScalesSelected(c);
                                },
                            }
                        );
                    W.prototype.statics = {
                        getInstance: function() {
                            this._instance || (this._instance = new W());
                            return this._instance;
                        },
                    };
                    return W;
                }
            );
        },
        'arcgisonline/pages/serviceUtil': function() {
            define(
                'require exports tslib dojo/Deferred dojo/json dojo/promise/all dojo/sniff esri/lang esri/layers/FeatureLayer esri/request ./pageUtil ./utils/arrays arcgisonline/sharing/dijit/Role ../sharing/util ../esriGeowConfig'.split(
                    ' '
                ),
                function(c, g, f, b, e, h, d, a, k, n, l, m, p, r, u) {
                    b = f.__importDefault(b);
                    e = f.__importDefault(e);
                    h = f.__importDefault(h);
                    d = f.__importDefault(d);
                    a = f.__importDefault(a);
                    k = f.__importDefault(k);
                    n = f.__importDefault(n);
                    l = f.__importDefault(l);
                    m = f.__importDefault(m);
                    p = f.__importDefault(p);
                    r = f.__importDefault(r);
                    u = f.__importDefault(u);
                    return (function() {
                        function c() {}
                        c.getDateFields = function(a) {
                            return ((null === a || void 0 === a ? void 0 : a.fields) || [])
                                .filter(function(a) {
                                    return (
                                        'esriFieldTypeDate' ===
                                        (null === a || void 0 === a ? void 0 : a.type)
                                    );
                                });
                        };
                        c.fetchServerToken = function(a, b) {
                            var c = a.portal;
                            return (a = b || a.url) ?
                                r.default
                                .request({
                                    url: r.default.getSecureUrl(
                                        c.portalUrl + 'generateToken'
                                    ),
                                    content: { serverUrl: a },
                                }, { usePost: !0 })
                                .then(function(a) {
                                    return a.token;
                                }) :
                                null;
                        };
                        c.fetchItemAdminUrl = function(a, b) {
                            var c;
                            return a.portal.isPortal ?
                                (null === b || void 0 === b ? 0 : b.adminUrl) && b.url ?
                                this.getAdminUrl(a, b) :
                                a.url :
                                (null === (c = a.url) || void 0 === c ?
                                    void 0 :
                                    c.replace('/rest/', '/rest/admin/')) || null;
                        };
                        c.getAdminUrl = function(a, b) {
                            var c = a.url;
                            b = c.replace(c.split('/rest/')[0], b.adminUrl);
                            return a.isSDS ?
                                b.replace('/rest/', '/rest/admin/') :
                                b
                                .replace('/rest/', '/admin/')
                                .replace('/FeatureServer', '.MapServer')
                                .replace('/MapServer', '.MapServer')
                                .replace('/VectorTileServer', '.VectorTileServer')
                                .replace('/SceneServer', '.SceneServer')
                                .replace('/ImageServer', '.ImageServer');
                        };
                        c.fetchServiceLayers = function(a) {
                            return r.default
                                .request({ url: a + '/layers' })
                                .then(function(a) {
                                    return (null === a || void 0 === a ? void 0 : a.layers) || [];
                                });
                        };
                        c.renameServiceLayers = function(a, c) {
                            var d = new b.default(),
                                e = c.adminUrl + '/' + a.layerId;
                            a = { name: a.layerRename };
                            'Map Service' === c.type ?
                                ((e += '/edit'), (c = { layerDefinition: JSON.stringify(a) })) :
                                ((e += '/updateDefinition'), (c = {
                                    updateDefinition: JSON.stringify(a),
                                    async: !1,
                                }));
                            r.default.request({ url: e, content: c }, { usePost: !0 }).then(
                                function() {
                                    return d.resolve();
                                },
                                function(a) {
                                    return d.reject(a);
                                }
                            );
                            return d;
                        };
                        c.updateServiceDefinition = function(a) {
                            var c = a.layerId,
                                d = a.item;
                            a = a.definition;
                            var e = new b.default();
                            r.default
                                .request({
                                    url: d.adminUrl + '/' + c + '/updateDefinition',
                                    content: {
                                        updateDefinition: JSON.stringify(a),
                                        async: !1,
                                    },
                                }, { usePost: !0 })
                                .then(
                                    function() {
                                        return e.resolve();
                                    },
                                    function(a) {
                                        return e.reject(a);
                                    }
                                );
                            return e;
                        };
                        c.queryGeocodeCounts = function(a) {
                            var c = [],
                                d = a.url,
                                e = { where: '1\x3d1', returnCountOnly: !0 },
                                f = a.reviewTable,
                                g = d + '/' + (a.layers || [])[0].id + '/query',
                                k = new b.default();
                            a.canUpdate && a.isHostedService && a.hasGeocodeReviewTable ?
                                (c.push(r.default.request({ url: g, content: e })), f &&
                                    ((a = d + '/' + f.id + '/query'), c.push(
                                        r.default.request({ url: a, content: e })
                                    )), h.default(c).then(
                                        function(a) {
                                            var b =
                                                ((null === a || void 0 === a ? void 0 : a.length) &&
                                                    a[0].count) ||
                                                0;
                                            k.resolve({
                                                successful: b,
                                                total: b +
                                                    ((1 <
                                                            (null === a || void 0 === a ? void 0 : a.length) &&
                                                            a[1].count) ||
                                                        0),
                                            });
                                        },
                                        function(a) {
                                            k.resolve(null);
                                        }
                                    )) :
                                k.resolve(null);
                            return k;
                        };
                        c.adjustHostedServerForProtocol = function(a) {
                            return 'https:' === location.protocol ?
                                a.replace('http:', 'https:').replace(':6080', ':6443') :
                                a.replace('https:', 'http:').replace(':6443', ':6080');
                        };
                        c.checkForResources = function(c) {
                            var d = c.itemUrl + '/resources/styles/root.json';
                            'Vector Tile Service' !== c.type ||
                                a.default.isDefined(c.hasResources) ?
                                ((d = new b.default()), d.resolve(!!c.hasResources)) :
                                (d = r.default.request({ url: d }).then(
                                    function() {
                                        return !0;
                                    },
                                    function() {
                                        return !1;
                                    }
                                ));
                            return d;
                        };
                        c.setFeatureServiceScaleRanges = function(a) {
                            var c = this,
                                d = new b.default(),
                                e = a.url,
                                f = a.sourceData || {},
                                g = a.featureLayers || [];
                            !a.numViews &&
                                a.isHostedService &&
                                'Feature Service' === a.type &&
                                'Service Definition' !== f.type ?
                                h
                                .default(
                                    g.map(function(b) {
                                        return c.setScaleRange(e + '/' + b.id, a, b.id);
                                    })
                                )
                                .then(function() {
                                    return d.resolve(!0);
                                }) :
                                d.resolve(!0);
                            return d;
                        };
                        c.setScaleRange = function(c, d, f) {
                            var g = new b.default(),
                                h = new k.default(c);
                            c = d.adminUrl;
                            f = a.default.isDefined(f) ? '/' + f : '';
                            var l = '' + c + f + '/updateDefinition';
                            h
                                .addPlugin('esri/plugins/FeatureLayerStatistics')
                                .then(function() {
                                    h.statisticsPlugin.getSuggestedScaleRange().then(
                                        function(a) {
                                            a = {
                                                updateDefinition: e.default.stringify({
                                                    maxScale: a.maxScale || 0,
                                                    minScale: a.relaxedMinScale || 0,
                                                }),
                                            };
                                            r.default
                                                .request({ url: l, content: a }, { usePost: !0 })
                                                .then(
                                                    function() {
                                                        return g.resolve(d);
                                                    },
                                                    function() {
                                                        return g.resolve(d);
                                                    }
                                                );
                                        },
                                        function(a) {
                                            g.resolve(d);
                                        }
                                    );
                                });
                            return g;
                        };
                        c.getSuggestedScaleRange = function(a) {
                            var c = new b.default(),
                                d = new k.default(a);
                            d.addPlugin('esri/plugins/FeatureLayerStatistics').then(
                                function() {
                                    d.statisticsPlugin
                                        .getSuggestedScaleRange({
                                            sampleSize: 100,
                                            forPublishingTiles: !0,
                                        })
                                        .then(
                                            function(a) {
                                                return c.resolve(a);
                                            },
                                            function(a) {
                                                c.resolve(null);
                                            }
                                        );
                                },
                                function(a) {
                                    c.resolve(null);
                                }
                            );
                            return c;
                        };
                        c.encodeServiceName = function(a, b) {
                            if (
                                d.default('ie') ||
                                d.default('trident') ||
                                d.default('edge')
                            ) {
                                var c = a.indexOf('admin/services/Hosted/');
                                b = r.default.isPortal() && !b ?
                                    -1 < a.indexOf('.MapServer') ?
                                    a.indexOf('.MapServer') :
                                    -1 < a.indexOf('.VectorTileServer') ?
                                    a.indexOf('.VectorTileServer') :
                                    a.indexOf('/SceneServer') :
                                    a.indexOf('/FeatureServer');
                                0 < c &&
                                    (a =
                                        a.substring(0, c + 22) +
                                        encodeURIComponent(a.substring(c + 22, b)) +
                                        a.substring(b));
                            }
                            return a;
                        };
                        c.fetchPartialUpdateScenePublishingCredits = function(a, c, d) {
                            var e = new b.default(),
                                g = (a.adminServiceInfo || {}).layers || [],
                                k = c.serviceInfo || {},
                                l = k.layers || [];
                            a = a.url + '/extractChanges';
                            var n = {
                                    returnIdsOnly: !0,
                                    returnInserts: !0,
                                    returnUpdates: !0,
                                    returnDeletes: !0,
                                    layers: [],
                                    layerServerGens: [],
                                    async: !1,
                                    dataFormat: 'json',
                                },
                                p = {},
                                q = { textured: 0, untextured: 0 },
                                t = (c.portal || {}).portalUrl + 'portals/self/usageCost',
                                u = { name: k.name, etype: 'tilegencnt', stype: 'scene' },
                                v;
                            d.forEach(function(a) {
                                var b, c;
                                n.layers.push(a.id);
                                (v = m.default.find(g, function(b) {
                                    return b.id === a.id;
                                })) ||
                                1 !== g.length ||
                                    (v = g[0]);
                                if (v) {
                                    var d = a.id;
                                    d !== v.id && (d = v.id);
                                    v.isTextured = !(null ===
                                        (c = null === (b = v) || void 0 === b ?
                                            void 0 :
                                            b.multiPatchInfo) ||
                                        void 0 === c ||
                                        !c.hasTexture);
                                    p[d] = v;
                                }
                            });
                            l.forEach(function(a) {
                                -1 < n.layers.indexOf(a.id) &&
                                    a.serviceUpdateTimeStamp &&
                                    n.layerServerGens.push({
                                        id: a.id,
                                        serverGen: a.serviceUpdateTimeStamp.lastUpdate,
                                    });
                            });
                            r.default
                                .request({
                                    url: a,
                                    content: f.__assign(f.__assign({}, n), {
                                        layers: JSON.stringify(n.layers),
                                        layerServerGens: JSON.stringify(n.layerServerGens),
                                    }),
                                }, { usePost: !0 })
                                .then(
                                    function(a) {
                                        (null === a || void 0 === a ? 0 : a.edits) ?
                                        (Object.keys(a.edits).forEach(function(b) {
                                                b = a.edits[b];
                                                var c = b.objectIds;
                                                q[p[b.id].isTextured ? 'textured' : 'untextured'] +=
                                                    c.adds.length + c.updates.length + c.deletes.length;
                                            }), h
                                            .default({
                                                textured: 0 < q.textured ?
                                                    r.default.request({
                                                        url: t,
                                                        content: f.__assign({ num: q.textured, task: 'textured' },
                                                            u
                                                        ),
                                                    }) :
                                                    null,
                                                untextured: 0 < q.untextured ?
                                                    r.default.request({
                                                        url: t,
                                                        content: f.__assign({ num: q.untextured, task: 'nontextured' },
                                                            u
                                                        ),
                                                    }) :
                                                    null,
                                            })
                                            .then(
                                                function(a) {
                                                    var b, c;
                                                    a =
                                                        ((null ===
                                                            (b = null === a || void 0 === a ?
                                                                void 0 :
                                                                a.textured) || void 0 === b ?
                                                            void 0 :
                                                            b.credits) || 0) +
                                                        ((null ===
                                                            (c = null === a || void 0 === a ?
                                                                void 0 :
                                                                a.untextured) || void 0 === c ?
                                                            void 0 :
                                                            c.credits) || 0);
                                                    e.resolve(a);
                                                },
                                                function() {
                                                    e.resolve(0);
                                                }
                                            )) :
                                        e.resolve(0);
                                    },
                                    function(a) {
                                        e.resolve(0);
                                    }
                                );
                            return e;
                        };
                        c.fetchScenePublishingCredits = function(a, c) {
                            var d = new b.default(),
                                e = a.adminServiceInfo || {},
                                g = e.layers || [],
                                k = a.url + '/query',
                                l = {},
                                n = {},
                                p = { textured: 0, untextured: 0 },
                                q = (a.portal || {}).portalUrl + 'portals/self/usageCost',
                                t = { name: e.name, etype: 'tilegencnt', stype: 'scene' },
                                u;
                            c.forEach(function(a) {
                                var b, c;
                                (u = m.default.find(g, function(b) {
                                    return b.id === a.id;
                                })) ||
                                1 !== g.length ||
                                    (u = g[0]);
                                if (u) {
                                    var d = a.id;
                                    d !== u.id && (d = u.id);
                                    u.isTextured = !(null ===
                                        (c = null === (b = u) || void 0 === b ?
                                            void 0 :
                                            b.multiPatchInfo) ||
                                        void 0 === c ||
                                        !c.hasTexture);
                                    n[d] = u;
                                    l[d] = '1\x3d1';
                                }
                            });
                            r.default
                                .request({
                                    url: k,
                                    content: f.__assign(f.__assign({}, {}), {
                                        layerDefs: JSON.stringify(l),
                                        returnCountOnly: !0,
                                    }),
                                })
                                .then(
                                    function(a) {
                                        (null === a || void 0 === a ? 0 : a.layers) ?
                                        (a.layers.forEach(function(a) {
                                                p[n[a.id].isTextured ? 'textured' : 'untextured'] +=
                                                    a.count;
                                            }), h
                                            .default({
                                                textured: 0 < p.textured ?
                                                    r.default.request({
                                                        url: q,
                                                        content: f.__assign({ num: p.textured, task: 'textured' },
                                                            t
                                                        ),
                                                    }) :
                                                    null,
                                                untextured: 0 < p.untextured ?
                                                    r.default.request({
                                                        url: q,
                                                        content: f.__assign({
                                                                num: p.untextured,
                                                                task: 'nontextured',
                                                            },
                                                            t
                                                        ),
                                                    }) :
                                                    null,
                                            })
                                            .then(
                                                function(a) {
                                                    var b, c;
                                                    a =
                                                        ((null ===
                                                            (b = null === a || void 0 === a ?
                                                                void 0 :
                                                                a.textured) || void 0 === b ?
                                                            void 0 :
                                                            b.credits) || 0) +
                                                        ((null ===
                                                            (c = null === a || void 0 === a ?
                                                                void 0 :
                                                                a.untextured) || void 0 === c ?
                                                            void 0 :
                                                            c.credits) || 0);
                                                    d.resolve(a);
                                                },
                                                function() {
                                                    d.resolve(0);
                                                }
                                            )) :
                                        d.resolve(0);
                                    },
                                    function() {
                                        d.resolve(0);
                                    }
                                );
                            return d;
                        };
                        c.findManagedDataStoreItems = function(a) {
                            return r.default.request({ url: a + '/admin/data/findItems', content: { managed: !0 } }, { useProxy: !0 });
                        };
                        c.isBackedBySDS = function(a) {
                            var c,
                                d,
                                e = new b.default(),
                                f = (null ===
                                    (d = null === (c = u.default) || void 0 === c ?
                                        void 0 :
                                        c.self) || void 0 === d ?
                                    void 0 :
                                    d.user) || {};
                            c = new p.default({ portalUser: f });
                            var g = !1,
                                h;
                            f &&
                                (c.isBasedOnAdmin() || c.isBasedOnPublisher()) &&
                                a &&
                                !l.default.isEmptyObject(a) ?
                                this.findManagedDataStoreItems(a.adminUrl).then(
                                    function(a) {
                                        var b;
                                        h = ((null === a || void 0 === a ? void 0 : a.items) ||
                                                a || [])
                                            .filter(function(a) {
                                                var b;
                                                return (
                                                    'arcgis data store' ===
                                                    (null ===
                                                        (b = null === a || void 0 === a ?
                                                            void 0 :
                                                            a.provider) || void 0 === b ?
                                                        void 0 :
                                                        b.toLowerCase())
                                                );
                                            });
                                        g = !(null === (b = h) || void 0 === b || !b.length);
                                        e.resolve(g);
                                    },
                                    function() {
                                        e.resolve(g);
                                    }
                                ) :
                                e.resolve(g);
                            return e;
                        };
                        c.isImageManagementTask = function(a) {
                            if (!a ||
                                -1 === a.indexOf('RasterAnalysisTools') ||
                                -1 === a.indexOf('GPServer/')
                            )
                                return !1;
                            a = a.slice(a.indexOf('GPServer/') + 9); -
                            1 < a.indexOf('/') && (a = a.slice(0, a.indexOf('/')));
                            var b = 'buildfootprints buildoverview calculatestatistics definenodata computecolorcorrection computeseamlines'.split(
                                ' '
                            );
                            return a && -1 < b.indexOf(a.toLowerCase());
                        };
                        c.getBackingDataStoreInfo = function(a) {
                            var c,
                                d,
                                e = new b.default(),
                                f = (null ===
                                    (d = null === (c = u.default) || void 0 === c ?
                                        void 0 :
                                        c.self) || void 0 === d ?
                                    void 0 :
                                    d.user) || {};
                            c = new p.default({ portalUser: f });
                            var g = !0,
                                h = !1,
                                k;
                            f &&
                                (c.isBasedOnAdmin() || c.isBasedOnPublisher()) &&
                                a &&
                                !l.default.isEmptyObject(a) ?
                                this.findManagedDataStoreItems(a.adminUrl).then(
                                    function(a) {
                                        var b;
                                        k = ((null === a || void 0 === a ? void 0 : a.items) ||
                                                a || [])
                                            .filter(function(a) {
                                                var b;
                                                return (
                                                    'arcgis data store' ===
                                                    (null ===
                                                        (b = null === a || void 0 === a ?
                                                            void 0 :
                                                            a.provider) || void 0 === b ?
                                                        void 0 :
                                                        b.toLowerCase())
                                                );
                                            });
                                        g =
                                            0 ===
                                            ((null === a || void 0 === a ? void 0 : a.items) ||
                                                a || []).length;
                                        h = !(null === (b = k) || void 0 === b || !b.length);
                                        e.resolve({ isSDS: h, none: g });
                                    },
                                    function() {
                                        e.resolve({ isSDS: h, none: g });
                                    }
                                ) :
                                e.resolve({ isSDS: h, none: g });
                            return e;
                        };
                        c.cacheMaxAgeCheck = function(a, b) {
                            var c;
                            if (!a.ignoreCache &&
                                a.layers &&
                                'Feature Service' === a.type &&
                                a.isHostedService &&
                                0 <
                                (null ===
                                    (c = null === b || void 0 === b ?
                                        void 0 :
                                        b.adminServiceInfo) || void 0 === c ?
                                    void 0 :
                                    c.cacheMaxAge) &&
                                ((a.ignoreCache = function() {
                                    var a = this;
                                    this.ignoreCacheFlagTimestamp = new Date().getTime();
                                    var b = function(b) {
                                        b.content = b.content || {};
                                        b.content._ts = a.ignoreCacheFlagTimestamp;
                                        return b;
                                    };
                                    this.ignoreCacheFlag ||
                                        (n.default.setRequestPreCallback(
                                            b
                                        ), (this.ignoreCacheFlag = !0));
                                }), a.layers)
                            ) {
                                var d = 0;
                                a.layers.forEach(function(a) {
                                    var b;
                                    (null === (b = a.editingInfo) || void 0 === b ?
                                        0 :
                                        b.lastEditDate) &&
                                    d < a.editingInfo.lastEditDate &&
                                        (d = a.editingInfo.lastEditDate);
                                });
                                0 < d &&
                                    (new Date().getTime() - d) / 1e3 <
                                    b.adminServiceInfo.cacheMaxAge &&
                                    a.ignoreCache();
                            }
                        };
                        c.isServiceProxy = function(a) {
                            var b = (a || '').toLowerCase();
                            a = -1 < b.indexOf('/servers/') &&
                                -1 < b.indexOf('/rest/services/');
                            var c =
                                u.default.self.isPortal &&
                                -1 < b.indexOf(u.default.self.portalHostname),
                                b = !u.default.self.isPortal && -1 < b.indexOf('.arcgis.com');
                            return a && (c || b);
                        };
                        return c;
                    })();
                }
            );
        },
        'arcgisonline/sharing/dijit/dialog/MembershipRequestsDlg': function() {
            define(
                'require esri/declare esri/Evented dojo/_base/lang dojo/_base/array dojo/on dojo/dom-attr dojo/dom-class dojo/dom-construct dojo/dom-style dojo/query dojo/string dojo/topic dojo/date/locale dojo/store/Memory dijit/a11yclick dijit/Dialog dijit/form/Button dijit/_WidgetBase dijit/_TemplatedMixin dijit/_WidgetsInTemplateMixin ../../../esriGeowConfig ../../../pages/utils/icons ../../util ../Grid ./GeneralDlg dojo/i18n!arcgisonline/nls/arcgisonline dojo/text!arcgisonline/sharing/dijit/dialog/templates/MembershipRequestsDlg.html'.split(
                    ' '
                ),
                function(
                    c,
                    g,
                    f,
                    b,
                    e,
                    h,
                    d,
                    a,
                    k,
                    n,
                    l,
                    m,
                    p,
                    r,
                    u,
                    t,
                    q,
                    v,
                    C,
                    z,
                    y,
                    x,
                    w,
                    A,
                    E,
                    B,
                    D,
                    H
                ) {
                    var G = g(
                        'arcgisonline.sharing.dijit.dialog.MembershipRequestsDlg', [C, z, y, f], {
                            baseClass: 'esriMembershipRequestsDlg',
                            widgetsInTemplate: !0,
                            templateString: H,
                            groupId: null,
                            postMixInProperties: function() {
                                this.inherited(arguments);
                                this.i18n = b.mixin({}, D.common);
                                b.mixin(this.i18n, D.membershipRequestsDlg);
                                b.mixin(this.i18n, D.groupMembershipRequestsGrid);
                                b.mixin(this.i18n, { error: D.inviteUsersDlg.error });
                            },
                            postCreate: function() {
                                this.loadConnections();
                            },
                            loadConnections: function() {
                                this.own(
                                    l('.jevent').on('click', function(a) {
                                        a.preventDefault();
                                    }),
                                    t(
                                        this._closeBtn,
                                        b.hitch(this, function() {
                                            this._dialog.hide();
                                        })
                                    ),
                                    p.subscribe(
                                        'onApplicationAccept',
                                        b.hitch(this, 'onApplicationApprove')
                                    ),
                                    p.subscribe(
                                        'onApplicationDecline',
                                        b.hitch(this, 'onApplicationDecline')
                                    )
                                );
                            },
                            show: function(a) {
                                this.groupId = a;
                                this.clearStore();
                                this.requestApplications();
                                this._dialog.show();
                            },
                            approveApplication: function(a, c) {
                                var d = A.getUser(),
                                    e = this._requestsGrid._grid.store;
                                d &&
                                    A.request({
                                        url: x.restBaseUrl +
                                            'community/groups/' +
                                            this.groupId +
                                            '/applications/' +
                                            c +
                                            '/accept',
                                    }, { usePost: !0 }).then(
                                        b.hitch(this, function() {
                                            e.remove(a.id);
                                            p.publish('onApplicationAccept', {});
                                        }),
                                        b.hitch(this, function() {
                                            var b = new B();
                                            h.once(b._dialog, 'hide', function() {
                                                b._dialog.destroyRecursive();
                                                b.destroyRecursive();
                                            });
                                            b.show({
                                                title: this.i18n.errorTitle,
                                                message: m.substitute(
                                                    this.i18n.error.unableToAddPrivs, { user: c }
                                                ),
                                            });
                                            e.remove(a.id);
                                            p.publish('onApplicationAccept', {});
                                        })
                                    );
                            },
                            declineApplication: function(a, c) {
                                var d = A.getUser(),
                                    e = this._requestsGrid._grid.store;
                                d &&
                                    A.request({
                                        url: x.restBaseUrl +
                                            'community/groups/' +
                                            this.groupId +
                                            '/applications/' +
                                            c +
                                            '/decline',
                                    }, { usePost: !0 }).then(
                                        b.hitch(this, function() {
                                            e.remove(a.id);
                                            p.publish('onApplicationDecline', {});
                                        })
                                    );
                            },
                            onApplicationApprove: function() {
                                0 === this._requestsGrid._grid.store.query().length ?
                                    this.hide() :
                                    this.refresh();
                            },
                            onApplicationDecline: function() {
                                0 === this._requestsGrid._grid.store.query().length ?
                                    this.hide() :
                                    this.refresh();
                            },
                            requestApplications: function() {
                                var a = this._requestsGrid._grid.store;
                                return A.request({
                                    url: x.restBaseUrl +
                                        'community/groups/' +
                                        this.groupId +
                                        '/applications',
                                }).then(
                                    b.hitch(this, function(b) {
                                        b.applications &&
                                            (e.forEach(b.applications, function(b, c) {
                                                b.id = c;
                                                a.put(b);
                                            }), this.refresh());
                                    })
                                );
                            },
                            clearStore: function() {
                                this._requestsGrid || this.createGrid();
                                var a =
                                    (this._requestsGrid &&
                                        this._requestsGrid._grid &&
                                        this._requestsGrid._grid.store) ||
                                    void 0;
                                a &&
                                    e.forEach(b.clone(a.query()), function(b) {
                                        a.remove(b.id);
                                    });
                            },
                            createGrid: function() {
                                this._requestsGrid = new E({
                                        id: 'requestsGrid',
                                        columns: this.getRequestGridColumns(),
                                        noDataMessage: this.i18n.noMembershipRequests,
                                        showLoadingMessage: !1,
                                        showHeader: !1,
                                        showFooter: !1,
                                        selectionMode: 'none',
                                        rowsPerPage: 5,
                                        className: 'requests-grid',
                                        store: new u({
                                            idProperty: 'id',
                                            label: 'fullname',
                                            data: [],
                                        }),
                                        sort: [{ attribute: 'received', descending: !1 }],
                                    },
                                    this._requestsGridContainer
                                );
                                this._requestsGrid.startup();
                                l('.dgrid-status').forEach(function(b) {
                                    b.tabIndex = -1;
                                    a.add(b, 'left');
                                });
                            },
                            getRequestGridColumns: function() {
                                return {
                                    fullname: {
                                        label: ' ',
                                        sortable: !1,
                                        formatter: b.hitch(this, function(a) {
                                            return a;
                                        }),
                                    },
                                    username: {
                                        label: ' ',
                                        sortable: !1,
                                        formatter: b.hitch(this, function(a) {
                                            return a;
                                        }),
                                    },
                                    received: {
                                        label: ' ',
                                        sortable: !1,
                                        formatter: b.hitch(this, function(a) {
                                            a = new Date(parseFloat(a));
                                            return r.format(a, {
                                                selector: 'date',
                                                formatLength: 'long',
                                            });
                                        }),
                                    },
                                    yourResponse: {
                                        label: ' ',
                                        sortable: !1,
                                        renderCell: b.hitch(this, function(a) {
                                            var c = a.username,
                                                d = k.create('div', { className: 'esriFloatTrailing' }),
                                                e = k.create(
                                                    'button', {
                                                        innerHTML: "\x3cspan class\x3d'text-green'\x3e" +
                                                            w.inline.check['16'] +
                                                            '\x3c/span\x3e' +
                                                            this.i18n.approve,
                                                        className: 'btn-link btn-link-off-black clickable margin-right-1',
                                                    },
                                                    d
                                                ),
                                                f = k.create(
                                                    'button', {
                                                        innerHTML: "\x3cspan class\x3d'text-red'\x3e" +
                                                            w.inline['minus-circle']['16'] +
                                                            '\x3c/span\x3e' +
                                                            this.i18n.decline,
                                                        className: 'btn-link btn-link-off-black clickable',
                                                    },
                                                    d
                                                );
                                            this.own(
                                                t(e, b.hitch(this, 'approveApplication', a, c)),
                                                t(f, b.hitch(this, 'declineApplication', a, c))
                                            );
                                            return d;
                                        }),
                                    },
                                };
                            },
                            hide: function() {
                                this._dialog.hide();
                            },
                            refresh: function() {
                                if (
                                    this._requestsGrid._grid &&
                                    this._requestsGrid._grid._started
                                ) {
                                    var a = this._requestsGrid._grid._currentPage || 1,
                                        b = this._requestsGrid._grid.store ?
                                        this._requestsGrid._grid.store.query().length :
                                        0;
                                    h.once(
                                        this._requestsGrid._grid,
                                        'dgrid-refresh-complete',
                                        function(c) {
                                            c.grid._currentPage !== a && 0 < b && c.grid.gotoPage(a);
                                        }
                                    );
                                    this._requestsGrid._grid.resize();
                                    this._requestsGrid._grid.refresh();
                                }
                            },
                        }
                    );
                    G.prototype.statics = {
                        getInstance: function() {
                            this._instance || (this._instance = new G());
                            return this._instance;
                        },
                    };
                    return G;
                }
            );
        },
        'arcgisonline/sharing/dijit/dialog/RendererDlg': function() {
            define(
                [
                    'dojo',
                    'dijit',
                    'dojox',
                    'dojo/require!dijit/_Widget,dijit/_Templated,dijit/Dialog,arcgisonline/sharing/dijit/dialog/SymbolDlg',
                ],
                function(c, g, f) {
                    c.provide('arcgisonline.sharing.dijit.dialog.RendererDlg');
                    c.require('dijit._Widget');
                    c.require('dijit._Templated');
                    c.require('dijit.Dialog');
                    c.require('arcgisonline.sharing.dijit.dialog.SymbolDlg');
                    c.declare(
                        'arcgisonline.sharing.dijit.dialog.RendererDlg', [g._Widget, g._Templated], {
                            util: arcgisonline.sharing.util,
                            folder: arcgisonline.sharing.geow.Folder,
                            widgetsInTemplate: !0,
                            templateString: '\x3cdiv class\x3d"widgetContainer"\x3e\r\n  \x3cdiv dojotype\x3d"dijit.Dialog" id\x3d"renderer-dialog" title\x3d"${i18n.rendererDlgTitle}" execute\x3d""\x3e\r\n  \t\r\n    \x3cdiv\x3e\r\n      \x3ctable cellspacing\x3d"10" width\x3d"100%"\x3e\x3ctbody\x3e\r\n\t\t\t\x3ctr\x3e\x3ctd\x3e\r\n        \x3clabel\x3e${i18n.labelLabel}\x3c/label\x3e\r\n      \x3c/td\x3e\x3ctd\x3e\r\n        \x3cdiv dojoAttachPoint\x3d"rendererLabel" dojotype\x3d"dijit.form.TextBox" trim\x3d"true" required\x3d"true" style\x3d"width:100%; padding:2px;"\x3e\x3c/div\x3e\r\n      \x3c/td\x3e\x3c/tr\x3e\r\n      \x3ctr\x3e\x3ctd\x3e\r\n        \x3clabel\x3e${i18n.valueLabel}\x3c/label\x3e\r\n      \x3c/td\x3e\x3ctd\x3e\r\n        \x3clabel id\x3d"renderer-value"\x3e\x3c/label\x3e\r\n      \x3c/td\x3e\x3c/tr\x3e\r\n\t\t\t\x3c/tbody\x3e\x3c/table\x3e\r\n      \x3cdiv\x3e\r\n        \x3cbutton dojotype\x3d"dijit.form.Button" type\x3d"button" dojoAttachPoint\x3d"_rendererSymbolUpdateButton" class\x3d"default esriFloatLeading" dojoAttachEvent\x3d"onClick:_onRendererSymbolUpdateButtonClick"\x3e\r\n          \x3cspan\x3e${i18n.changeSymbolBtn}\x3c/span\x3e\r\n        \x3c/button\x3e\r\n        \x3cbutton dojoAttachEvent\x3d"onClick:_onCancelClick" dojoAttachPoint\x3d"rendererCancelBtn" class\x3d"jevent cancel esriFloatTrailing" type\x3d"cancel" dojotype\x3d"dijit.form.Button"\x3e\r\n          ${i18n.cancel}\r\n        \x3c/button\x3e\r\n        \x3cbutton dojoAttachEvent\x3d"onClick:_onOkClick" dojoAttachPoint\x3d"rendererOkBtn" class\x3d"jevent primary esriFloatTrailing" dojotype\x3d"dijit.form.Button"\x3e\r\n          ${i18n.ok}\r\n        \x3c/button\x3e\r\n\t\t\t\x3c/div\x3e\r\n      \x3cdiv style\x3d"clear:both;"\x3e\r\n      \x3c/div\x3e\r\n    \x3c/div\x3e\r\n\t\t\r\n  \x3c/div\x3e\r\n\x3c/div\x3e\r\n',
                            i18n: null,
                            symbol: null,
                            onRendererSymbolChangeHandler: null,
                            onRendererSymbolChangeCancelHandler: null,
                            applyRendererEditsHandler: null,
                            statics: {
                                _instance: null,
                                getInstance: function() {
                                    null == this._instance &&
                                        (this._instance = new arcgisonline.sharing.dijit.dialog
                                            .RendererDlg());
                                    return this._instance;
                                },
                            },
                            postMixInProperties: function() {
                                this.inherited(arguments);
                                this.i18n = c.clone(
                                    c.i18n.getLocalization('arcgisonline', 'arcgisonline').common
                                );
                                c.mixin(
                                    this.i18n,
                                    c.i18n.getLocalization('arcgisonline', 'arcgisonline')
                                    .rendererPanel
                                );
                                c.mixin(
                                    this.i18n,
                                    c.i18n.getLocalization('arcgisonline', 'arcgisonline')
                                    .rendererDlg
                                );
                            },
                            postCreate: function() {
                                this.loadConnections();
                            },
                            show: function(b) {
                                this.symbol = esri.symbol.fromJson(b.symbol.toJson());
                                null === b.value ?
                                    (c.byId('renderer-value').innerHTML = this.i18n.other) :
                                    (c.byId('renderer-value').innerHTML = b.value);
                                this.rendererLabel.set('value', b.label);
                                this.applyRendererEditsHandler = c.subscribe(
                                    'applyRendererEdits',
                                    c.hitch(this, '_onApplyEdits')
                                );
                                g.byId('renderer-dialog').show();
                            },
                            loadConnections: function() {
                                c.query('.jevent').connect('onclick', function(b) {
                                    b.preventDefault();
                                });
                            },
                            _onCancelClick: function() {
                                c.publish('onRendererItemChange', [null, null]);
                                g.byId('renderer-dialog').hide();
                            },
                            hide: function() {
                                this.onRendererSymbolChangeHandler &&
                                    (c.unsubscribe(
                                        this.onRendererSymbolChangeHandler
                                    ), c.unsubscribe(this.onRendererSymbolChangeCancelHandler));
                                this.applyRendererEditsHandler &&
                                    c.unsubscribe(this.applyRendererEditsHandler);
                                this.rendererCancelBtn.set('disabled', !1);
                                this._rendererSymbolUpdateButton.set('disabled', !1);
                                g.byId('renderer-dialog').hide();
                            },
                            _onRendererSymbolUpdateButtonClick: function(b) {
                                this.onRendererSymbolChangeHandler &&
                                    (c.unsubscribe(
                                        this.onRendererSymbolChangeHandler
                                    ), c.unsubscribe(this.onRendererSymbolChangeCancelHandler));
                                this.onRendererSymbolChangeHandler = c.subscribe(
                                    'onSymbolChange',
                                    c.hitch(this, '_onRendererSymbolChange')
                                );
                                this.onRendererSymbolChangeCancelHandler = c.subscribe(
                                    'onSymbolChangeCancel',
                                    c.hitch(this, function() {
                                        this.onRendererSymbolChangeHandler &&
                                            (c.unsubscribe(
                                                this.onRendererSymbolChangeHandler
                                            ), c.unsubscribe(
                                                this.onRendererSymbolChangeCancelHandler
                                            ));
                                        this.rendererCancelBtn.set('disabled', !1);
                                        this._rendererSymbolUpdateButton.set('disabled', !1);
                                    })
                                );
                                this.rendererCancelBtn.set('disabled', !0);
                                this._rendererSymbolUpdateButton.set('disabled', !0);
                                arcgisonline.sharing.dijit.dialog.SymbolDlg.prototype.statics
                                    .getInstance()
                                    .showSymbol(this.symbol, {
                                        applyHandler: c.hitch(this, '_onApplyEdits'),
                                        okHandler: c.hitch(this, function(b) {
                                            this._rendererSymbolUpdateButton.set('disabled', !1);
                                            this.symbol = b;
                                            c.publish('onRendererItemChange', [
                                                b,
                                                this.rendererLabel.get('value'),
                                            ]);
                                            c.publish('saveRenderer', []);
                                        }),
                                    });
                            },
                            _onRendererSymbolChange: function(b) {
                                this.rendererCancelBtn.set('disabled', !1);
                                this._rendererSymbolUpdateButton.set('disabled', !1);
                                var c = b.toJson();
                                'esriPMS' != b.type ||
                                    (0 != c.url.length && 'http://' != c.url) ||
                                    (b = esri.symbol.fromJson(this.markerJson));
                                this.symbol = b;
                            },
                            _onOkClick: function(b) {
                                b.preventDefault();
                                c.publish('onRendererItemChange', [
                                    esri.symbol.fromJson(this.symbol.toJson()),
                                    this.rendererLabel.get('value'),
                                ]);
                                this.hide();
                            },
                            _onApplyEdits: function(b) {
                                c.publish('onRendererItemChange', [
                                    b,
                                    this.rendererLabel.get('value'),
                                ]);
                                c.publish('saveRenderer', []);
                            },
                            onKeyDown: function(b) {
                                var c;
                                window.event ? (c = b.keyCode) : b.which && (c = b.which);
                                13 == c && this._onOkClick(b);
                            },
                        }
                    );
                }
            );
        },
        'arcgisonline/sharing/dijit/dialog/SymbolDlg': function() {
            define(
                [
                    'dojo',
                    'dijit',
                    'dojox',
                    'dojo/require!dijit/Dialog,dijit/_Widget,dijit/_Templated,arcgisonline/sharing/dijit/SymbolOptions',
                ],
                function(c, g, f) {
                    c.provide('arcgisonline.sharing.dijit.dialog.SymbolDlg');
                    c.require('dijit.Dialog');
                    c.require('dijit._Widget');
                    c.require('dijit._Templated');
                    c.require('arcgisonline.sharing.dijit.SymbolOptions');
                    c.declare(
                        'arcgisonline.sharing.dijit.dialog.SymbolDlg', [g._Widget, g._Templated], {
                            widgetsInTemplate: !0,
                            templateString: '\x3cdiv class\x3d"widgetContent" \x3e\r\n  \x3cdiv dojotype\x3d"dijit.Dialog" id\x3d"symbol-dialog" title\x3d"${i18n.symbolDlgTitle}" execute\x3d""\x3e\r\n\t  \x3cdiv id\x3d"symbol-dialog-symboloptions" dojotype\x3d"arcgisonline.sharing.dijit.SymbolOptions" dojoAttachPoint\x3d"symbolOptions"\x3e\x3c/div\x3e\r\n    \x3cdiv\x3e\r\n      \x3cbutton dojoAttachPoint\x3d"cancelButton" dojoAttachEvent\x3d"onClick:onCancelClick" class\x3d"jevent cancel esriFloatTrailing" dojoType\x3d"dijit.form.Button"\x3e${i18n.cancel}\x3c/button\x3e\r\n      \x3cbutton id\x3d"symbol-dialog-apply" dojoAttachPoint\x3d"applyButton" dojoAttachEvent\x3d"onClick:onApplyClick" class\x3d"jevent cancel esriFloatTrailing" dojoType\x3d"dijit.form.Button"\x3e${i18n.apply}\x3c/button\x3e\r\n  \t  \x3cbutton id\x3d"symbol-dialog-done" dojoAttachEvent\x3d"onClick:onDoneClick" class\x3d"jevent primary esriFloatTrailing" dojoType\x3d"dijit.form.Button"\x3e${i18n.done}\x3c/button\x3e\r\n    \x3c/div\x3e\r\n    \x3cdiv style\x3d"clear:both;"\x3e\r\n    \x3c/div\x3e\r\n\t\x3c/div\x3e\r\n\x3c/div\x3e',
                            i18n: null,
                            applyHandler: null,
                            okHandler: null,
                            statics: {
                                _instance: null,
                                getInstance: function() {
                                    null == this._instance &&
                                        (this._instance = new arcgisonline.sharing.dijit.dialog
                                            .SymbolDlg());
                                    return this._instance;
                                },
                            },
                            postMixInProperties: function() {
                                this.inherited(arguments);
                                this.i18n = c.clone(
                                    c.i18n.getLocalization('arcgisonline', 'arcgisonline').common
                                );
                                c.mixin(
                                    this.i18n,
                                    c.i18n.getLocalization('arcgisonline', 'arcgisonline')
                                    .symbolDlg
                                );
                            },
                            show: function(b, c) {
                                this.cancelButton.set('disabled', !1);
                                var e = b.getLayer();
                                if (b.symbol)
                                    this.symbolOptions.symbol = esri.symbol.fromJson(
                                        b.symbol.toJson()
                                    );
                                else {
                                    var d = e.renderer.getSymbol(b);
                                    this.symbolOptions.symbol = esri.symbol.fromJson(
                                        d.toJson()
                                    );
                                }
                                for (d = 0; d < e.types.length; d++)
                                    if (
                                        e.types[d].id == b.attributes.TYPEID &&
                                        e.types[d].templates &&
                                        0 < e.types[d].templates.length
                                    ) {
                                        this.symbolOptions.template = e.types[d].templates[0];
                                        break;
                                    }
                                c
                                    ?
                                    ((this.symbolOptions.endSize =
                                        c.endSize), (this.symbolOptions.showEndSize = 0 <
                                        c.endSize ?
                                        !0 :
                                        !1), (this.symbolOptions.showNoBgColor =
                                        c.showNoBgColor), (this.applyHandler =
                                        c.applyHandler), (this.okHandler = c.okHandler)) :
                                    ((this.symbolOptions.endSize = 0), (this.symbolOptions.showEndSize = !1), (this.symbolOptions.showNoBgColor = !1), (this.okHandler = this.applyHandler = null));
                                this.symbolOptions.init(c ? c.noPreDefSymbols : null);
                                g.byId('symbol-dialog').show();
                            },
                            showSymbol: function(b, e) {
                                this.cancelButton.set('disabled', !1);
                                this.symbolOptions.symbol = esri.symbol.fromJson(b.toJson());
                                this.symbolOptions.symbol.color ||
                                    (this.symbolOptions.symbol.color = new c.Color([
                                        255,
                                        255,
                                        255,
                                        0,
                                    ]));
                                e
                                    ?
                                    ((this.symbolOptions.endSize =
                                        e.endSize), (this.symbolOptions.showEndSize = 0 <
                                        e.endSize ?
                                        !0 :
                                        !1), (this.symbolOptions.showNoBgColor =
                                        e.showNoBgColor), (this.applyHandler =
                                        e.applyHandler), (this.okHandler = e.okHandler)) :
                                    ((this.symbolOptions.endSize = 0), (this.symbolOptions.showEndSize = !1), (this.symbolOptions.showNoBgColor = !1), (this.okHandler = this.applyHandler = null));
                                this.symbolOptions.init(e ? e.noPreDefSymbols : null);
                                g.byId('symbol-dialog').show();
                            },
                            hide: function() {
                                this.symbolOptions.hide();
                                g.byId('symbol-dialog').hide();
                            },
                            onDoneClick: function(b) {
                                ('picturemarkersymbol' === this.symbolOptions.symbol.type &&
                                    8 > this.symbolOptions.symbol.url.length) ||
                                setTimeout(
                                    c.hitch(this, function() {
                                        var b = 0;
                                        this.symbolOptions.urlChangesNotApplied && (b = 6e3);
                                        setTimeout(
                                            c.hitch(this, function() {
                                                if (this.okHandler) {
                                                    var b = this.symbolOptions.symbol.toJson();
                                                    'esriPMS' != this.symbolOptions.symbol.type ||
                                                        (0 != b.url.length && 'http://' != b.url) ||
                                                        (this.symbolOptions.symbol = this.getMarkerJson());
                                                    this.okHandler(
                                                        esri.symbol.fromJson(
                                                            this.symbolOptions.symbol.toJson()
                                                        )
                                                    );
                                                } else
                                                    this.symbolOptions.showEndSize ?
                                                    c.publish('onSymbolChange', [
                                                        esri.symbol.fromJson(
                                                            this.symbolOptions.symbol.toJson()
                                                        ),
                                                        this.symbolOptions.endSize,
                                                    ]) :
                                                    c.publish('onSymbolChange', [
                                                        esri.symbol.fromJson(
                                                            this.symbolOptions.symbol.toJson()
                                                        ),
                                                    ]), setTimeout(
                                                        c.hitch(this, function() {
                                                            c.publish('applyRendererEdits', []);
                                                        }),
                                                        500
                                                    );
                                                this.hide();
                                            }),
                                            b
                                        );
                                    }),
                                    100
                                );
                            },
                            onApplyClick: function(b) {
                                ('picturemarkersymbol' === this.symbolOptions.symbol.type &&
                                    8 > this.symbolOptions.symbol.url.length) ||
                                setTimeout(
                                    c.hitch(this, function() {
                                        var b = 0;
                                        this.symbolOptions.urlChangesNotApplied && (b = 6e3);
                                        setTimeout(
                                            c.hitch(this, function() {
                                                if (this.applyHandler) {
                                                    var b = this.symbolOptions.symbol.toJson();
                                                    ('esriPMS' != this.symbolOptions.symbol.type &&
                                                        'picturemarkersymbol' !=
                                                        this.symbolOptions.symbol.type) ||
                                                    (0 != b.url.length && 'http://' != b.url) ||
                                                    (this.symbolOptions.symbol = this.getMarkerJson());
                                                    this.applyHandler(
                                                        esri.symbol.fromJson(
                                                            this.symbolOptions.symbol.toJson()
                                                        )
                                                    );
                                                    this.cancelButton.set('disabled', !0);
                                                } else
                                                    this.symbolOptions.showEndSize ?
                                                    c.publish('onSymbolChange', [
                                                        esri.symbol.fromJson(
                                                            this.symbolOptions.symbol.toJson()
                                                        ),
                                                        this.symbolOptions.endSize,
                                                    ]) :
                                                    c.publish('onSymbolChange', [
                                                        esri.symbol.fromJson(
                                                            this.symbolOptions.symbol.toJson()
                                                        ),
                                                    ]), setTimeout(
                                                        c.hitch(this, function() {
                                                            c.publish('applyRendererEdits', []);
                                                            this.cancelButton.set('disabled', !0);
                                                        }),
                                                        500
                                                    );
                                            }),
                                            b
                                        );
                                    }),
                                    100
                                );
                            },
                            onCancelClick: function(b) {
                                c.publish('onSymbolChangeCancel', []);
                                this.hide();
                            },
                        }
                    );
                }
            );
        },
        'arcgisonline/sharing/dijit/SymbolOptions': function() {
            define(
                [
                    'dojo',
                    'dijit',
                    'dojox',
                    'dojo/require!dijit/_Widget,dijit/_Templated,dijit/ColorPalette,dijit/form/HorizontalSlider,arcgisonline/sharing/dijit/dialog/ImgDlg,arcgisonline/sharing/dijit/dialog/GeneralDlg,arcgisonline/sharing/util',
                ],
                function(c, g, f) {
                    c.provide('arcgisonline.sharing.dijit.SymbolOptions');
                    c.require('dijit._Widget');
                    c.require('dijit._Templated');
                    c.require('dijit.ColorPalette');
                    c.require('dijit.form.HorizontalSlider');
                    c.require('arcgisonline.sharing.dijit.dialog.ImgDlg');
                    c.require('arcgisonline.sharing.dijit.dialog.GeneralDlg');
                    c.require('arcgisonline.sharing.util');
                    c.declare(
                        'arcgisonline.sharing.dijit.SymbolOptions', [g._Widget, g._Templated], {
                            widgetsInTemplate: !0,
                            templateString: '\x3cdiv\x3e\r\n  \x3ctable class\x3d"symbolDialogTable"\x3e\r\n   \x3ctbody\x3e\r\n    \x3ctr\x3e \r\n      \x3ctd valign\x3d"top"\x3e\r\n        \x3cdiv\x3e\x3clabel\x3e${i18n.previewLabel}\x3c/label\x3e\x3c/div\x3e\r\n      \x3c/td\x3e\r\n      \x3ctd colspan\x3d"2" valign\x3d"middle" align\x3d"left"\x3e\r\n        \x3cdiv dojoAttachPoint\x3d"symbolImage" style\x3d"height:100%; vertical-align:middle;"\x3e\x3c/div\x3e\r\n      \x3c/td\x3e   \r\n    \x3c/tr\x3e\r\n    \x3ctr\x3e \r\n      \x3ctd colspan\x3d"3" valign\x3d"top"\x3e\r\n        \x3cdiv dojoAttachPoint\x3d"symbolSmallTemplatePicker" style\x3d"display:none;"\x3e\r\n          \x3cdiv dojoAttachPoint\x3d"symbolSimpleMarkerTemplatePickerDiv" class\x3d"symbolTemplatePicker" style\x3d"height:50px; width:350px;"\x3e\r\n            \x3cdiv id\x3d"${id}_symbolSimpleMarkerTemplatePicker"\x3e\x3c/div\x3e  \r\n          \x3c/div\x3e\r\n        \x3c/div\x3e\r\n        \x3cdiv dojoAttachPoint\x3d"symbolFullTemplatePicker" style\x3d"display:none;"\x3e\r\n          \x3cdiv dojoAttachPoint\x3d"symbolClassesDiv" style\x3d"width:355px;line-height:normal;"\x3e\r\n            \x3cselect dojoAttachPoint\x3d"symbolColorClasses" style\x3d"width:355px;margin:0;" dojoType\x3d"arcgisonline.sharing.dijit.ComboBox"\x3e\r\n            \x3c/select\x3e       \r\n          \x3c/div\x3e\r\n          \x3cdiv dojoAttachPoint\x3d"symbolClassesTemplatePickerDiv" class\x3d"symbolTemplatePicker" style\x3d"height:130px; width:350px;"\x3e\r\n            \x3cdiv id\x3d"${id}_symbolClassesTemplatePicker" \x3e\x3c/div\x3e  \r\n          \x3c/div\x3e\r\n          \x3cdiv dojoAttachPoint\x3d"symbolAddImageDiv" class\x3d"esriItemLinks" style\x3d"line-height:20px;"\x3e\r\n            \x3cA dojoAttachPoint\x3d"symbolAddImage" href\x3d"JavaScript:void(0);"\x3e${i18n.addImage}\x3c/A\x3e  \r\n          \x3c/div\x3e\r\n        \x3c/div\x3e\r\n      \x3c/td\x3e   \r\n    \x3c/tr\x3e\r\n    \x3ctr dojoAttachPoint\x3d"symbolSizeRow"\x3e \r\n      \x3ctd nowrap\x3e\x3clabel dojoAttachPoint\x3d"symbolSizeLabel"\x3e${i18n.symbolSizeLabel}\x3c/label\x3e\x3c/td\x3e\r\n      \x3ctd\x3e\x3cdiv dojoAttachPoint\x3d"symbolSize" dojoType\x3d"dijit.form.HorizontalSlider" class\x3d"symbolSlider" showbuttons\x3d"false" intermediatechanges\x3d"false" minimum\x3d"1" maximum\x3d"120" value\x3d"1" discretevalues\x3d"1" \x3e\x3c/div\x3e\x3c/td\x3e\r\n      \x3ctd valign\x3d"top"\x3e\r\n        \x3cdiv dojoAttachPoint\x3d"symbolSizeInput" dojotype\x3d"dijit.form.TextBox" trim\x3d"true" style\x3d"width:30px;margin-bottom:3px;"\x3e\x3c/div\x3e\r\n        \x3cdiv style\x3d"display:inline;"\x3e${i18n.shortForPixel}\x3c/div\x3e\r\n      \x3c/td\x3e\r\n    \x3c/tr\x3e\r\n    \x3ctr dojoAttachPoint\x3d"symbolEndSizeRow"\x3e \r\n      \x3ctd nowrap\x3e\x3clabel\x3e${i18n.symbolEndSizeLabel}\x3c/label\x3e\x3c/td\x3e\r\n      \x3ctd\x3e\x3cdiv dojoAttachPoint\x3d"symbolEndSize" dojoType\x3d"dijit.form.HorizontalSlider" class\x3d"symbolSlider" showbuttons\x3d"false" intermediatechanges\x3d"false" minimum\x3d"1" maximum\x3d"120" value\x3d"1" discretevalues\x3d"1" \x3e\x3c/div\x3e\x3c/td\x3e\r\n      \x3ctd valign\x3d"top"\x3e\r\n        \x3cdiv dojoAttachPoint\x3d"symbolEndSizeInput" dojotype\x3d"dijit.form.TextBox" trim\x3d"true" style\x3d"width:30px;margin-bottom:3px;"\x3e\x3c/div\x3e\r\n        \x3cdiv style\x3d"display:inline;"\x3e${i18n.shortForPixel}\x3c/div\x3e\r\n      \x3c/td\x3e\r\n    \x3c/tr\x3e\r\n    \x3ctr dojoAttachPoint\x3d"symbolBackgroundColorRow"\x3e\r\n      \x3ctd\x3e\x3clabel\x3e${i18n.colorLabel}\x3c/label\x3e\x3c/td\x3e\r\n      \x3ctd colspan\x3d"2"\x3e\x3cdiv dojoAttachPoint\x3d"symbolBackgroundColor" class\x3d"symbolColorBox"\x3e\x3c/div\x3e\x3c/td\x3e\r\n    \x3c/tr\x3e\r\n    \x3ctr dojoAttachPoint\x3d"symbolLinePatternRow"\x3e\r\n      \x3ctd\x3e\x3clabel\x3e${i18n.patternLabel}\x3c/label\x3e\x3c/td\x3e\r\n      \x3ctd colspan\x3d"2"\x3e\r\n        \x3cdiv\x3e\r\n          \x3cselect dojoAttachPoint\x3d"symbolLinePatternSelect" id\x3d"symbolLinePatternSelect" dojoType\x3d"dijit.form.Select" class\x3d"symbolLinePatternSelect"\x3e\r\n          \x3c/select\x3e\r\n        \x3c/div\x3e\r\n      \x3c/td\x3e\r\n    \x3c/tr\x3e\r\n    \x3ctr dojoAttachPoint\x3d"symbolTransparencyRow"\x3e\r\n      \x3ctd\x3e\x3clabel\x3e${i18n.transparencyLabel}\x3c/label\x3e\x3c/td\x3e\r\n      \x3ctd width\x3d"125" valign\x3d"top"\x3e\r\n        \x3cdiv dojoAttachPoint\x3d"symbolTransparency" dojoType\x3d"dijit.form.HorizontalSlider" class\x3d"symbolSlider" style\x3d"line-height:normal;margin-top:7px;" showbuttons\x3d"false" intermediatechanges\x3d"true" minimum\x3d"0" maximum\x3d"1" value\x3d"0" discretevalues\x3d"0.01" \x3e\r\n          \x3cdiv dojoType\x3d"dijit.form.HorizontalRule" container\x3d"bottomDecoration" count\x3d"2" style\x3d"height:5px;"\x3e\x3c/div\x3e\r\n          \x3col dojoType\x3d"dijit.form.HorizontalRuleLabels" container\x3d"bottomDecoration" style\x3d"font-size:0.8em;"\x3e\r\n            \x3cli\x3e0\x3c/li\x3e\x3cli\x3e100%\x3c/li\x3e\r\n          \x3c/ol\x3e\r\n        \x3c/div\x3e\r\n      \x3c/td\x3e\r\n      \x3ctd\x3e\r\n        \x3cdiv dojoAttachPoint\x3d"symbolTransparencyInput" dojotype\x3d"dijit.form.TextBox" trim\x3d"true" style\x3d"width:30px;margin-bottom:3px;"\x3e\x3c/div\x3e\r\n        \x3cdiv style\x3d"display:inline;"\x3e%\x3c/div\x3e\r\n      \x3c/td\x3e\r\n    \x3c/tr\x3e\r\n    \x3ctr dojoAttachPoint\x3d"symbolOutlineColorRow"\x3e\r\n      \x3ctd\x3e\x3clabel\x3e${i18n.outlineColorLabel}\x3c/label\x3e\x3c/td\x3e\r\n      \x3ctd colspan\x3d"2"\x3e\x3cdiv dojoAttachPoint\x3d"symbolOutlineColor" class\x3d"symbolColorBox"\x3e\x3c/div\x3e\x3c/td\x3e\r\n    \x3c/tr\x3e\r\n    \x3ctr dojoAttachPoint\x3d"symbolWidthRow"\x3e \r\n      \x3ctd\x3e\x3clabel dojoAttachPoint\x3d"symbolWidthLabel" \x3e${i18n.outlineWidthLabel}\x3c/label\x3e\x3c/td\x3e\r\n      \x3ctd\x3e\x3cdiv dojoAttachPoint\x3d"symbolWidth" dojoType\x3d"dijit.form.HorizontalSlider" class\x3d"symbolSlider" showbuttons\x3d"false" intermediatechanges\x3d"true" minimum\x3d"0" maximum\x3d"18" value\x3d"1" discretevalues\x3d"1" \x3e\x3c/div\x3e\x3c/td\x3e\r\n      \x3ctd\x3e\r\n        \x3cdiv dojoAttachPoint\x3d"symbolWidthInput" dojotype\x3d"dijit.form.TextBox" trim\x3d"true" style\x3d"width:30px;margin-bottom:3px;"\x3e\x3c/div\x3e\r\n        \x3cdiv style\x3d"display:inline;"\x3e${i18n.shortForPixel}\x3c/div\x3e\r\n      \x3c/td\x3e\r\n    \x3c/tr\x3e\r\n    \x3ctr dojoAttachPoint\x3d"symbolEndWidthRow"\x3e \r\n      \x3ctd nowrap\x3e\x3clabel\x3e${i18n.symbolEndWidthLabel}\x3c/label\x3e\x3c/td\x3e\r\n      \x3ctd\x3e\x3cdiv dojoAttachPoint\x3d"symbolEndWidth" dojoType\x3d"dijit.form.HorizontalSlider" class\x3d"symbolSlider" showbuttons\x3d"false" intermediatechanges\x3d"false" minimum\x3d"1" maximum\x3d"18" value\x3d"1" discretevalues\x3d"1" \x3e\x3c/div\x3e\x3c/td\x3e\r\n      \x3ctd valign\x3d"top"\x3e\r\n        \x3cdiv dojoAttachPoint\x3d"symbolEndWidthInput" dojotype\x3d"dijit.form.TextBox" trim\x3d"true" style\x3d"width:30px;margin-bottom:3px;"\x3e\x3c/div\x3e\r\n        \x3cdiv style\x3d"display:inline;"\x3e${i18n.shortForPixel}\x3c/div\x3e\r\n      \x3c/td\x3e\r\n    \x3c/tr\x3e\r\n   \x3c/tbody\x3e\r\n  \x3c/table\x3e                \r\n\r\n  \x3cimg id\x3d"${id}_testImage" style\x3d"position:absolute;top:0;left:-3000px"/\x3e\r\n\r\n  \x3cdiv dojoAttachPoint\x3d"symbolColorTooltip" dojotype\x3d"dijit.TooltipDialog" title\x3d"" style\x3d"display:none; width:265px;"\x3e\r\n    \x3cdiv class\x3d"esriFloatTrailing"\x3e\x3cA class\x3d"symbolColorPaletteClose" dojoAttachPoint\x3d"symbolColorTooltipClose" href\x3d"JavaScript:void(0);" title\x3d"${i18n.close}"\x3e\x3c/A\x3e\x3c/div\x3e\r\n    \x3cdiv dojoAttachPoint\x3d"symbolColorPalette" style\x3d"margin-top: 7px;" dojotype\x3d"dijit.ColorPalette" palette\x3d"7x10" dojoAttachEvent\x3d"onChange:onColorSelection"\x3e\x3c/div\x3e\r\n  \x3c/div\x3e\r\n  \r\n\x3c/div\x3e\r\n',
                            i18n: null,
                            symbol: null,
                            template: null,
                            colorPicker: '',
                            savedSimpleMarkerSymbol: null,
                            savedPictureMarkerSymbol: null,
                            eventHandlers: null,
                            testImageHandler: null,
                            symbolListItems: null,
                            symbolClassesTemplatePicker: null,
                            simpleMarkerTemplatePicker: null,
                            templatePickerOnSelectionChangeHandler: null,
                            simpleMarkerTemplatePickerOnSelectionChangeHandler: null,
                            templatePickerSymbolClass: null,
                            symbolClassStore: null,
                            urlChangesNotApplied: !1,
                            cachedImages: [],
                            onImageChangeHandler: null,
                            showEndSize: !1,
                            showNoBgColor: !1,
                            endSize: 0,
                            simpleMarkerSymbols: [{
                                    name: 'Circle',
                                    type: 'esriSMS',
                                    style: 'esriSMSCircle',
                                    color: [0, 0, 128, 128],
                                    size: 18,
                                    outline: { color: [0, 0, 128, 255], width: 1 },
                                },
                                {
                                    name: 'Square',
                                    type: 'esriSMS',
                                    style: 'esriSMSSquare',
                                    color: [0, 0, 128, 128],
                                    size: 18,
                                    outline: { color: [0, 0, 128, 255], width: 1 },
                                },
                                {
                                    name: 'Diamond',
                                    type: 'esriSMS',
                                    style: 'esriSMSDiamond',
                                    color: [0, 0, 128, 128],
                                    size: 18,
                                    outline: { color: [0, 0, 128, 255], width: 1 },
                                },
                                {
                                    name: 'Cross',
                                    type: 'esriSMS',
                                    style: 'esriSMSCross',
                                    color: [0, 0, 128, 128],
                                    size: 18,
                                    outline: { color: [0, 0, 128, 255], width: 1 },
                                },
                                {
                                    name: 'X',
                                    type: 'esriSMS',
                                    style: 'esriSMSX',
                                    color: [0, 0, 128, 128],
                                    size: 18,
                                    outline: { color: [0, 0, 128, 255], width: 1 },
                                },
                            ],
                            markerJson: {
                                type: 'esriPMS',
                                url: '/Symbols/Basic/RedSphere.png',
                                imageData: 'iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAA7DAAAOwwHHb6hkAAAAGXRFWHRTb2Z0d2FyZQBQYWludC5ORVQgdjMuNS4xTuc4+QAAB3VJREFUeF7tmPlTlEcexnve94U5mANQbgQSbgiHXHINlxpRIBpRI6wHorLERUmIisKCQWM8cqigESVQS1Kx1piNi4mW2YpbcZONrilE140RCTcy3DDAcL/zbJP8CYPDL+9Ufau7uqb7eZ7P+/a8PS8hwkcgIBAQCAgEBAICAYGAQEAgIBAQCAgEBAICAYGAQEAgIBAQCDx/AoowKXFMUhD3lQrioZaQRVRS+fxl51eBTZUTdZ41U1Rox13/0JF9csGJ05Qv4jSz/YPWohtvLmSKN5iTGGqTm1+rc6weICOBRbZs1UVnrv87T1PUeovxyNsUP9P6n5cpHtCxu24cbrmwKLdj+osWiqrVKhI0xzbmZ7m1SpJ+1pFpvE2DPvGTomOxAoNLLKGLscZYvB10cbYYjrJCb7A5mrxleOBqim+cWJRakZY0JfnD/LieI9V1MrKtwokbrAtU4Vm0A3TJnphJD4B+RxD0u0LA7w7FTE4oprOCMbklEGNrfdGf4IqnQTb4wc0MFTYibZqM7JgjO8ZdJkpMln/sKu16pHZGb7IfptIWg389DPp9kcChWODoMuDdBOhL1JgpisbUvghM7AqFbtNiaFP80RLnhbuBdqi0N+1dbUpWGde9gWpuhFi95yL7sS7BA93JAb+Fn8mh4QujgPeTgb9kAZf3Apd2A+fXQ38yHjOHozB1IAJjOSEY2RSIwVUv4dd4X9wJccGHNrJ7CYQ4GGjLeNNfM+dyvgpzQstKf3pbB2A6m97uBRE0/Ergcxr8hyqg7hrwn0vAtRIKIRX6Y2pMl0RhIj8co9nBGFrvh55l3ngU7YObng7IVnFvGS+BYUpmHziY/Ls2zgP9SX50by/G9N5w6I+ogYvpwK1SoOlHQNsGfWcd9Peqof88B/rTyzF9hAIopAByQzC0JQB9ST5oVnvhnt+LOGsprvUhxNIwa0aY7cGR6Cp7tr8+whkjawIxkRWC6YJI6N+lAKq3Qf/Tx+B77oGfaQc/8hB8w2Xwtw9Bf3kzZspXY/JIDEbfpAB2BKLvVV90Jvjgoac9vpRxE8kciTVCBMMkNirJ7k/tRHyjtxwjKV4Yp3t/6s+R4E+/DH3N6+BrS8E314Dvvg2+/Sb4hxfBf5sP/up2TF3ZhonK1zD6dhwGdwail26DzqgX8MRKiq9ZBpkSkmeYOyPM3m9Jjl+1Z9D8AgNtlAq6bZ70qsZi+q+bwV/7I/hbB8D/dAr8Axq89iz474p/G5++koHJy1sx/lkGdBc2YjA3HF0rHNHuboomuQj/5DgclIvOGCGCYRKFFuTMV7YUAD3VDQaLMfyqBcZORGPy01QKYSNm/rYV/Nd/Av9NHvgbueBrsjDzRQamKKDxT9Kgq1iLkbIUDOSHoiNcgnYHgnYZi+9ZExSbiSoMc2eE2flKcuJLa4KGRQz6/U0wlGaP0feiMH4uFpMXEjBVlYjp6lWY+SSZtim0kulYMiYuJEJXuhTDJ9UYPByOvoIwdCxfgE4bAo0Jh39xLAoVpMwIEQyTyFCQvGpLon9sJ0K3J4OBDDcMH1dj9FQsxkrjMPFRPCbOx2GyfLal9VEcxstioTulxjAFNfROJPqLl6Bnfyg6V7ugz5yBhuHwrZjBdiU5YJg7I8wOpifAKoVIW7uQ3rpOBH2b3ekVjYT2WCRG3o+mIGKgO0OrlIaebU/HYOQDNbQnojB4NJyGD0NPfjA0bwTRE6Q7hsUcWhkWN8yZqSQlWWGECAZLmJfJmbrvVSI8taK37xpbdB/wQW8xPee/8xIGjvlj8IQ/hk4G0JbWcX8MHPVDX4kveoq8ocn3xLM33NCZRcPHOGJYZIKfpQyq7JjHS6yJjcHujLHADgkpuC7h8F8zEVqXSNC2awE69lqhs8AamkO26HrbDt2H7dBVQov2NcW26CiwQtu+BWjdY4n2nZboTbfCmKcCnRyDO/YmyLPnDlHvjDH8G6zhS9/wlEnYR7X00fWrFYuWdVI0ZpuhcbcczW/R2qdAcz6t/bRov4mONeaaoYl+p22rHF0bVNAmKtBvweIXGxNcfFH8eNlC4m6wMWMusEnKpn5hyo48pj9gLe4SNG9QoGGLAk8z5XiaJUd99u8122/IpBA2K9BGg2vWWKAvRYVeLzEa7E1R422m2+MsSTem97nSYnfKyN6/mzATv7AUgqcMrUnmaFlLX3ysM0fj+t/b5lQLtK22QEfyAmiSLKFZpUJ7kBRPXKW4HqCYynWVHKSG2LkyZex1uO1mZM9lKem9Tx9jjY5iNEYo0bKMhn7ZAu0r6H5PpLXCAq0rKJClSjSGynE/QIkrQYqBPe6S2X+AJsY2Ped6iWZk6RlL0c2r5szofRsO9R5S1IfQLRCpQL1aifoYFerpsbkuTImaUJXuXIDiH6/Ys8vm3Mg8L2i20YqsO7fItKLcSXyn0kXccclVqv3MS6at9JU/Ox+ouns+SF6Z4cSupz7l8+z1ucs7LF1AQjOdxfGZzmx8Iu1TRcfnrioICAQEAgIBgYBAQCAgEBAICAQEAgIBgYBAQCAgEBAICAQEAv8H44b/6ZiGvGAAAAAASUVORK5CYII\x3d',
                                contentType: 'image/png',
                                width: 15,
                                height: 15,
                            },
                            postMixInProperties: function() {
                                this.inherited(arguments);
                                this.i18n = c.clone(
                                    c.i18n.getLocalization('arcgisonline', 'arcgisonline').common
                                );
                                c.mixin(
                                    this.i18n,
                                    c.i18n.getLocalization('arcgisonline', 'arcgisonline')
                                    .generalDlg
                                );
                                c.mixin(
                                    this.i18n,
                                    c.i18n.getLocalization('arcgisonline', 'arcgisonline').imgDlg
                                );
                                c.mixin(
                                    this.i18n,
                                    c.i18n.getLocalization('arcgisonline', 'arcgisonline')
                                    .symbolDlg
                                );
                            },
                            postCreate: function() {
                                this.symbolLinePatternSelect._getMenuItemForOption = function(
                                    b
                                ) {
                                    if (b.value || b.label) {
                                        var e = c.hitch(this, '_setValueAttr', b);
                                        b = new g.MenuItem({
                                            option: b,
                                            label: b.label || this.emptyLabel,
                                            onClick: e,
                                            ownerDocument: this.ownerDocument,
                                            dir: this.dir,
                                            disabled: b.disabled || !1,
                                            iconClass: b.iconClass,
                                        });
                                        b.focusNode.setAttribute('role', 'option');
                                        return b;
                                    }
                                    return new g.MenuSeparator({
                                        ownerDocument: this.ownerDocument,
                                    });
                                };
                                this.symbolLinePatternSelect.addOption({
                                    value: 'solid',
                                    iconClass: 'symbolLinePatternSolid',
                                });
                                this.symbolLinePatternSelect.addOption({
                                    value: 'dot',
                                    iconClass: 'symbolLinePatternDot',
                                });
                                this.symbolLinePatternSelect.addOption({
                                    value: 'dash',
                                    iconClass: 'symbolLinePatternDash',
                                });
                                this.symbolLinePatternSelect.addOption({
                                    value: 'dashdot',
                                    iconClass: 'symbolLinePatternDashDot',
                                });
                                this.symbolLinePatternSelect.addOption({
                                    value: 'dashdotdot',
                                    iconClass: 'symbolLinePatternDashDotDot',
                                });
                                this._symbolCloseIcon &&
                                    c.attr(
                                        this._symbolCloseIcon,
                                        'src',
                                        arcgisonline.sharing.util.relativeToExplicitUrl(
                                            'images/close.gif'
                                        )
                                    );
                                c.connect(
                                    this.symbolLinePatternSelect,
                                    'onChange',
                                    c.hitch(this, 'onPatternChange')
                                );
                                this.loadConnections();
                            },
                            init: function(b) {
                                this.savedPictureMarkerSymbol = this.savedSimpleMarkerSymbol = null;
                                if (this.symbol) {
                                    if (!b ||
                                        ('picturemarkersymbol' !== this.symbol.type &&
                                            'simplemarkersymbol' !== this.symbol.type)
                                    )
                                        if (b)
                                            c.style(
                                                this.symbolFullTemplatePicker,
                                                'display',
                                                'none'
                                            ), c.style(
                                                this.symbolSmallTemplatePicker,
                                                'display',
                                                'none'
                                            );
                                        else if (
                                        (c.style(
                                            this.symbolSmallTemplatePicker,
                                            'display',
                                            'none'
                                        ), c.style(
                                            this.symbolFullTemplatePicker,
                                            'display',
                                            'block'
                                        ), this.symbolListItems)
                                    )
                                        if (
                                            this.templatePickerSymbolClass !== this.symbol.type &&
                                            (('simplemarkersymbol' !==
                                                    this.templatePickerSymbolClass &&
                                                    'picturemarkersymbol' !==
                                                    this.templatePickerSymbolClass) ||
                                                ('picturemarkersymbol' !== this.symbol.type &&
                                                    'simplemarkersymbol' !== this.symbol.type))
                                        ) {
                                            if (
                                                'simplemarkersymbol' === this.symbol.type ||
                                                'picturemarkersymbol' === this.symbol.type
                                            )
                                                for (b = 0; b < this.symbolListItems.length; b++) {
                                                    var e = this.symbolListItems[b];
                                                    if (-1 < e.typeKeywordsString.indexOf('marker') &&
                                                        -1 < e.typeKeywordsString.indexOf('default')
                                                    ) {
                                                        this.symbolColorClasses.set('value', e.title);
                                                        break;
                                                    }
                                                }
                                            this.getSymbolListData(!0);
                                        } else this.getSymbolListData();
                                    else this.getSymbolListGroup();
                                    else
                                        c.style(
                                            this.symbolFullTemplatePicker,
                                            'display',
                                            'none'
                                        ), c.style(
                                            this.symbolSmallTemplatePicker,
                                            'display',
                                            'block'
                                        ), setTimeout(
                                            c.hitch(this, function() {
                                                this.createSimpleMarkerTemplatePicker();
                                            }),
                                            0
                                        );
                                    this.updateUI();
                                    this.enableEvents();
                                    this.symbolClassesTemplatePicker &&
                                        this.symbolClassesTemplatePicker.clearSelection();
                                    this.simpleMarkerTemplatePicker &&
                                        this.simpleMarkerTemplatePicker.clearSelection();
                                }
                            },
                            hide: function() {
                                this.disableEvents();
                                g.popup.close(this.symbolColorTooltip);
                                this.destroySymbolClassesTemplatePicker();
                                this.destroySimpleMarkerTemplatePicker();
                            },
                            loadConnections: function() {
                                c.query('.jevent').connect('onclick', function(b) {
                                    b.preventDefault();
                                });
                                c.connect(
                                    this.symbolColorTooltipClose,
                                    'onclick',
                                    c.hitch(this, function(b) {
                                        b.preventDefault();
                                        g.popup.close(this.symbolColorTooltip);
                                    })
                                );
                                c.connect(
                                    this.symbolBackgroundColor,
                                    'onclick',
                                    this,
                                    'onBackgroundColorClick'
                                );
                                c.connect(
                                    this.symbolOutlineColor,
                                    'onclick',
                                    this,
                                    'onOutlineColorClick'
                                );
                                c.connect(this.symbolAddImage, 'onclick', this, 'onAddImage');
                            },
                            updateUI: function() {
                                this.symbolImage.innerHTML = '';
                                if (
                                    'simplemarkersymbol' === this.symbol.type ||
                                    'picturemarkersymbol' === this.symbol.type
                                )
                                    c.style(this.symbolClassesDiv, 'display', 'block'), c.style(
                                        this.symbolClassesTemplatePickerDiv,
                                        'display',
                                        'block'
                                    ), c.style(
                                        this.symbolSizeRow,
                                        'display',
                                        ''
                                    ), (this.symbolSizeLabel.innerHTML = this.i18n.symbolSizeLabel), c.style(
                                        this.symbolEndSizeRow,
                                        'display',
                                        'none'
                                    ), c.style(
                                        this.symbolEndWidthRow,
                                        'display',
                                        'none'
                                    ), c.style(
                                        this.symbolAddImageDiv,
                                        'display',
                                        ''
                                    ), 'simplemarkersymbol' === this.symbol.type ?
                                    (c.style(
                                            this.symbolBackgroundColorRow,
                                            'display',
                                            this.showNoBgColor ? 'none' : ''
                                        ), c.style(
                                            this.symbolLinePatternRow,
                                            'display',
                                            'none'
                                        ), c.style(
                                            this.symbolOutlineColorRow,
                                            'display',
                                            ''
                                        ), c.style(
                                            this.symbolWidthRow,
                                            'display',
                                            ''
                                        ), (this.symbolWidthLabel.innerHTML = this.i18n.outlineWidthLabel), c.style(
                                            this.symbolTransparencyRow,
                                            'display',
                                            ''
                                        ), this.symbolSize.set(
                                            'value',
                                            this.symbol.size, !1
                                        ), this.symbolSizeInput.set(
                                            'value',
                                            Math.round(this.symbol.size), !1
                                        ), this.showEndSize &&
                                        ((this.symbolSizeLabel.innerHTML = this.i18n.symbolStartSizeLabel), this.symbolEndSize.set(
                                            'value',
                                            this.endSize, !1
                                        ), this.symbolEndSizeInput.set(
                                            'value',
                                            Math.round(this.endSize), !1
                                        ), c.style(
                                            this.symbolEndSizeRow,
                                            'display',
                                            ''
                                        )), c.style(
                                            this.symbolBackgroundColor,
                                            'background',
                                            this.symbol.color.toHex()
                                        ), this.symbolTransparency.set(
                                            'value',
                                            1 - this.symbol.color.toRgba()[3], !1
                                        ), this.symbolTransparencyInput.set(
                                            'value',
                                            Math.round(100 * (1 - this.symbol.color.toRgba()[3])), !1
                                        ), c.style(
                                            this.symbolOutlineColor,
                                            'background',
                                            this.symbol.outline.color.toHex()
                                        ), this.symbolWidth.set(
                                            'value',
                                            this.symbol.outline.width, !1
                                        ), this.symbolWidthInput.set(
                                            'value',
                                            Math.round(this.symbol.outline.width), !1
                                        )) :
                                    'picturemarkersymbol' === this.symbol.type &&
                                    (c.style(
                                            this.symbolBackgroundColorRow,
                                            'display',
                                            'none'
                                        ), c.style(
                                            this.symbolLinePatternRow,
                                            'display',
                                            'none'
                                        ), c.style(
                                            this.symbolOutlineColorRow,
                                            'display',
                                            'none'
                                        ), c.style(
                                            this.symbolWidthRow,
                                            'display',
                                            'none'
                                        ), c.style(
                                            this.symbolTransparencyRow,
                                            'display',
                                            'none'
                                        ), this.symbolSize.set(
                                            'value',
                                            this.symbol.width, !1
                                        ), this.symbolSizeInput.set(
                                            'value',
                                            Math.round(this.symbol.width), !1
                                        ), this.showEndSize &&
                                        ((this.symbolSizeLabel.innerHTML = this.i18n.symbolStartSizeLabel), this.symbolEndSize.set(
                                            'value',
                                            this.endSize, !1
                                        ), this.symbolEndSizeInput.set(
                                            'value',
                                            Math.round(this.endSize), !1
                                        ), c.style(this.symbolEndSizeRow, 'display', '')));
                                else if (
                                    'simplelinesymbol' === this.symbol.type ||
                                    'cartographiclinesymbol' === this.symbol.type
                                )
                                    c.style(
                                        this.symbolBackgroundColorRow,
                                        'display',
                                        this.showNoBgColor ? 'none' : ''
                                    ), c.style(
                                        this.symbolAddImageDiv,
                                        'display',
                                        'none'
                                    ), c.style(
                                        this.symbolClassesDiv,
                                        'display',
                                        'none'
                                    ), c.style(
                                        this.symbolClassesTemplatePickerDiv,
                                        'display',
                                        'block'
                                    ), c.style(this.symbolSizeRow, 'display', 'none'), c.style(
                                        this.symbolTransparencyRow,
                                        'display',
                                        ''
                                    ), c.style(
                                        this.symbolEndSizeRow,
                                        'display',
                                        'none'
                                    ), this.setLinePattern(), c.style(
                                        this.symbolLinePatternRow,
                                        'display',
                                        ''
                                    ), this.symbolTransparency.set(
                                        'disabled', !1
                                    ), this.symbolTransparencyInput.set(
                                        'disabled', !1
                                    ), c.style(
                                        this.symbolOutlineColorRow,
                                        'display',
                                        'none'
                                    ), c.style(
                                        this.symbolWidthRow,
                                        'display',
                                        ''
                                    ), (this.symbolWidthLabel.innerHTML = this.i18n.symbolWidthLabel), c.style(
                                        this.symbolEndWidthRow,
                                        'display',
                                        'none'
                                    ), c.style(
                                        this.symbolBackgroundColor,
                                        'background',
                                        this.symbol.color.toHex()
                                    ), this.symbolTransparency.set(
                                        'value',
                                        1 - this.symbol.color.toRgba()[3], !1
                                    ), this.symbolTransparencyInput.set(
                                        'value',
                                        Math.round(100 * (1 - this.symbol.color.toRgba()[3])), !1
                                    ), this.symbolWidth.set(
                                        'value',
                                        this.symbol.width, !1
                                    ), this.symbolWidthInput.set(
                                        'value',
                                        Math.round(this.symbol.width), !1
                                    ), this.showEndSize &&
                                    ((this.symbolWidthLabel.innerHTML = this.i18n.symbolStartWidthLabel), this.symbolEndWidth.set(
                                        'value',
                                        this.endSize, !1
                                    ), this.symbolEndWidthInput.set(
                                        'value',
                                        Math.round(this.endSize), !1
                                    ), c.style(
                                        this.symbolEndWidthRow,
                                        'display',
                                        ''
                                    )), this.onPatternChange();
                                else if (
                                    'simplefillsymbol' === this.symbol.type ||
                                    'picturefillsymbol' === this.symbol.type
                                )
                                    c.style(
                                        this.symbolBackgroundColorRow,
                                        'display',
                                        this.showNoBgColor ? 'none' : ''
                                    ), c.style(
                                        this.symbolAddImageDiv,
                                        'display',
                                        'none'
                                    ), c.style(
                                        this.symbolClassesDiv,
                                        'display',
                                        'none'
                                    ), c.style(
                                        this.symbolClassesTemplatePickerDiv,
                                        'display',
                                        'block'
                                    ), c.style(this.symbolSizeRow, 'display', 'none'), c.style(
                                        this.symbolTransparencyRow,
                                        'display',
                                        ''
                                    ), c.style(
                                        this.symbolEndSizeRow,
                                        'display',
                                        'none'
                                    ), c.style(
                                        this.symbolEndWidthRow,
                                        'display',
                                        'none'
                                    ), c.style(
                                        this.symbolLinePatternRow,
                                        'display',
                                        'none'
                                    ), c.style(
                                        this.symbolOutlineColorRow,
                                        'display',
                                        ''
                                    ), c.style(this.symbolWidthRow, 'display', ''), c.style(
                                        this.symbolEndWidthRow,
                                        'display',
                                        'none'
                                    ), (this.symbolWidthLabel.innerHTML = this.i18n.outlineWidthLabel), this.symbolTransparency.set(
                                        'disabled', !1
                                    ), this.symbolTransparencyInput.set(
                                        'disabled', !1
                                    ), c.style(
                                        this.symbolBackgroundColor,
                                        'backgroundColor',
                                        this.symbol.color.toHex()
                                    ), this.symbolTransparency.set(
                                        'value',
                                        1 - this.symbol.color.toRgba()[3], !1
                                    ), this.symbolTransparencyInput.set(
                                        'value',
                                        Math.round(100 * (1 - this.symbol.color.toRgba()[3])), !1
                                    ), c.style(
                                        this.symbolOutlineColor,
                                        'backgroundColor',
                                        this.symbol.outline.color.toHex()
                                    ), this.symbolWidth.set(
                                        'value',
                                        this.symbol.outline.width, !1
                                    ), this.symbolWidthInput.set(
                                        'value',
                                        Math.round(this.symbol.outline.width), !1
                                    );
                                this._drawSymbol();
                            },
                            enableEvents: function() {
                                this.eventHandlers = [];
                                this.eventHandlers.push(
                                    c.connect(this.symbolSize, 'onChange', this, 'onSizeChange')
                                );
                                this.eventHandlers.push(
                                    c.connect(
                                        this.symbolSize._movable,
                                        'onMoveStop',
                                        this,
                                        'onSizeChange'
                                    )
                                );
                                this.eventHandlers.push(
                                    c.connect(
                                        this.symbolSizeInput,
                                        'onChange',
                                        this,
                                        'onSizeChangeByInput'
                                    )
                                );
                                this.eventHandlers.push(
                                    c.connect(
                                        this.symbolEndSize,
                                        'onChange',
                                        this,
                                        'onEndSizeChange'
                                    )
                                );
                                this.eventHandlers.push(
                                    c.connect(
                                        this.symbolEndSize._movable,
                                        'onMoveStop',
                                        this,
                                        'onEndSizeChange'
                                    )
                                );
                                this.eventHandlers.push(
                                    c.connect(
                                        this.symbolEndSizeInput,
                                        'onChange',
                                        this,
                                        'onEndSizeChangeByInput'
                                    )
                                );
                                this.eventHandlers.push(
                                    c.connect(
                                        this.symbolTransparency,
                                        'onChange',
                                        this,
                                        'onTransparencyChange'
                                    )
                                );
                                this.eventHandlers.push(
                                    c.connect(
                                        this.symbolTransparency._movable,
                                        'onMoveStop',
                                        this,
                                        'onTransparencyChange'
                                    )
                                );
                                this.eventHandlers.push(
                                    c.connect(
                                        this.symbolTransparencyInput,
                                        'onChange',
                                        this,
                                        'onTransparencyChangeByInput'
                                    )
                                );
                                this.eventHandlers.push(
                                    c.connect(
                                        this.symbolWidth,
                                        'onChange',
                                        this,
                                        'onWidthChange'
                                    )
                                );
                                this.eventHandlers.push(
                                    c.connect(
                                        this.symbolWidth._movable,
                                        'onMoveStop',
                                        this,
                                        'onWidthChange'
                                    )
                                );
                                this.eventHandlers.push(
                                    c.connect(
                                        this.symbolWidthInput,
                                        'onChange',
                                        this,
                                        'onWidthChangeByInput'
                                    )
                                );
                                this.eventHandlers.push(
                                    c.connect(
                                        this.symbolEndWidth,
                                        'onChange',
                                        this,
                                        'onEndWidthChange'
                                    )
                                );
                                this.eventHandlers.push(
                                    c.connect(
                                        this.symbolEndWidth._movable,
                                        'onMoveStop',
                                        this,
                                        'onEndWidthChange'
                                    )
                                );
                                this.eventHandlers.push(
                                    c.connect(
                                        this.symbolEndWidthInput,
                                        'onChange',
                                        this,
                                        'onEndWidthChangeByInput'
                                    )
                                );
                                this.eventHandlers.push(
                                    c.connect(
                                        this.symbolLinePatternSelect,
                                        'onChange',
                                        c.hitch(this, 'onSymbolLinePatternChange')
                                    )
                                );
                                this.eventHandlers.push(
                                    c.connect(
                                        this.symbolColorClasses,
                                        'onChange',
                                        this,
                                        'onSymbolListChange'
                                    )
                                );
                            },
                            disableEvents: function() {
                                this.eventHandlers &&
                                    (c.forEach(this.eventHandlers, function(b) {
                                        c.disconnect(b);
                                    }), (this.eventHandlers = null));
                            },
                            onPatternChange: function() {
                                c.removeClass(
                                    this.symbolLinePatternSelect.containerNode,
                                    'symbolLinePatternSolid symbolLinePatternDot symbolLinePatternDash symbolLinePatternDashDot symbolLinePatternDashDotDot'
                                );
                                'solid' == this.symbolLinePatternSelect.get('value') ?
                                    c.addClass(
                                        this.symbolLinePatternSelect.containerNode,
                                        'symbolLinePatternSolid'
                                    ) :
                                    'dot' == this.symbolLinePatternSelect.get('value') ?
                                    c.addClass(
                                        this.symbolLinePatternSelect.containerNode,
                                        'symbolLinePatternDot'
                                    ) :
                                    'dash' == this.symbolLinePatternSelect.get('value') ?
                                    c.addClass(
                                        this.symbolLinePatternSelect.containerNode,
                                        'symbolLinePatternDash'
                                    ) :
                                    'dashdot' ==
                                    this.symbolLinePatternSelect.get('value') ?
                                    c.addClass(
                                        this.symbolLinePatternSelect.containerNode,
                                        'symbolLinePatternDashDot'
                                    ) :
                                    'dashdotdot' ==
                                    this.symbolLinePatternSelect.get('value') &&
                                    c.addClass(
                                        this.symbolLinePatternSelect.containerNode,
                                        'symbolLinePatternDashDotDot'
                                    );
                            },
                            onBackgroundColorClick: function(b) {
                                this.colorPicker = 'background';
                                g.popup.open({
                                    popup: this.symbolColorTooltip,
                                    around: b.target,
                                });
                            },
                            onOutlineColorClick: function(b) {
                                this.colorPicker = 'outline';
                                g.popup.open({
                                    popup: this.symbolColorTooltip,
                                    around: b.target,
                                });
                            },
                            onColorSelection: function(b) {
                                g.popup.close(this.symbolColorTooltip);
                                b = new c.Color(b).toRgba();
                                'background' === this.colorPicker ||
                                    'simplelinesymbol' === this.symbol.type ?
                                    ((b[3] = this.symbol.color.toRgba()[3]), this.symbol.color.setColor(
                                        b
                                    )) :
                                    this.symbol.outline.color.setColor(b);
                                this.updateUI();
                            },
                            onTransparencyChange: function(b) {
                                b = this.symbol.color.toRgba();
                                var e = this.symbolTransparency.getValue(),
                                    e = c.number.round(e, 2);
                                b[3] = 1 - e;
                                this.symbol.color.setColor(b);
                                this.updateUI();
                            },
                            onTransparencyChangeByInput: function(b) {
                                isNaN(b) ?
                                    this.symbolTransparencyInput.set(
                                        'value',
                                        Math.round(100 * this.symbolTransparency.getValue()), !1
                                    ) :
                                    ((b = Math.round(b)), 0 > b || 100 < b ?
                                        this.symbolTransparencyInput.set(
                                            'value',
                                            Math.round(
                                                100 * this.symbolTransparency.getValue()
                                            ), !1
                                        ) :
                                        this.symbolTransparency.set('value', b / 100, !1));
                            },
                            onWidthChange: function(b) {
                                if (!isNaN(b)) {
                                    var c = this.symbolWidth.getValue(),
                                        c = Math.round(c);
                                    'simplefillsymbol' === this.symbol.type ||
                                        'simplemarkersymbol' === this.symbol.type ?
                                        this.symbol.outline.width != b &&
                                        (this.symbol.outline.setWidth(
                                            c
                                        ), this.symbol.outline.setStyle(
                                            esri.symbol.SimpleLineSymbol.STYLE_SOLID
                                        ), (b = this.symbol.outline.color.toRgba()), (b[3] = 1), this.symbol.outline.color.setColor(
                                            b
                                        ), this.updateUI()) :
                                        this.symbol.width != b &&
                                        (this.symbol.setWidth(c), this.updateUI());
                                }
                            },
                            onWidthChangeByInput: function(b) {
                                isNaN(b) ?
                                    this.symbolWidthInput.set(
                                        'value',
                                        this.symbolWidth.getValue(), !1
                                    ) :
                                    ((b = Math.round(b)), 0 > b || 18 < b ?
                                        this.symbolWidthInput.set(
                                            'value',
                                            this.symbolWidth.getValue(), !1
                                        ) :
                                        this.symbolWidth.set('value', b, !0));
                            },
                            onEndWidthChange: function(b) {
                                isNaN(b) ||
                                    ((b = this.symbolEndWidth.getValue()), (b = Math.round(
                                            b
                                        )), b < this.symbolWidthInput.getValue() ?
                                        this.symbolEndWidth.set(
                                            'value',
                                            this.symbolEndWidthInput.getValue(), !1
                                        ) :
                                        (this.symbolEndWidthInput.set(
                                            'value',
                                            b, !1
                                        ), (this.endSize = b)));
                            },
                            onEndWidthChangeByInput: function(b) {
                                isNaN(b) ?
                                    this.symbolEndWidthInput.set(
                                        'value',
                                        Math.round(this.symbolEndWidth.getValue()), !1
                                    ) :
                                    ((b = Math.round(b)), 1 > b ||
                                        120 < b ||
                                        b < this.symbolWidth.getValue() ?
                                        this.symbolEndWidthInput.set(
                                            'value',
                                            Math.round(this.symbolEndWidth.getValue()), !1
                                        ) :
                                        (this.symbolEndWidth.set(
                                            'value',
                                            b, !1
                                        ), (this.endSize = b)));
                            },
                            onSizeChange: function(b) {
                                if (!isNaN(b)) {
                                    b = this.symbol.width;
                                    var c = this.symbolSize.getValue(),
                                        c = Math.round(c);
                                    if (b != c)
                                        if (
                                            this.showEndSize &&
                                            c > this.symbolEndSizeInput.getValue()
                                        )
                                            this.symbolSize.set(
                                                'value',
                                                this.symbolSizeInput.getValue(), !1
                                            );
                                        else {
                                            if ('picturemarkersymbol' === this.symbol.type) {
                                                this.symbol.setHeight(
                                                    this.symbol.height / this.symbol.width * c
                                                );
                                                this.symbol.setWidth(c);
                                                if (!this.symbol.url ||
                                                    'http://' === this.symbol.url ||
                                                    (-1 == this.symbol.url.indexOf('http://') &&
                                                        -1 == this.symbol.url.indexOf('data:'))
                                                )
                                                    return;
                                                if (this.symbol.xoffset || this.symbol.yoffset)
                                                    (c = this.symbol.width), (b =
                                                        c / b), this.symbol.setOffset(
                                                        Math.round(this.symbol.xoffset * b),
                                                        Math.round(this.symbol.yoffset * b)
                                                    );
                                            } else this.symbol.setSize(c);
                                            this.updateUI();
                                        }
                                }
                            },
                            onSizeChangeByInput: function(b) {
                                isNaN(b) ?
                                    this.symbolSizeInput.set(
                                        'value',
                                        Math.round(this.symbolSize.getValue()), !1
                                    ) :
                                    ((b = Math.round(b)), 1 > b ||
                                        120 < b ||
                                        (this.showEndSize && b > this.symbolEndSize.getValue()) ?
                                        this.symbolSizeInput.set(
                                            'value',
                                            Math.round(this.symbolSize.getValue()), !1
                                        ) :
                                        this.symbolSize.set('value', b, !0));
                            },
                            onEndSizeChange: function(b) {
                                isNaN(b) ||
                                    ((b = this.symbolEndSize.getValue()), (b = Math.round(
                                            b
                                        )), b < this.symbolSizeInput.getValue() ?
                                        this.symbolEndSize.set(
                                            'value',
                                            this.symbolEndSizeInput.getValue(), !1
                                        ) :
                                        (this.symbolEndSizeInput.set(
                                            'value',
                                            b, !1
                                        ), (this.endSize = b)));
                            },
                            onEndSizeChangeByInput: function(b) {
                                isNaN(b) ?
                                    this.symbolEndSizeInput.set(
                                        'value',
                                        Math.round(this.symbolEndSize.getValue()), !1
                                    ) :
                                    ((b = Math.round(b)), 1 > b ||
                                        120 < b ||
                                        b < this.symbolSize.getValue() ?
                                        this.symbolEndSizeInput.set(
                                            'value',
                                            Math.round(this.symbolEndSize.getValue()), !1
                                        ) :
                                        (this.symbolEndSize.set(
                                            'value',
                                            b, !1
                                        ), (this.endSize = b)));
                            },
                            onUrlChange: function(b) {
                                if (b && !(10 > b.length) && 0 === b.indexOf('http')) {
                                    this.urlChangesNotApplied = !0;
                                    for (
                                        var e = function(d) {
                                                clearTimeout(a);
                                                a = null;
                                                var e = c.style(
                                                        c.byId(this.id + '_testImage'),
                                                        'width'
                                                    ),
                                                    f = c.style(c.byId(this.id + '_testImage'), 'height');
                                                d.w && d.h && ((e = d.w), (f = d.h));
                                                1 == e && 1 == f ?
                                                    ((this.urlChangesNotApplied = !1), this.updateUI(), arcgisonline.sharing.dijit.dialog.GeneralDlg.prototype.statics
                                                        .getInstance()
                                                        .show({
                                                            title: this.i18n.errorDlgTitle,
                                                            message: this.i18n.error.invalidUrl,
                                                        })) :
                                                    (0 === e && (e = 40), 0 === f && (f = e), (d.w &&
                                                            d.h) ||
                                                        this.cachedImages.push({
                                                            url: b,
                                                            w: e,
                                                            h: f,
                                                        }), (this.symbol = new esri.symbol
                                                            .PictureMarkerSymbol()), this.symbol.setWidth(
                                                            Math.min(120, e)
                                                        ), this.symbolSize.set(
                                                            'value',
                                                            this.symbol.width, !1
                                                        ), this.symbol.setHeight(
                                                            f / e * this.symbol.width
                                                        ), this.symbol.setUrl(
                                                            b
                                                        ), this.updateUI(), (this.urlChangesNotApplied = !1));
                                            },
                                            f = 0; f < this.cachedImages.length; f++
                                    ) {
                                        var d = this.cachedImages[f];
                                        if (d.url == b) {
                                            c.hitch(this, e)(d);
                                            return;
                                        }
                                    }
                                    this.testImageHandler && c.disconnect(this.testImageHandler);
                                    this.testImageHandler = c.connect(
                                        c.byId(this.id + '_testImage'),
                                        'onload',
                                        this,
                                        e, {}
                                    );
                                    var a = setTimeout(
                                        c.hitch(this, function() {
                                            clearTimeout(a);
                                            a = null;
                                            this.urlChangesNotApplied = !1;
                                            arcgisonline.sharing.dijit.dialog.GeneralDlg.prototype.statics
                                                .getInstance()
                                                .show({
                                                    title: this.i18n.errorDlgTitle,
                                                    message: this.i18n.error.invalidUrl,
                                                });
                                        }),
                                        5e3
                                    );
                                    c.byId(this.id + '_testImage').src = b;
                                }
                            },
                            onAddImage: function(b) {
                                this.onImageChangeHandler &&
                                    c.unsubscribe(this.onImageChangeHandler);
                                this.onImageChangeHandler = c.subscribe(
                                    'onUrlChange',
                                    c.hitch(this, 'onUrlChange')
                                );
                                arcgisonline.sharing.dijit.dialog.ImgDlg.prototype.statics
                                    .getInstance()
                                    .show();
                            },
                            onSymbolLinePatternChange: function() {
                                if (
                                    'simplelinesymbol' === this.symbol.type ||
                                    'cartographiclinesymbol' === this.symbol.type
                                ) {
                                    switch (this.symbolLinePatternSelect.getValue()) {
                                        case 'dot':
                                            this.symbol.setStyle(
                                                esri.symbol.SimpleLineSymbol.STYLE_DOT
                                            );
                                            break;
                                        case 'dash':
                                            this.symbol.setStyle(
                                                esri.symbol.SimpleLineSymbol.STYLE_DASH
                                            );
                                            break;
                                        case 'dashdot':
                                            this.symbol.setStyle(
                                                esri.symbol.SimpleLineSymbol.STYLE_DASHDOT
                                            );
                                            break;
                                        case 'dashdotdot':
                                            this.symbol.setStyle(
                                                esri.symbol.SimpleLineSymbol.STYLE_DASHDOTDOT
                                            );
                                            break;
                                        default:
                                            this.symbol.setStyle(
                                                esri.symbol.SimpleLineSymbol.STYLE_SOLID
                                            );
                                    }
                                    this.updateUI();
                                }
                            },
                            getSymbolListGroup: function() {
                                arcgisonline.sharing.geow.Community.searchGroups(
                                    esriGeowConfig.symbolSetsGroupQuery,
                                    c.hitch(this, function(b, c) {
                                        b &&
                                            b.results &&
                                            0 < b.results.length &&
                                            this.getSymbolListItems(b.results[0].id);
                                    }),
                                    c.hitch(this, function(b, c) {})
                                );
                            },
                            getSymbolListItems: function(b) {
                                b =
                                    esriGeowConfig.restBaseUrl +
                                    'search?num\x3d20\x26q\x3dgroup:' +
                                    b +
                                    ' AND type:"Symbol Set"';
                                b = 'vml' === f.gfx.renderer ?
                                    b + ' AND -typekeywords:"by value"' :
                                    b +
                                    ' AND ((typekeywords:"by value" AND typekeywords:"marker") OR typekeywords:"fill" OR typekeywords:"line")';
                                arcgisonline.sharing.util.getJson(
                                    b,
                                    c.hitch(this, function(b, f) {
                                        b.results &&
                                            0 < b.results.length &&
                                            ((this.symbolListItems =
                                                b.results), this.symbolListItems.sort(function(b, a) {
                                                return b.title == a.title ?
                                                    0 :
                                                    b.title < a.title ? -1 : 1;
                                            }), c.forEach(
                                                this.symbolListItems,
                                                function(b, a) {
                                                    b.typeKeywordsString = b.typeKeywords.toString(); -
                                                    1 < b.typeKeywordsString.indexOf('default') &&
                                                        -1 < b.typeKeywordsString.indexOf('marker') &&
                                                        ((a = this.symbolListItems.splice(a, 1)), 0 <
                                                            a.length &&
                                                            (this.symbolListItems.splice(
                                                                0,
                                                                0,
                                                                a[0]
                                                            ), this.symbolColorClasses.set(
                                                                'value',
                                                                b.title
                                                            )));
                                                },
                                                this
                                            ), (this.symbolClassStore = new c.data
                                                .ItemFileWriteStore({
                                                    data: { identifier: 'id', items: [] },
                                                })), c.forEach(
                                                this.symbolListItems,
                                                function(b) {
                                                    -1 < b.typeKeywordsString.indexOf('marker') &&
                                                        (this.symbolClassStore.newItem({
                                                            name: b.title,
                                                            id: b.id,
                                                        }), this.symbolColorClasses.set(
                                                            'store',
                                                            this.symbolClassStore
                                                        ));
                                                },
                                                this
                                            ), this.getSymbolListData(!0));
                                    }),
                                    c.hitch(this, function(b, c) {})
                                );
                            },
                            getSymbolListData: function(b) {
                                this.destroySymbolClassesTemplatePicker();
                                c.forEach(
                                    this.symbolListItems,
                                    function(e) {
                                        if (
                                            (('simplemarkersymbol' === this.symbol.type ||
                                                    'picturemarkersymbol' === this.symbol.type) &&
                                                -1 < e.typeKeywordsString.indexOf('marker')) ||
                                            (('simplelinesymbol' === this.symbol.type ||
                                                    'cartographiclinesymbol' === this.symbol.type) &&
                                                -1 < e.typeKeywordsString.indexOf('line')) ||
                                            (('simplefillsymbol' === this.symbol.type ||
                                                    'picturefillsymbol' === this.symbol.type) &&
                                                -1 < e.typeKeywordsString.indexOf('fill'))
                                        )
                                            e.data ?
                                            'simplemarkersymbol' !== this.symbol.type &&
                                            'picturemarkersymbol' !== this.symbol.type ?
                                            this.processSymbolListData(e) :
                                            this.symbolColorClasses.get('value') ==
                                            e.title && this.processSymbolListData(e) :
                                            arcgisonline.sharing.util.getJson(
                                                esriGeowConfig.restBaseUrl +
                                                '/content/items/' +
                                                e.id +
                                                '/data',
                                                c.hitch(
                                                    this,
                                                    function(c, d, a) {
                                                        d &&
                                                            0 < d.length &&
                                                            ((c.data = d), 'simplemarkersymbol' ===
                                                                this.symbol.type ||
                                                                'picturemarkersymbol' === this.symbol.type ?
                                                                ((b &&
                                                                        -1 <
                                                                        c.typeKeywordsString.indexOf(
                                                                            'default'
                                                                        )) ||
                                                                    !b) &&
                                                                this.processSymbolListData(c) :
                                                                this.processSymbolListData(c));
                                                    },
                                                    e
                                                ),
                                                c.hitch(this, function(b, c) {})
                                            );
                                    },
                                    this
                                );
                            },
                            processSymbolListData: function(b) {
                                setTimeout(
                                    c.hitch(this, function() {
                                        this.createSymbolListTemplatePicker(b.data);
                                    }),
                                    0
                                );
                            },
                            createSymbolListTemplatePicker: function(b) {
                                b = c.map(
                                    b,
                                    function(b) {
                                        var c = {};
                                        c.symbol = esri.symbol.fromJson(b);
                                        c.description = b.name;
                                        return c;
                                    },
                                    this
                                );
                                this.symbolClassesTemplatePicker ||
                                    ((this.symbolClassesTemplatePicker = new esri.dijit.editing
                                        .TemplatePicker({
                                                items: b,
                                                rows: 'auto',
                                                columns: 'auto',
                                                _assumedCellWidth: 40,
                                                grouping: !1,
                                                style: 'position: relative; width: 100%; height: 120px;',
                                            },
                                            this.id + '_symbolClassesTemplatePicker'
                                        )), this.symbolClassesTemplatePicker.startup(), (this.templatePickerSymbolClass = this.symbol.type), (this.templatePickerOnSelectionChangeHandler = c.connect(
                                        this.symbolClassesTemplatePicker,
                                        'onSelectionChange',
                                        this,
                                        function() {
                                            var b = this.symbolClassesTemplatePicker.getSelected();
                                            if (b) {
                                                var c = this.symbol;
                                                this.symbol = esri.symbol.fromJson(
                                                    b.item.symbol.toJson()
                                                );
                                                if (
                                                    'simplemarkersymbol' === this.symbol.type ||
                                                    'picturemarkersymbol' === this.symbol.type
                                                )
                                                    'simplemarkersymbol' === this.symbol.type ?
                                                    (this.symbol.size = 'simplemarkersymbol' ===
                                                        c.type ?
                                                        c.size :
                                                        c.width) :
                                                    'simplemarkersymbol' === c.type ?
                                                    (this.symbol.xoffset &&
                                                        (this.symbol.xoffset =
                                                            c.size /
                                                            (this.symbol.width /
                                                                this.symbol.xoffset)), this.symbol
                                                        .yoffset &&
                                                        (this.symbol.yoffset =
                                                            this.symbol.height /
                                                            this.symbol.width *
                                                            c.size /
                                                            (this.symbol.height /
                                                                this.symbol
                                                                .yoffset)), (this.symbol.height =
                                                            this.symbol.height /
                                                            this.symbol.width *
                                                            c.size), (this.symbol.width = c.size)) :
                                                    (this.symbol.xoffset &&
                                                        (this.symbol.xoffset =
                                                            c.width /
                                                            (this.symbol.width /
                                                                this.symbol.xoffset)), this.symbol
                                                        .yoffset &&
                                                        (this.symbol.yoffset =
                                                            this.symbol.height /
                                                            this.symbol.width *
                                                            c.width /
                                                            (this.symbol.height /
                                                                this.symbol
                                                                .yoffset)), (this.symbol.height =
                                                            this.symbol.height /
                                                            this.symbol.width *
                                                            c.width), (this.symbol.width = c.width));
                                                (this.symbol.width || this.symbol.size) >=
                                                this.endSize &&
                                                    ((this.endSize =
                                                        (this.symbol.width ?
                                                            this.symbol.width :
                                                            this.symbol.size) +
                                                        ('simplelinesymbol' == this.symbol.type ?
                                                            10 :
                                                            20)), this.symbolEndSize.set(
                                                        'value',
                                                        this.endSize, !1
                                                    ));
                                                this.updateUI();
                                            }
                                        }
                                    )));
                            },
                            destroySymbolClassesTemplatePicker: function() {
                                this.symbolClassesTemplatePicker &&
                                    (c.disconnect(
                                            this.templatePickerOnSelectionChangeHandler
                                        ), this.symbolClassesTemplatePicker.destroy(), (this.symbolClassesTemplatePicker = null), c.byId(
                                            'symbolClassesTemplatePicker'
                                        ) ||
                                        c.create(
                                            'div', { id: this.id + '_symbolClassesTemplatePicker' },
                                            this.symbolClassesTemplatePickerDiv
                                        ));
                            },
                            onSymbolListChange: function(b) {
                                if (b) {
                                    this.destroySymbolClassesTemplatePicker();
                                    for (
                                        var e = null, f = 0; f < this.symbolListItems.length; f++
                                    )
                                        this.symbolListItems[f].title == b &&
                                        (e = this.symbolListItems[f]);
                                    e &&
                                        e.data &&
                                        setTimeout(
                                            c.hitch(this, function() {
                                                this.createSymbolListTemplatePicker(e.data);
                                            }),
                                            0
                                        );
                                }
                            },
                            createSimpleMarkerTemplatePicker: function() {
                                var b = c.map(
                                    this.simpleMarkerSymbols,
                                    function(b) {
                                        var c = {};
                                        c.symbol = esri.symbol.fromJson(b);
                                        c.description = b.name;
                                        return c;
                                    },
                                    this
                                );
                                this.simpleMarkerTemplatePicker ||
                                    ((this.simpleMarkerTemplatePicker = new esri.dijit.editing
                                        .TemplatePicker({
                                                items: b,
                                                rows: 'auto',
                                                columns: 'auto',
                                                _assumedCellWidth: 40,
                                                grouping: !1,
                                                style: 'position: relative; width: 100%; height: 45px;',
                                            },
                                            this.id + '_symbolSimpleMarkerTemplatePicker'
                                        )), this.simpleMarkerTemplatePicker.startup(), (this.simpleMarkerTemplatePickerOnSelectionChangeHandler = c.connect(
                                        this.simpleMarkerTemplatePicker,
                                        'onSelectionChange',
                                        this,
                                        function() {
                                            var b = this.simpleMarkerTemplatePicker.getSelected();
                                            b &&
                                                ((this.symbol = esri.symbol.fromJson(
                                                    b.item.symbol.toJson()
                                                )), this.updateUI());
                                        }
                                    )));
                            },
                            destroySimpleMarkerTemplatePicker: function() {
                                this.simpleMarkerTemplatePicker &&
                                    (c.disconnect(
                                            this.simpleMarkerTemplatePickerOnSelectionChangeHandler
                                        ), this.simpleMarkerTemplatePicker.destroy(), (this.simpleMarkerTemplatePicker = null), c.byId(
                                            this.id + '_symbolSimpleMarkerTemplatePicker'
                                        ) ||
                                        c.create(
                                            'div', { id: this.id + '_symbolSimpleMarkerTemplatePicker' },
                                            this.symbolSimpleMarkerTemplatePickerDiv
                                        ));
                            },
                            getSymbolUrl: function() {
                                var b = this.symbol.url;
                                0 !== b.indexOf('http://') &&
                                    this.symbol.imageData &&
                                    0 < this.symbol.imageData.length &&
                                    (b = this.symbol.imageData);
                                return b;
                            },
                            setLinePattern: function() {
                                switch (this.symbol.style) {
                                    case esri.symbol.SimpleLineSymbol.STYLE_DOT:
                                        this.symbolLinePatternSelect.set('value', 'dot', !1);
                                        break;
                                    case esri.symbol.SimpleLineSymbol.STYLE_DASH:
                                        this.symbolLinePatternSelect.set('value', 'dash', !1);
                                        break;
                                    case esri.symbol.SimpleLineSymbol.STYLE_DASHDOT:
                                        this.symbolLinePatternSelect.set('value', 'dashdot', !1);
                                        break;
                                    case esri.symbol.SimpleLineSymbol.STYLE_DASHDOTDOT:
                                        this.symbolLinePatternSelect.set(
                                            'value',
                                            'dashdotdot', !1
                                        );
                                        break;
                                    default:
                                        this.symbolLinePatternSelect.set('value', 'solid', !1);
                                }
                            },
                            getMarkerJson: function() {
                                var b = this.markerJson;
                                b.url = arcgisonline.sharing.util.getRedSphereUrl();
                                return b;
                            },
                            _drawSymbol: function() {
                                var b = this.symbolImage,
                                    e = this.symbol,
                                    g = this.template,
                                    d = 80,
                                    a = 30;
                                if ('simplemarkersymbol' === e.type)
                                    a = d = Math.min(e.size + 12, 125);
                                else if ('picturemarkersymbol' === e.type) {
                                    if (!this.symbol.url ||
                                        'http://' === e.url ||
                                        (-1 == e.url.indexOf('http://') &&
                                            -1 == e.url.indexOf('https://') &&
                                            -1 == e.url.indexOf('data:'))
                                    )
                                        return;
                                    a = d = Math.min(Math.max(e.width, e.height), 125);
                                } else if (
                                    'simplelinesymbol' === this.symbol.type ||
                                    'cartographiclinesymbol' === this.symbol.type
                                )
                                    (d = 190), (a = 20);
                                b = f.gfx.createSurface(b, d, a);
                                if ('vml' === f.gfx.renderer) {
                                    var k = b.getEventSource();
                                    c.style(k, 'position', 'relative');
                                    c.style(k.parentNode, 'position', 'relative');
                                }
                                var e =
                                    this._getDrawingToolShape(e, g) ||
                                    esri.symbol.getShapeDescriptors(e),
                                    n;
                                try {
                                    n = b
                                        .createShape(e.defaultShape)
                                        .setFill(e.fill)
                                        .setStroke(e.stroke);
                                } catch (l) {
                                    b.clear();
                                    b.destroy();
                                    return;
                                }
                                e = b.getDimensions();
                                e = { dx: e.width / 2, dy: e.height / 2 };
                                k = n.getBoundingBox();
                                g = k.width;
                                k = k.height;
                                if (g > d || k > a)
                                    (d = ((d < a ? d : a) - 5) / (g > k ? g : k)), c.mixin(e, {
                                        xx: d,
                                        yy: d,
                                    });
                                n.applyTransform(e);
                                return b;
                            },
                            _getDrawingToolShape: function(b, c) {
                                if (
                                    'simplelinesymbol' == b.type ||
                                    'cartographiclinesymbol' == b.type
                                )
                                    return (c = { type: 'path', path: 'M -90,0 L 90,0 E' }), {
                                        defaultShape: c,
                                        fill: null,
                                        stroke: b.getStroke(),
                                    };
                                switch (c ? c.drawingTool || null : null) {
                                    case 'esriFeatureEditToolArrow':
                                        c = {
                                            type: 'path',
                                            path: 'M 10,1 L 3,8 L 3,5 L -15,5 L -15,-2 L 3,-2 L 3,-5 L 10,1 E',
                                        };
                                        break;
                                    case 'esriFeatureEditToolTriangle':
                                        c = {
                                            type: 'path',
                                            path: 'M -10,14 L 2,-10 L 14,14 L -10,14 E',
                                        };
                                        break;
                                    case 'esriFeatureEditToolRectangle':
                                        c = {
                                            type: 'path',
                                            path: 'M -10,-10 L 10,-10 L 10,10 L -10,10 L -10,-10 E',
                                        };
                                        break;
                                    case 'esriFeatureEditToolCircle':
                                        c = { type: 'circle', cx: 0, cy: 0, r: 10 };
                                        break;
                                    case 'esriFeatureEditToolEllipse':
                                        c = { type: 'ellipse', cx: 0, cy: 0, rx: 10, ry: 5 };
                                        break;
                                    default:
                                        return null;
                                }
                                return {
                                    defaultShape: c,
                                    fill: b.getFill(),
                                    stroke: b.getStroke(),
                                };
                            },
                            _repaintItems: function() {
                                c.forEach(
                                    this._surfaceItems,
                                    function(b) {
                                        this._repaint(b);
                                    },
                                    this
                                );
                            },
                            _repaint: function(b) {
                                b.getStroke && b.setStroke && b.setStroke(b.getStroke());
                                b.getFill && b.setFill && b.setFill(b.getFill());
                                b.children &&
                                    c.isArray(b.children) &&
                                    c.forEach(b.children, this._repaint, this);
                            },
                        }
                    );
                }
            );
        },
        'arcgisonline/sharing/dijit/dialog/ImgDlg': function() {
            define(
                [
                    'dojo',
                    'dijit',
                    'dojox',
                    'dojo/require!dijit/Dialog,dijit/_Widget,dijit/_Templated,arcgisonline/sharing/dijit/dialog/GeneralDlg',
                ],
                function(c, g, f) {
                    c.provide('arcgisonline.sharing.dijit.dialog.ImgDlg');
                    c.require('dijit.Dialog');
                    c.require('dijit._Widget');
                    c.require('dijit._Templated');
                    c.require('arcgisonline.sharing.dijit.dialog.GeneralDlg');
                    c.declare(
                        'arcgisonline.sharing.dijit.dialog.ImgDlg', [g._Widget, g._Templated], {
                            widgetsInTemplate: !0,
                            templateString: '\x3cdiv class\x3d"widgetContent" \x3e\r\n  \x3cdiv dojotype\x3d"dijit.Dialog" id\x3d"image-dialog" title\x3d"${i18n.imgDlgTitle}" execute\x3d""\x3e\r\n    \x3cdiv\x3e\r\n      \x3cdiv style\x3d"line-height:17px;padding-top:10px;padding-right:10px;"\x3e\x3cspan\x3e${i18n.specifyImage}\x3c/span\x3e\x3c/div\x3e\r\n      \x3cbr /\x3e\r\n      \x3clabel style\x3d"line-height:12px;"\x3e${i18n.urlLabel}\x3c/label\x3e\r\n      \x3cdiv dojoAttachPoint\x3d"urlInput" dojotype\x3d"dijit.form.TextBox" trim\x3d"true" value\x3d"http://" style\x3d"width:330px;" dir\x3d"ltr"\x3e\x3c/div\x3e\r\n\t\t\t\x3cdiv style\x3d"line-height:17px;padding-top:10px;padding-right:10px;"\x3e\x3cspan\x3e${i18n.imgDetailMessage}\x3c/span\x3e\x3c/div\x3e\r\n    \x3c/div\x3e\r\n\t  \x3cbr /\x3e\x26nbsp;  \r\n\t  \x3cbutton dojoAttachEvent\x3d"onClick:onCancelClick" class\x3d"jevent cancel" style\x3d"float:right;" dojoType\x3d"dijit.form.Button"\x3e${i18n.cancel}\x3c/button\x3e\r\n\t  \x3cbutton dojoAttachEvent\x3d"onClick:onDoneClick" class\x3d"jevent primary" style\x3d"float:right;" dojoType\x3d"dijit.form.Button"\x3e${i18n.done}\x3c/button\x3e\r\n\t  \x3cbr /\x3e\x26nbsp; \r\n\t\t\x3cbr/\x3e \r\n  \x3c/div\x3e\r\n\x3c/div\x3e',
                            i18n: null,
                            statics: {
                                _instance: null,
                                getInstance: function() {
                                    null == this._instance &&
                                        (this._instance = new arcgisonline.sharing.dijit.dialog
                                            .ImgDlg());
                                    return this._instance;
                                },
                            },
                            postMixInProperties: function() {
                                this.inherited(arguments);
                                this.i18n = c.i18n.getLocalization(
                                    'arcgisonline',
                                    'arcgisonline'
                                ).common;
                                c.mixin(
                                    this.i18n,
                                    c.i18n.getLocalization('arcgisonline', 'arcgisonline')
                                    .generalDlg
                                );
                                c.mixin(
                                    this.i18n,
                                    c.i18n.getLocalization('arcgisonline', 'arcgisonline').imgDlg
                                );
                            },
                            postCreate: function() {
                                this.loadConnections();
                            },
                            show: function(b) {
                                g.byId('image-dialog').show();
                            },
                            hide: function() {
                                this.urlInput.setValue('http://');
                                g.byId('image-dialog').hide();
                            },
                            loadConnections: function() {
                                c.query('.jevent').connect('onclick', function(b) {
                                    b.preventDefault();
                                });
                            },
                            onDoneClick: function(b) {
                                b = this.urlInput.getValue();
                                10 > b.length ?
                                    arcgisonline.sharing.dijit.dialog.GeneralDlg.prototype.statics
                                    .getInstance()
                                    .show({
                                        title: this.i18n.errorDlgTitle,
                                        message: this.i18n.error.invalidUrl,
                                    }) :
                                    (0 !== b.indexOf('http') &&
                                        (b = 'http://' + b), c.publish('onUrlChange', [
                                            b,
                                        ]), this.hide());
                            },
                            onCancelClick: function(b) {
                                c.publish('onUrlChange', []);
                                this.hide();
                            },
                        }
                    );
                }
            );
        },
        'arcgisonline/sharing/dijit/dialog/SetIdentityProviderDlg': function() {
            define(
                'require dojo/_base/declare dojo/_base/lang dojo/Deferred dojo/dom-attr dojo/number dojo/promise/all dojo/sniff dojo/string dojo/topic dijit/_WidgetBase dijit/_TemplatedMixin dijit/_WidgetsInTemplateMixin dijit/a11yclick dijit/Dialog dijit/form/Button dijit/form/CheckBox dijit/form/SimpleTextarea dijit/form/TextBox esri/lang ../../../pages/pageUtil ../../../pages/utils/arrays ../../../pages/utils/dom ../../../pages/utils/tooltips ../../util ../_LevelAwareMixin ./GeneralDlg ../../geow/Roles ../../geow/Licenses dojo/i18n!../../../nls/arcgisonline dojo/text!./templates/SetIdentityProviderDlg.html'.split(
                    ' '
                ),
                function(
                    c,
                    g,
                    f,
                    b,
                    e,
                    h,
                    d,
                    a,
                    k,
                    n,
                    l,
                    m,
                    p,
                    r,
                    u,
                    t,
                    q,
                    v,
                    C,
                    z,
                    y,
                    x,
                    w,
                    A,
                    E,
                    B,
                    D,
                    H,
                    G,
                    F,
                    K
                ) {
                    var L = g([l, m, p, B], {
                        declaredClass: 'arcgisonline.sharing.dijit.dialog.SetIdentityProviderDlg',
                        templateString: K,
                        widgetsInTemplate: !0,
                        basePath: c.toUrl('arcgisonline/sharing/dijit/dialog'),
                        baseClass: 'esriAGOSetIdentityProviderDlg orgDlg',
                        SIGN_UP_MODE_AUTOMATIC: 'Automatic',
                        SIGN_UP_MODE_INVITE: 'Invitation',
                        BINDING_TYPE_REDIRECT: 'HTTP_REDIRECT',
                        BINDING_TYPE_POST: 'HTTP_POST',
                        orgAdminRole: 'org_admin',
                        orgPublisherRole: 'org_publisher',
                        orgUserRole: 'org_user',
                        _currentIDP: null,
                        _isEditing: !1,
                        _roles: [],
                        _tooltips: [],
                        postMixInProperties: function() {
                            this.inherited(arguments);
                            this.i18n = f.mixin(F.common, F.myOrganization);
                            f.mixin(this.i18n, F.setIdentityProviderDlg);
                            f.mixin(this.i18n, {
                                adminRoleName: F.organizationInvite.userRoles.admin,
                            });
                        },
                        postCreate: function() {
                            this.inherited(arguments);
                            this._loadConnections();
                            this._setupTooltips();
                            this._licensesAPI = new G();
                            this._rolesAPI = new H();
                        },
                        show: function(a, b) {
                            this._isFederation = z.isDefined(a) && a.isFederation;
                            this._isPortal = E.isPortal();
                            this._defaultUserType = b;
                            this._setupRoleFlags();
                            this.clear();
                            d({
                                rolesResult: this._canManageRoles ? this.getRoles() : null,
                                userTypesResult: this._canAccessLicenses ?
                                    this.getUserTypes() :
                                    null,
                                signedProviderResult: this.getSignedProviderMetadataInfo(),
                            }).then(
                                function() {
                                    this._dialog.set(
                                        'title',
                                        this._isFederation ?
                                        this.i18n.setFederationOfIdentityProvidersTitle :
                                        this.i18n.setIdentityProviderTitle
                                    );
                                    this._configureFormForIdentityProviderType();
                                    var a = /:\d*\//g,
                                        a = this._isPortal ?
                                        esriGeowConfig.self.portalHostname
                                        .replace(a, '.')
                                        .replace('/', '.') :
                                        esriGeowConfig.self.urlKey +
                                        '.' +
                                        esriGeowConfig.self.customBaseUrl;
                                    this._entityIDInput && this._entityIDInput.set('value', a);
                                    this._dialog.show();
                                }.bind(this)
                            );
                        },
                        getSignedProviderMetadataInfo: function() {
                            var a = new b(),
                                c =
                                E.getSecureUrl(esriGeowConfig.restBaseUrl) +
                                'portals/self/sp';
                            E.request({ url: c }).then(
                                function(b) {
                                    this._signedServiceProviderUrl = b &&
                                        b.signedServiceProviderUrl ?
                                        b.signedServiceProviderUrl :
                                        '';
                                    a.resolve();
                                }.bind(this),
                                function() {
                                    this._signedServiceProviderUrl = '';
                                    a.resolve('');
                                }.bind(this)
                            );
                            return a;
                        },
                        getUserTypes: function() {
                            var a = new b();
                            this._licensesAPI.getLicenseTypes().then(
                                function(b) {
                                    this._userTypes = b.userLicenseTypes.filter(function(a) {
                                        return 0 < a.maxUsers;
                                    });
                                    a.resolve();
                                }.bind(this)
                            );
                            return a;
                        },
                        getRoles: function() {
                            var a = new b();
                            this._rolesAPI.getAllRoles(!0).then(
                                function(b) {
                                    this._roles = b;
                                    this._viewerRole = this._localizeViewerRole(this._roles);
                                    this._viewerEditRole = this._localizeViewerEditRole(
                                        this._roles
                                    );
                                    a.resolve();
                                }.bind(this)
                            );
                            return a;
                        },
                        _localizeViewerRole: function(a) {
                            if (a)
                                for (var b = 0; b < a.length; b++)
                                    if (a[b] && a[b].id === this.SYSTEM_ROLES.VIEWER)
                                        return (a[b].name = this.i18n.viewerRoleName), a[b];
                        },
                        _localizeViewerEditRole: function(a) {
                            if (a)
                                for (var b = 0; b < a.length; b++)
                                    if (a[b] && a[b].id === this.SYSTEM_ROLES.DATA_EDITOR)
                                        return (a[b].name = this.i18n.viewerEditRoleName), a[b];
                        },
                        _coreRoleSelected: function(a) {
                            return x.includes(
                                [this.orgUserRole, this.orgPublisherRole, this.orgAdminRole],
                                a
                            );
                        },
                        _hasAdminPrivileges: function(a) {
                            var b;
                            if (a && a.privileges)
                                for (var c = 0; c < a.privileges.length; c++)
                                    if (((b = a.privileges[c]), -1 < b.indexOf(':admin')))
                                        return !0;
                            return !1;
                        },
                        edit: function(a, b) {
                            this._setupRoleFlags();
                            this.clear();
                            this._isFederation = a.isFederation;
                            this._currentIDP = a;
                            this._isPortal = E.isPortal();
                            this._isEditing = !0;
                            this._defaultUserType = b;
                            b = /:\d*\//g;
                            var c = this._isPortal ?
                                esriGeowConfig.self.portalHostname
                                .replace(b, '.')
                                .replace('/', '.') :
                                esriGeowConfig.self.urlKey +
                                '.' +
                                esriGeowConfig.self.customBaseUrl,
                                f =
                                esriGeowConfig.self.creditAssignments &&
                                'enabled' === esriGeowConfig.self.creditAssignments;
                            d({
                                rolesResult: this._canManageRoles ? this.getRoles() : null,
                                userTypesResult: this._canAccessLicenses ?
                                    this.getUserTypes() :
                                    null,
                                signedProviderResult: this.getSignedProviderMetadataInfo(),
                            }).then(
                                function() {
                                    if (z.isDefined(a)) {
                                        this._configureFormForIdentityProviderType();
                                        this._dialog.set(
                                            'title',
                                            this._isFederation ?
                                            this.i18n.editFederationOfIdentityProvidersTitle :
                                            this.i18n.editIdentityProviderTitle
                                        );
                                        this._nameInput.set(
                                            'value',
                                            z.isDefined(a.name) ? a.name : ''
                                        );
                                        this._encryptionSupported.set(
                                            'value',
                                            z.isDefined(a.encryptionSupported) ?
                                            a.encryptionSupported :
                                            !1
                                        );
                                        this._signedRequestSupported.set(
                                            'value',
                                            z.isDefined(a.supportSignedRequest) ?
                                            a.supportSignedRequest :
                                            !1
                                        );
                                        this._signUsingSHA256.set(
                                            'value',
                                            z.isDefined(a.useSHA256) ? a.useSHA256 : !1
                                        );
                                        w.showHide(
                                            this._sha256Container,
                                            z.isDefined(a.supportSignedRequest) &&
                                            a.supportSignedRequest
                                        );
                                        this._loginUrlInput.set(
                                            'value',
                                            z.isDefined(a.bindingUrl) ? a.bindingUrl : ''
                                        );
                                        this._loginUrlPostInput.set(
                                            'value',
                                            z.isDefined(a.bindingPostUrl) ? a.bindingPostUrl : ''
                                        );
                                        this._logoutUrlInput.set(
                                            'value',
                                            z.isDefined(a.logoutUrl) ? a.logoutUrl : ''
                                        );
                                        this._certificateInput.set(
                                            'value',
                                            z.isDefined(a.certificate) ? a.certificate : ''
                                        );
                                        this._logoutRequestSupported.set(
                                            'value',
                                            z.isDefined(a.supportsLogoutRequest) ?
                                            a.supportsLogoutRequest :
                                            !1
                                        );
                                        this._updateProfile.set(
                                            'value',
                                            z.isDefined(a.updateProfileAtSignin) ?
                                            a.updateProfileAtSignin :
                                            !1
                                        );
                                        this._updateGroups.set(
                                            'checked',
                                            z.isDefined(a.updateGroupsAtSignin) ?
                                            a.updateGroupsAtSignin :
                                            !1
                                        );
                                        this._federationDiscoveryServiceUrl.set(
                                            'value',
                                            z.isDefined(a.discoveryServiceUrl) ?
                                            a.discoveryServiceUrl :
                                            ''
                                        );
                                        this._metadataAggregateUrl.set(
                                            'value',
                                            z.isDefined(a.metadataServiceUrl) ?
                                            a.metadataServiceUrl :
                                            ''
                                        );
                                        this._aggregatedMetadataCertificate.set(
                                            'value',
                                            z.isDefined(a.certificate) ? a.certificate : ''
                                        );
                                        var b = !!((this._canAccessLicenses && a.userLicenseType) ||
                                            (this._canManageRoles && a.roleId) ||
                                            (this._canManageCredits &&
                                                f &&
                                                z.isDefined(a.userCreditAssignment) &&
                                                -1 < a.userCreditAssignment) ||
                                            (a.groups && 0 < a.groups.length) ||
                                            a.userType);
                                        c = z.isDefined(a.entityId) && '' !== a.entityId ?
                                            a.entityId :
                                            c;
                                        this._entityIDInput.set('value', c);
                                        z.isDefined(a.signUpMode) &&
                                            (a.signUpMode === this.SIGN_UP_MODE_AUTOMATIC ?
                                                (this._automaticOption.set(
                                                        'checked', !0
                                                    ), w.showHide(
                                                        this._levelOptions, !this._isPortal && this._canAccessLicenses
                                                    ), this._canManageRoles &&
                                                    w.showHide(
                                                        this._roleOptions, !this._isPortal
                                                    ), this._canManageCredits &&
                                                    w.showHide(
                                                        this._creditOptions, !(this._isPortal || !f)
                                                    ), w.showHide(
                                                        this._groupOptions, !this._isPortal
                                                    ), w.showHide(
                                                        this._esriAccessOptions, !this._isPortal
                                                    ), w.showNode(this._automaticDefaults), w.showNode(
                                                        this._toConfigureDefaults
                                                    )) :
                                                a.signUpMode === this.SIGN_UP_MODE_INVITE &&
                                                (this._inviteOption.set(
                                                    'checked', !0
                                                ), w.hideNodes([
                                                    this._automaticDefaults,
                                                    this._toConfigureDefaults,
                                                ])));
                                        if (this._canAccessLicenses)
                                            if (a.userLicenseType) {
                                                var d = x.find(
                                                    this._userTypes,
                                                    function(b) {
                                                        return b.id === a.userLicenseType;
                                                    },
                                                    this
                                                );
                                                d
                                                    ?
                                                    e.set(this._userTypeDefault, 'innerHTML', d.name) :
                                                    e.set(
                                                        this._userTypeDefault,
                                                        'innerHTML',
                                                        this.i18n.notSet
                                                    );
                                            } else
                                                e.set(
                                                    this._userTypeDefault,
                                                    'innerHTML',
                                                    this.i18n.notSet
                                                );
                                        this._canManageRoles &&
                                            (a.roleId ?
                                                (d = x.find(
                                                    this._roles,
                                                    function(b) {
                                                        return b.id === a.roleId;
                                                    },
                                                    this
                                                )) ?
                                                e.set(this._roleDefault, 'innerHTML', d.name) :
                                                this._coreRoleSelected(a.roleId) ?
                                                a.roleId === this.orgUserRole ?
                                                e.set(
                                                    this._roleDefault,
                                                    'innerHTML',
                                                    this.i18n.userRoleName
                                                ) :
                                                a.roleId === this.orgPublisherRole ?
                                                e.set(
                                                    this._roleDefault,
                                                    'innerHTML',
                                                    this.i18n.publisherRoleName
                                                ) :
                                                a.roleId === this.orgAdminRole &&
                                                e.set(
                                                    this._roleDefault,
                                                    'innerHTML',
                                                    this.i18n.adminRoleName
                                                ) :
                                                e.set(
                                                    this._roleDefault,
                                                    'innerHTML',
                                                    this.i18n.notSet
                                                ) :
                                                e.set(
                                                    this._roleDefault,
                                                    'innerHTML',
                                                    this.i18n.notSet
                                                ));
                                        f
                                            ?
                                            z.isDefined(a.userCreditAssignment) ?
                                            -1 < a.userCreditAssignment ?
                                            e.set(
                                                this._creditsDefault,
                                                'innerHTML',
                                                h.format(
                                                    parseInt(a.userCreditAssignment, 10)
                                                )
                                            ) :
                                            e.set(
                                                this._creditsDefault,
                                                'innerHTML',
                                                this.i18n.notSet
                                            ) :
                                            e.set(
                                                this._creditsDefault,
                                                'innerHTML',
                                                this.i18n.notSet
                                            ) :
                                            w.hideNode(this._creditOptions);
                                        z.isDefined(a.groups) && 0 < a.groups.length ?
                                            this._fetchSelectedGroups(a.groups) :
                                            ((this._selectedGroups = []), this._toggleGroups());
                                        z.isDefined(a.userType) &&
                                            ('both' === a.userType ?
                                                e.set(
                                                    this._esriAccessDefault,
                                                    'innerHTML',
                                                    this.i18n.esriAccessEnabled
                                                ) :
                                                e.set(
                                                    this._esriAccessDefault,
                                                    'innerHTML',
                                                    this.i18n.esriAccessDisabled
                                                ));
                                        w.showHide(this._automaticDefaults, b);
                                        this._parametersOption.set('checked', !0);
                                        this.showParametersInputs();
                                        (z.isDefined(a.logoutUrl) && 0 < a.logoutUrl.length) ||
                                        (z.isDefined(a.userIdAttribute) &&
                                            0 < a.userIdAttribute.length) ?
                                        this.showAdvancedSettings(): this.hideAdvancedSettings();
                                    } else
                                        this._entityIDInput.set(
                                            'value',
                                            c
                                        ), this._encryptionSupported.set(
                                            'value', !1
                                        ), this._signedRequestSupported.set(
                                            'value', !1
                                        ), this._signUsingSHA256.set('value', !1), w.hideNode(
                                            this._sha256Container
                                        ), this._logoutRequestSupported.set(
                                            'value', !1
                                        ), this._updateGroups.set('checked', !1), w.showHide(
                                            this._levelOptions, !this._isPortal && this._canAccessLicenses
                                        );
                                    this._setBtn.set(
                                        'label',
                                        this.i18n.updateIdentityProviderLabel
                                    );
                                    this._dialog.show();
                                }.bind(this)
                            );
                        },
                        _configureFormForIdentityProviderType: function() {
                            w.showHide(this._metadataSourceContainer, !this._isFederation);
                            w.showHide(this._updateGroupsContainer, !this._isFederation);
                            w.showHide(this._logoutUrlContainer, !this._isFederation);
                            this._certificateInput.set(
                                'disabled',
                                this._isFederation ? !0 : !1
                            );
                            w.showHide(
                                this._federationDiscoveryServiceContainer,
                                this._isFederation
                            );
                            w.showHide(
                                this._metadataAggregateUrlContainer,
                                this._isFederation
                            );
                            w.showHide(
                                this._aggregatedMetadataCertificateContainer,
                                this._isFederation
                            );
                            this._aggregatedMetadataCertificate.set(
                                'disabled',
                                this._isFederation ? !1 : !0
                            );
                            var a = !!this._signedServiceProviderUrl;
                            e.set(
                                this._signedProviderMetadataUrl,
                                'href',
                                this._signedServiceProviderUrl
                            );
                            e.set(
                                this._signedProviderMetadataUrl,
                                'textContent',
                                this._signedServiceProviderUrl
                            );
                            w.showHide(this._providerMetadataDownloadContainer, a);
                        },
                        _fetchSelectedGroups: function(a) {
                            var b = esriGeowConfig.restBaseUrl + 'community/groups',
                                c;
                            a && 0 < a.length ?
                                (a.forEach(function(a) {
                                        c = c ? c + (' OR id:' + a) : 'id:' + a;
                                    }), c ?
                                    ((a =
                                            'orgid:' +
                                            esriGeowConfig.self.id +
                                            ' AND (' +
                                            c +
                                            ') AND -provider:enterprise'), y
                                        .fetchAllResources(b, { q: a }, 'results')
                                        .then(
                                            function(a) {
                                                this._selectedGroups = this._selectedGroups.concat(
                                                    a
                                                );
                                                this._toggleGroups();
                                            }.bind(this),
                                            function(a) {
                                                this._selectedGroups = [];
                                                this._toggleGroups();
                                            }.bind(this)
                                        )) :
                                    ((this._selectedGroups = []), this._toggleGroups())) :
                                ((this._selectedGroups = []), this._toggleGroups());
                        },
                        _toggleGroups: function() {
                            var a = f.clone(this._selectedGroups),
                                b = this._selectedGroups && 0 < this._selectedGroups.length,
                                c = b ?
                                a.splice(0, 3).map(function(a) {
                                    return a.title;
                                }) :
                                [],
                                d = b ?
                                a.map(function(a) {
                                    return a.title;
                                }) :
                                [];
                            b
                                ?
                                (w.showNode(this._hasGroupDefaults), w.hideNode(
                                    this._noGroupDefaults
                                )) :
                                (w.hideNode(this._hasGroupDefaults), w.showNode(
                                    this._noGroupDefaults
                                ));
                            e.set(this._groupListContainer, 'innerHTML', c.join(', '));
                            w.showHide(this._groupListContainer, b);
                            w.showHide(this._otherLinkContainer, 0 < a.length);
                            0 < a.length &&
                                (this._otherLinkTooltip &&
                                    this._otherLinkTooltip.destroyRecursive(), (this._otherLinkTooltip = A.createTooltip(
                                        this.id + '-other-link',
                                        d.join(',\x3cbr\x3e'),
                                        200,
                                        400
                                    )));
                        },
                        _setupTooltips: function() {
                            this._tooltips &&
                                0 === this._tooltips.length &&
                                this._tooltips.push(
                                    A.createTooltip(
                                        this.id + '-noLimitTooltip-' + this.baseClass,
                                        this.i18n.orgLimit,
                                        200,
                                        300
                                    )
                                );
                        },
                        clear: function() {
                            this._dialog.set('title', this.i18n.setIdentityProviderTitle);
                            var a = E.isPortal() || !1 === esriGeowConfig.isMultiTenant;
                            a
                                ?
                                (e.set(
                                    this._description,
                                    'innerHTML',
                                    this.i18n.setIdentityProviderDescPortal
                                ), this._logoutUrlInput.set(
                                    'title',
                                    this.i18n.logoutUrlTooltipPortal
                                ), e.set(
                                    this._inviteOptionLabel,
                                    'innerHTML',
                                    this.i18n.onAddOption
                                )) :
                                (e.set(
                                    this._description,
                                    'innerHTML',
                                    this.i18n.setIdentityProviderDesc
                                ), this._logoutUrlInput.set(
                                    'title',
                                    this.i18n.logoutUrlTooltip
                                ), e.set(
                                    this._inviteOptionLabel,
                                    'innerHTML',
                                    this.i18n.onInviteOption
                                ));
                            this._nameInput.set(
                                'placeHolder',
                                this._isFederation ?
                                this.i18n.federationNamePlaceholder :
                                this.i18n.namePlaceHolder
                            );
                            this._bindingUrlInput.set(
                                'placeHolder',
                                this.i18n.metadataUrlPlaceHolder
                            );
                            this._loginUrlInput.set(
                                'placeHolder',
                                this.i18n.parametersUrlPlaceHolder
                            );
                            this._loginUrlPostInput.set(
                                'placeHolder',
                                this.i18n.parametersUrlPostPlaceHolder
                            );
                            this._logoutUrlInput.set(
                                'placeHolder',
                                this.i18n.logoutUrlPlaceHolder
                            );
                            this._entityIDInput.set('placeHolder', '');
                            this._federationDiscoveryServiceUrl.set(
                                'placeHolder',
                                this.i18n.federationDiscoveryServiceUrlPlaceholder
                            );
                            this._metadataAggregateUrl.set(
                                'placeHolder',
                                this.i18n.metadataAggregateUrlPlaceholder
                            );
                            this._inviteOption.set('checked', !0);
                            w.hideNodes([
                                this._automaticDefaults,
                                this._toConfigureDefaults,
                            ]);
                            e.set(this._userTypeDefault, 'innerHTML', this.i18n.notSet);
                            e.set(this._roleDefault, 'innerHTML', this.i18n.notSet);
                            e.set(this._creditsDefault, 'innerHTML', this.i18n.notSet);
                            e.set(this._esriAccessDefault, 'innerHTML', this.i18n.notSet);
                            e.set(this._groupListContainer, 'innerHTML', this.i18n.notSet);
                            a || ((this._selectedGroups = []), this._toggleGroups());
                            this._metadataUrlOption.set('checked', !0);
                            this.showMetadataUrlInputs();
                            this.hideAdvancedSettings();
                            this._nameInput.set('value', '');
                            this._bindingUrlInput.set('value', '');
                            e.set(this._metadataFileInput, 'value', '');
                            this._encryptionSupported.set('value', !1);
                            this._signedRequestSupported.set('value', !1);
                            w.hideNode(this._sha256Container);
                            this._signUsingSHA256.set('value', !1);
                            this._logoutRequestSupported.set('value', !1);
                            this._loginUrlInput.set('value', '');
                            this._loginUrlPostInput.set('value', '');
                            this._certificateInput.set('value', '');
                            e.set(this._certificateFileInput, 'value', '');
                            this._logoutUrlInput.set('value', '');
                            this._updateProfile.set('value', '');
                            this._updateGroups.set('checked', !1);
                            this._federationDiscoveryServiceUrl.set('value', '');
                            this._metadataAggregateUrl.set('value', '');
                            this._aggregatedMetadataCertificate.set('value', '');
                            e.set(this._signUpMode, 'value', '');
                            e.set(this._bindingType, 'value', '');
                            this._setBtn.set('disabled', !1);
                            this._selectedUserType = this._currentIDP = null;
                            this._isEditing = !1;
                            this._roles = [];
                            this._userTypes = [];
                            this._selectedGroups = [];
                        },
                        _setupRoleFlags: function() {
                            var a = !!esriGeowConfig.userRole;
                            this._canAccessLicenses =
                                (this._isAdmin = a && esriGeowConfig.userRole.isAdmin()) ||
                                (a &&
                                    (esriGeowConfig.userRole.canManageLicenses() ||
                                        esriGeowConfig.userRole.canInviteUsers() ||
                                        esriGeowConfig.userRole.canManageRoles()));
                            this._canManageCredits =
                                this._isAdmin ||
                                (a && esriGeowConfig.userRole.canManageCredits());
                            this._canManageRoles =
                                this._isAdmin ||
                                (a && esriGeowConfig.userRole.canManageRoles());
                        },
                        _loadConnections: function() {
                            this.own(
                                r(
                                    this._metadataUrlOption,
                                    this.onMetadataUrlOption.bind(this)
                                ),
                                r(
                                    this._metadataFileOption,
                                    this.onMetadataFileOption.bind(this)
                                ),
                                r(this._parametersOption, this.onParametersOption.bind(this)),
                                r(this._setBtn, this.onSetProvider.bind(this)),
                                r(this._cancelBtn, this.onCancel.bind(this)),
                                r(
                                    this._signedRequestSupported,
                                    this.onSignedRequestSupported.bind(this)
                                )
                            );
                        },
                        hide: function() {
                            this._dialog.hide();
                        },
                        showMetadataUrlInputs: function() {
                            w.hideNodes([this._metadataFileInputs, this._parametersInputs]);
                            w.showNode(this._metadataUrlInputs);
                            e.set(this._bindingType, 'value', '');
                        },
                        showMetadataFileInputs: function() {
                            w.hideNodes([this._metadataUrlInputs, this._parametersInputs]);
                            w.showNode(this._metadataFileInputs);
                            e.set(this._bindingType, 'value', '');
                        },
                        showParametersInputs: function() {
                            w.hideNodes([this._metadataUrlInputs, this._metadataFileInputs]);
                            w.showNode(this._parametersInputs);
                        },
                        showAdvancedSettings: function() {
                            e.set(
                                this._toggleAdvancedSettings,
                                'innerHTML',
                                this.i18n.hideAdvancedSettings
                            );
                            w.showNode(this._advancedSettings);
                            this._showingAdvancedSettings = !0;
                        },
                        hideAdvancedSettings: function() {
                            e.set(
                                this._toggleAdvancedSettings,
                                'innerHTML',
                                this.i18n.showAdvancedSettings
                            );
                            w.hideNode(this._advancedSettings);
                            this._showingAdvancedSettings = !1;
                        },
                        validParameters: function() {
                            var a = this.i18n.noticeLabel,
                                b = this._nameInput.get('value');
                            if (!z.isDefined(b) || 0 === b.length)
                                return y
                                    .createSpecifiedDialog(D)
                                    .show({
                                        title: a,
                                        message: this.i18n.errors.nameRequired,
                                    }), !1;
                            if (!this._isFederation) {
                                var b = this._metadataUrlOption.get('checked'),
                                    c = this._bindingUrlInput.get('value');
                                if (b && (!z.isDefined(c) || 0 === c.length))
                                    return y
                                        .createSpecifiedDialog(D)
                                        .show({
                                            title: a,
                                            message: this.i18n.errors.metadataUrlMustBeSet,
                                        }), !1;
                                b = this._metadataFileOption.get('checked');
                                c = e.get(this._metadataFileInput, 'value');
                                if (b && (!z.isDefined(c) || 0 === c.length))
                                    return dlg.show({
                                        title: a,
                                        message: this.i18n.errors.metadataFileMustBeSet,
                                    }), !1;
                                if (this._parametersOption.get('checked')) {
                                    b = this._loginUrlInput.get('value');
                                    if (!z.isDefined(b) || 0 === b.length)
                                        return y
                                            .createSpecifiedDialog(D)
                                            .show({
                                                title: a,
                                                message: this.i18n.errors.loginUrlMustBeSet,
                                            }), !1;
                                    b = this._loginUrlPostInput.get('value');
                                    if (!z.isDefined(b) || 0 === b.length)
                                        return y.createSpecifiedDialog(D).show({
                                            title: a,
                                            message: this.i18n.errors.loginUrlPostMustBeSet,
                                        }), !1;
                                    b = this._certificateInput.get('value');
                                    if (!z.isDefined(b) || 0 === b.length)
                                        return y
                                            .createSpecifiedDialog(D)
                                            .show({
                                                title: a,
                                                message: this.i18n.errors.certificateMustBeSet,
                                            }), !1;
                                }
                            }
                            return !0;
                        },
                        onAutomaticClicked: function() {
                            var a =
                                esriGeowConfig.self.creditAssignments &&
                                'enabled' === esriGeowConfig.self.creditAssignments,
                                b = !(!this._currentIDP ||
                                    !((this._canAccessLicenses &&
                                            this._currentIDP.userLicenseType) ||
                                        (this._canManageRoles && this._currentIDP.roleId) ||
                                        (this._canManageCredits &&
                                            a &&
                                            z.isDefined(this._currentIDP.userCreditAssignment) &&
                                            -1 < this._currentIDP.userCreditAssignment) ||
                                        (this._currentIDP.groups &&
                                            0 < this._currentIDP.groups.length) ||
                                        this._currentIDP.userType));
                            !this._isPortal ||
                                (this._defaultUserType && 'none' !== this._defaultUserType) ?
                                (w.showHide(this._automaticDefaults, b), w.showNode(
                                        this._toConfigureDefaults
                                    ), this._canManageRoles &&
                                    w.showHide(this._roleOptions, !this._isPortal), this
                                    ._canManageCredits &&
                                    w.showHide(
                                        this._creditOptions, !(this._isPortal || !a)
                                    ), w.showHide(
                                        this._groupOptions, !this._isPortal
                                    ), w.showHide(
                                        this._hasGroupDefaults,
                                        this._selectedGroups && 0 < this._selectedGroups.length
                                    ), w.showHide(
                                        this._noGroupDefaults, !(this._selectedGroups && 0 < this._selectedGroups.length)
                                    ), w.showHide(
                                        this._esriAccessOptions, !this._isPortal
                                    ), w.showHide(
                                        this._levelOptions, !this._isPortal && this._canAccessLicenses
                                    )) :
                                (y
                                    .createSpecifiedDialog(D)
                                    .show({
                                        title: this.i18n.errorLabel,
                                        message: this.i18n.mustHaveDefaultUserType,
                                    }), setTimeout(
                                        function() {
                                            this._automaticOption.setChecked(!1);
                                            this._inviteOption.setChecked(!0);
                                        }.bind(this)
                                    ));
                        },
                        onInvitationClicked: function() {
                            w.hideNodes([
                                this._automaticDefaults,
                                this._toConfigureDefaults,
                            ]);
                        },
                        onMetadataUrlOption: function() {
                            this.showMetadataUrlInputs();
                        },
                        onMetadataFileOption: function() {
                            this.showMetadataFileInputs();
                        },
                        onParametersOption: function() {
                            this.showParametersInputs();
                        },
                        onToggleAdvancedSettings: function() {
                            this._showingAdvancedSettings ?
                                this.hideAdvancedSettings() :
                                this.showAdvancedSettings();
                        },
                        onSetProvider: function(b) {
                            b && b.preventDefault();
                            this._setBtn.set('disabled', !0);
                            this.validParameters() ?
                                (9 > a('ie') &&
                                    (this._form.encoding =
                                        'multipart/form-data'), this._automaticOption.get(
                                        'checked'
                                    ) ?
                                    e.set(
                                        this._signUpMode,
                                        'value',
                                        this.SIGN_UP_MODE_AUTOMATIC
                                    ) :
                                    e.set(
                                        this._signUpMode,
                                        'value',
                                        this.SIGN_UP_MODE_INVITE
                                    ), e.set(
                                        this._supportEncryption,
                                        'value',
                                        this._encryptionSupported.get('checked')
                                    ), e.set(
                                        this._supportSignedRequest,
                                        'value',
                                        this._signedRequestSupported.get('checked')
                                    ), e.set(
                                        this._useSHA256,
                                        'value',
                                        this._signedRequestSupported.get('checked') &&
                                        this._signUsingSHA256.get('checked')
                                    ), e.set(
                                        this._supportsLogoutRequest,
                                        'value',
                                        this._logoutRequestSupported.get('checked')
                                    ), e.set(
                                        this._updateProfileAtSignIn,
                                        'value',
                                        this._updateProfile.get('checked')
                                    ), e.set(
                                        this._updateGroupsAtSignIn,
                                        'value',
                                        this._updateGroups.get('checked')
                                    ), this._metadataUrlOption.get('checked') ?
                                    (e.set(
                                        this._metadataFileInput,
                                        'value',
                                        ''
                                    ), this._loginUrlInput.set('value', ''), e.set(
                                        this._bindingType,
                                        'value',
                                        ''
                                    ), this._certificateInput.set('value', ''), e.set(
                                        this._certificateFileInput,
                                        'value',
                                        ''
                                    )) :
                                    this._metadataFileOption.get('checked') ?
                                    (this._bindingUrlInput.set(
                                        'value',
                                        ''
                                    ), this._loginUrlInput.set('value', ''), e.set(
                                        this._bindingType,
                                        'value',
                                        ''
                                    ), this._certificateInput.set('value', ''), e.set(
                                        this._certificateFileInput,
                                        'value',
                                        ''
                                    )) :
                                    (this._bindingUrlInput.set('value', ''), e.set(
                                        this._metadataFileInput,
                                        'value',
                                        ''
                                    ), e.set(
                                        this._bindingType,
                                        'value',
                                        this.BINDING_TYPE_REDIRECT
                                    )), (b =
                                        esriGeowConfig.restBaseUrl + 'portals/self/idp/'), this
                                    ._isEditing ?
                                    ((b +=
                                        (this._isFederation ? 'federation/' : '') +
                                        this._currentIDP.id +
                                        '/update'), e.set(this._clearEmptyFields, 'value', !0)) :
                                    ((b +=
                                        (this._isFederation ? 'federation/' : '') +
                                        'register'), e.set(
                                        this._clearEmptyFields,
                                        'value', !1
                                    )), E.request({ url: b, form: this._form }, { usePost: !0 }).then(
                                        function(a) {
                                            z.isDefined(a) &&
                                                !z.isDefined(a.error) &&
                                                (this._setBtn.set('disabled', !1), n.publish(
                                                    'setIdentityProvider', []
                                                ), this.hide());
                                        }.bind(this),
                                        function(a) {
                                            var b;
                                            z.isDefined(a.messageCode) ?
                                                ((b = this.i18n.errors[a.messageCode]), z.isDefined(
                                                        a.details
                                                    ) &&
                                                    z.isDefined(a.details[0]) &&
                                                    (b = k.substitute(b, { details: a.details[0] }))) :
                                                (b = this._isEditing ?
                                                    this.i18n.errors.unableToUpdateIdentityProvider :
                                                    this.i18n.errors.unableToSetIdentityProvider);
                                            y
                                                .createSpecifiedDialog(D)
                                                .show({ title: this.i18n.errorLabel, message: b });
                                            this._setBtn.set('disabled', !1);
                                        }.bind(this)
                                    )) :
                                this._setBtn.set('disabled', !1);
                        },
                        onSignedRequestSupported: function() {
                            this._signedRequestSupported.get('checked') ?
                                w.showNode(this._sha256Container) :
                                (this._signUsingSHA256.set('checked', !1), w.hideNode(
                                    this._sha256Container
                                ));
                        },
                        onSubmit: function() {
                            return !1;
                        },
                        onCancel: function(a) {
                            a && a.preventDefault();
                            this.hide();
                        },
                        onHide: function() {},
                    });
                    L.prototype.statics = {
                        _instance: null,
                        getInstance: function() {
                            null === this._instance && (this._instance = new L());
                            return this._instance;
                        },
                    };
                    return L;
                }
            );
        },
        'arcgisonline/sharing/dijit/dialog/SharingDlg': function() {
            define(
                [
                    'dojo',
                    'dijit',
                    'dojox',
                    'dojo/require!dijit/Dialog,dijit/_Widget,dijit/_Templated,arcgisonline/sharing/dijit/ShareOptions',
                ],
                function(c, g, f) {
                    c.provide('arcgisonline.sharing.dijit.dialog.SharingDlg');
                    c.require('dijit.Dialog');
                    c.require('dijit._Widget');
                    c.require('dijit._Templated');
                    c.require('arcgisonline.sharing.dijit.ShareOptions');
                    c.declare(
                        'arcgisonline.sharing.dijit.dialog.SharingDlg', [g._Widget, g._Templated], {
                            widgetsInTemplate: !0,
                            templateString: '\x3cdiv class\x3d"widgetContent"\x3e\r\n  \x3cdiv dojotype\x3d"dijit.Dialog" dojoAttachPoint\x3d"_shareDialog" id\x3d"share-dialog" title\x3d"${i18n.sharingDlgTitle}" execute\x3d""\x3e\r\n    \x3clabel class\x3d"trailer-half share-title"\x3e${i18n.shareItemsLabel}\x3c/label\x3e\r\n    \x3cdiv dojotype\x3d"arcgisonline.sharing.dijit.ShareOptions" dojoAttachPoint\x3d"_shareOptions"\x3e\x3c/div\x3e\r\n    \x3cdiv\x3e\r\n      \x3cp class\x3d"trailer-half font-size--1"\x3e\r\n        ${i18n.settingsMsg}\r\n      \x3c/p\x3e\r\n      \x3cdiv dojoAttachPoint\x3d"_shareNoGroupsDiv" style\x3d"display:none;" class\x3d"alert alert-yellow trailer-half is-active"\x3e\r\n        ${i18n.notAMemberMsg}\r\n      \x3c/div\x3e\r\n      \x3cdiv dojoAttachPoint\x3d"_shareOwnerNoneDiv" style\x3d"display:none;" class\x3d"alert alert-yellow trailer-half is-active"\x3e\r\n        ${i18n.notOwnerMsg}\r\n      \x3c/div\x3e\r\n    \x3c/div\x3e\r\n    \x3cdiv dojoAttachPoint\x3d"_editableLayerMsg" class\x3d"label-yellow hide js-sharing-help"\x3e\r\n        ${i18n.layerIsEditable} \x3ca href\x3d"${_helpLink}" target\x3d"_blank"\x3e${i18n.learnHow}\x3c/a\x3e\r\n    \x3c/div\x3e\r\n    \x3cdiv dojoAttachPoint\x3d"_premiumContentMsg" class\x3d"label-yellow hide js-premium-help"\x3e\r\n      ${i18n.premiumLayerMsg} \x3ca href\x3d"${_helpLinkPremium}" target\x3d"_blank"\x3e${i18n.premiumLayerMsgLearnMore}\x3c/a\x3e\r\n    \x3c/div\x3e\r\n    \x3cdiv class\x3d"esriFloatTrailing right clearfix share-action-bar leader-half" style\x3d"padding-bottom:1em;"\x3e\r\n      \x3cspan class\x3d"disabled padding-right-1" style\x3d"display:none;"\x3e${i18n.sharingItems}\x3c/span\x3e\r\n      \x3cbutton id\x3d"button_share-cancel" class\x3d"jevent cancel" type\x3d"cancel" dojotype\x3d"dijit.form.Button" dojoAttachEvent\x3d"onClick:_handleCancelClick"\x3e\r\n        ${i18n.cancel}\r\n      \x3c/button\x3e\r\n      \x3cbutton class\x3d"jevent primary" dojotype\x3d"dijit.form.Button"  dojoAttachEvent\x3d"onClick:_handleOkResponse"\x3e\r\n        ${i18n.ok}\r\n      \x3c/button\x3e\r\n    \x3c/div\x3e\r\n  \x3c/div\x3e\r\n\x3c/div\x3e\r\n',
                            i18n: null,
                            _shareDialog: null,
                            _shareOptions: null,
                            _shareNoGroupsDiv: null,
                            _shareOwnerNoneDiv: null,
                            statics: {
                                _instance: null,
                                getInstance: function() {
                                    null === this._instance &&
                                        (this._instance = new arcgisonline.sharing.dijit.dialog
                                            .SharingDlg());
                                    return this._instance;
                                },
                            },
                            postMixInProperties: function() {
                                this.inherited(arguments);
                                this.i18n = c.i18n.getLocalization(
                                    'arcgisonline',
                                    'arcgisonline'
                                ).common;
                                c.mixin(
                                    this.i18n,
                                    c.i18n.getLocalization('arcgisonline', 'arcgisonline')
                                    .sharingDlg
                                );
                                c.mixin(
                                    this.i18n,
                                    c.i18n.getLocalization('arcgisonline', 'arcgisonline')
                                    .shareCheckDlg
                                );
                                c.mixin(
                                    this.i18n,
                                    c.i18n.getLocalization('arcgisonline', 'arcgisonline')
                                    .shareMapDlg
                                );
                                this._helpLink =
                                    esriGeowConfig.helpBase + esriGeowConfig.helpMap['120001067'];
                                this._helpLinkPremium =
                                    esriGeowConfig.helpBase + esriGeowConfig.helpMap['120001307'];
                                this._handles = [];
                            },
                            postCreate: function() {
                                this.loadConnections();
                            },
                            destroy: function() {
                                c.forEach(this._handles, 'item.remove();');
                                this._shareDialog.destroyRecursive();
                                this._shareDialog = null;
                                this.inherited(arguments);
                            },
                            _setDisabledAttr: function(b) {
                                c.forEach(
                                    g.registry.findWidgets(this._shareDialog.domNode),
                                    function(c) {
                                        c.set('disabled', b);
                                    }
                                );
                                c.query('input').forEach(function(e) {
                                    c.attr(e, 'disabled', b);
                                });
                                c.query('.disabled').forEach(function(e) {
                                    c.style(e, 'display', b ? '' : 'none');
                                });
                            },
                            loadConnections: function() {
                                c.connect(
                                    this._shareDialog,
                                    'hide',
                                    c.hitch(this, function(b) {
                                        (b = b && b.target) &&
                                        c.hasClass(b, 'dijitDialogCloseIcon') &&
                                            (this.isCancelled = !0);
                                        this.set('disabled', !1);
                                        this._shareOptions.clear();
                                    })
                                );
                                this._handles.push(
                                    c.subscribe(
                                        'shareOptionsSetup',
                                        c.hitch(this, function() {
                                            this._shareDialog.show();
                                        })
                                    )
                                );
                                this._handles.push(
                                    c.subscribe(
                                        'onShareUpdate',
                                        c.hitch(this, function(b) {
                                            this.set('disabled', !1);
                                            (b && b.length && 'string' !== typeof b) ||
                                            this._shareDialog.hide();
                                        })
                                    )
                                );
                                this._handles.push(
                                    c.subscribe(
                                        'doesNotOwnGroups',
                                        c.hitch(this, function() {
                                            c.style(this._shareOwnerNoneDiv, 'display', 'block');
                                        })
                                    )
                                );
                                this._handles.push(
                                    c.subscribe(
                                        'notMemberOfAnyGroups',
                                        c.hitch(this, function() {
                                            c.style(this._shareNoGroupsDiv, 'display', 'block');
                                        })
                                    )
                                );
                            },
                            _handleOkResponse: function(b) {
                                b.preventDefault();
                                this.set('disabled', !0);
                                this._shareOptions.share(b);
                            },
                            _handleCancelClick: function(b) {
                                b.preventDefault();
                                this.isCancelled = !0;
                                this._shareDialog.hide();
                            },
                            hide: function() {
                                this._shareDialog.hide();
                            },
                            show: function(b, c, f, d) {
                                this._shareOptions.show(b, c, f, d);
                            },
                            showAdmin: function(b, c, f, d) {
                                this._shareOptions.showAdmin(b, c, f, d);
                            },
                            showGroups: function(b, c) {
                                this._shareOptions.showGroups(b, c);
                            },
                        }
                    );
                }
            );
        },
        'arcgisonline/sharing/dijit/dialog/TagsDlg': function() {
            define(
                [
                    'dojo',
                    'dijit',
                    'dojox',
                    'dojo/require!dijit/_Widget,dijit/_Templated,dijit/Dialog,dijit/form/MultiSelect,dijit/form/SimpleTextarea,arcgisonline/sharing/geow/Content',
                ],
                function(c, g, f) {
                    c.provide('arcgisonline.sharing.dijit.dialog.TagsDlg');
                    c.require('dijit._Widget');
                    c.require('dijit._Templated');
                    c.require('dijit.Dialog');
                    c.require('dijit.form.MultiSelect');
                    c.require('dijit.form.SimpleTextarea');
                    c.require('arcgisonline.sharing.geow.Content');
                    c.declare(
                        'arcgisonline.sharing.dijit.dialog.TagsDlg', [g._Widget, g._Templated], {
                            widgetsInTemplate: !0,
                            templateString: '\x3cdiv class\x3d"widgetContent" \x3e\r\n  \x3cdiv dojotype\x3d"dijit.Dialog" dojoAttachPoint\x3d"_tagsDialog" dojoAttachPoint\x3d"onHide:clear" title\x3d"${i18n.tagDlgTitle}" class\x3d"tagsForm"\x3e\r\n    \x3cdiv dojoAttachPoint\x3d"_tagsErrorDiv"\x3e\x3c/div\x3e\r\n\t\x3cdiv dojoAttachPoint\x3d"_contentTagsDiv" style\x3d"display:block;"\x3e\r\n\t\t\x3clabel \x3e${i18n.selectTag}\x3c/label\x3e\r\n\t\t\x3cbr /\x3e\r\n\t\t\x3cbr /\x3e\r\n\t    \x3cselect dojoAttachPoint\x3d"_tagsSelect" dojoType\x3d"dijit.form.MultiSelect" style\x3d"width:100%;height:150px;"\x3e\x3c/select\x3e\r\n\t\t\x3cbr /\x3e\r\n\t\t\x3cdiv dojoAttachPoint\x3d"_cancelBtn" dojotype\x3d"dijit.form.Button" class\x3d"cancel" dojoAttachEvent\x3d"onClick:_handleCancelClick" style\x3d"float:right;"\x3e${i18n.cancel}\x3c/div\x3e\r\n\t\t\x3cdiv dojoAttachPoint\x3d"_submitBtn" dojotype\x3d"dijit.form.Button" class\x3d"primary" type\x3d"submit" dojoAttachEvent\x3d"onClick:getSelectedTags" style\x3d"float:right;"\x3e${i18n.useSelected}\x3c/div\x3e  \r\n\t\t\x3cbr /\x3e\r\n\t\t\x3cbr /\x3e\r\n\t\x3c/div\x3e\r\n\t\x3cdiv dojoAttachPoint\x3d"_contentNoTagsDiv" style\x3d"display:none;"\x3e\r\n\t\t\x3clabel\x3e${i18n.tagsNotAvailable}\x3c/label\x3e\r\n\t\t\x3cbr /\x3e\r\n\t\t\x3cbr /\x3e\r\n\t\t\x3cdiv id\x3d"button_tags-ok" dojoAttachPoint\x3d"_okBtn" dojotype\x3d"dijit.form.Button" class\x3d"primary" dojoAttachEvent\x3d"onClick:_handleCancelClick" style\x3d"float:right;"\x3e${i18n.ok}\x3c/div\x3e\r\n\t\t\x3cbr/\x3e\r\n\t\t\x3cbr/\x3e\r\n\t\x3c/div\x3e\r\n  \x3c/div\x3e\r\n\x3c/div\x3e',
                            _tagsDialog: null,
                            _contentTagsDiv: null,
                            _contentNoTagsDiv: null,
                            _tagsSelect: null,
                            i18n: null,
                            statics: {
                                _instance: null,
                                getInstance: function() {
                                    null == this._instance &&
                                        (this._instance = new arcgisonline.sharing.dijit.dialog
                                            .TagsDlg());
                                    return this._instance;
                                },
                            },
                            postMixInProperties: function() {
                                this.inherited(arguments);
                                this.i18n = c.i18n.getLocalization(
                                    'arcgisonline',
                                    'arcgisonline'
                                ).common;
                                c.mixin(
                                    this.i18n,
                                    c.i18n.getLocalization('arcgisonline', 'arcgisonline')
                                    .tagsDlg
                                );
                            },
                            postCreate: function() {},
                            _handleCancelClick: function(b) {
                                b.preventDefault();
                                this._tagsDialog.hide();
                            },
                            clear: function() {
                                this._tagsSelect.reset();
                                c.style(this._contentTagsDiv, 'display', 'none');
                                c.style(this._contentNoTagsDiv, 'display', 'none');
                            },
                            hide: function() {
                                this._tagsDialog.hide();
                            },
                            show: function(b) {
                                this.clear();
                                var e = arcgisonline.sharing.util.getUser(),
                                    f = esriGeowConfig.restBaseUrl + 'community/users/',
                                    f = b && (b.username || b.email) ?
                                    f + (b.username ? b.username : b.email) :
                                    f + e.email;
                                arcgisonline.sharing.util.getJson(
                                    f + '/tags',
                                    c.hitch(this, this._handleTagResponse),
                                    c.hitch(this, this._handleError)
                                );
                                this._tagsDialog.show();
                            },
                            _handleTagResponse: function(b) {
                                0 == b.tags.length ?
                                    c.style(this._contentNoTagsDiv, 'display', '') :
                                    (c.style(this._contentTagsDiv, 'display', ''), c.empty(
                                        this._tagsSelect.domNode
                                    ), c.forEach(
                                        b.tags,
                                        function(b) {
                                            c.create(
                                                'option', { innerHTML: b.tag, value: b.tag },
                                                this._tagsSelect.domNode
                                            );
                                        },
                                        this
                                    ));
                            },
                            _handleError: function(b) {},
                            getSelectedTags: function(b) {
                                b.preventDefault();
                                b = [];
                                b = this._tagsSelect.get('value');
                                c.publish('onSelectedTagsUpdate', [b.toString()]);
                            },
                        }
                    );
                }
            );
        },
        'arcgisonline/sharing/dijit/dialog/UpdateItemDlg': function() {
            define(
                [
                    'dojo',
                    'dijit',
                    'dojox',
                    'dojo/require!dijit/form/SimpleTextarea,dijit/form/TextBox,dijit/form/CheckBox,dijit/form/Button,dijit/InlineEditBox,dijit/Dialog,dijit/_Widget,dijit/_Templated,arcgisonline/pages/pageUtil,arcgisonline/pages/utils/dom,arcgisonline/pages/dijit/UploadProgressBar,arcgisonline/sharing/util,arcgisonline/sharing/geow/Community,arcgisonline/sharing/geow/Content,arcgisonline/sharing/geow/Item,arcgisonline/sharing/dijit/dialog/GeneralDlg,arcgisonline/sharing/dijit/dialog/TagsDlg,dojo/promise/all,dojo/number',
                ],
                function(c, g, f) {
                    c.provide('arcgisonline.sharing.dijit.dialog.UpdateItemDlg');
                    c.require('dijit.form.SimpleTextarea');
                    c.require('dijit.form.TextBox');
                    c.require('dijit.form.CheckBox');
                    c.require('dijit.form.Button');
                    c.require('dijit.InlineEditBox');
                    c.require('dijit.Dialog');
                    c.require('dijit._Widget');
                    c.require('dijit._Templated');
                    c.require('arcgisonline.pages.pageUtil');
                    c.require('arcgisonline.pages.utils.dom');
                    c.require('arcgisonline.pages.dijit.UploadProgressBar');
                    c.require('arcgisonline.sharing.util');
                    c.require('arcgisonline.sharing.geow.Community');
                    c.require('arcgisonline.sharing.geow.Content');
                    c.require('arcgisonline.sharing.geow.Item');
                    c.require('arcgisonline.sharing.dijit.dialog.GeneralDlg');
                    c.require('arcgisonline.sharing.dijit.dialog.TagsDlg');
                    c.require('dojo.promise.all');
                    c.require('dojo.number');
                    c.declare(
                        'arcgisonline.sharing.dijit.dialog.UpdateItemDlg', [g._Widget, g._Templated], {
                            util: arcgisonline.sharing.util,
                            community: arcgisonline.sharing.geow.Community,
                            content: arcgisonline.sharing.geow.Content,
                            itemAPI: arcgisonline.sharing.geow.Item,
                            pageUtil: arcgisonline.pages.pageUtil,
                            domUtil: arcgisonline.pages.utils.dom,
                            widgetsInTemplate: !0,
                            templateString: '\x3cdiv class\x3d"widgetContainer"\x3e\r\n  \x3cdiv dojotype\x3d"dijit.Dialog" dojoAttachPoint\x3d"_updateItemDialog" title\x3d"${i18n.updateItem}" dojoAttachEvent\x3d"hide:clear" execute\x3d"" class\x3d"update-item-dlg"\x3e\r\n    \x3cdiv dojoAttachPoint\x3d"_errorDiv"\x3e\x3c/div\x3e\r\n    \x3cform dojoAttachPoint\x3d"_updateItemForm" enctype\x3d"multipart/form-data"\x3e\r\n      \x3cdiv dojotype\x3d"dijit.form.TextBox" dojoAttachPoint\x3d"_updateItemFolderInput" type\x3d"hidden" value\x3d"0"\x3e\x3c/div\x3e\r\n      \x3cdiv name\x3d"id" dojotype\x3d"dijit.form.TextBox" dojoAttachPoint\x3d"_updateItemIdInput" type\x3d"hidden" value\x3d""\x3e\x3c/div\x3e\r\n      \x3cdiv name\x3d"name" dojotype\x3d"dijit.form.TextBox" dojoAttachPoint\x3d"_updateItemNameInput" type\x3d"hidden" value\x3d""\x3e\x3c/div\x3e\r\n      \x3cdiv name\x3d"title" dojotype\x3d"dijit.form.TextBox" dojoAttachPoint\x3d"_updateItemTitleInput" type\x3d"hidden" value\x3d""\x3e\x3c/div\x3e\r\n      \x3cdiv name\x3d"tags" dojotype\x3d"dijit.form.TextBox" dojoAttachPoint\x3d"_updateItemTagsInput" type\x3d"hidden" value\x3d""\x3e\x3c/div\x3e\r\n      \x3cdiv name\x3d"type" dojotype\x3d"dijit.form.TextBox" dojoAttachPoint\x3d"_updateItemTypeInput" type\x3d"hidden" value\x3d""\x3e\x3c/div\x3e\r\n      \x3cdiv name\x3d"typeKeywords" dojotype\x3d"dijit.form.TextBox" dojoAttachPoint\x3d"_updateItemKeywordsInput" type\x3d"hidden" value\x3d""\x3e\x3c/div\x3e\r\n      \x3cdiv name\x3d"description" dojotype\x3d"dijit.form.TextBox" dojoAttachPoint\x3d"_updateDescriptionInput" type\x3d"hidden" value\x3d""\x3e\x3c/div\x3e\r\n      \x3cdiv name\x3d"snippet" dojotype\x3d"dijit.form.TextBox" dojoAttachPoint\x3d"_updateSnippetInput" type\x3d"hidden" value\x3d""\x3e\x3c/div\x3e\r\n      \x3cdiv name\x3d"accessInformation" dojotype\x3d"dijit.form.TextBox" dojoAttachPoint\x3d"_updateAccessInput" type\x3d"hidden" value\x3d""\x3e\x3c/div\x3e\r\n      \x3cdiv name\x3d"licenseInfo" dojotype\x3d"dijit.form.TextBox" dojoAttachPoint\x3d"_updateLicenseInfoInput" type\x3d"hidden" value\x3d""\x3e\x3c/div\x3e\r\n      \x3cdiv name\x3d"extent" dojotype\x3d"dijit.form.TextBox" dojoAttachPoint\x3d"_updateExtentInput" type\x3d"hidden" value\x3d""\x3e\x3c/div\x3e\r\n      \x3cdiv name\x3d"overwrite" dojotype\x3d"dijit.form.TextBox" dojoAttachPoint\x3d"_updateOverwriteInput" type\x3d"hidden" value\x3d"true"\x3e\x3c/div\x3e\r\n      \x3cdiv name\x3d"async" dojotype\x3d"dijit.form.TextBox" type\x3d"hidden" dojoAttachPoint\x3d"_updateAsyncInput" value\x3d"true"\x3e\x3c/div\x3e\r\n\r\n      \x3cdiv\x3e\x3clabel class\x3d"font-size--1" dojoAttachPoint\x3d"_replaceUpdateVerLabel"\x3e${i18n.replaceUpdatedVersionMsg}\x3c/label\x3e\x3c/div\x3e\r\n\r\n      \x3cdiv style\x3d"padding-top:4px;margin-bottom:1.0em;"\x3e\r\n        \x3clabel class\x3d"esriFloatLeading esriTrailingMargin2" style\x3d"margin-top:6px;" for\x3d"update-item-file"\x3e${i18n.itemLabel}\x3c/label\x3e\r\n        \x3cinput type\x3d"file" dojoAttachPoint\x3d"_updateItemFile" id\x3d"update-item-file" name\x3d"file" size\x3d"40" class\x3d"esriFileInput"\x3e\r\n      \x3c/div\x3e\r\n\r\n      \x3cdiv id\x3d"overwrite_section" class\x3d"hide" style\x3d"padding-top:4px;margin-bottom:1.0em;"\x3e\r\n        \x3cinput id\x3d"overwriteService" type\x3d"checkbox" name\x3d"overwriteService" dojotype\x3d"dijit.form.CheckBox" checked\x3d"checked" dojoAttachPoint\x3d"_overwriteService"/\x3e\r\n        \x3clabel id\x3d"overwriteServiceLbl" for\x3d"overwriteService"\x3e${i18n.overwriteService} ${i18n.keepFieldsSame}\x3c/label\x3e\r\n      \x3c/div\x3e\r\n\r\n      \x3cdiv id\x3d"update-item-keepdescription" style\x3d"width:100%;display:none;"\x3e\r\n        \x3cdiv style\x3d"padding-bottom:5px; padding-top:2px;"\x3e\r\n          \x3clabel\x3e${i18n.updateItemDescription}\x3c/label\x3e\r\n        \x3c/div\x3e\r\n        \x3cdiv style\x3d"line-height:23px"\x3e\r\n          \x3cinput type\x3d"radio" name\x3d"useDescription" dojotype\x3d"dijit.form.RadioButton" checked\x3d"checked" dojoAttachPoint\x3d"_useDescKeepRadio" id\x3d"useDescription:keep"/\x3e\r\n          \x3clabel for\x3d"useDescription:keep"\x3e${i18n.keepExistingProperties}\x3c/label\x3e\r\n          \x3cinput type\x3d"radio" name\x3d"useDescription" dojotype\x3d"dijit.form.RadioButton" dojoAttachPoint\x3d"_useDescUpdateRadio" id\x3d"useDescription:update"/\x3e\r\n          \x3clabel for\x3d"useDescription:update"\x3e${i18n.useUploadedProperties}\x3c/label\x3e\r\n        \x3c/div\x3e\r\n      \x3c/div\x3e\r\n\r\n      \x3cdiv class\x3d"leader-half trailer-half flex"\x3e\r\n        \x3cdiv class\x3d"flex flex-1"\x3e\r\n          \x3cspan data-dojo-attach-point\x3d"_waitingSpan" class\x3d"hide flex-column-justify-center"\x3e${i18n.uploadingItem}\x3c/span\x3e\r\n          \x3cdiv data-dojo-attach-point\x3d"_uploadProgressBar"\x3e\x3c/div\x3e\r\n        \x3c/div\x3e\r\n        \x3cbutton dojotype\x3d"dijit.form.Button" dojoAttachEvent\x3d"onClick:_handleCancel" dojoAttachPoint\x3d"_cancelBtn" id\x3d"button_update-item-cancel" class\x3d"jevent cancel margin-right-half" type\x3d"cancel"\x3e${i18n.cancel}\x3c/button\x3e\r\n        \x3cbutton id\x3d"button_update-item" type\x3d"button" dojotype\x3d"dijit.form.Button" dojoAttachEvent\x3d"onClick:uploadItem" class\x3d"primary" dojoAttachPoint\x3d"_updateItemBtn"\x3e${i18n.updateItem}\x3c/button\x3e\r\n      \x3c/div\x3e\r\n    \x3c/form\x3e\r\n  \x3c/div\x3e\r\n\x3c/div\x3e\r\n',
                            item: null,
                            admin: null,
                            i18n: null,
                            _replaceUpdateVerLabel: null,
                            _updateItemDialog: null,
                            _updateItemForm: null,
                            _updateItemBtn: null,
                            _cancelBtn: null,
                            _waitingSpan: null,
                            _useDescUpdateRadio: null,
                            _useDescKeepRadio: null,
                            _updateItemFile: null,
                            _errorDiv: null,
                            _updateItemFolderInput: null,
                            _updateItemIdInput: null,
                            _updateItemNameInput: null,
                            _updateItemTitleInout: null,
                            _updateItemTagsInput: null,
                            _updateItemTypeInput: null,
                            _updateItemKeywordsInput: null,
                            _updateDescriptonInput: null,
                            _updateSnippetInput: null,
                            _updateAccessInput: null,
                            _updateLicenseInfoInput: null,
                            _updateExtentInput: null,
                            _updateOverwriteInput: null,
                            _updateAsyncInput: null,
                            statics: {
                                _instance: null,
                                getInstance: function() {
                                    null === this._instance &&
                                        (this._instance = new arcgisonline.sharing.dijit.dialog
                                            .UpdateItemDlg());
                                    return this._instance;
                                },
                            },
                            postMixInProperties: function() {
                                this.inherited(arguments);
                                this.i18n = c.i18n.getLocalization(
                                    'arcgisonline',
                                    'arcgisonline'
                                ).common;
                                c.mixin(
                                    this.i18n,
                                    c.i18n.getLocalization('arcgisonline', 'arcgisonline')
                                    .updateItemDlg
                                );
                                c.mixin(this.i18n, {
                                    updating: c.i18n.getLocalization(
                                        'arcgisonline',
                                        'arcgisonline'
                                    ).addItemFrm.updating,
                                });
                            },
                            postCreate: function() {},
                            show: function(b, e) {
                                var f = {
                                        Shapefile: 1,
                                        'File Geodatabase': 1,
                                        GeoJson: 1,
                                        CSV: 1,
                                        'Microsoft Excel': 1,
                                    },
                                    d =
                                    b &&
                                    b.publishParameters &&
                                    'address' === b.publishParameters.locationType;
                                this.item = b;
                                e && null !== this.adminUser && (this.admin = e);
                                'Layer Package' == b.type &&
                                    c.style(
                                        c.byId('update-item-keepdescription'),
                                        'display',
                                        'block'
                                    );
                                'Vector Tile Service' === b.type ?
                                    (c.attr(
                                        this._replaceUpdateVerLabel,
                                        'innerHTML',
                                        this.i18n.overwriteStyle
                                    ), this._updateItemDialog.set(
                                        'title',
                                        this.i18n.updateStyle
                                    ), this._updateItemBtn.set('label', this.i18n.updateStyle)) :
                                    ((this.itemName =
                                        (this.item.sourceData && this.item.sourceData.name) ||
                                        this.item.name), c.attr(
                                        this._replaceUpdateVerLabel,
                                        'innerHTML',
                                        c.string.substitute(this.i18n.replaceUpdatedVersionMsg, [
                                            this.itemName,
                                        ])
                                    ));
                                b && b.type in f && b.relatedService ?
                                    this._overwriteService.set('checked', !1) :
                                    b && b.sourceData ?
                                    (this._updateItemDialog.set(
                                        'title',
                                        this.i18n.updateFeatures
                                    ), this._updateItemBtn.set(
                                        'label',
                                        this.i18n.updateFeatures
                                    ), (e = c.string.substitute(
                                        d ?
                                        this.i18n.overwriteServiceWithCreditsMsg :
                                        this.i18n.overwriteServiceMsg, [b.title, b.sourceData.name]
                                    )), c.attr(
                                        this._replaceUpdateVerLabel,
                                        'innerHTML',
                                        e
                                    )) :
                                    this._overwriteService.set('checked', !1);
                                b &&
                                    b.sourceData &&
                                    (esri.hide(this._overwriteService.domNode), c.attr(
                                        'overwriteServiceLbl',
                                        'innerHTML',
                                        this.i18n.keepFieldsSame
                                    ), c.removeClass('overwrite_section', 'hide'));
                                this._updateItemDialog.show();
                                this._uploadProgressBar = new arcgisonline.pages.dijit
                                    .UploadProgressBar({}, this._uploadProgressBar);
                                this._uploadProgressBar.startup();
                                this._uploadProgressBar.hide();
                            },
                            clear: function() {
                                this._updateItemFile.value = '';
                                this._useDescKeepRadio.set('checked', !0);
                                this._useDescUpdateRadio.set('checked', !1);
                                this._overwriteService.set('checked', !0);
                            },
                            _handleCancel: function(b) {
                                b.preventDefault();
                                this._updateItemDialog.hide();
                            },
                            hide: function() {
                                this._disable(!1);
                                this._updateItemDialog.hide();
                            },
                            uploadItem: function(b) {
                                b.preventDefault();
                                if (0 === this._updateItemFile.value.length)
                                    return arcgisonline.sharing.dijit.dialog.GeneralDlg.prototype.statics
                                        .getInstance()
                                        .show({
                                            title: this.i18n.errorLabel,
                                            message: this.i18n.error.providePath,
                                        }), !1;
                                b = this._fetchItem(this.item).then(
                                    c.hitch(this, 'loadFile')
                                );
                                if (
                                    this.item.sourceData ||
                                    (this.item.relatedService &&
                                        this._overwriteService.get('checked'))
                                )
                                    c.attr(
                                        this._waitingSpan,
                                        'innerHTML',
                                        this.i18n.updating
                                    ), (b = b
                                        .then(
                                            c.hitch(
                                                this,
                                                '_updateServiceData',
                                                this.item.sourceData || this.item
                                            )
                                        )
                                        .then(c.hitch(this, '_resetServiceTitle', this.item)));
                                return b.then(
                                    c.hitch(this, function(b) {
                                        b &&
                                            !b.success &&
                                            b.error &&
                                            arcgisonline.sharing.dijit.dialog.GeneralDlg.prototype.statics
                                            .getInstance()
                                            .show({
                                                title: this.i18n.updateItemErrorTitle,
                                                message: b.error.message ||
                                                    this.i18n.error.errorWhileUpdate,
                                            });
                                        b && b.serviceItemId ?
                                            (this._disable(!1), this._updateItemDialog.hide(), (window.location =
                                                'item.html?id\x3d' +
                                                b.serviceItemId +
                                                (b.jobId ? '\x26jobid\x3d' + b.jobId : ''))) :
                                            c.publish('itemData/update', ['']);
                                        return !0;
                                    }),
                                    c.hitch(this, function(b) {
                                        c.isObject(b) &&
                                            arcgisonline.sharing.dijit.dialog.GeneralDlg.prototype.statics
                                            .getInstance()
                                            .show({
                                                title: this.i18n.updateItemErrorTitle,
                                                message: b.message ||
                                                    this.i18n.error.errorWhileUpdate,
                                            });
                                        this._disable(!1);
                                    })
                                );
                            },
                            _updateServiceData: function(b) {
                                var e = new c.Deferred();
                                this._checkStatus(
                                    b,
                                    500,
                                    c.hitch(this, function(b) {
                                        var d =
                                            esriGeowConfig.restBaseUrl +
                                            'content/users/' +
                                            b.owner +
                                            '/publish',
                                            a,
                                            f,
                                            g = {
                                                itemid: b.id,
                                                filetype: {
                                                    'file geodatabase': 'filegeodatabase',
                                                    shapefile: 'shapefile',
                                                    geojson: 'geojson',
                                                    csv: 'CSV',
                                                    'microsoft excel': 'excel',
                                                }[b.type.toLowerCase()],
                                                overwrite: !0,
                                                publishParameters: c.json.stringify({
                                                    name: this.item.title ?
                                                        this.item.title.replace(/ /g, '_') :
                                                        b.title.replace(/ /g, '_'),
                                                }),
                                            };
                                        c.attr(this._waitingSpan, 'innerHTML', this.i18n.updating);
                                        c.promise
                                            .all([
                                                this._fetchPublishParameters(this.item),
                                                this._fetchServiceInfo(
                                                    this.item.relatedService || this.item
                                                ),
                                            ])
                                            .then(
                                                c.hitch(this, function(h) {
                                                    a = h[1];
                                                    (f = h[0]) && 'CSV' === b.type ?
                                                        ((h = c.mixin(
                                                            c.mixin({}, a.layers && a.layers[0]), { fields: f.layerInfo.fields }
                                                        )), (g.publishParameters = c.mixin(f, {
                                                            layerInfo: h,
                                                            name: f.name || b.title.replace(/ /g, '_'),
                                                        }))) :
                                                        f && 'Microsoft Excel' === b.type ?
                                                        ((g.publishParameters = this._generateExcelOverwritePublishParameters(
                                                            f,
                                                            a
                                                        )), (a = null)) :
                                                        (g.publishParameters = {
                                                            name: b.title ?
                                                                b.title.replace(/ /g, '_') :
                                                                this.item.title.replace(/ /g, '_'),
                                                        });
                                                    g.publishParameters = a ?
                                                        c.json.stringify(
                                                            c.mixin(g.publishParameters, a)
                                                        ) :
                                                        g.publishParameters;
                                                    return this.util
                                                        .request({ url: d, content: g }, { usePost: !0 })
                                                        .then(
                                                            c.hitch(this, function(a) {
                                                                e.resolve(
                                                                    (a && a.services && a.services[0]) || {
                                                                        serviceItemId: b.id,
                                                                    }
                                                                );
                                                            }),
                                                            c.hitch(this, function(a) {
                                                                e.reject(a);
                                                            })
                                                        );
                                                })
                                            );
                                    })
                                );
                                return e;
                            },
                            _generateExcelOverwritePublishParameters: function(b, c) {
                                c.name = b.name;
                                c.sourceSR = b.sourceSR;
                                c.targetSR = b.targetSR;
                                for (var e = 0; e < c.tables.length; e++)
                                    'Review' != c.tables[e].name &&
                                    (c.layers[c.layers.length] = c.tables[e]);
                                for (e = 0; e < c.layers.length; e++)
                                    (c.layers[e].excelSheetId =
                                        b.layers[e].excelSheetId), (c.layers[e].locationType =
                                        b.layers[e].locationType), (c.layers[e].latitudeFieldName =
                                        b.layers[e].latitudeFieldName), (c.layers[
                                            e
                                        ].longitudeFieldName =
                                        b.layers[e].longitudeFieldName), (c.layers[
                                            e
                                        ].geocodeServiceUrl =
                                        b.layers[e].geocodeServiceUrl), (c.layers[e].sourceLocale =
                                        b.layers[e].sourceLocale), (c.layers[e].sourceCountry =
                                        b.layers[e].sourceCountry), (c.layers[
                                            e
                                        ].standardizedFieldNames =
                                        b.layers[e].standardizedFieldNames), (c.layers[
                                            e
                                        ].addressFields =
                                        b.layers[e].addressFields);
                                return JSON.stringify(c);
                            },
                            _resetServiceTitle: function(b, e) {
                                var f = new c.Deferred(),
                                    d = this.util.getUser(),
                                    a = b.title || '',
                                    g = b.folderId || b.ownerFolder,
                                    d =
                                    esriGeowConfig.restBaseUrl +
                                    'content/users/' +
                                    (b.owner || d.email) +
                                    '/' +
                                    (g ? g + '/' : '') +
                                    'items/' +
                                    b.id +
                                    '/update';
                                b = -1 !== b.typeKeywords.indexOf('Involved Lookup') ?
                                    {
                                        title: a,
                                        typeKeywords: b.typeKeywords.toString() +
                                            ',showUnmatchedAddresses',
                                    } :
                                    { title: a };
                                this.util.request({ url: d, content: b }, { usePost: !0 }).then(
                                    c.hitch(this, function() {
                                        f.resolve(e);
                                    }),
                                    c.hitch(this, function() {
                                        f.resolve(e);
                                    })
                                );
                                return f;
                            },
                            _fetchServiceInfo: function(b) {
                                b = b.url;
                                var e = {
                                        addToken: (this.util.isHostedService(b) ||
                                                this.util.isAgolService(b)) &&
                                            !1 !== esriGeowConfig.isMultiTenant,
                                    },
                                    f = new c.Deferred(),
                                    d;
                                c.promise
                                    .all([
                                        this.util.request({ url: b }, e),
                                        this.util.request({ url: b + '/layers' }, e),
                                    ])
                                    .then(
                                        c.hitch(this, function(a) {
                                            var b = {},
                                                e = a && 1 < a.length && a[1],
                                                g = e && e.layers,
                                                e = e && e.tables;
                                            g &&
                                                g.length &&
                                                (c.forEach(g, function(a) {
                                                    delete a.fields;
                                                }), (b.layers = g));
                                            e && e.length && (b.tables = e);
                                            d = c.mixin(a[0], b);
                                            f.resolve(d);
                                        })
                                    );
                                return f;
                            },
                            _fetchPublishParameters: function(b) {
                                var e;
                                e =
                                    esriGeowConfig.restBaseUrl +
                                    'content/items/' +
                                    b.id +
                                    '/info/publishParameters.json';
                                b.publishParameters ?
                                    ((e = new c.Deferred()), e.resolve(b.publishParameters)) :
                                    !b.sourceData ||
                                    ('CSV' !== b.sourceData.type &&
                                        'Microsoft Excel' !== b.sourceData.type) ?
                                    ((e = new c.Deferred()), e.resolve(!1)) :
                                    (e = this.util.request({ url: e }).then(
                                        c.hitch(this, function(b) {
                                            return b;
                                        })
                                    ));
                                return e;
                            },
                            _fetchItem: function(b) {
                                var e;
                                b.sourceData ?
                                    (e = this.util
                                        .request({
                                            url: esriGeowConfig.restBaseUrl +
                                                'content/items/' +
                                                b.sourceData.id,
                                        })
                                        .then(
                                            c.hitch(this, function(b) {
                                                b.folderId = b.ownerFolder;
                                                return b;
                                            })
                                        )) :
                                    ((e = new c.Deferred()), e.resolve(b));
                                return e;
                            },
                            loadFile: function(b) {
                                var e = new c.Deferred(),
                                    f = this._updateItemFile.value,
                                    d = f.lastIndexOf('\\'),
                                    a = b.type; -
                                1 < d && (f = f.substring(d + 1, f.length));
                                f = f.replace(/\ /g, '_');
                                if ('Vector Tile Service' !== b.type && this.itemName != f)
                                    return (b = arcgisonline.sharing.dijit.dialog.GeneralDlg.prototype.statics.getInstance()), b.show({
                                        title: this.i18n.errorLabel,
                                        message: c.string.substitute(
                                            this.i18n.error.sameFileName, [this.itemName]
                                        ),
                                    }), (this._updateItemFile.value = ''), e.reject(!0), e;
                                if ('Vector Tile Service' === b.type) {
                                    var d = /(?:\.([^.]+))?$/,
                                        g = f.replace(/^.*(\\|\/|:)/, '');
                                    if ('json' !== (f ? d.exec(g)[1].toLowerCase() : ''))
                                        return (b = arcgisonline.sharing.dijit.dialog.GeneralDlg.prototype.statics.getInstance()), b.show({
                                            title: this.i18n.errorLabel,
                                            message: this.i18n.error.invalidStyleFileExtension,
                                        }), (this._updateItemFile.value = ''), e.reject(!0), e;
                                }
                                this._disable(!0);
                                f = !0;
                                'Layer Package' == a &&
                                    (f = c.byId('useDescription:keep').checked);
                                this._updateItemNameInput.set('value', this.itemName);
                                this._updateItemTitleInput.set('value', b.title);
                                this._updateItemTagsInput.set('value', b.tags);
                                this._updateItemTypeInput.set('value', a);
                                this._updateItemKeywordsInput.set('value', b.typeKeywords);
                                this._updateAccessInput.set('value', b.accessInformation);
                                this._updateLicenseInfoInput.set('value', b.licenseInfo);
                                this._updateItemFolderInput.set('value', b.folderId);
                                f
                                    ?
                                    (this._updateDescriptionInput.set(
                                        'value',
                                        b.description
                                    ), this._updateSnippetInput.set(
                                        'value',
                                        b.snippet
                                    ), this._updateExtentInput.set('value', b.extent)) :
                                    (this._updateDescriptionInput.set(
                                        'value',
                                        ''
                                    ), this._updateSnippetInput.set(
                                        'value',
                                        ''
                                    ), this._updateExtentInput.set('value', ''));
                                var n = function(a, b) {
                                        !a.success || ('completed' !== a.status && a.status) ?
                                            ((b = this.i18n.error.errorWhileUpdate), a &&
                                                a.error &&
                                                a.error.message &&
                                                (b = a.error.message), -1 <
                                                b.indexOf(
                                                    'The request size is greater than the max allowed of 1024MB'
                                                ) &&
                                                (b = this.i18n.error
                                                    .exceedFileSizeLimit), arcgisonline.sharing.dijit.dialog.GeneralDlg.prototype.statics
                                                .getInstance()
                                                .show({
                                                    title: this.i18n.updateItemErrorTitle,
                                                    message: b,
                                                }), e.reject(!0)) :
                                            e.resolve(!0);
                                    },
                                    a = function(a) {
                                        this._disable(!1);
                                        e.reject(a);
                                    };
                                b && 'Vector Tile Service' === b.type ?
                                    this._updateItemResource(b, this._updateItemForm).then(
                                        c.hitch(this, n),
                                        c.hitch(this, a)
                                    ) :
                                    (this._uploadProgressBar.reset(), this._uploadProgressBar.show(), this.itemAPI.update
                                        .call(
                                            this.itemAPI,
                                            b,
                                            this._updateItemForm,
                                            this._updateItemFile.files[0]
                                        )
                                        .then(
                                            function(a) {
                                                this._uploadProgressBar.hide();
                                                n(a);
                                            }.bind(this),
                                            a.bind(this)
                                        ));
                                return e;
                            },
                            _updateItemResource: function(b, e) {
                                var f = this.util.getUser(),
                                    d = b.folderId || b.ownerFolder;
                                b = {
                                    url: esriGeowConfig.restBaseUrl +
                                        'content/users/' +
                                        (b.owner || f.email) +
                                        '/' +
                                        (d ? d + '/' : '') +
                                        '/items/' +
                                        b.id +
                                        '/updateResources',
                                    form: e,
                                    content: { resourcesPrefix: 'styles', filename: 'root.json' },
                                };
                                c.query('input', e).forEach(
                                    c.hitch(this, function(a) {
                                        a && 'file' !== a.name && c.attr(a, 'name', '');
                                    })
                                );
                                return this.util.request(b, { usePost: !0 }).then(
                                    c.hitch(this, function(a) {
                                        return a;
                                    }),
                                    c.hitch(this, function(a) {
                                        throw { message: this.i18n.error.invalidStyleFile };
                                    })
                                );
                            },
                            _checkStatus: function(b, e, f) {
                                this.util
                                    .request({
                                        url: esriGeowConfig.restBaseUrl +
                                            'content/users/' +
                                            b.owner +
                                            (b.ownerFolder && '/' !== b.ownerFolder ?
                                                '/' + b.ownerFolder :
                                                '') +
                                            '/items/' +
                                            b.id +
                                            '/status',
                                    })
                                    .then(
                                        c.hitch(this, function(d) {
                                            d = d || { status: 'failed' };
                                            'completed' === d.status ?
                                                f(b) :
                                                ((e = (e || 500) + 250), setTimeout(
                                                    c.hitch(this, function() {
                                                        this._checkStatus(b, e, f);
                                                    }),
                                                    e
                                                ));
                                        })
                                    );
                            },
                            _disable: function(b) {
                                this._updateItemBtn.set('disabled', b);
                                this._cancelBtn.set('disabled', b);
                                this.domUtil.showHide(this._waitingSpan, b);
                                c.style(
                                    this._waitingSpan,
                                    'display',
                                    b ? 'inline-block' : 'none'
                                );
                            },
                        }
                    );
                }
            );
        },
        'arcgisonline/pages/dijit/UploadProgressBar': function() {
            define(
                'require exports tslib dojo/topic dojo/text!./UploadProgressBar/UploadProgressBar.html dojo/i18n!../../nls/arcgisonline dijit/_TemplatedMixin dijit/_WidgetBase ../utils/dom ../utils/culture ../../tsutils/declareDecorator'.split(
                    ' '
                ),
                function(c, g, f, b, e, h, d, a, k, n, l) {
                    b = f.__importDefault(b);
                    e = f.__importDefault(e);
                    h = f.__importDefault(h);
                    d = f.__importDefault(d);
                    a = f.__importDefault(a);
                    k = f.__importDefault(k);
                    n = f.__importDefault(n);
                    l = f.__importDefault(l);
                    return (function() {
                        function c(a, b) {
                            this.templateString = e.default;
                            this.i18n = h.default;
                        }
                        c.prototype.startup = function() {
                            this.inherited(arguments);
                            this.own(
                                b.default.subscribe(
                                    'item/upload-progress-update',
                                    this._onProgressUpdate.bind(this)
                                )
                            );
                        };
                        c.prototype.hide = function() {
                            k.default.hideNode(this.domNode);
                        };
                        c.prototype.show = function() {
                            k.default.showNode(this.domNode);
                        };
                        c.prototype.reset = function() {
                            this._uploadPercentLabel.textContent = this._uploadProgressFill.style.width =
                                '0%';
                            this._uploadPercentLabel.innerHTML = n.default.getPercentString(
                                0
                            );
                            this._uploadProgressFill.style.width = '0%';
                        };
                        c.prototype._onProgressUpdate = function(a) {
                            this._uploadProgressFill.classList[100 === a ? 'add' : 'remove'](
                                'upload-progress-bar__fill--full'
                            );
                            this._uploadPercentLabel.innerHTML = n.default.getPercentString(
                                a / 100
                            );
                            this._uploadProgressFill.style.width = a + '%';
                        };
                        return (c = f.__decorate([l.default(a.default, d.default)], c));
                    })();
                }
            );
        },
        'arcgisonline/sharing/geow/Item': function() {
            define(
                'dojo/_base/lang dojo/Deferred dojo/dom-construct dojo/dom-form dojo/topic dojo/promise/all arcgisonline/esriGeowConfig arcgisonline/sharing/util'.split(
                    ' '
                ),
                function(c, g, f, b, e, h, d, a) {
                    return {
                        addItem: function(a, b, c) {
                            return this._action(a, b, c, 'addItem');
                        },
                        update: function(a, b, c) {
                            return this._action(a, b, c, 'update');
                        },
                        _action: function(b, c, d, e) {
                            if (a.getUser())
                                return (e = this._getActionItemUrl(b, e)), (b = 5242880 <
                                    d.size ?
                                    this._multiPartAction(e, c, d, b) :
                                    this._postForm(e, c));
                        },
                        _multiPartAction: function(a, b, c, d) {
                            function e(a) {
                                l.reject(a);
                            }

                            function f(a) {
                                a.isMultipart = !0;
                                l.resolve(a);
                            }

                            function h(a) {
                                this._commitItem(d, b).then(f.bind(this), e.bind(this));
                            }

                            function k(a) {
                                this._cancelItem(d);
                                e.call(this, a);
                            }
                            var l = new g();
                            this._startMultipartRequest(
                                a,
                                d.fileName ? d.fileName : c.name
                            ).then(
                                function(a) {
                                    a.success ?
                                        ((d.id = a.id), this._addItemParts(d, c).then(
                                            h.bind(this),
                                            k.bind(this)
                                        )) :
                                        e.call(this, a.error);
                                }.bind(this),
                                e
                            );
                            return l;
                        },
                        _postForm: function(b, c) {
                            return a.request({ url: b, form: c, timeout: 0 }, { usePost: !0 });
                        },
                        _startMultipartRequest: function(b, c) {
                            return a.request({ url: b, content: { multipart: !0, filename: c, async: !0 } }, { usePost: !0 });
                        },
                        _addItemParts: function(a, b) {
                            function c() {
                                if (0 === C.length) t.resolve();
                                else {
                                    var b = C.splice(0, z);
                                    h(
                                        b.map(
                                            function(b) {
                                                var c = new g();
                                                return this._addPartWithRetries(
                                                    a,
                                                    b.partData,
                                                    b.formData,
                                                    1,
                                                    k,
                                                    v,
                                                    c
                                                );
                                            }.bind(this)
                                        )
                                    ).then(c.bind(this), function(a) {
                                        t.reject(a);
                                    });
                                }
                            }
                            var k = b.size,
                                n = 5242880,
                                r = 0,
                                u = Math.ceil(k / n),
                                t = new g(),
                                q = a.fileName ? a.fileName : b.name,
                                v = {},
                                C = [],
                                z = d.multiPartBatchSize || 10;
                            1e4 < u && ((n = Math.ceil(k / 1e4)), (u = Math.ceil(k / n)));
                            for (; r < u;) {
                                var y = r * n,
                                    y = b.slice(y, y + n),
                                    x = { partNum: r + 1 },
                                    w = f.create('form', { enctype: 'multipart/form-data' }),
                                    w = new FormData(w);
                                w.append('file', y, q);
                                C.push({ partData: x, formData: w });
                                r++;
                            }
                            this.pendingRequests = [];
                            e.subscribe(
                                'cancel-item-upload',
                                function() {
                                    this.pendingRequests.forEach(function(a) {
                                        a && !a.isFulfilled() && a.cancel();
                                    });
                                }.bind(this)
                            );
                            c.call(this);
                            return t;
                        },
                        _addPartWithRetries: function(b, d, f, g, h, r, u) {
                            var k = this._getActionItemUrl(b, 'addPart');
                            d.streamData = !0;
                            k = a
                                .request({
                                    url: k,
                                    content: c.mixin({}, d, this._requestParams),
                                    form: f,
                                    timeout: 0,
                                }, { returnProgress: !0 })
                                .then(
                                    function(a) {
                                        a.success ? u.resolve(a) : u.reject(a.error);
                                    },
                                    function(a) {
                                        g++;
                                        'Request canceled' !== a.message && 7 >= g ?
                                            this._addPartWithRetries(b, d, f, g, h, r, u) :
                                            u.reject(a);
                                    }.bind(this),
                                    function(a) {
                                        a.loaded &&
                                            'upload' === a.transferType &&
                                            ((r[d.partNum.toString()] = a.loaded), (a = Object.keys(
                                                r
                                            ).reduce(function(a, b) {
                                                return a + r[b];
                                            }, 0)), e.publish(
                                                'item/upload-progress-update',
                                                Math.floor(a / h * 100)
                                            ));
                                    }
                                );
                            this.pendingRequests.push(k);
                            return u;
                        },
                        _commitItem: function(d, e) {
                            var f = this._getActionItemUrl(d, 'commit');
                            d = e instanceof FormData ?
                                { title: d.fileName, type: d.fileType } :
                                c.mixin({}, b.toObject(e));
                            return a.request({ url: f, content: d }, { usePost: !0 });
                        },
                        _cancelItem: function(b) {
                            b = this._getActionItemUrl(b, 'cancel');
                            return a.request({ url: b }, { usePost: !0 });
                        },
                        _getUserUrl: function(b) {
                            var c = a.getUser(),
                                c = c.username || c.email;
                            return d.restBaseUrl + 'content/users/' + (b.owner || c);
                        },
                        _getActionItemUrl: function(a, b) {
                            var c = this._getUserUrl(a);
                            a.folderId && (c = c + '/' + a.folderId);
                            return (c = 'addItem' === b ?
                                c + '/addItem' :
                                c + '/items/' + a.id + '/' + b);
                        },
                    };
                }
            );
        },
        'arcgisonline/sharing/dijit/_GalleryFiltersMixin': function() {
            define(['dojo/_base/declare'], function() {
                return {
                    rootNodes: {
                        organization: {
                            all: {},
                            maps: {},
                            layers: {},
                            scenes: {},
                            applications: {},
                            tools: {},
                            files: {},
                        },
                        maps: {
                            all: {},
                            imagery: { tags: ['imagery'] },
                            basemaps: { tags: ['basemap'] },
                            historical: { tags: ['historical'] },
                            demographics: { tags: 'demographics' },
                            landscape: { tags: 'landscape' },
                            oceans: { tags: 'oceans' },
                            earth: { tags: ['earth observations'] },
                            urban: { tags: ['urban'] },
                            transportation: { tags: ['transportation'] },
                            boundariesplaces: { tags: ['boundaries'] },
                            storymaps: { tags: ['story maps', 'story map'] },
                        },
                        apps: {
                            configurable: { typekeywords: ['Configurable'] },
                            readytouse: { typekeywords: ['Ready To Use'] },
                            appbuilder: { typekeywords: ['Web AppBuilder for ArcGIS'] },
                        },
                    },
                    imagery: {
                        basemapimagery: { parent: 'imagery' },
                        multiimagery: { parent: 'imagery' },
                        temporalimagery: { parent: 'imagery' },
                        eventimagery: { parent: 'imagery' },
                    },
                    basemaps: {
                        esribasemaps: { parent: 'basemaps' },
                        partnerbasemaps: { parent: 'basemaps' },
                        userbasemaps: { parent: 'basemaps' },
                    },
                    demographics: {
                        income: { parent: 'demographics' },
                        spending: { parent: 'demographics' },
                        population: { parent: 'demographics' },
                        business: { parent: 'demographics' },
                        atrisk: { parent: 'demographics' },
                    },
                    landscape: {
                        agriculture: { parent: 'landscape' },
                        climate: { parent: 'landscape' },
                        ecology: { parent: 'landscape' },
                        biology: { parent: 'landscape' },
                        disturbance: { parent: 'landscape' },
                        elevation: { parent: 'landscape' },
                        landcover: { parent: 'landscape' },
                        hazards: { parent: 'landscape' },
                        soils: { parent: 'landscape' },
                        subsurface: { parent: 'landscape' },
                        water: { parent: 'landscape' },
                    },
                    urban: {
                        threed: { parent: 'urban' },
                        movement: { parent: 'urban' },
                        parcels: { parent: 'urban' },
                        people: { parent: 'urban' },
                        planning: { parent: 'urban' },
                        publicFilter: { parent: 'urban' },
                        work: { parent: 'urban' },
                    },
                    transportation: {
                        accessibility: { parent: 'transportation' },
                        infrastructure: { parent: 'transportation' },
                        logistics: { parent: 'transportation' },
                        traffic: { parent: 'transportation' },
                        transit: { parent: 'transportation' },
                    },
                    boundariesplaces: {
                        boundaries: { parent: 'boundariesplaces' },
                        places: { parent: 'boundariesplaces' },
                    },
                    maps: { webmaps: { parent: 'maps' }, mapfiles: { parent: 'maps' } },
                    layers: {
                        weblayers: { parent: 'layers' },
                        layerfiles: { parent: 'layers' },
                    },
                    applications: {
                        web: { parent: 'applications' },
                        mobile: { parent: 'applications' },
                        desktop: { parent: 'applications' },
                    },
                    weblayers: {
                        features: { parent: 'weblayers' },
                        tiles: { parent: 'weblayers' },
                        mapimage: { parent: 'weblayers' },
                        imagery: { parent: 'weblayers' },
                        scenelayers: { parent: 'weblayers' },
                        tables: { parent: 'weblayers' },
                    },
                    readytouse: {
                        web: { parent: 'readytouse' },
                        ios: { parent: 'readytouse' },
                        android: { parent: 'readytouse' },
                        windows: { parent: 'readytouse' },
                        desktop: { parent: 'readytouse' },
                    },
                    configurable: {
                        narrate: { parent: 'configurable' },
                        collect: { parent: 'configurable' },
                        compare: { parent: 'configurable' },
                        '3dscene': { parent: 'configurable' },
                        analyze: { parent: 'configurable' },
                        present: { parent: 'configurable' },
                        social: { parent: 'configurable' },
                        local: { parent: 'configurable' },
                        route: { parent: 'configurable' },
                        showcase: { parent: 'configurable' },
                    },
                    files: {
                        document: { parent: 'files' },
                        image: { parent: 'files' },
                        pdf: { parent: 'files' },
                    },
                    tools: {
                        locators: { parent: 'tools' },
                        geodatabase: { parent: 'tools' },
                        geometric: { parent: 'tools' },
                        geoprocessing: { parent: 'tools' },
                        network: { parent: 'tools' },
                    },
                    'imagery-root': { tags: ['imagery'] },
                    'imagery-basemapimagery': { tags: ['baseimagery'] },
                    'imagery-multiimagery': { tags: ['multispectral'] },
                    'imagery-temporalimagery': { tags: ['temporal'] },
                    'imagery-eventimagery': { tags: ['event_imagery'] },
                    'basemaps-root': { tags: ['basemap'] },
                    'basemaps-esribasemaps': { tags: ['esri_basemap'] },
                    'basemaps-partnerbasemaps': { tags: ['partner_basemap'] },
                    'basemaps-userbasemaps': { tags: ['user_basemap'] },
                    'historical-root': { tags: ['historical'] },
                    'demographics-root': { tags: ['demographics'] },
                    'demographics-income': { tags: ['income'] },
                    'demographics-spending': { tags: ['spending', 'behaviors'] },
                    'demographics-population': { tags: ['population', 'housing'] },
                    'demographics-segmentation': { tags: ['segmentation'] },
                    'demographics-business': { tags: ['business', 'jobs'] },
                    'demographics-atrisk': { tags: ['at risk', 'poverty'] },
                    'landscape-root': { tags: ['landscape'] },
                    'landscape-agriculture': { tags: ['agriculture'] },
                    'landscape-climate': { tags: ['climate', 'weather'] },
                    'landscape-ecology': { tags: ['ecology'] },
                    'landscape-biology': { tags: ['species'] },
                    'landscape-disturbance': { tags: ['disturbance'] },
                    'landscape-elevation': { tags: ['elevation'] },
                    'landscape-landcover': { tags: ['landcover'] },
                    'landscape-hazards': { tags: ['hazards'] },
                    'landscape-soils': { tags: ['soils', 'geology'] },
                    'landscape-subsurface': { tags: ['subsurface'] },
                    'landscape-water': { tags: ['water'] },
                    'oceans-root': { tags: ['oceans'] },
                    'earth-root': { tags: ['earth observations'] },
                    'urban-root': { tags: ['urban'] },
                    'urban-threed': { tags: ['3D'] },
                    'urban-movement': { tags: ['movement'] },
                    'urban-parcels': { tags: ['parcels'] },
                    'urban-people': { tags: ['people'] },
                    'urban-planning': { tags: ['planning'] },
                    'urban-publicFilter': { tags: ['public'] },
                    'urban-work': { tags: ['work'] },
                    'transportation-root': { tags: ['transportation'] },
                    'transportation-accessibility': { tags: ['accessibility'] },
                    'transportation-infrastructure': { tags: ['infrastructure'] },
                    'transportation-logistics': { tags: ['logistics'] },
                    'transportation-traffic': { tags: ['traffic'] },
                    'transportation-transit': { tags: ['transit'] },
                    'boundariesplaces-root': { tags: ['boundaries'] },
                    'boundariesplaces-boundaries': { tags: ['boundaries'] },
                    'boundariesplaces-places': { tags: ['places'] },
                    'storymaps-root': { tags: ['story maps', 'story map'] },
                    'scenes-root': { tags: ['scenes'] },
                    'readytouse-root': { typekeywords: ['Ready To Use'] },
                    'configurable-root': { typekeywords: ['Configurable'] },
                    'appbuilder-root': { typekeywords: ['Web AppBuilder for ArcGIS'] },
                    'readytouse-web': { typekeywords: ['Web Mapping Application'] },
                    'readytouse-ios': { typekeywords: ['ArcGIS for iPhone'] },
                    'readytouse-android': { typekeywords: ['ArcGIS for Android'] },
                    'readytouse-windows': { typekeywords: ['ArcGIS for Windows Phone'] },
                    'readytouse-desktop': {
                        typekeywords: ['Application', 'Desktop Application'],
                    },
                    'configurable-narrate': { typekeywords: ['story'] },
                    'configurable-collect': { typekeywords: ['collect'] },
                    'configurable-compare': { typekeywords: ['compare'] },
                    'configurable-3dscene': { typekeywords: ['3Dscene'] },
                    'configurable-analyze': { typekeywords: ['summarize'] },
                    'configurable-present': { typekeywords: ['gallery'] },
                    'configurable-social': { typekeywords: ['social'] },
                    'configurable-local': { typekeywords: ['local'] },
                    'configurable-route': { typekeywords: ['route'] },
                    'configurable-showcase': { typekeywords: ['showcase'] },
                    mappings: {
                        'demographics-behaviors': { mappedCategory: 'demographics-spending' },
                        'demographics-segmentation': { mappedCategory: 'demographics' },
                        'landscape-oceans': { mappedCategory: 'oceans' },
                    },
                };
            });
        },
        'arcgisonline/sharing/dijit/dialog/AdvancedOfflineOptionsDlg': function() {
            define(
                'dojo/_base/declare dojo/on dojo/dom-attr dojo/query dojo/dom dojo/dom-style dojo/_base/lang dijit/_WidgetBase dijit/_TemplatedMixin dijit/_WidgetsInTemplateMixin dojo/dom-construct dojo/string dojo/_base/window dojo/promise/all dojo/when dojo/Deferred dojo/_base/array dojo/cookie dojo/dom-class dojo/json dijit/registry dijit/form/Select dijit/form/CheckBox ./ConfirmDialog dijit/focus dojo/_base/event dojo/keys ./_CreateItemUtilMixin dojo/topic esri/Evented esri/arcgis/Portal ../../geow/Account ../../geow/Content ../../util dojo/i18n!arcgisonline/nls/arcgisonline'.split(
                    ' '
                ),
                function(
                    c,
                    g,
                    f,
                    b,
                    e,
                    h,
                    d,
                    a,
                    k,
                    n,
                    l,
                    m,
                    p,
                    r,
                    u,
                    t,
                    q,
                    v,
                    C,
                    z,
                    y,
                    x,
                    w,
                    A,
                    E,
                    B,
                    D,
                    H,
                    G,
                    F,
                    K,
                    L,
                    Q,
                    O,
                    P
                ) {
                    return c(
                        'arcgisonline.sharing.dijit.dialog.AdvancedOfflineOptionsDlg', [a, k, n, F], {
                            baseClass: 'esriAdvancedOfflineOptionsDlg',
                            templateString: '\x3cdiv\x3e\x3cdiv class\x3d"main"\x3e\x3ch2\x3e${i18n.advancedOfflineOptionsDlg.editableLayersTitle}\x3c/h2\x3e\x3cp class\x3d"" data-dojo-attach-point\x3d"_editMessage"\x3e${i18n.advancedOfflineOptionsDlg.editMessage}\x3c/p\x3e\x3cdiv class\x3d"edit"\x3e\x3clabel class\x3d"esriLeadingMargin1 trailer-0 editFeatures"\x3e\x3cinput class\x3d"" data-dojo-attach-point\x3d"editFeatures" data-dojo-type\x3d"dijit/form/CheckBox" data-dojo-props\x3d\'checked:true\'/\x3e\x26nbsp;${i18n.advancedOfflineOptionsDlg.editFeatures}\x26nbsp;\x3c/label\x3e\x3cbr /\x3e\x3clabel class\x3d"esriLeadingMargin26 editAttachments padding-left-2"\x3e\x3cinput class\x3d"editAttachments" data-dojo-attach-point\x3d"editAttachments" data-dojo-type\x3d"dijit/form/CheckBox" data-dojo-props\x3d\'checked:true, disabled:false\'/\x3e\x26nbsp;${i18n.advancedOfflineOptionsDlg.editAttachments}\x26nbsp;\x3c/label\x3e\x3c/div\x3e\x3ch2\x3e${i18n.advancedOfflineOptionsDlg.readOnlyLayersTitle}\x3c/h2\x3e\x3cp class\x3d"" data-dojo-attach-point\x3d"_readOnlyMessage"\x3e${i18n.advancedOfflineOptionsDlg.readOnlyMessage}\x3c/p\x3e\x3cdiv class\x3d"readonly"\x3e\x3clabel class\x3d"esriLeadingMargin1 "\x3e\x3cinput class\x3d"" data-dojo-attach-point\x3d"downloadAttachments" data-dojo-type\x3d"dijit/form/CheckBox" data-dojo-props\x3d\'checked:true\'/\x3e\x26nbsp;${i18n.advancedOfflineOptionsDlg.editAttachments}\x26nbsp;\x3c/label\x3e\x3c/div\x3e\x3c/div\x3e\x3c/div\x3e',
                            onDone: function() {},
                            postMixInProperties: function() {
                                this.inherited(arguments);
                                this.i18n = d.mixin({}, P);
                                this._portalUser =
                                    (this._portal =
                                        esriGeowConfig.portal || esriGeowConfig.self) &&
                                    (this._portal.user || this._portal.getPortalUser());
                            },
                            postCreate: function() {
                                this.inherited(arguments);
                                L.getSelf(
                                    d.hitch(this, function(a) {
                                        this._loadConnections();
                                        this.set('item', this.data);
                                    })
                                );
                            },
                            destroy: function() {
                                this._errorDlg &&
                                    (this._errorDlg.destroyRecursive(), (this._errorDlg = null));
                                this.inherited(arguments);
                                this._portalUser = this._portal = null;
                            },
                            showModal: function() {
                                var a = new t(),
                                    c = new A({
                                        title: P.advancedOfflineOptionsDlg.title,
                                        buttonOk: P.common.ok,
                                        buttonCancel: P.common.cancel,
                                        style: { width: '475px', height: 'auto' },
                                        className: 'esriAdvancedOptions',
                                    }),
                                    e = b('.dijitDialogTitle', c.domNode).shift(),
                                    f,
                                    g = this._portal.helpMap.m['120000899'],
                                    g = l.create('a', {
                                        className: 'esriHelpIcon',
                                        title: P.common.help,
                                        href: this._portal.helpBase + (g ? g : ''),
                                        target: '_blank',
                                    });
                                l.place(g, e, 'last');
                                c.setContent(this.domNode);
                                c.show().then(
                                    d.hitch(this, function(b) {
                                        'onOk' === b &&
                                            this._supportsAdvancedSyncOptions &&
                                            (this.set(
                                                'disabled', !0,
                                                P.advancedOfflineOptionsDlg.pleaseWait
                                            ), (f = this.get(
                                                'offlineProperties'
                                            )), (this._webMap = d.mixin(this._webMap, {
                                                applicationProperties: d.mixin(
                                                    this._webMap.applicationProperties || {},
                                                    f
                                                ),
                                            })));
                                        c.hide().then(
                                            d.hitch(this, function() {
                                                a.resolve(this._webMap);
                                            })
                                        );
                                    })
                                );
                                return a;
                            },
                            _loadConnections: function() {
                                this.own(
                                    g(
                                        this.editFeatures,
                                        'click',
                                        d.hitch(this, function() {
                                            this.editFeatures.get('checked') ?
                                                (b('.editAttachments').removeClass(
                                                    'disabled'
                                                ), this.editAttachments.set('disabled', !1)) :
                                                (b('.editAttachments').addClass(
                                                    'disabled'
                                                ), this.editAttachments.set(
                                                    'checked', !1
                                                ), this.editAttachments.set('disabled', !0));
                                        })
                                    )
                                );
                            },
                            _setItemAttr: function(a) {
                                this._item = a.portal ?
                                    a :
                                    new K.PortalItem(d.mixin({}, a, { portal: this._portal }));
                                a = this._item.itemData ? d.clone(this._item.itemData) : {};
                                this._item.updatedOffline &&
                                    (a.applicationProperties ||
                                        (a.applicationProperties = {}), (a.applicationProperties.offline = d.clone(
                                            this._item.updatedOffline
                                        )));
                                this.set('webmap', a);
                            },
                            _setWebmapAttr: function(a) {
                                this._webMap = a || {};
                                this._mapSupportsAdvancedSyncOptions(a).then(
                                    d.hitch(this, function(a) {
                                        (this._supportsAdvancedSyncOptions = a) ?
                                        this.set(
                                            'offlineProperties',
                                            (this._webMap.applicationProperties &&
                                                this._webMap.applicationProperties.offline) || {}
                                        ): (b('.dijitCheckBox', this.domNode)
                                            .map(y.byNode)
                                            .forEach(function(a) {
                                                a.set('disabled', !0);
                                            }), b('label').addClass('disabled'));
                                    })
                                );
                            },
                            _setOfflinePropertiesAttr: function(a) {
                                var c = a || {},
                                    d = c.editableLayers,
                                    e = c.readonlyLayers,
                                    c = !d ||
                                    (d.download &&
                                        ('featuresAndAttachments' === d.download ||
                                            'features' === d.download)),
                                    d = !d || (d.sync && 'syncFeaturesAndAttachments' === d.sync),
                                    e = !e || e.downloadAttachments;
                                this._offlineProperties = a || {};
                                this.editFeatures.set('checked', c);
                                this.editAttachments.set('disabled', !c);
                                b('.editAttachments')[c ? 'removeClass' : 'addClass'](
                                    'disabled'
                                );
                                this.editAttachments.set('checked', d);
                                this.downloadAttachments.set('checked', e);
                            },
                            _getOfflinePropertiesAttr: function() {
                                var a = this._offlineProperties || {},
                                    b = this.editFeatures.get('checked'),
                                    c = this.editAttachments.get('checked'),
                                    e = this.downloadAttachments.get('checked');
                                b || c ?
                                    b && c ?
                                    (a = d.mixin(a, {
                                        editableLayers: {
                                            download: 'featuresAndAttachments',
                                            sync: 'syncFeaturesAndAttachments',
                                        },
                                    })) :
                                    b &&
                                    !c &&
                                    (a = d.mixin(a, {
                                        editableLayers: {
                                            download: 'features',
                                            sync: 'syncFeaturesUploadAttachments',
                                        },
                                    })) :
                                    (a = d.mixin(a, {
                                        editableLayers: {
                                            download: 'none',
                                            sync: 'uploadFeaturesAndAttachments',
                                        },
                                    }));
                                a = d.mixin(a, { readonlyLayers: { downloadAttachments: e } });
                                return d.mixin({}, { offline: a });
                            },
                            _setDisabledAttr: function(a, b) {
                                this.set('readOnly', a, b);
                            },
                            _setReadOnlyAttr: function(a, c, d) {
                                b('.dijit', this.domNode)
                                    .map(y.byNode)
                                    .forEach(function(b) {
                                        b.set('disabled', a);
                                    });
                                b('a', this.domNode)[a ? 'addClass' : 'removeClass'](
                                    'disabledLink'
                                );
                                b('label, p, span, h2, .hint', this.domNode)[
                                    a ? 'addClass' : 'removeClass'
                                ]('disabled');
                                a && c && G.publish('/dlg/busyMessage', c);
                                G.publish('/esri/disable', a, c);
                            },
                            _mapSupportsAdvancedSyncOptions: function(a) {
                                var b = new t(),
                                    c = a.operationalLayers || [],
                                    d = {},
                                    e = [];
                                if (
                                    a &&
                                    a.applicationProperties &&
                                    a.applicationProperties.offline
                                )
                                    b.resolve(!0);
                                else {
                                    q.forEach(c, function(a) {
                                        f = a.url && a.url.replace(/(\/\d+)+$/g, '');
                                        d[f] = f;
                                    });
                                    for (var f in d)
                                        d.hasOwnProperty(f) &&
                                        d[f] &&
                                        e.push(
                                            O.request({ url: d[f] }, { addToken: !1 }).then(
                                                function(a) {
                                                    return (
                                                        a &&
                                                        a.syncCapabilities &&
                                                        a.syncCapabilities
                                                        .supportsAttachmentsSyncDirection
                                                    );
                                                },
                                                function(a) {
                                                    return !1;
                                                }
                                            )
                                        );
                                    r(e).then(function(a) {
                                        b.resolve(q.every(a, 'return item;'));
                                    });
                                }
                                return b;
                            },
                            _showError: function(a) {
                                a = d.mixin(d.mixin({}, P.publishWizard.errors.error), a);
                                this._errorDlg =
                                    this._errorDlg ||
                                    new A({
                                        showCancel: !1,
                                        style: { width: '400px', height: 'auto' },
                                    });
                                this._errorDlg.show(a).then(
                                    d.hitch(this, function() {
                                        this.set('disabled', !1);
                                        this._errorDlg.hide();
                                    })
                                );
                                return !1;
                            },
                        }
                    );
                }
            );
        },
        'arcgisonline/sharing/dijit/dialog/getWFSConfig': function() {
            define(
                [
                    'dojo/_base/array',
                    'esri/renderers/SimpleRenderer',
                    'esri/symbols/jsonUtils',
                    'arcgisonline/map/popup/getDefaultPopupInfo',
                ],
                function(c, g, f, b) {
                    function e(a) {
                        var d, e = a.fields,
                            f = a.selectedLayer || {},
                            g;
                        e &&
                            e.length &&
                            (g = c.filter(e, function(a) {
                                return 'esriFieldTypeGeometry' !== a.type;
                            })) &&
                            g.length &&
                            (d = b({ name: f.title, fields: e }, !1, a));
                        return d;
                    }
                    var h = {
                            type: 'esriSMS',
                            style: 'esriSMSCircle',
                            color: [34, 114, 162, 128],
                            size: 6,
                            outline: {
                                color: [34, 114, 162, 255],
                                width: 1,
                            },
                        },
                        d = {
                            type: 'esriSLS',
                            style: 'esriSLSSolid',
                            color: [77, 77, 77, 255],
                            width: 2,
                        },
                        a = {
                            type: 'esriSFS',
                            style: 'esriSFSSolid',
                            color: [227, 139, 79, 204],
                            outline: {
                                type: 'esriSLS',
                                style: 'esriSLSSolid',
                                color: [255, 255, 255, 255],
                                width: 0.75,
                            },
                        };
                    return function(b) {
                        var c = b.geometryType,
                            k = b.toJson(),
                            m = k.url,
                            p = k.mode,
                            k = {
                                version: k.version,
                                name: k.name,
                                wfsNamespace: b.layerNamespace,
                                featureUrl: b.getFeatureUrl,
                                supportedSpatialReferences: b.spatialReferences,
                            },
                            r;
                        'esriGeometryPoint' === c
                            ?
                            (r = new g(f.fromJson(h))) :
                            'esriGeometryPolyline' === c ?
                            (r = new g(f.fromJson(d))) :
                            'esriGeometryPolygon' === c && (r = new g(f.fromJson(a)));
                        r = r.toJson();
                        return {
                            url: m,
                            mode: p,
                            wfsInfo: k,
                            layerDefinition: {
                                geometryType: c,
                                drawingInfo: { renderer: r },
                                spatialReference: { wkid: 4326 },
                                fields: b.fields,
                            },
                            popupInfo: e(b),
                        };
                    };
                }
            );
        },
        'arcgisonline/map/popup/getDefaultPopupInfo': function() {
            define(
                [
                    './isImageServiceLayer',
                    './isTiledImageServiceLayer',
                    'dojo/_base/array',
                    'dojo/_base/lang',
                ],
                function(c, g, f, b) {
                    return function(e, h, d) {
                        h = e.displayField;
                        h = e.name + (h && h.length ? ': {' + h + '}' : '');
                        var a = e.fields,
                            k = !1,
                            n = !1,
                            l = !1;
                        if (c(d) || g(d))
                            (a = d.getCustomRasterFields({
                                rasterAttributeTableFieldPrefix: 'Raster.',
                            })), (l = 0 > f.indexOf(['F32', 'F64'], d.pixelType)), d &&
                            d.capabilities &&
                            (n =
                                (k =
                                    (d.capabilities &&
                                        -1 < d.capabilities.toLowerCase().indexOf('catalog')) ||
                                    (d.fields && 0 < d.fields.length)) &&
                                ('esriImageServiceDataTypeVector-UV' === d.serviceDataType ||
                                    'esriImageServiceDataTypeVector-MagDir' ===
                                    d.serviceDataType));
                        var m = { esriFieldTypeDouble: 1, esriFieldTypeSingle: 1 },
                            p = { esriFieldTypeInteger: 1, esriFieldTypeSmallInteger: 1 },
                            r = { esriFieldTypeDate: 1 },
                            u = ',';
                        e.editFieldsInfo &&
                            (e.editFieldsInfo.creatorField &&
                                (u += e.editFieldsInfo.creatorField + ','), e.editFieldsInfo
                                .creationDateField &&
                                (u += e.editFieldsInfo.creationDateField + ','), e
                                .editFieldsInfo.editorField &&
                                (u += e.editFieldsInfo.editorField + ','), e.editFieldsInfo
                                .editDateField &&
                                (u +=
                                    e.editFieldsInfo.editDateField +
                                    ','), (u = u.toLowerCase()));
                        a = f.map(
                            a,
                            b.hitch(this, function(a, c) {
                                c =
                                    'esriFieldTypeOID' !== a.type &&
                                    'esriFieldTypeGlobalID' !== a.type &&
                                    'esriFieldTypeGeometry' !== a.type;
                                var f = null,
                                    g =
                                    a.editable &&
                                    'esriFieldTypeOID' !== a.type &&
                                    'esriFieldTypeGlobalID' !== a.type;
                                if (c) {
                                    var h = a.name.toLowerCase(),
                                        q =
                                        u +
                                        'stretched value,fnode_,tnode_,lpoly_,rpoly_,poly_,subclass,subclass_,rings_ok,rings_nok,';
                                    k &&
                                        ((q += 'raster.itempixelvalue,'), n &&
                                            (q += 'raster.magnitude,raster.direction,'));
                                    if (-1 < q.indexOf(',' + h + ',') ||
                                        -1 < h.indexOf('shape') ||
                                        -1 < h.indexOf('perimeter') ||
                                        -1 < h.indexOf('objectid') ||
                                        -1 < h.indexOf('raster.servicepixelvalue.') ||
                                        h.indexOf('_i') == h.length - 2
                                    )
                                        c = !1;
                                    a.type in p ?
                                        (f = { places: 0, digitSeparator: !0 }) :
                                        a.type in m ?
                                        (f = {
                                            places: l &&
                                                (-1 < h.indexOf('raster.servicepixelvalue') ||
                                                    -1 < h.indexOf('raster.itempixelvalue')) ?
                                                0 :
                                                2,
                                            digitSeparator: !0,
                                        }) :
                                        a.type in r &&
                                        (10 <= e.currentVersion ||
                                            (d && 10 <= d.version)) &&
                                        (f = { dateFormat: 'longMonthDayYear' });
                                }
                                g = g ?
                                    -1 === u.indexOf(',' + a.name.toLowerCase() + ',') :
                                    g;
                                return b.mixin({}, {
                                    fieldName: a.name,
                                    label: a.alias,
                                    isEditable: g,
                                    tooltip: '',
                                    visible: c,
                                    format: f,
                                    stringFieldOption: 'textbox',
                                });
                            })
                        );
                        h = {
                            title: h,
                            fieldInfos: a,
                            description: null,
                            showAttachments: !0,
                            mediaInfos: [],
                        };
                        c(d) ?
                            ((h.layerOptions = {}), (h.layerOptions.showNoDataRecords = !0), (h.layerOptions.returnTopmostRaster = !0)) :
                            g(d) &&
                            ((h.layerOptions = {}), (h.layerOptions.showNoDataRecords = !0));
                        return h;
                    };
                }
            );
        },
        'arcgisonline/map/popup/isImageServiceLayer': function() {
            define(
                [
                    'esri/layers/ArcGISImageServiceLayer',
                    'esri/layers/ArcGISImageServiceVectorLayer',
                ],
                function(c, g) {
                    return function(c) {
                        return (
                            c instanceof esri.layers.ArcGISImageServiceLayer ||
                            c instanceof esri.layers.ArcGISImageServiceVectorLayer
                        );
                    };
                }
            );
        },
        'arcgisonline/map/popup/isTiledImageServiceLayer': function() {
            define(['esri/layers/RasterXLayer'], function(c) {
                return function(c) {
                    return c instanceof esri.layers.RasterXLayer;
                };
            });
        },
        'arcgisonline/sharing/dijit/dialog/getWMTSConfig': function() {
            define(
                'dojo/Deferred dojo/json dojo/_base/array dojo/_base/lang esri/renderers/SimpleRenderer esri/symbols/jsonUtils esri/SpatialReference esri/geometry/Extent arcgisonline/map/core/sameSpatialReference arcgisonline/map/core/projectExtent'.split(
                    ' '
                ),
                function(c, g, f, b, e, h, d, a, k, n) {
                    function l(a) {
                        var b = new c();
                        m(
                            a.selectedLayer.gcsExtent,
                            a.selectedTileInfo.fullExtent
                        ).then(function(a) {
                            b.resolve(a && a.toJson());
                        });
                        return b;
                    }

                    function m(a, e) {
                        var f = new c();
                        e = e.spatialReference || new d({ wkid: 4326 });
                        handler = b.hitch(this, function(a) {
                            f.resolve(
                                a && a.length && a[0] && a[0].type && 'extent' === a[0].type ?
                                a[0] :
                                null
                            );
                        });
                        n(a, e, handler, handler);
                        return f;
                    }
                    return function(a) {
                        var d = new c(),
                            e = a.selectedLayer || {},
                            f = a.selectedTileInfo || {},
                            g;
                        l(a).then(
                            b.hitch(this, function(b) {
                                var c;
                                c = a.selectedLayer;
                                var h = a.selectedTileInfo,
                                    k = -1 < dojo.indexOf(c.formats, 'image/png') ?
                                    'image/png' :
                                    c.formats[0];
                                a.resourceUrls = c.resourceUrls;
                                c = a.getTileUrlTemplate({
                                    identifier: c.identifier,
                                    tileMatrixSet: h.tileMatrixSet,
                                    format: k,
                                });
                                (h = a.copyright) && 'none' !== h.toLowerCase() ?
                                    180 < h.length && (h = h.substring(0, 180) + '..') :
                                    (h = '');
                                var k = b || a.selectedTileInfo.fullExtent,
                                    l;
                                l = a.selectedTileInfo.tileInfo || {};
                                var m;
                                if (96 !== l.dpi) {
                                    for (var n = 0; n < l.lods.length; n++)
                                        (m = l.lods[n]), (m.scale = 96 * m.scale / l.dpi);
                                    l.dpi = 96;
                                }
                                l = l.toJson();
                                g = {
                                    templateUrl: c,
                                    copyright: h,
                                    fullExtent: k,
                                    tileInfo: l,
                                    wmtsInfo: {
                                        url: a.wmtsUrl,
                                        layerIdentifier: e.identifier,
                                        tileMatrixSet: f.tileMatrixSet,
                                    },
                                };
                                d.resolve({ wmtsConfig: g, fullExtent: b });
                            })
                        );
                        return d;
                    };
                }
            );
        },
        'url:esri/dijit/editing/templates/Editor.html': '\x3cdiv class\x3d"esriEditor"\x3e\r\n    \x3cdiv class\x3d"esriTemplatePicker" dojoAttachPoint\x3d"templatePickerDiv"\x3e\x3c/div\x3e\r\n    \x3cdiv class\x3d"esriDrawingToolbar" dojoAttachPoint\x3d"drawingToolbarDiv"\x3e\x3c/div\x3e\r\n    \x3cdiv class\x3d"progressBar" dojoAttachPoint\x3d"progressBar" indeterminate\x3d"true" dojoType\x3d"dijit.ProgressBar" /\x3e\r\n\x3c/div\x3e',
        'url:esri/dijit/templates/InfoWindow.html': '\x3cdiv id\x3d"${id}.infowindow" class\x3d"infowindow" dojoAttachPoint\x3d"_infowindow"\r\n  \x3e\x3cdiv style\x3d"position:relative;"\r\n    \x3e\x3cdiv class\x3d"window" dojoAttachPoint\x3d"_window"\r\n      \x3e\x3cdiv class\x3d"top"\r\n        \x3e\x3cdiv class\x3d"left" dojoAttachPoint\x3d"_topleft"\x3e\x3cdiv class\x3d"sprite"\x3e\x3c/div\x3e\x3c/div\r\n    \t\t\x3e\x3cdiv class\x3d"right" dojoAttachPoint\x3d"_topright"\r\n    \t\t\t\x3e\x3cdiv class\x3d"sprite"\x3e\x3c/div\r\n    \t\t\t\x3e\x3cdiv class\x3d"user" dojoAttachPoint\x3d"_user"\r\n    \t\t\t  \x3e\x3cdiv class\x3d"titlebar" dojoAttachPoint\x3d"_titlebar"\r\n    \t\t\t    \x3e\x3ca class\x3d"hide" dojoAttachPoint\x3d"_hide" dojoAttachEvent\x3d"onclick:hide"\x3e\x3cdiv class\x3d"sprite"\x3e\x3c/div\x3e\x3c/a\r\n              \x3e\x3cdiv class\x3d"title" dojoAttachPoint\x3d"_title"\x3e${title}\x3c/div\r\n    \t\t\t  \x3e\x3c/div\r\n            \x3e\x3cdiv class\x3d"border" dojoAttachPoint\x3d"_border"\x3e\x3c/div\r\n    \t\t\t  \x3e\x3cdiv class\x3d"layout content" dojoAttachPoint\x3d"_content, containerNode"\r\n    \t\t\t  \x3e\x3c/div\r\n    \t\t\t\x3e\x3c/div\r\n    \t\t\x3e\x3c/div\r\n        \x3e\x3cdiv class\x3d"bottom"\r\n          \x3e\x3cdiv class\x3d"left" dojoAttachPoint\x3d"_bottomleft"\x3e\x3cdiv class\x3d"sprite"\x3e\x3c/div\x3e\x3c/div\r\n\t\t      \x3e\x3cdiv class\x3d"right" dojoAttachPoint\x3d"_bottomright"\x3e\x3cdiv class\x3d"sprite"\x3e\x3c/div\x3e\x3c/div\r\n        \x3e\x3c/div\r\n      \x3e\x3c/div\r\n    \x3e\x3c/div\r\n    \x3e\x3cdiv class\x3d"pointer" dojoAttachPoint\x3d"_pointer"\x3e\x3cdiv dojoAttachPoint\x3d"_sprite" class\x3d"sprite"\x3e\x3c/div\x3e\x3c/div\r\n  \x3e\x3c/div\r\n\x3e\x3c/div\x3e',
        'url:esri/dijit/templates/OverviewMap.html': '\x3cdiv class\x3d"esriOverviewMap"\x3e\r\n  \x3cdiv class\x3d"ovwContainer" dojoattachpoint\x3d"_body" style\x3d"width: ${width}px; height: ${height}px;"\x3e\r\n    \x3cdiv id\x3d"${id}-map" style\x3d"width: 100%; height: 100%;"\x3e\r\n      \x3cdiv class\x3d"ovwHighlight" dojoattachpoint\x3d"_focusDiv" title\x3d"${NLS_drag}" style\x3d"border: 1px solid ${color}; background-color: ${color};"\x3e\x3c/div\x3e\r\n    \x3c/div\x3e\r\n  \x3c/div\x3e\r\n  \x3cdiv class\x3d"ovwButton ovwController" title\x3d"${NLS_show}" dojoattachpoint\x3d"_controllerDiv" dojoattachevent\x3d"onclick: _visibilityHandler"\x3e\r\n  \x3c/div\x3e\r\n  \x3cdiv class\x3d"ovwButton ovwMaximizer" title\x3d"${NLS_maximize}" dojoattachpoint\x3d"_maximizerDiv" dojoattachevent\x3d"onclick: _maximizeHandler"\x3e\r\n  \x3c/div\x3e\r\n\x3c/div\x3e\r\n',
        'url:esri/dijit/templates/TimeSlider.html': '   \x3cdiv class\x3d"esriTimeSlider"\x3e\r\n   \x3ctable width\x3d"100%" cellspacing\x3d"0" cellpadding\x3d"0" border\x3d"0"\x3e\r\n   \x3ctr\x3e\r\n   \x3ctd align\x3d"right" valign\x3d"middle"\x3e\x3cbutton dojoType\x3d"dijit.form.Button" showLabel\x3d"false" iconClass\x3d"tsButton tsPlayButton" dojoAttachEvent\x3d"onClick:_onPlay" dojoAttachPoint\x3d"playPauseBtn" type\x3d"button"\x3e${NLS_play}\x3c/button\x3e\x3c/td\x3e\r\n   \x3ctd align\x3d"center" valign\x3d"middle" width\x3d"80%" class\x3d"tsTmp"\x3e\x3c/td\x3e\r\n   \x3ctd align\x3d"left" valign\x3d"middle" width\x3d"30"\x3e\x3cbutton dojoType\x3d"dijit.form.Button" showLabel\x3d"false" iconClass\x3d"tsButton tsPrevButton" dojoAttachEvent\x3d"onClick:_onPrev" dojoAttachPoint\x3d"previousBtn" type\x3d"button"\x3e${NLS_previous}\x3c/button\x3e\x3c/td\x3e\r\n   \x3ctd align\x3d"left" valign\x3d"middle"\x3e\x3cbutton dojoType\x3d"dijit.form.Button" showLabel\x3d"false" iconClass\x3d"tsButton tsNextButton" dojoAttachEvent\x3d"onClick:_onNext" dojoAttachPoint\x3d"nextBtn" type\x3d"button"\x3e${NLS_next}\x3c/button\x3e\x3c/td\x3e\r\n   \x3c/tr\x3e    \r\n   \x3c/table\x3e\r\n   \x3c/div\x3e',
        'url:esri/dijit/templates/MultidimensionalSlider_vertical.html': '\x3cdiv class\x3d"esriMdSliderVertical esriMdSliderPassive"\x3e\r\n  \x3ctable class\x3d"esriMdSliderTableVertical" data-dojo-attach-point\x3d"mdSliderTable"\x3e\r\n    \x3ctr\x3e\r\n      \x3ctd colspan\x3d"3" class\x3d"esriMdSliderInfoCellVertical"\x3e\r\n        \x3cdiv data-dojo-attach-point\x3d"dimensionInfo" class\x3d"esriMdSliderInfo"\x3e\r\n          \x3cbr/\x3e\x3cbr/\x3e\r\n        \x3c/div\x3e\r\n      \x3c/td\x3e\r\n    \x3c/tr\x3e\r\n    \x3ctr\x3e\r\n      \x3ctd colspan\x3d"3" class\x3d"esriMdSliderCellVertical" data-dojo-attach-point\x3d"mdSliderCell"\x3e\x3c/td\x3e\r\n    \x3c/tr\x3e\r\n    \x3ctr  class\x3d"esriMdSliderPlayButtonRow"  data-dojo-attach-point\x3d"playPauseBtnRow"\x3e\r\n      \x3ctd class\x3d"esriMdSliderPrevButtonCell"\x3e\r\n        \x3cbutton data-dojo-type\x3d"dijit/form/Button" data-dojo-props\x3d"iconClass: \'mdsButton mdsPrevButton\'" data-dojo-attach-event\x3d"onClick:decrement" data-dojo-attach-point\x3d"prevBtn" type\x3d"button"\r\n                title\x3d"${_i18n.widgets.mdSlider.NLS_previous}"\x3e\r\n        \x3c/button\x3e\x3c/td\x3e\r\n      \x3ctd class\x3d"esriMdSliderPlayButtonCell"\x3e\r\n        \x3cbutton data-dojo-type\x3d"dijit/form/Button" data-dojo-props\x3d"iconClass: \'mdsButton mdsPlayButton\'" data-dojo-attach-event\x3d"onClick:_onPlay" data-dojo-attach-point\x3d"playPauseBtn" type\x3d"button"\r\n                title\x3d"${_i18n.widgets.mdSlider.NLS_play}"\x3e\r\n        \x3c/button\x3e\x3c/td\x3e\r\n      \x3ctd class\x3d"esriMdSliderNextButtonCell"\x3e\r\n        \x3cbutton data-dojo-type\x3d"dijit/form/Button" data-dojo-props\x3d"iconClass: \'mdsButton mdsNextButton\'" data-dojo-attach-event\x3d"onClick:increment" data-dojo-attach-point\x3d"nextBtn" type\x3d"button"\r\n                title\x3d"${_i18n.widgets.mdSlider.NLS_next}"\x3e\r\n        \x3c/button\x3e\x3c/td\x3e\r\n    \x3c/tr\x3e\r\n  \x3c/table\x3e\r\n\x3c/div\x3e',
        'url:esri/dijit/templates/MultidimensionalSlider_horizontal.html': '\x3cdiv class\x3d"esriMdSliderHorizontal"\x3e\r\n  \x3ctable class\x3d"esriMdSliderTableHorizontal"\x3e\r\n    \x3ccolgroup\x3e\r\n      \x3ccol class\x3d"esriMdSliderHorizontalCol1"\x3e\r\n      \x3ccol\x3e\r\n    \x3c/colgroup\x3e\r\n    \x3ctr\x3e\r\n      \x3ctd class\x3d"esriMdSliderDimensionInfoCellHorizontal" colspan\x3d"2"\x3e\r\n        \x3cdiv data-dojo-attach-point\x3d"dimensionInfo"\x3e\x3c/div\x3e\r\n      \x3c/td\x3e\r\n    \x3c/tr\x3e\r\n    \x3ctr\x3e\r\n      \x3ctd align\x3d"right" valign\x3d"middle"\x3e\x3cbutton data-dojo-type\x3d"dijit/form/Button" data-dojo-props\x3d"iconClass: \'mdsButton mdsPlayButton\'" data-dojo-attach-event\x3d"onClick:_onPlay" \r\n                                               data-dojo-attach-point\x3d"playPauseBtn" type\x3d"button" title\x3d"${_i18n.widgets.mdSlider.NLS_play}"\x3e\x3c/button\x3e\x3c/td\x3e\r\n      \x3ctd class\x3d"esriMdSliderCellHorizontal" data-dojo-attach-point\x3d"mdSliderCell"\x3e\r\n      \x3c/td\x3e\r\n    \x3c/tr\x3e\r\n  \x3c/table\x3e\r\n\x3c/div\x3e\r\n',
        'url:esri/dijit/templates/BasemapGallery.html': '\x3cdiv class\x3d"esriBasemapGallery"\x3e\r\n  \x3cdiv dojoAttachPoint\x3d"flowContainer"\x3e\r\n  \x3c/div\x3e\r\n\x3c/div\x3e',
        'url:esri/dijit/templates/HomeButton.html': '\x3cdiv class\x3d"${theme}" role\x3d"presentation"\x3e\r\n    \x3cdiv class\x3d"${_css.container}"\x3e\r\n            \x3cdiv data-dojo-attach-point\x3d"_homeNode" title\x3d"${_i18n.widgets.homeButton.home.title}" role\x3d"button" class\x3d"${_css.home}" tabindex\x3d"0"\x3e\x3cspan\x3e${_i18n.widgets.homeButton.home.button}\x3c/span\x3e\x3c/div\x3e\r\n    \x3c/div\x3e\r\n\x3c/div\x3e',
        'url:esri/dijit/templates/LocateButton.html': '\x3cdiv class\x3d"${theme}" role\x3d"presentation"\x3e\r\n    \x3cdiv class\x3d"${_css.container}"\x3e\r\n            \x3cdiv data-dojo-attach-point\x3d"_locateNode" role\x3d"button" class\x3d"${_css.locate}" tabindex\x3d"0"\x3e\x3cspan\x3e${_i18n.widgets.locateButton.locate.button}\x3c/span\x3e\x3c/div\x3e\r\n    \x3c/div\x3e\r\n\x3c/div\x3e\r\n',
        'url:esri/dijit/templates/Geocoder.html': '\x3cdiv class\x3d"${theme}" role\x3d"presentation"\x3e\r\n    \x3cdiv class\x3d"${_css.GeocoderContainerClass}" role\x3d"presentation"\x3e\r\n    \t\x3cdiv class\x3d"${_css.GeocoderClass}" data-dojo-attach-point\x3d"containerNode" role\x3d"presentation"\x3e\r\n    \t\t\x3cdiv title\x3d"${_i18n.widgets.Geocoder.main.searchButtonTitle}" tabindex\x3d"0" class\x3d"${_css.searchButtonClass} ${_css.GeocoderIconClass}" data-dojo-attach-point\x3d"submitNode" role\x3d"button"\x3e\x3c/div\x3e\r\n    \t\t\x3cdiv aria-haspopup\x3d"true" id\x3d"${id}_menu_button" title\x3d"${_i18n.widgets.Geocoder.main.geocoderMenuButtonTitle}" tabindex\x3d"0" class\x3d"${_css.geocoderMenuArrowClass} ${_css.GeocoderIconClass}" data-dojo-attach-point\x3d"geocoderMenuArrowNode" role\x3d"button" aria-expanded\x3d"false"\x3e\x3c/div\x3e\r\n    \t\t\x3cinput aria-haspopup\x3d"true" id\x3d"${id}_input" tabindex\x3d"0" placeholder\x3d"" value\x3d"${value}" autocomplete\x3d"off" type\x3d"text" data-dojo-attach-point\x3d"inputNode" role\x3d"textbox"\x3e\r\n    \t\t\x3cdiv tabindex\x3d"0" class\x3d"${_css.clearButtonClass} ${_css.GeocoderIconClass}" data-dojo-attach-point\x3d"clearNode" role\x3d"button"\x3e\x3c/div\x3e\r\n    \t\t\x3cdiv class\x3d"${_css.GeocoderClearClass}" role\x3d"presentation"\x3e\x3c/div\x3e\r\n    \t\x3c/div\x3e\r\n    \t\x3cdiv class\x3d"${_css.resultsContainerClass}" data-dojo-attach-point\x3d"resultsNode" aria-labelledby\x3d"${id}_input" role\x3d"menu" aria-hidden\x3d"true"\x3e\x3c/div\x3e\r\n    \t\x3cdiv class\x3d"${_css.geocoderMenuClass}" data-dojo-attach-point\x3d"geocoderMenuNode" role\x3d"presentation"\x3e\r\n    \t\t\x3cdiv class\x3d"${_css.geocoderMenuHeaderClass}"\x3e\r\n    \t\t\t${_i18n.widgets.Geocoder.main.geocoderMenuHeader}\r\n    \t\t\t\x3cdiv role\x3d"button" data-dojo-attach-point\x3d"geocoderMenuCloseNode" title\x3d"${_i18n.widgets.Geocoder.main.geocoderMenuCloseTitle}" tabindex\x3d"0" class\x3d"${_css.geocoderMenuCloseClass}"\x3e\x3c/div\x3e\r\n    \t\t\t\x3cdiv class\x3d"${_css.GeocoderClearClass}" role\x3d"presentation"\x3e\x3c/div\x3e\r\n    \t\t\x3c/div\x3e\r\n    \t\t\x3cdiv data-dojo-attach-point\x3d"geocoderMenuInsertNode" aria-labelledby\x3d"${id}_menu_button" role\x3d"menu" aria-hidden\x3d"true"\x3e\x3c/div\x3e\r\n    \t\x3c/div\x3e\r\n    \x3c/div\x3e\r\n\x3c/div\x3e',
        'url:esri/dijit/templates/Directions.html': '\x3cdiv class\x3d"${options.theme}" role\x3d"presentation"\x3e\r\n    \x3cdiv data-dojo-attach-point\x3d"_widgetContainer" class\x3d"${_css.widgetContainerClass}" role\x3d"presentation"\x3e\r\n        \x3cdiv class\x3d"${_css.stopsContainerClass}" role\x3d"presentation"\x3e\r\n            \x3cdiv id\x3d"search-source-container" class\x3d"${_css.searchSourceContainerClass}" data-dojo-attach-point\x3d"_searchSourceContainerNode"\x3e\r\n                \x3cdiv data-dojo-attach-point\x3d"_searchSourceSelectorContainer"\x3e\x3c/div\x3e\r\n            \x3c/div\x3e\r\n            \x3cdiv class\x3d"${_css.stopsTableContainerClass}"\x3e\r\n                \x3ctable class\x3d"${_css.stopsClass}" data-dojo-attach-point\x3d"_dndNode"\x3e\x3c/table\x3e\r\n                \x3cdiv class\x3d"${_css.stopsTableCoverClass}" data-dojo-attach-point\x3d"_stopsTableCover"\x3e\x3c/div\x3e\r\n            \x3c/div\x3e\r\n            \x3cdiv class\x3d"${_css.clearClass}"\x3e\x3c/div\x3e\r\n            \x3cdiv class\x3d"${_css.stopsButtonContainerClass}"\x3e\r\n                \x3cdiv class\x3d"${_css.stopsAddDestinationClass}"\x3e\r\n                    \x3cdiv tabindex\x3d"0" role\x3d"button" data-dojo-attach-point\x3d"_activateButtonNode" title\x3d"${_i18n.widgets.directions.activate}" class\x3d"${_css.activateButtonClass} ${_css.stopsButtonClass} ${_css.stopsButtonTabClass} ${_css.stopsPressedButtonClass}" data-blur-on-click\x3d"true"\x3e\x3c/div\x3e\r\n                    \x3cdiv tabindex\x3d"0" role\x3d"button" data-dojo-attach-point\x3d"_lineBarrierButtonNode" title\x3d"${_i18n.widgets.directions.lineBarrier}" class\x3d"${_css.lineBarrierButtonClass} ${_css.stopsButtonClass} ${_css.stopsButtonTabClass}" data-blur-on-click\x3d"true"\x3e\x3c/div\x3e\r\n                    \x3cdiv role\x3d"button" tabindex\x3d"0" class\x3d"${_css.linkButtonClass} ${_css.stopsAddDestinationBtnClass}" data-dojo-attach-point\x3d"_addDestinationNode" data-blur-on-click\x3d"true"\x3e${_i18n.widgets.directions.addDestination}\x3c/div\x3e\r\n                \x3c/div\x3e\r\n                \x3cdiv class\x3d"${_css.travelModesContainerClass}" data-dojo-attach-point\x3d"_travelModeContainerNode"\x3e\r\n                    \x3cdiv data-dojo-attach-point\x3d"_travelModeSelectorContainer"\x3e\x3c/div\x3e\r\n                \x3c/div\x3e\r\n                \x3cdiv tabindex\x3d"0" role\x3d"button" class\x3d"${_css.linkButtonClass} startTimeMenuButton" data-blur-on-click\x3d"true" data-dojo-attach-point\x3d"_startTimeButtonNodeContainer"\x3e\r\n                    \x3cdiv data-dojo-attach-point\x3d"_startTimeButtonNode"\x3e\r\n                        \x3cspan data-dojo-attach-point\x3d"_startTimeButtonLabel"\x3e${_i18n.widgets.directions.leaveNow}\x3c/span\x3e\r\n                        \x3cdiv data-dojo-attach-point\x3d"_startTimeDDLArrow" class\x3d"esriDirectionsDDLArrow"\x3e\x3c/div\x3e\r\n                    \x3c/div\x3e\r\n                    \x3cdiv class\x3d"startTimeMenu" data-dojo-attach-point\x3d"_startTimeMenu"\x3e\r\n                        \x3cul role\x3d"menu"\x3e\r\n                            \x3cli data-dojo-attach-point\x3d"_startTimeMenuLeaveNow" tabindex\x3d"0" class\x3d"esriRouteZoom startTimeMenuItem" role\x3d"menuitemradio" aria-checked\x3d"true"\x3e${_i18n.widgets.directions.leaveNow}\x3c/li\x3e\r\n                            \x3cli data-dojo-attach-point\x3d"_startTimeMenuDepartAt" tabindex\x3d"0" class\x3d"esriRouteZoom startTimeMenuItem" role\x3d"menuitemradio"\x3e${_i18n.widgets.directions.departAt}\x3c/li\x3e\r\n                            \x3cli data-dojo-attach-point\x3d"_startTimeMenuNone" tabindex\x3d"0" class\x3d"esriRouteZoom startTimeMenuItem" role\x3d"menuitemradio"\x3e${_i18n.widgets.directions.noStartTime}\x3c/li\x3e\r\n                        \x3c/ul\x3e\r\n                    \x3c/div\x3e\r\n                \x3c/div\x3e\r\n                \x3cdiv tabindex\x3d"0" role\x3d"button" class\x3d"${_css.linkButtonClass} ${_css.stopsOptionsButtonClass}" data-dojo-attach-point\x3d"_optionsButtonNode" data-blur-on-click\x3d"true"\x3e${_i18n.widgets.directions.showOptions}\x3c/div\x3e\r\n            \t\x3cdiv class\x3d"${_css.clearClass}"\x3e\x3c/div\x3e\r\n                \x3cdiv class\x3d"departAtContainer" data-dojo-attach-point\x3d"_departAtContainer"\x3e\r\n                    \x3cdiv id\x3d"${id}_directionsDepartAtTime" data-dojo-attach-point\x3d"_departAtTimeContainer"\x3e\x3c/div\x3e\r\n                    \x3cdiv id\x3d"${id}_directionsDepartAtDate" data-dojo-attach-point\x3d"_departAtDateContainer"\x3e\x3c/div\x3e\r\n                \x3c/div\x3e\r\n            \x3c/div\x3e\r\n            \x3cdiv role\x3d"presentation" class\x3d"${_css.stopsOptionsMenuClass}" data-dojo-attach-point\x3d"_optionsMenuNode"\x3e\r\n                \x3cdiv class\x3d"${_css.stopsOptionsCheckboxesClass}"\x3e\r\n                    \x3cul\x3e\r\n                        \x3cli class\x3d"${_css.stopsFindOptimalOrderClass}" data-dojo-attach-point\x3d"_findOptimalOrderItemNode"\x3e\x3cinput tabindex\x3d"0" data-dojo-attach-point\x3d"_findOptimalOrderNode" type\x3d"checkbox" id\x3d"${id}_find_optimal_order" /\x3e\x3clabel for\x3d"${id}_find_optimal_order"\x3e${_i18n.widgets.directions.findOptimalOrder}\x3c/label\x3e\x3c/li\x3e\r\n                        \x3cli class\x3d"${_css.stopsReturnToStartClass}" data-dojo-attach-point\x3d"_returnToStartItemNode"\x3e\x3cinput tabindex\x3d"0" data-dojo-attach-point\x3d"_returnToStartNode" type\x3d"checkbox" id\x3d"${id}_stopsReturnToStart" /\x3e\x3clabel for\x3d"${id}_stopsReturnToStart"\x3e${_i18n.widgets.directions.returnToStart}\x3c/label\x3e\x3c/li\x3e\r\n                        \x3cli class\x3d"${_css.stopsUseTrafficClass}" data-dojo-attach-point\x3d"_useTrafficItemNode" title\x3d"${_i18n.widgets.directions.trafficLabelLive}"\x3e\r\n                            \x3cinput tabindex\x3d"0" data-dojo-attach-point\x3d"_useTrafficNode" type\x3d"checkbox" id\x3d"${id}_stopsUseTraffic" /\x3e\x3clabel for\x3d"${id}_stopsUseTraffic"\x3e${_i18n.widgets.directions.useTraffic}\x3c/label\x3e\r\n                            \x3ca data-dojo-attach-point\x3d"_trafficAvailabilityButton" style\x3d"display: none;" href\x3d"http://www.arcgis.com/home/item.html?id\x3db7a893e8e1e04311bd925ea25cb8d7c7" target\x3d"_blank"\x3e\x3cdiv class\x3d"esriTrafficAvailabilityButton" title\x3d"${_i18n.widgets.directions.seeTrafficAvailability}"\x3e\x3c/div\x3e\x3c/a\x3e\r\n                        \x3c/li\x3e\r\n                    \x3c/ul\x3e\r\n                \x3c/div\x3e\r\n                \x3cdiv class\x3d"${_css.stopsOptionsToggleContainerClass}"\x3e\r\n                    \x3cdiv class\x3d"${_css.stopsOptionsUnitsContainerClass}"  data-dojo-attach-point\x3d"_agolDistanceUnitsNode"\x3e\r\n                        \x3cdiv tabindex\x3d"0" role\x3d"button" class\x3d"${_css.stopsOptionsUnitsMiClass} ${_css.stopsButtonClass}" data-dojo-attach-point\x3d"_useMilesNode" data-blur-on-click\x3d"true"\x3e${_i18n.widgets.directions.units.esriMiles.abbr}\x3c/div\x3e\r\n                        \x3cdiv tabindex\x3d"0" role\x3d"button" class\x3d"${_css.stopsOptionsUnitsKmClass} ${_css.stopsButtonClass} ${_css.stopsButtonTabLastClass} ${_css.stopsPressedButtonClass}" data-dojo-attach-point\x3d"_useKilometersNode" data-blur-on-click\x3d"true"\x3e${_i18n.widgets.directions.units.esriKilometers.abbr}\x3c/div\x3e\r\n                        \x3cdiv class\x3d"${_css.clearClass}"\x3e\x3c/div\x3e\r\n                    \x3c/div\x3e\r\n                    \x3cdiv class\x3d"${_css.clearClass}"\x3e\x3c/div\x3e\r\n                \x3c/div\x3e\r\n                \x3cdiv class\x3d"${_css.clearClass}"\x3e\x3c/div\x3e\r\n            \x3c/div\x3e\r\n            \x3cdiv class\x3d"${_css.stopsGetDirectionsContainerClass}"\x3e\r\n                \x3cdiv class\x3d"getDirectionsBtnContainer"\x3e\r\n                    \x3cdiv tabindex\x3d"0" role\x3d"button" class\x3d"${_css.stopsButtonClass} ${_css.stopsGetDirectionsClass} esriDisabledDirectionsButton" data-dojo-attach-point\x3d"_getDirectionsButtonNode" data-blur-on-click\x3d"true"\x3e${_i18n.widgets.directions.getDirections}\x3c/div\x3e\r\n                    \x3cdiv tabindex\x3d"0" role\x3d"button" class\x3d"${_css.linkButtonClass} ${_css.stopsClearDirectionsClass}" data-dojo-attach-point\x3d"_clearDirectionsButtonNode" data-blur-on-click\x3d"true"\x3e${_i18n.widgets.directions.clearDirections}\x3c/div\x3e\r\n                \x3c/div\x3e\r\n                \x3cdiv class\x3d"savePrintBtnContainer" data-dojo-attach-point\x3d"_savePrintBtnContainer"\x3e\r\n                    \x3cdiv tabindex\x3d"0" role\x3d"button" class\x3d"${_css.resultsSaveClass} ${_css.stopsButtonClass} ${_css.stopsButtonTabClass}" data-blur-on-click\x3d"true" data-dojo-attach-point\x3d"_saveMenuButton" title\x3d"${_i18n.widgets.directions.saveTitle}" \x3e\x3c/div\x3e\r\n                    \x3cdiv tabindex\x3d"0" role\x3d"button" class\x3d"${_css.resultsPrintClass} ${_css.stopsButtonClass} ${_css.stopsButtonTabClass}" data-blur-on-click\x3d"true" data-dojo-attach-point\x3d"_printButton" title\x3d"${_i18n.widgets.directions.print}" \x3e\x3c/div\x3e\r\n                \x3c/div\x3e\r\n            \x3c/div\x3e\r\n            \x3cdiv role\x3d"presentation" class\x3d"${_css.stopsOptionsMenuClass} esriSaveContainer" data-dojo-attach-point\x3d"_saveMenuNode"\x3e\r\n                \x3cdiv class\x3d"esriLayerNameLabel"\x3e${_i18n.widgets.directions.layerName}\x3c/div\x3e\r\n                \x3cinput type\x3d"text" data-dojo-attach-point\x3d"_outputLayerContainer"\x3e\r\n                \x3cdiv data-dojo-attach-point\x3d"_folderSelectorContainer"\x3e\x3c/div\x3e\r\n                \x3cdiv tabindex\x3d"0" role\x3d"button" class\x3d"${_css.stopsButtonClass} esriSaveButton esriDisabledDirectionsButton" data-dojo-attach-point\x3d"_saveButton" data-blur-on-click\x3d"true"\x3e${_i18n.widgets.directions.save}\x3c/div\x3e\r\n                \x3cdiv tabindex\x3d"0" role\x3d"button" class\x3d"esriLinkButton esriSaveAsButton" data-dojo-attach-point\x3d"_saveAsButton" data-blur-on-click\x3d"true"\x3e${_i18n.widgets.directions.saveAs}\x3c/div\x3e\r\n            \x3c/div\x3e\r\n    \t\x3c/div\x3e\r\n    \t\x3cdiv class\x3d"${_css.clearClass}"\x3e\x3c/div\x3e\r\n    \t\x3cdiv data-dojo-attach-point\x3d"_msgNode" role\x3d"presentation"\x3e\x3c/div\x3e\r\n    \t\x3cdiv class\x3d"${_css.resultsContainerClass}" role\x3d"presentation"\x3e\r\n        \t\x3cdiv class\x3d"${_css.routesContainerClass}" data-dojo-attach-point\x3d"_resultsNode" role\x3d"presentation"\x3e\x3c/div\x3e\r\n    \t\x3c/div\x3e\r\n    \x3c/div\x3e\r\n\x3c/div\x3e',
        'url:arcgisonline/sharing/dijit/templates/OrganizationSetup.html': '\x3cdiv data-dojo-type\x3d"dijit/layout/ContentPane" data-dojo-attach-point\x3d"containerNode"\x3e\r\n  \x3cdiv  class\x3d"esriFloatLeading" style\x3d"width:780px; clear:both; padding-left:10px;"\x3e${i18n.thankYou}\x3c/div\x3e\r\n\r\n  \x3cdiv style\x3d"width:780px; clear:both; margin-top:2em; padding-left:10px;" class\x3d"esriFloatLeading"\x3e\r\n\r\n    \x3ctable\x3e\r\n      \x3ctbody\x3e\r\n        \x3ctr\x3e\r\n          \x3ctd colspan\x3d"2" class\x3d"valignTop"\x3e\x3cstrong\x3e${i18n.orgName}\x3c/strong\x3e\x3cbr\x3e\x3cbr\x3e\x3c/td\x3e\r\n        \x3c/tr\x3e\r\n        \x3ctr\x3e\r\n          \x3ctd class\x3d"titleColumn"\x3e\r\n            \x3cimg data-dojo-attach-point\x3d"_orgNameImg" src\x3d"" alt\x3d"${i18n.orgName}"\x3e\r\n          \x3c/td\x3e\r\n          \x3ctd class\x3d"valignTop"\x3e\r\n            ${i18n.orgNameDesc}\r\n            \x3cbr\x3e\x3cbr\x3e\r\n            \x3clabel\x3e\r\n              \x3cinput class\x3d"orgTextBox" data-dojo-attach-point\x3d"_nameTextBox" data-dojo-type\x3d"dijit/form/TextBox" type\x3d"text" data-dojo-props\x3d"trim:true"\x3e\r\n            \x3c/label\x3e\r\n          \x3c/td\x3e\r\n        \x3c/tr\x3e\r\n        \x3ctr\x3e\x3ctd colspan\x3d"2"\x3e\x3cdiv class\x3d"spacerRow"\x3e\x26nbsp;\x3c/div\x3e\x3c/td\x3e\x3c/tr\x3e\r\n        \x3ctr\x3e\r\n            \x3ctd colspan\x3d"2" class\x3d"valignTop"\x3e\x3cstrong\x3e${i18n.orgAbbr}\x3c/strong\x3e\x3cbr\x3e\x3cbr\x3e\x3c/td\x3e\r\n        \x3c/tr\x3e\r\n        \x3ctr\x3e\r\n          \x3ctd class\x3d"titleColumn"\x3e\r\n            \x3cimg data-dojo-attach-point\x3d"_orgAbbrImg" src\x3d"" alt\x3d"${i18n.orgAbbr}"\x3e\r\n          \x3c/td\x3e\r\n          \x3ctd class\x3d"valignTop"\x3e\r\n            ${!i18n.orgAbbrDesc}\r\n            \x3cbr\x3e\x3cbr\x3e\r\n            \x3cinput class\x3d"orgTextBox" id\x3d"urlKeyTextBox" data-dojo-attach-point\x3d"_urlKeyTextBox" data-dojo-type\x3d"dijit/form/TextBox" type\x3d"text" data-dojo-props\x3d"trim:true"\x3e\r\n            \x3clabel for\x3d"urlKeyTextBox" data-dojo-attach-point\x3d"_urlKeyStatusLabel" style\x3d"vertical-align:middle; width:125px;"\x3e\x3c/label\x3e\r\n            \x3cbr\x3e\x3cbr\x3e\r\n            ${i18n.sampleOrgUrl}\r\n            \x3cbr\x3e\r\n            \x3cdiv data-dojo-attach-point\x3d"_sampleUrlTextBox"\x3e\x3c/div\x3e\r\n          \x3c/td\x3e\r\n        \x3c/tr\x3e\r\n        \x3ctr\x3e\x3ctd colspan\x3d"2"\x3e\x3cdiv class\x3d"spacerRow"\x3e\x26nbsp;\x3c/div\x3e\x3c/td\x3e\x3c/tr\x3e\r\n        \x3ctr\x3e\r\n          \x3ctd colspan\x3d"2" class\x3d"valignTop"\x3e\x3cstrong\x3e${i18n.languageSetting}\x3c/strong\x3e\x3cbr\x3e\x3cbr\x3e\x3c/td\x3e\r\n        \x3c/tr\x3e\r\n        \x3ctr\x3e\r\n          \x3ctd class\x3d"titleColumn"\x3e\r\n            \x3cimg data-dojo-attach-point\x3d"_languageImg" src\x3d"" alt\x3d"${i18n.languageSetting}"\x3e\r\n          \x3c/td\x3e\r\n          \x3ctd class\x3d"valignTop"\x3e\r\n            ${i18n.languageDesc} ${i18n.browserDefaultAGOL}\r\n            \x3cbr\x3e\x3cbr\x3e\r\n            \x3clabel\x3e${i18n.languageLabel} \x3cselect class\x3d"orgComboBox" data-dojo-attach-point\x3d"_languageSelect" data-dojo-type\x3d"dijit/form/FilteringSelect" data-dojo-props\x3d"type:\'select\'"\x3e\x3c/select\x3e\x3c/label\x3e\r\n\r\n            \x3cdiv class\x3d"hide" data-dojo-attach-point\x3d"_languageFormatContainer"\x3e\r\n              \x3cbr\x3e\r\n              \x3clabel\x3e\r\n                \x3cstrong\x3e${i18n.numDateFormat}\x3c/strong\x3e \x3cspan id\x3d"languageFormatTooltip"\x3e\x3ca data-dojo-attach-point\x3d"_languageFormatHelpLink" href\x3d"" target\x3d"_blank"\x3e\x3cimg class\x3d"help-icon" data-dojo-attach-point\x3d"_languageFormatImg" src\x3d"" alt\x3d"${i18n.learnNumDateFormat}"\x3e\x3c/a\x3e\x3c/span\x3e\r\n                \x3cbr\x3e\r\n                \x3cselect class\x3d"orgComboBox leader-half" data-dojo-attach-point\x3d"_languageFormatSelect" data-dojo-type\x3d"dijit/form/FilteringSelect" data-dojo-props\x3d"type:\'select\',required:false"\x3e\x3c/select\x3e\r\n              \x3c/label\x3e\r\n            \x3c/div\x3e\r\n          \x3c/td\x3e\r\n        \x3c/tr\x3e\r\n        \x3ctr\x3e\x3ctd colspan\x3d"2"\x3e\x3cdiv class\x3d"spacerRow"\x3e\x26nbsp;\x3c/div\x3e\x3c/td\x3e\x3c/tr\x3e\r\n        \x3ctr\x3e\r\n          \x3ctd colspan\x3d"2" class\x3d"valignTop"\x3e\x3cstrong\x3e${i18n.regionSetting}\x3c/strong\x3e\x3cbr\x3e\x3cbr\x3e\x3c/td\x3e\r\n        \x3c/tr\x3e\r\n        \x3ctr\x3e\r\n          \x3ctd class\x3d"titleColumn"\x3e\r\n            \x3cimg data-dojo-attach-point\x3d"_regionImg" src\x3d"" alt\x3d"${i18n.regionSetting}"\x3e\r\n          \x3c/td\x3e\r\n          \x3ctd class\x3d"valignTop"\x3e\r\n            ${!i18n.regionDesc}\r\n            \x3cbr\x3e\x3cbr\x3e\r\n            \x3clabel for\x3d"regionSelect"\x3e${i18n.regionLabel}\x3c/label\x3e \x3cselect id\x3d"regionSelect" name\x3d"regionSelect" class\x3d"orgComboBox" data-dojo-attach-point\x3d"_regionSelect" data-dojo-type\x3d"dijit/form/FilteringSelect" data-dojo-props\x3d"type:\'select\'"\x3e\x3c/select\x3e\r\n          \x3c/td\x3e\r\n        \x3c/tr\x3e\r\n        \x3ctr\x3e\x3ctd colspan\x3d"2"\x3e\x3cdiv class\x3d"spacerRow"\x3e\x26nbsp;\x3c/div\x3e\x3c/td\x3e\x3c/tr\x3e\r\n        \x3ctr class\x3d"hide"\x3e\r\n          \x3ctd colspan\x3d"2" class\x3d"valignTop"\x3e\x3cstrong\x3e${i18n.security}\x3c/strong\x3e\x3cbr\x3e\x3cbr\x3e\x3c/td\x3e\r\n        \x3c/tr\x3e\r\n        \x3ctr class\x3d"hide"\x3e\r\n          \x3ctd class\x3d"titleColumn"\x3e\r\n            \x3cimg data-dojo-attach-point\x3d"_securityImg" src\x3d"" alt\x3d"${i18n.security}"\x3e\r\n          \x3c/td\x3e\r\n          \x3ctd class\x3d"valignTop"\x3e\r\n            \x3cinput id\x3d"sslCheckBox" name\x3d"sslCheckBox" data-dojo-attach-point\x3d"_sslCheckBox" data-dojo-type\x3d"dijit/form/CheckBox" type\x3d"checkBox"\x3e\r\n            \x3clabel for\x3d"sslCheckBox" data-dojo-attach-point\x3d"_sslCheckBoxLabel"\x3e\x3c/label\x3e\r\n          \x3c/td\x3e\r\n        \x3c/tr\x3e\r\n        \x3ctr\x3e\x3ctd colspan\x3d"2"\x3e\x3cdiv class\x3d"spacerRow"\x3e\x26nbsp;\x3c/div\x3e\x3c/td\x3e\x3c/tr\x3e\r\n        \x3ctr\x3e\r\n            \x3ctd colspan\x3d"2" class\x3d"valignTop"\x3e\x3cstrong\x3e${i18n.link}\x3c/strong\x3e\x3cbr\x3e\x3cbr\x3e\x3c/td\x3e\r\n        \x3c/tr\x3e\r\n        \x3ctr\x3e\r\n            \x3ctd class\x3d"titleColumn"\x3e\r\n                \x3cimg data-dojo-attach-point\x3d"_linkImg" src\x3d"" alt\x3d"${i18n.link}"\x3e\r\n            \x3c/td\x3e\r\n            \x3ctd class\x3d"valignTop"\x3e\r\n              \x3clabel\x3e${i18n.linkDesc}\x3c/label\x3e\x3cbr\x3e\x3cbr\x3e\r\n              \x3ctable\x3e\r\n                \x3ctbody\x3e\r\n                  \x3ctr\x3e\r\n                    \x3ctd class\x3d"valignTop" style\x3d"width:15em;"\x3e\r\n                      \x3cinput data-dojo-attach-point\x3d"_linkCheckBox" id\x3d"linkCheckBox" data-dojo-type\x3d"dijit/form/CheckBox" type\x3d"checkbox"\x3e\r\n                      \x3clabel data-dojo-attach-point\x3d"_linkTooltip" id\x3d"linkTooltip" for\x3d"linkCheckBox"\x3e\x3c/label\x3e\r\n                    \x3c/td\x3e\r\n                    \x3ctd class\x3d"valignTop"\x3e\r\n                      \x3clabel\x3e\r\n                        \x3cinput class\x3d"orgTextBox" data-dojo-attach-point\x3d"_link" data-dojo-type\x3d"dijit/form/TextBox" data-dojo-props\x3d"trim:true" type\x3d"text" style\x3d"width:25em;"\x3e\x3c/div\x3e\r\n                      \x3c/label\x3e\r\n                    \x3c/td\x3e\r\n                  \x3c/tr\x3e\r\n                \x3c/tbody\x3e\r\n              \x3c/table\x3e\r\n            \x3c/td\x3e\r\n        \x3c/tr\x3e\r\n        \x3ctr\x3e\x3ctd colspan\x3d"2"\x3e\x3cdiv class\x3d"spacerRow"\x3e\x26nbsp;\x3c/div\x3e\x3c/td\x3e\x3c/tr\x3e\r\n        \x3ctr\x3e\r\n            \x3ctd colspan\x3d"2" class\x3d"valignTop"\x3e\x3cstrong\x3e${i18n.usageTrackingSetting}\x3c/strong\x3e\x3cbr\x3e\x3cbr\x3e\x3c/td\x3e\r\n        \x3c/tr\x3e\r\n        \x3ctr\x3e\r\n            \x3ctd class\x3d"titleColumn"\x3e\r\n                \x3cimg data-dojo-attach-point\x3d"_usageTrackingImg" src\x3d"" alt\x3d"${i18n.usageTrackingSetting}"\x3e\r\n            \x3c/td\x3e\r\n            \x3ctd class\x3d"valignTop"\x3e\r\n              \x3clabel\x3e${i18n.usageTrackingDesc}\x3c/label\x3e\x3cbr\x3e\x3cbr\x3e\r\n              \x3ctable\x3e\r\n                \x3ctbody\x3e\r\n                  \x3ctr\x3e\r\n                    \x3ctd class\x3d"valignTop white-space-no-wrap" style\x3d"width:15em;"\x3e\r\n                      \x3clabel\x3e\r\n                        \x3cinput data-dojo-attach-point\x3d"_usageTrackingCheckBox" data-dojo-type\x3d"dijit/form/CheckBox" type\x3d"checkbox"\x3e\r\n                        ${i18n.allowArcgisOnlineToCollectInfo}\r\n                      \x3c/label\x3e\r\n                    \x3c/td\x3e\r\n                  \x3c/tr\x3e\r\n                \x3c/tbody\x3e\r\n              \x3c/table\x3e\r\n            \x3c/td\x3e\r\n        \x3c/tr\x3e\r\n        \x3ctr\x3e\x3ctd colspan\x3d"2"\x3e\x3cdiv class\x3d"spacerRow"\x3e\x26nbsp;\x3c/div\x3e\x3c/td\x3e\x3c/tr\x3e\r\n        \x3ctr\x3e\r\n          \x3ctd colspan\x3d"2"\x3e\r\n            \x3cdiv class\x3d"esriFloatLeading"\x3e\r\n              \x3cbutton data-dojo-attach-point\x3d"_saveBtn" data-dojo-type\x3d"dijit/form/Button" type\x3d"button" class\x3d"calcite blue" data-dojo-props\x3d"iconClass:\'esriSaveIcon\'"\x3e${i18n.saveContinue}\x3c/button\x3e\r\n              \x3cbutton data-dojo-attach-point\x3d"_signOutBtn" data-dojo-type\x3d"dijit/form/Button" type\x3d"button" class\x3d"calcite transparent" data-dojo-props\x3d"iconClass:\'esriOpenIcon\'"\x3e${i18n.signOut}\x3c/button\x3e\r\n            \x3c/div\x3e\r\n          \x3c/td\x3e\r\n        \x3c/tr\x3e\r\n      \x3c/tbody\x3e\r\n    \x3c/table\x3e\r\n  \x3c/div\x3e\r\n\r\n\x3c/div\x3e\r\n',
        'url:arcgisonline/pages/dijit/InfoTooltip/templates/InfoTooltip.html': '\x3cdiv class\x3d"inline-block"\x3e\r\n    \x3cbutton class\x3d"btn-link info-icon ${buttonClasses}" aria-label\x3d"${buttonAriaLabel}" data-dojo-attach-point\x3d"_infoButton"\x3e\r\n        ${!icons.inline.info.16}\r\n    \x3c/button\x3e\r\n    \x3cdiv data-dojo-attach-point\x3d"_popover" class\x3d"text-left"\x3e\r\n        \x3cspan tabindex\x3d"0" data-dojo-attach-point\x3d"_closeIcon" class\x3d"info-tooltip__close popover-close icon-ui-close" tab-index\x3d"0" aria-label\x3d"${i18n.common.close}"\x3e\x3c/span\x3e\r\n        \x3cdiv class\x3d"popover-title"\x3e${title}\x3c/div\x3e\r\n        \x3cdiv class\x3d"popover-text leader-half" data-dojo-attach-point\x3d"_popoverContent"\x3e\x3c/div\x3e\r\n    \x3c/div\x3e\r\n\x3c/div\x3e\r\n',
        'url:arcgisonline/pages/dijit/InviteMembers/templates/AppIconWithLabel.html': '\x3cdiv class\x3d"block flex flex-align-center leader-half ${cssClasses}"\x3e\r\n    \x3cdiv data-dojo-attach-point\x3d"_appIcon"\x3e\x3c/div\x3e\r\n    \x3cdiv class\x3d"margin-left-half ${textCssClasses}" data-dojo-attach-point\x3d"_titleLabel"\x3e\x3c/div\x3e\r\n\x3c/div\x3e\r\n',
        'url:arcgisonline/pages/dijit/InviteMembers/templates/AppIcon.html': '\x3cdiv class\x3d"org-member-card__license-icon ${cssClasses}"\x3e\r\n    \x3cdiv class\x3d"app-icon__add-on-badge hide" data-dojo-attach-point\x3d"addonBadge"\x3e\x3c/div\x3e\r\n    \x3cimg data-dojo-attach-point\x3d"_img" alt\x3d""\x3e\r\n    \x3cdiv class\x3d"org-member-card__license-abbr hide" data-dojo-attach-point\x3d"_abbr"\x3e\x3c/div\x3e\r\n\x3c/div\x3e\r\n',
        'url:arcgisonline/pages/organization/widgets/templates/licenses/LicenseTypeCard.html': '\x3cdiv class\x3d"license-type-card trailer-half"\x3e\r\n  \x3cdiv data-dojo-attach-point\x3d"accordionSection" class\x3d"license-type-card__top license-type-card--no-divider accordion-section"\x3e\r\n    \x3cdiv class\x3d"flex flex-wrap padding-left-0 license-type-card__top-row accordion-title"\x3e\r\n      ${!icons.chevron-down.24}\r\n      \x3cdiv class\x3d"flex-1" data-dojo-attach-point\x3d"_userTypeName"\x3e\x3c/div\x3e\r\n      \x3cdiv class\x3d"js-licenses-available"\x3e\x3c/div\x3e\r\n      \x3cdiv class\x3d"js-available-text"\x3e\x3c/div\x3e\r\n    \x3c/div\x3e\r\n    \x3cdiv class\x3d"accordion-content"\x3e\r\n      \x3cdiv class\x3d"flex flex-wrap trailer-1 license-type-card__toggle-btns"\x3e\r\n        \x3cbutton class\x3d"margin-right-2 license-type-card__expand-link btn-link btn-link-darker-gray"\r\n          data-dojo-attach-point\x3d"_includedLicensesBtn"\x3e\r\n          \x3cspan class\x3d"license-type-card__count-label"\x3e${i18n.myOrganization.licensesTab.includedLicenses}\x3c/span\x3e\r\n        \x3c/button\x3e\r\n        \x3cbutton class\x3d"margin-right-2 license-type-card__expand-link btn-link btn-link-darker-gray"\r\n          data-dojo-attach-point\x3d"_compatibleLicensesBtn"\x3e\r\n          \x3cspan class\x3d"license-type-card__count-label"\x3e${i18n.myOrganization.licensesTab.compatibleLicenses}\x3c/span\x3e\r\n        \x3c/button\x3e\r\n        \x3cbutton class\x3d"license-type-card__expand-link btn-link btn-link-darker-gray" data-dojo-attach-point\x3d"_compatibleRolesBtn"\x3e\r\n          \x3cspan class\x3d"license-type-card__count-label"\x3e${i18n.myOrganization.licensesTab.compatibleRoles}\x3c/span\x3e\r\n        \x3c/button\x3e\r\n        \x3cdiv class\x3d"flex-1 user-type-card__expires-container"\x3e\r\n          \x3cdiv data-dojo-attach-point\x3d"_expiresBadge"\x3e\x3c/div\x3e\r\n        \x3c/div\x3e\r\n      \x3c/div\x3e\r\n      \x3cdiv class\x3d"license-type-card__list-container"\x3e\r\n        \x3cdiv data-dojo-attach-point\x3d"_includedLicenses" class\x3d"hide js-bottom-section"\x3e\r\n          \x3cdiv class\x3d"hide trailer-1" data-dojo-attach-point\x3d"proContainer"\x3e\r\n            \x3ch2 class\x3d"font-size-0 avenir-bold trailer-0"\x3e${i18n.myOrganization.licensesTab.arcgisPro}\x3c/h2\x3e\r\n            \x3cdiv class\x3d"block-group block-group-3-up tablet-block-group-1-up phone-block-group-1-up" data-dojo-attach-point\x3d"includedPro"\x3e\x3c/div\x3e\r\n          \x3c/div\x3e\r\n          \x3cdiv class\x3d"hide trailer-1" data-dojo-attach-point\x3d"appBundlesContainer"\x3e\r\n            \x3ch2 class\x3d"font-size-0 avenir-bold trailer-0"\x3e${i18n.myOrganization.licensesTab.appBundles}\x3c/h2\x3e\r\n            \x3cdiv class\x3d"leader-half" data-dojo-attach-point\x3d"_includedAppBundles"\x3e\x3c/div\x3e\r\n          \x3c/div\x3e\r\n          \x3cdiv class\x3d"hide trailer-1" data-dojo-attach-point\x3d"appsContainer"\x3e\r\n            \x3ch2 class\x3d"font-size-0 avenir-bold trailer-0"\x3e${i18n.myOrganization.licensesTab.applications}\x3c/h2\x3e\r\n            \x3cdiv class\x3d"block-group block-group-3-up tablet-block-group-1-up phone-block-group-1-up" data-dojo-attach-point\x3d"includedApps"\x3e\x3c/div\x3e\r\n          \x3c/div\x3e\r\n          \x3cdiv class\x3d"hide trailer-1" data-dojo-attach-point\x3d"viewOnlyContainer"\x3e\r\n            \x3ch2 class\x3d"font-size-0 trailer-0"\x3e${i18n.myOrganization.licensesTab.viewOnly}\x3c/h2\x3e\r\n            \x3cdiv class\x3d"block-group block-group-3-up tablet-block-group-1-up phone-block-group-1-up" data-dojo-attach-point\x3d"includedViewOnly"\x3e\x3c/div\x3e\r\n          \x3c/div\x3e\r\n          \x3cdiv class\x3d"hide trailer-1" data-dojo-attach-point\x3d"extensionsContainer"\x3e\r\n            \x3ch2 class\x3d"font-size-0 avenir-bold trailer-0"\x3e${i18n.myOrganization.licensesTab.userTypeExtensions}\x3c/h2\x3e\r\n            \x3cdiv class\x3d"block-group block-group-3-up tablet-block-group-1-up phone-block-group-1-up" data-dojo-attach-point\x3d"includedExtensions"\x3e\x3c/div\x3e\r\n          \x3c/div\x3e\r\n          \x3cdiv class\x3d"hide trailer-1" data-dojo-attach-point\x3d"runtimeContainer"\x3e\r\n            \x3ch2 class\x3d"font-size-0 avenir-bold trailer-0"\x3e${i18n.myOrganization.inviteMembers.arcgisRuntime}\x3c/h2\x3e\r\n            \x3cdiv class\x3d"block-group block-group-3-up tablet-block-group-1-up phone-block-group-1-up" data-dojo-attach-point\x3d"includedRuntime"\x3e\x3c/div\x3e\r\n          \x3c/div\x3e\r\n        \x3c/div\x3e\r\n        \x3cdiv data-dojo-attach-point\x3d"_compatibleLicensesEl" class\x3d"hide js-bottom-section block-group block-group-3-up tablet-block-group-1-up phone-block-group-1-up license-type-card__expanded-section"\x3e\x3c/div\x3e\r\n        \x3cdiv data-dojo-attach-point\x3d"_compatibleRolesEl" class\x3d"hide js-bottom-section block-group block-group-3-up tablet-block-group-1-up phone-block-group-1-up license-type-card__expanded-section"\x3e\x3c/div\x3e\r\n      \x3c/div\x3e\r\n    \x3c/div\x3e\r\n  \x3c/div\x3e\r\n  \x3c!-- \x3cdiv class\x3d"hide license-type-card__included-apps padding-leader-half padding-trailer-half" data-dojo-attach-point\x3d"_apps"\x3e\r\n    \x3cdiv class\x3d"trailer-quarter"\x3e${i18n.myOrganization.licensesTab.includedApps}\x3c/div\x3e\r\n    \x3cdiv data-dojo-attach-point\x3d"_appsContainer" class\x3d"block-group block-group-2-up tablet-block-group-1-up phone-block-group-1-up"\x3e\x3c/div\x3e\r\n  \x3c/div\x3e --\x3e\r\n\x3c/div\x3e\r\n',
        'url:arcgisonline/pages/organization/widgets/templates/_licensesAvailable.html': '\x3cdiv\x3e\r\n    \x3cdiv class\x3d"flex ${cssClasses}" data-dojo-attach-point\x3d"_topSection"\x3e\r\n        \x3cdiv data-dojo-attach-point\x3d"_assignedText" class\x3d"text-ellipsis ${assignedTextCss} licenses-available__assigned"\x3e\x3c/div\x3e\r\n        \x3cdiv class\x3d"js-progress-bar"\x3e\x3c/div\x3e\r\n        \x3cdiv data-dojo-attach-point\x3d"_highContrastWarning" class\x3d"hide licenses-available__high-contrast-warning"\x3e${!icons.inline.exclamation-mark-triangle.16}\x3c/div\x3e\r\n        \x3cdiv data-dojo-attach-point\x3d"_totalText" class\x3d"text-ellipsis flex flex-wrap licenses-available__total ${totalTextCss}"\x3e\x3c/div\x3e\r\n    \x3c/div\x3e\r\n    \x3cdiv class\x3d"only-on-mobile" data-dojo-attach-point\x3d"_mobileProgressContainer"\x3e\x3c/div\x3e\r\n\x3c/div\x3e\r\n',
        'url:arcgisonline/pages/organization/widgets/templates/_progressBar.html': '\x3cdiv class\x3d"${cssClasses}"\x3e\r\n    \x3cdiv class\x3d"progress-bar overview-progress-bar"\x3e\r\n        \x3cdiv data-dojo-attach-point\x3d"_bar" class\x3d"progress-bar-fill"\x3e\x3c/div\x3e\r\n    \x3c/div\x3e\r\n    \x3cdiv class\x3d"progress-bar__hover-label hide" data-dojo-attach-point\x3d"hoverLabel"\x3e\x3c/div\x3e\r\n\x3c/div\x3e\r\n',
        'url:arcgisonline/pages/organization/widgets/templates/licenses/UserTypeName.html': '\x3cdiv class\x3d"${cssClasses} font-size-1"\x3e\r\n  ${userType.name}\r\n\x3c/div\x3e\r\n',
        'url:arcgisonline/pages/organization/widgets/templates/licenses/UserTypeAppBundle.html': '\x3cdiv class\x3d"user-type-app-bundle"\x3e\r\n    \x3cdiv class\x3d"right margin-right-1 leader-half hide" data-dojo-attach-point\x3d"_viewOnly"\x3e\r\n        ${!icons.inline.info.16} ${i18n.myOrganization.licensesTab.viewOnlyAccess}\r\n    \x3c/div\x3e\r\n    \x3cdiv class\x3d"user-type-app-bundle__title" data-dojo-attach-point\x3d"_titleContainer"\x3e\x3c/div\x3e\r\n    \x3cdiv class\x3d"margin-left-2 leader-half block-group block-group-${numberOfColumns}-up tablet-block-group-2-up phone-block-group-1-up" data-dojo-attach-point\x3d"_appsContainer"\x3e\x3c/div\x3e\r\n\x3c/div\x3e',
        'url:arcgisonline/pages/organization/widgets/templates/ExpirationBadge.html': '\x3cdiv\x3e\r\n    \x3cbutton class\x3d"btn-link btn-link-darker-gray font-size--2 license-expiration-badge" data-dojo-attach-point\x3d"_expiresBadge"\x3e\x3c/button\x3e\r\n    \x3cdiv class\x3d"js-expiration-tooltip"\x3e\x3c/div\x3e\r\n\x3c/div\x3e',
        'url:arcgisonline/pages/organization/widgets/templates/ExpirationTooltip.html': '\x3cdiv class\x3d"text-left"\x3e\r\n    \x3cspan tabindex\x3d"0" data-dojo-attach-point\x3d"_closeIcon" class\x3d"popover-close expiration-tooltip__close-icon" tab-index\x3d"0" aria-label\x3d"${i18n.common.close}"\x3e${!icons.x.16}\x3c/span\x3e\r\n    \x3cdiv class\x3d"popover-text" data-dojo-attach-point\x3d"_content"\x3e\x3c/div\x3e\r\n\x3c/div\x3e',
        'url:arcgisonline/pages/organization/widgets/templates/licenses/MobileUserTypeOverlay.html': '\x3cdiv class\x3d"js-accordion mobile-user-type__body"\x3e\r\n  \x3csection class\x3d"accordion-section is-active"\x3e\r\n    \x3cbutton class\x3d"accordion-title text-left btn-link btn-link-darker-gray" tabindex\x3d"0"\x3e${chevronDown}${i18n.myOrganization.licensesTab.includedLicenses}\x3c/button\x3e\r\n    \x3cdiv class\x3d"accordion-content mobile-user-type__list js-included-apps"\x3e\x3c/div\x3e\r\n  \x3c/section\x3e\r\n  \x3csection class\x3d"accordion-section is-active"\x3e\r\n    \x3cbutton class\x3d"accordion-title text-left btn-link btn-link-darker-gray" tabindex\x3d"0"\x3e${chevronDown}${i18n.myOrganization.licensesTab.compatibleLicenses}\x3c/button\x3e\r\n    \x3cdiv class\x3d"accordion-content mobile-user-type__list js-compatible-apps"\x3e\x3c/div\x3e\r\n  \x3c/section\x3e\r\n  \x3csection class\x3d"accordion-section is-active"\x3e\r\n    \x3cbutton class\x3d"accordion-title text-left btn-link btn-link-darker-gray" tabindex\x3d"0"\x3e${chevronDown}${i18n.myOrganization.licensesTab.compatibleRoles}\x3c/button\x3e\r\n    \x3cdiv class\x3d"accordion-content mobile-user-type__list js-compatible-roles"\x3e\x3c/div\x3e\r\n  \x3c/section\x3e\r\n\x3c/div\x3e\r\n',
        'url:arcgisonline/pages/organization/widgets/templates/licenses/roleItem.html': '\x3cdiv class\x3d"block flex leader-half"\x3e\r\n  \x3cspan class\x3d"inline-block margin-right-quarter js-role-name"\x3e${roleName}\x3c/span\x3e\r\n  \x3cbutton class\x3d"role-item-info btn-link btn-link-darker-gray" data-role-id\x3d"${roleId}"\x3e${infoIcon}\x3c/button\x3e\r\n\x3c/div\x3e\r\n',
        'url:arcgisonline/pages/dijit/RoleSummaryDlg/RoleSummaryDlg.html': '\x3cdiv\x3e\r\n    \x3cstrong\x3e${i18n.customRoles.descriptionLabel}\x3c/strong\x3e\r\n    \x3cdiv data-dojo-attach-point\x3d"_content"\x3e\r\n        \x3cp class\x3d"trailer-half" data-dojo-attach-point\x3d"_description"\x3e\x3c/p\x3e\r\n        \x3cstrong class\x3d"hide" data-dojo-attach-point\x3d"privilegesTitle"\x3e${i18n.customRoles.rolePrivilegesLabel}\x3c/strong\x3e\r\n        \x3cul class\x3d"hide" data-dojo-attach-point\x3d"_privilegesList"\x3e\x3c/ul\x3e\r\n        \x3cp class\x3d"hide trailer-0" data-dojo-attach-point\x3d"_extraInfoContainer"\x3e\x3cem data-dojo-attach-point\x3d"_extraInfo"\x3e\x3c/em\x3e\x3c/p\x3e\r\n        \x3cp class\x3d"hide trailer-0" data-dojo-attach-point\x3d"_coreRole"\x3e${i18n.customRoles.coreRole}\x3c/p\x3e\r\n    \x3c/div\x3e\r\n\x3c/div\x3e\r\n',
        'url:arcgisonline/pages/dijit/InviteMembers/templates/MobileError.html': '\x3cdiv\x3e\r\n    \x3cdiv class\x3d"invite-members__mobile-error-mask"\x3e\x3c/div\x3e\r\n    \x3cdiv class\x3d"invite-members__mobile-error"\x3e\r\n        \x3cdiv class\x3d"invite-members__mobile-error-body flex-column"\x3e\r\n            \x3cdiv class\x3d"mobile-alert__top-section"\x3e\r\n                \x3cdiv class\x3d"flex mobile-alert__heading" data-dojo-attach-point\x3d"_header"\x3e\r\n                    \x3cdiv class\x3d"flex-1 font-size-2"\x3e\r\n                        \x3cspan class\x3d"hide mobile-alert__warning-icon" data-dojo-attach-point\x3d"_warningIcon"\x3e${!icons.inline.exclamation-mark-circle.16}\x3c/span\x3e\r\n                        \x3cspan data-dojo-attach-point\x3d"_title"\x3e${title}\x3c/span\x3e\r\n                    \x3c/div\x3e\r\n                    \x3cbutton class\x3d"btn btn-link btn-link-darker-gray" data-dojo-attach-point\x3d"_closeButton" \x3e${!icons.x.24}\x3c/button\x3e\r\n                \x3c/div\x3e\r\n                \x3cdiv class\x3d"invite-members__mobile-error-description" data-dojo-attach-point\x3d"_description"\x3e\r\n                    ${description}\r\n                \x3c/div\x3e\r\n            \x3c/div\x3e\r\n            \x3cdiv class\x3d"mobile-alert__action-bar" data-dojo-attach-point\x3d"_actionBar"\x3e\r\n                \x3cbutton class\x3d"btn-link mobile-alert__btn--red" data-dojo-attach-point\x3d"_confirmButton"\x3e${buttonText}\x3c/button\x3e\r\n                \x3cbutton class\x3d"btn-link btn-link-darker-gray leader-half" data-dojo-attach-point\x3d"_cancelButton"\x3e${i18n.myOrganization.inviteMembers.cancel}\x3c/button\x3e\r\n            \x3c/div\x3e\r\n        \x3c/div\x3e\r\n    \x3c/div\x3e\r\n\x3c/div\x3e\r\n',
        'url:arcgisonline/pages/organization/widgets/templates/RoleInfo.html': '\x3cdiv class\x3d"block flex leader-half"\x3e\r\n  \x3cspan class\x3d"inline-block margin-right-quarter text-ellipsis"\x3e${role.name}\x3c/span\x3e\r\n  \x3cbutton class\x3d"role-item-info btn-link btn-link-darker-gray info-icon" data-dojo-attach-point\x3d"infoBtn"\x3e${!icons.info.16}\x3c/button\x3e\r\n\x3c/div\x3e\r\n',
        'url:arcgisonline/sharing/dijit/templates/UserProfile.html': '\r\n\x3cdiv data-dojo-type\x3d"dijit/layout/ContentPane" data-dojo-attach-point\x3d"containerNode" class\x3d"${baseClass}"\x3e\r\n  \x3cdiv id\x3d"editMenu" data-dojo-attach-point\x3d"editMenu" class\x3d"ownerOnly column-24 leader-1 topButtonBar"\x3e\r\n    \x3cdiv id\x3d"profileEditButton" class\x3d"dijitInline calcite blue readOnly"\r\n         data-dojo-type\x3d"dijit/form/Button" data-dojo-attach-event\x3d"onClick:_startEdit"\r\n         data-dojo-props\x3d"type:\'button\'"\x3e${i18n.editMyProfile}\x3c/div\x3e\r\n    \x3cdiv id\x3d"profileSaveButton" class\x3d"dijitInline calcite blue save editOnlyBtn" style\x3d"display:none;"\r\n         data-dojo-type\x3d"dijit/form/Button" data-dojo-attach-event\x3d"onClick:_saveEdit"\r\n         data-dojo-props\x3d"type:\'button\'"\x3e${i18n.save}\x3c/div\x3e\r\n    \x3cdiv id\x3d"profileCancelButton" class\x3d"dijitInline calcite cancel transparent editOnlyBtn" style\x3d"display:none;"\r\n         data-dojo-type\x3d"dijit/form/Button" data-dojo-attach-event\x3d"onClick:_cancelEdit"\r\n         data-dojo-props\x3d"type:\'button\'"\x3e${i18n.cancel}\x3c/div\x3e\r\n  \x3c/div\x3e\r\n  \x3cdiv class\x3d"userDetails"\x3e\r\n    \x3ch2 class\x3d"profileTitle column-24"\x3e\r\n      \x3cspan data-dojo-attach-point\x3d"_profileTitle"\x3e\x3c/span\x3e\r\n    \x3c/h2\x3e\r\n    \x3cdiv class\x3d"clearfix"\x3e\r\n      \x3cdiv class\x3d"esriFloatLeading userThumbnailInfo column-4"\x3e\r\n        \x3cdiv class\x3d"profileThumbnailBox" data-dojo-attach-point\x3d"_thumbnailDiv"\x3e\r\n          \x3cimg data-dojo-attach-point\x3d"thumbnailImage" class\x3d"profileThumbnail" src\x3d"" alt\x3d""/\x3e\r\n          \x3cimg class\x3d"socialIcon" style\x3d"display:none;" src\x3d"" data-dojo-attach-point\x3d"_socialIcon"\x3e\r\n        \x3c/div\x3e\r\n        \x3cdiv class\x3d"editOnly thumbnailClick font-size--3"\x3e\r\n          ${i18n.clickThumbnail}\r\n        \x3c/div\x3e\r\n        \x3cdiv class\x3d"readOnly relatedLinks"\x3e\r\n          \x3cspan data-dojo-attach-point\x3d"relatedLinks" class\x3d"esriItemLinks"\x3e\x3c/span\x3e\r\n        \x3c/div\x3e\r\n      \x3c/div\x3e\r\n      \x3cdiv class\x3d"esriFloatLeading esriLeadingMargin3 userProfileColumn column-9 pre-1 post-0 tablet-column-11 tablet-leader-1"\x3e\r\n        \x3cdiv id\x3d"firstNameProperty" class\x3d"property"\x3e\r\n          \x3clabel for\x3d"first_name"\x3e\x3cstrong\x3e${i18n.firstNameLabel}\x3c/strong\x3e\x3c/label\x3e\x3cbr\x3e\r\n          \x3cspan class\x3d"readOnly" data-dojo-attach-point\x3d"_firstNameLabel"\x3e\x3c/span\x3e\r\n          \x3cspan data-dojo-attach-point\x3d"_firstNameInput" class\x3d"editOnly"\x3e\x3cinput id\x3d"first_name" name\x3d"first_name" data-dojo-attach-point\x3d"firstName" data-dojo-props\x3d"trim:\'true\'" data-dojo-type\x3d"dijit/form/TextBox"/\x3e\x3c/span\x3e\r\n        \x3c/div\x3e\r\n        \x3cdiv id\x3d"lastNameProperty" class\x3d"property"\x3e\r\n          \x3clabel for\x3d"last_name"\x3e\x3cstrong\x3e${i18n.lastNameLabel}\x3c/strong\x3e\x3c/label\x3e\x3cbr\x3e\r\n          \x3cspan class\x3d"readOnly" data-dojo-attach-point\x3d"_lastNameLabel"\x3e\x3c/span\x3e\r\n          \x3cspan data-dojo-attach-point\x3d"_lastNameInput" class\x3d"editOnly"\x3e\x3cinput id\x3d"last_name" name\x3d"last_name" data-dojo-attach-point\x3d"lastName" data-dojo-props\x3d"trim:\'true\'" data-dojo-type\x3d"dijit/form/TextBox"/\x3e\x3c/span\x3e\r\n        \x3c/div\x3e\r\n        \x3cdiv id\x3d"user_email_edit" class\x3d"ownerOnly"\x3e\r\n          \x3cdiv class\x3d"property readOnly" data-dojo-attach-point\x3d"_emailDisplayContainer"\x3e\r\n            \x3clabel\x3e\x3cstrong\x3e${i18n.changeEmailLabel}\x3c/strong\x3e\x3c/label\x3e\x3cbr\x3e\r\n            \x3cspan data-dojo-attach-point\x3d"_displayEmail"\x3e\x3c/span\x3e\r\n          \x3c/div\x3e\r\n          \x3cdiv class\x3d"editOnly" data-dojo-attach-point\x3d"_emailEditContainer"\x3e\r\n            \x3cdiv class\x3d"property"\x3e\r\n              \x3clabel for\x3d"newEmail"\x3e\x3cstrong\x3e${i18n.newEmailLabel}\x3c/strong\x3e\x3c/label\x3e\x3cbr\x3e\r\n              \x3cdiv id\x3d"newEmail" data-dojo-attach-point\x3d"newEmail"\r\n                  data-dojo-type\x3d"dijit/form/TextBox" data-dojo-props\x3d"trim:true, type:\'text\'"\x3e\x3c/div\x3e\r\n            \x3c/div\x3e\r\n            \x3cdiv class\x3d"property"\x3e\r\n              \x3clabel for\x3d"verifyNewEmail"\x3e\x3cstrong\x3e${i18n.verifyNewEmailLabel}\x3c/strong\x3e\x3c/label\x3e\x3cbr\x3e\r\n              \x3cdiv id\x3d"verifyNewEmail" data-dojo-attach-point\x3d"verifyNewEmail"\r\n                  data-dojo-type\x3d"dijit/form/TextBox" data-dojo-props\x3d"trim:true, type:\'text\'"\x3e\x3c/div\x3e\r\n            \x3c/div\x3e\r\n          \x3c/div\x3e\r\n        \x3c/div\x3e\r\n        \x3cdiv id\x3d"user_profile_edit" class\x3d"property"\x3e\r\n          \x3cdiv id\x3d"user_profile_edit_title"\x3e\x3c/div\x3e\x3cbr\x3e\r\n          \x3cspan class\x3d"esriItemLinks"\x3e\x3cspan data-dojo-attach-point\x3d"label_username"\x3e\x3c/span\x3e\x26nbsp;\x26nbsp;\x26nbsp;\x3ca style\x3d"display:none;" id\x3d"user_profile_edit_link" href\x3d"JavaScript:void(0);" data-dojo-attach-point\x3d"editUsernameLink" onclick\x3d"window.open(esriGeowConfig.account_edit);"\x3e${i18n.editLabel}\x3c/a\x3e\x3c/span\x3e\r\n        \x3c/div\x3e\r\n        \x3cdiv class\x3d"property bio-property"\x3e\r\n          \x3clabel for\x3d"profileBio"\x3e\x3cstrong\x3e${i18n.bioLabel}\x3c/strong\x3e\x3c/label\x3e\x3cbr\x3e\r\n          \x3cdiv class\x3d"esriItemLinks readOnly bioSpan" data-dojo-attach-point\x3d"label_description"\x3e\x3c/div\x3e\r\n          \x3ctextarea id\x3d"profileBio" class\x3d"editOnly bioBox" data-dojo-attach-point\x3d"descriptionTextArea" rows\x3d"" cols\x3d""\x3e\r\n          \x3c/textarea\x3e\r\n        \x3c/div\x3e\r\n        \x3cdiv id\x3d"preferences_div" class\x3d"readOnly property" style\x3d"display:none;"\x3e\r\n          \x3clabel\x3e\x3cstrong\x3e${i18n.preferencesLabel}\x3c/strong\x3e\x3c/label\x3e\x3cbr\x3e\r\n          \x3cspan class\x3d"esriItemLinks"\x3e\x3ca class\x3d"linkNoHref" data-dojo-attach-event\x3d"onClick:_openEsriPreferences"\x3e${i18n.preferencesLink}\x3c/a\x3e ${i18n.preferencesLinkDesc} \x3c/span\x3e\r\n        \x3c/div\x3e\r\n        \x3cdiv data-dojo-attach-point\x3d"_manageLinkedAccounts" class\x3d"property hide hide-if-embedded"\x3e\r\n          \x3clabel\x3e\x3cstrong\x3e${i18n.linkYourArcgisAccounts}\x3c/strong\x3e\x3c/label\x3e\x3cbr\x3e\r\n          \x3cspan class\x3d"esriItemLinks"\x3e\x3ca class\x3d"linkNoHref" data-dojo-attach-event\x3d"onClick:_openManageAccounts"\x3e${i18n.manageLinkedAccounts}\x3c/a\x3e\x3c/span\x3e\r\n        \x3c/div\x3e\r\n      \x3c/div\x3e\r\n      \x3cdiv class\x3d"esriFloatLeading esriLeadingMargin1 ownerOnly userProfileColumn column-9 pre-1 post-0 tablet-column-11"\x3e\r\n        \x3cdiv id\x3d"new_password_edit" style\x3d"display:none;"\x3e\r\n          \x3cdiv id\x3d"oAuthChangePwd" class\x3d"property"\x3e\r\n            \x3cspan\x3e\x3cstrong\x3e${i18n.newPwdLabel}\x3c/strong\x3e\x3c/span\x3e\x3cbr\x3e\r\n            \x3cdiv class\x3d"leader-quarter"\x3e\r\n              \x3cbutton data-dojo-attach-point\x3d"_changePwdBtn" data-dojo-type\x3d"dijit/form/Button"\r\n                      class\x3d"calcite cancel tertiary small" data-dojo-attach-event\x3d"onClick:onChangePassword"\x3e\r\n                ${i18n.changePwd}\r\n              \x3c/button\x3e\r\n            \x3c/div\x3e\r\n          \x3c/div\x3e\r\n          \x3cdiv id\x3d"nonOAuthChangePwd" class\x3d"property" style\x3d"display:none;"\x3e\r\n            \x3cspan\x3e\x3cstrong\x3e${i18n.changePwdLabel}\x3c/strong\x3e\x3c/span\x3e\x3cbr\x3e\r\n            \x3cdiv class\x3d"esriLeadingMargin3 esriTrailingMargin3" id\x3d"newPassword" data-dojo-attach-point\x3d"newPassword"\r\n                data-dojo-type\x3d"dijit/form/TextBox" data-dojo-props\x3d"trim:true,type:\'password\'"\x3e\x3c/div\x3e\r\n            \x3cbr style\x3d"clear:both;"\x3e\r\n            \x3cdiv class\x3d"esriLeadingMargin3 esriTrailingMargin3" data-dojo-attach-point\x3d"verifyNewPassword"\r\n                data-dojo-type\x3d"dijit/form/TextBox" data-dojo-props\x3d"trim:true, type:\'password\'"\x3e\x3c/div\x3e\r\n          \x3c/div\x3e\r\n        \x3c/div\x3e\r\n        \x3cdiv id\x3d"mfa_edit" class\x3d"property hide-if-embedded" style\x3d"display:none;"\x3e\r\n          \x3cspan\x3e\x3cstrong\x3e${i18n.multiFactorAuth}\x3c/strong\x3e\x3c/span\x3e\x3cbr\x3e\r\n          \x3cspan class\x3d"readOnly esriItemLinks"\x3e\x3cspan data-dojo-attach-point\x3d"mfa_setting"\x3e\x3c/span\x3e\x3c/span\x3e\r\n          \x3cdiv class\x3d"editOnly"\x3e\r\n            \x3cbutton data-dojo-attach-point\x3d"_enableMFA" data-dojo-type\x3d"dijit/form/Button" class\x3d"calcite tertiary small"\r\n                    data-dojo-attach-event\x3d"onClick:onEnableMFA"\x3e${i18n.enable}\x3c/button\x3e\r\n            \x3cbutton data-dojo-attach-point\x3d"_disableMFA" data-dojo-type\x3d"dijit/form/Button" class\x3d"calcite caution small"\r\n                    data-dojo-attach-event\x3d"onClick:onDisableMFA"\x3e${i18n.disable}\x3c/button\x3e\r\n          \x3c/div\x3e\r\n        \x3c/div\x3e\r\n        \x3cdiv id\x3d"question_edit" class\x3d"property" style\x3d"display:none;"\x3e\r\n          \x3cspan\x3e\x3cstrong\x3e\x3clabel for\x3d"security-question"\x3e${i18n.questionLabel}\x3c/label\x3e\x3c/strong\x3e\x3c/span\x3e\x3cbr\x3e\r\n          \x3cdiv class\x3d"arrowSpaceMedium" id\x3d"security-question" data-dojo-attach-point\x3d"questionSelect"\r\n              data-dojo-type\x3d"dijit/form/FilteringSelect" data-dojo-props\x3d"type:\'select\'"\x3e\x3c/div\x3e\r\n          \x3cspan class\x3d"red-asterisk hide" data-dojo-attach-point\x3d"_securityQuestionRequired"\x3e*\x3c/span\x3e\r\n        \x3c/div\x3e\r\n        \x3cdiv id\x3d"answer_edit" class\x3d"property" style\x3d"display:none;"\x3e\r\n          \x3cspan\x3e\x3cstrong\x3e\x3clabel for\x3d"security-answer"\x3e${i18n.answerLabel}\x3c/label\x3e\x3c/strong\x3e\x3c/span\x3e\x3cbr\x3e\r\n          \x3cdiv id\x3d"security-answer" data-dojo-attach-point\x3d"questionAnswer"\r\n              data-dojo-type\x3d"dijit/form/TextBox" data-dojo-props\x3d"trim:true, type:\'text\'"\x3e\x3c/div\x3e\r\n          \x3cspan class\x3d"red-asterisk hide" data-dojo-attach-point\x3d"_securityAnswerRequired"\x3e*\x3c/span\x3e\r\n        \x3c/div\x3e\r\n        \x3cdiv class\x3d"property hide-if-embedded"\x3e\r\n          \x3cdiv\x3e\x3cstrong\x3e${i18n.whoSeeProfile}\x3c/strong\x3e\x3c/div\x3e\x3cbr\x3e\r\n          \x3cspan class\x3d"readOnly" data-dojo-attach-point\x3d"label_privacy"\x3e\x3c/span\x3e\r\n          \x3cdiv class\x3d"editOnlyBtn" data-dojo-attach-point\x3d"edit_privacy" style\x3d"display:none;"\x3e\r\n            \x3cspan class\x3d"display-block" id\x3d"privacy_public_span"\x3e\r\n              \x3cinput type\x3d"radio" data-dojo-type\x3d"dijit/form/RadioButton" name\x3d"privacy" id\x3d"privacy_public"/\x3e\r\n              \x3clabel for\x3d"privacy_public" class\x3d"inline-block"\x3e${i18n.everyone}\x3c/label\x3e\r\n              \x3cbr\x3e\r\n            \x3c/span\x3e\r\n            \x3cspan id\x3d"privacy_organization_span"\x3e\r\n              \x3cinput type\x3d"radio" data-dojo-type\x3d"dijit/form/RadioButton" name\x3d"privacy" id\x3d"privacy_account"/\x3e\r\n              \x3clabel for\x3d"privacy_account" class\x3d"inline-block"\x3e${i18n.organization}\x3c/label\x3e\r\n              \x3cbr\x3e\r\n            \x3c/span\x3e\r\n            \x3cinput type\x3d"radio" data-dojo-type\x3d"dijit/form/RadioButton" name\x3d"privacy" id\x3d"privacy_private"/\x3e\r\n            \x3clabel for\x3d"privacy_private" class\x3d"inline-block"\x3e${i18n.privateLabel}\x3c/label\x3e\r\n          \x3c/div\x3e\r\n        \x3c/div\x3e\r\n        \x3cdiv id\x3d"language_edit" class\x3d"property"\x3e\r\n          \x3cspan\x3e\x3cstrong\x3e\x3clabel for\x3d"languageSelect"\x3e${i18n.languageLabel}\x3c/label\x3e\x3c/strong\x3e\x3c/span\x3e\x3cbr\x3e\r\n          \x3cspan class\x3d"readOnly esriItemLinks"\x3e\x3cspan data-dojo-attach-point\x3d"language_setting"\x3e\x3c/span\x3e\x3c/span\x3e\r\n          \x3cdiv id\x3d"languageSelect" class\x3d"editOnly arrowSpaceMedium" data-dojo-attach-point\x3d"languageSelect"\r\n              data-dojo-type\x3d"dijit/form/FilteringSelect" data-dojo-props\x3d"type:\'select\',required:false"\x3e\x3c/div\x3e\r\n        \x3c/div\x3e\r\n        \x3cdiv data-dojo-attach-point\x3d"languageFormatContainer" class\x3d"property" style\x3d"display:none;"\x3e\r\n          \x3cspan class\x3d"display-block"\x3e\r\n            \x3cstrong\x3e\x3clabel class\x3d"inline-block" for\x3d"languageFormatSelect"\x3e${i18n.numDateFormat}\x3c/label\x3e\x3c/strong\x3e\r\n            \x3cspan id\x3d"languageFormatTooltip"\x3e\x3ca id\x3d"languageFormatHelpLink" target\x3d"_blank"\x3e\x3cimg class\x3d"help-icon" data-dojo-attach-point\x3d"_languageFormatHelpImg" src\x3d"" alt\x3d"${i18n.learnNumDateFormat}"\x3e\x3c/a\x3e\x3c/span\x3e\r\n          \x3c/span\x3e\x3cbr\x3e\r\n          \x3cspan class\x3d"readOnly esriItemLinks"\x3e\x3cspan data-dojo-attach-point\x3d"language_format_setting"\x3e\x3c/span\x3e\x3c/span\x3e\r\n          \x3cdiv id\x3d"languageFormatSelect" class\x3d"editOnly arrowSpaceMedium" data-dojo-attach-point\x3d"languageFormatSelect"\r\n              data-dojo-type\x3d"dijit/form/FilteringSelect" data-dojo-props\x3d"type:\'select\',required:false"\x3e\x3c/div\x3e\r\n        \x3c/div\x3e\r\n        \x3cdiv id\x3d"region_edit" class\x3d"property"\x3e\r\n          \x3cdiv\x3e\x3cstrong\x3e${i18n.regionLabel}\x3c/strong\x3e\x3c/div\x3e\x3cbr\x3e\r\n          \x3cspan class\x3d"esriItemLinks readOnly editOrgOnly" data-dojo-attach-point\x3d"region_setting"\x3e\x3c/span\x3e\r\n          \x3cdiv class\x3d"editNonOrgOnly" data-dojo-attach-point\x3d"regionSelect" data-dojo-type\x3d"dijit/form/FilteringSelect" data-dojo-props\x3d"type:\'select\'"\x3e\x3c/div\x3e\r\n        \x3c/div\x3e\r\n        \x3cdiv id\x3d"units_edit" class\x3d"property"\x3e\r\n          \x3cspan\x3e\x3cstrong\x3e\x3clabel for\x3d"unitsSelect"\x3e${i18n.unitsLabel}\x3c/label\x3e\x3c/strong\x3e\x3c/span\x3e\x3cbr\x3e\r\n          \x3cspan class\x3d"readOnly esriItemLinks"\x3e\x3cspan data-dojo-attach-point\x3d"units_setting"\x3e\x3c/span\x3e\x3c/span\x3e\r\n          \x3cdiv id\x3d"unitsSelect" class\x3d"editOnly arrowSpaceMedium" data-dojo-attach-point\x3d"unitsSelect"\r\n              data-dojo-type\x3d"dijit/form/FilteringSelect" data-dojo-props\x3d"type:\'select\'"\x3e\x3c/div\x3e\r\n        \x3c/div\x3e\r\n        \x3cdiv id\x3d"landing_page_edit" class\x3d"ownerOnly property hide-if-embedded"\x3e\r\n          \x3cspan class\x3d"readOrgOnly"\x3e\x3cstrong\x3e\x3clabel for\x3d"landingPageSelect"\x3e${i18n.landingPageLabel}\x3c/label\x3e\x3c/strong\x3e\x3cbr\x3e\x3c/span\x3e\r\n          \x3cspan class\x3d"readOrgOnly esriItemLinks"\x3e\x3cspan data-dojo-attach-point\x3d"landing_page_setting"\x3e\x3c/span\x3e\x3c/span\x3e\r\n          \x3cspan class\x3d"editOrgOnly"\x3e\x3cstrong\x3e\x3clabel for\x3d"landingPageSelect"\x3e${i18n.landingPageEditLabel}\x3c/label\x3e\x3c/strong\x3e\x3cbr\x3e\x3c/span\x3e\r\n          \x3cdiv id\x3d"landingPageSelect" class\x3d"editOrgOnly arrowSpaceMedium" data-dojo-attach-point\x3d"landingPageSelect"\r\n              data-dojo-type\x3d"dijit/form/FilteringSelect" data-dojo-props\x3d"type:\'select\'"\x3e\x3c/div\x3e\r\n        \x3c/div\x3e\r\n        \x3cdiv id\x3d"organization_role_div" class\x3d"property hide-if-embedded" style\x3d"display:none;"\x3e\r\n          \x3cdiv\x3e\x3cstrong\x3e${i18n.roleLabel}\x3c/strong\x3e\x3c/div\x3e\x3cbr\x3e\r\n          \x3cspan class\x3d"esriItemLinks"\x3e\x3cspan data-dojo-attach-point\x3d"organization_role"\x3e\x3c/span\x3e\x3c/span\x3e\r\n        \x3c/div\x3e\r\n        \x3cdiv id\x3d"organization_link_div" class\x3d"property hide-if-embedded"\x3e\r\n          \x3cdiv\x3e\x3cstrong\x3e${i18n.orgLabel}\x3c/strong\x3e\x3c/div\x3e\x3cbr\x3e\r\n          \x3cspan class\x3d"esriItemLinks"\x3e\x3cspan data-dojo-attach-point\x3d"organization_link"\x3e\x3c/span\x3e\x3c/span\x3e\r\n        \x3c/div\x3e\r\n        \x3cdiv id\x3d"organization_url_div" class\x3d"property hide-if-embedded" style\x3d"display:none;"\x3e\r\n          \x3cdiv\x3e\x3cstrong\x3e${i18n.orgHomeurl}\x3c/strong\x3e\x3c/div\x3e\x3cbr\x3e\r\n          \x3cspan class\x3d"esriItemLinks"\x3e\x3cspan data-dojo-attach-point\x3d"organization_url_link"\x3e\x3c/span\x3e\x3c/span\x3e\r\n        \x3c/div\x3e\r\n        \x3cdiv id\x3d"credits_div" class\x3d"property" style\x3d"display:none;"\x3e\r\n          \x3cspan\x3e\x3cstrong\x3e${i18n.availableCredits}\x3c/strong\x3e\x3c/span\x3e\x3cbr\x3e\r\n          \x3cspan data-dojo-attach-point\x3d"available_credits"\x3e\x3c/span\x3e\r\n        \x3c/div\x3e\r\n        \x3cdiv\x3e\x26nbsp;\x3c/div\x3e\r\n      \x3c/div\x3e\r\n    \x3c/div\x3e\r\n    \x3cdiv class\x3d"esriFloatLeading userThumbnailInfo column-4 readOnly"\x3e\r\n      \x26nbsp; \x3c!-- Spacer --\x3e\r\n    \x3c/div\x3e\r\n    \x3cdiv class\x3d"column-18 pre-1 post-0 tablet-column-11 tablet-leader-1 hide-if-embedded" data-dojo-attach-point\x3d"license_information"\x3e\r\n      \x3cdiv data-dojo-attach-point\x3d"organization_usertype_div" class\x3d"trailer-1"\x3e\r\n        \x3cdiv class\x3d"trailer-half"\x3e\x3cstrong\x3e${i18n.levelLabel}\x3c/strong\x3e \x3cspan data-dojo-attach-point\x3d"organization_usertype_info"\x3e\x3c/span\x3e\x3c/div\x3e\r\n        \x3cdiv class\x3d"organization_usertype js-accordion" data-dojo-attach-point\x3d"organization_usertype"\x3e\x3c/div\x3e\r\n      \x3c/div\x3e\r\n      \x3cdiv id\x3d"licensed_for_div" class\x3d"hide" data-dojo-attach-point\x3d"organization_licensed_for_div"\x3e\r\n        \x3cdiv class\x3d"trailer-half"\x3e\x3cstrong\x3e${i18n.licensedProducts}\x3c/strong\x3e\x3c/div\x3e\r\n        \x3cdiv data-dojo-attach-point\x3d"app_bundles_list" class\x3d"flex flex-wrap"\x3e\x3c/div\x3e\r\n        \x3cdiv data-dojo-attach-point\x3d"licensed_products_list" class\x3d"flex flex-wrap"\x3e\x3c/div\x3e\r\n      \x3c/div\x3e\r\n    \x3c/div\x3e\r\n  \x3c/div\x3e\r\n  \x3cdiv class\x3d"editOnlyBtn bottomButtonBar trailer-2" style\x3d"display:none;"\x3e\r\n    \x3cdiv id\x3d"lowerProfileSaveButton" class\x3d"dijitInline calcite save blue" data-dojo-type\x3d"dijit/form/Button" data-dojo-attach-event\x3d"onClick:_saveEdit"\r\n         data-dojo-props\x3d"type:\'button\'"\x3e${i18n.save}\x3c/div\x3e\r\n    \x3cdiv id\x3d"lowerProfileCancelButton" class\x3d"dijitInline calcite cancel transparent" data-dojo-type\x3d"dijit/form/Button" data-dojo-attach-event\x3d"onClick:_cancelEdit"\r\n         data-dojo-props\x3d"type:\'button\'"\x3e${i18n.cancel}\x3c/div\x3e\r\n  \x3c/div\x3e\r\n  \x3cform data-dojo-attach-point\x3d"editForm" method\x3d"post" enctype\x3d"multipart/form-data" onSubmit\x3d"return false;"\x3e\r\n    \x3c!-- generating form fields dynamically --\x3e\r\n\r\n    \x3c!-- not generating thumbnail field dynamically, need to do it here in dialog --\x3e\r\n    \x3cdiv id\x3d"profile-thumbnail-dialog" class\x3d"thumbnailDialog dijitDialog"\x3e\r\n      \x3cdiv id\x3d"profile-thumbnail-header"\x3e\r\n        \x3cdiv class\x3d"dijitDialogTitle dijitDialogTitleBar"\x3e\r\n          ${i18n.uploadThumbnail}\r\n        \x3c/div\x3e\r\n        \x3cdiv id\x3d"profile-thumbnail-close" title\x3d"${i18n.close}" class\x3d"dijitDialogCloseIcon"\x3e\r\n        \x3c/div\x3e\r\n      \x3c/div\x3e\r\n      \x3cdiv id\x3d"profile-thumbnail-content"\x3e\r\n        \x3cp\x3e\r\n          \x3cspan\x3e\r\n            \x3clabel for\x3d"profile-thumbnail-file"\x3e\r\n              ${i18n.specifyImage}\r\n            \x3c/label\x3e\r\n          \x3c/span\x3e\r\n        \x3c/p\x3e\r\n        \x3cdiv data-dojo-attach-point\x3d"thumbnailInputContainer"\x3e\r\n          \x3cspan class\x3d"profile-thumbnail-file-label"\x3e\r\n            \x3clabel for\x3d"profile-thumbnail-file"\x3e\r\n              ${i18n.imageLabel}\r\n            \x3c/label\x3e\r\n          \x3c/span\x3e\r\n          \x3cinput type\x3d"hidden" name\x3d"MAX_FILE_SIZE" value\x3d"1024000"\x3e\x3cinput type\x3d"file" id\x3d"profile-thumbnail-file" name\x3d"thumbnail" size\x3d"44" data-dojo-attach-point\x3d"thumbnailPath"\x3e\r\n        \x3c/div\x3e\r\n        \x3cp class\x3d"leader-15"\x3e\r\n          \x3cspan\x3e${i18n.forBestResults}\x3c/span\x3e\r\n        \x3c/p\x3e\r\n        \x3cdiv class\x3d"leader-15"\x3e\r\n          \x3cbutton id\x3d"profile-thumbnail-cancel" class\x3d"jevent esriFloatTrailing calcite transparent" data-dojo-type\x3d"dijit/form/Button"\x3e\r\n            ${i18n.cancel}\r\n          \x3c/button\x3e\r\n          \x3cbutton id\x3d"profile-thumbnail-ok" class\x3d"jevent esriFloatTrailing calcite blue" data-dojo-type\x3d"dijit/form/Button"\x3e\r\n            ${i18n.ok}\r\n          \x3c/button\x3e\r\n        \x3c/div\x3e\r\n      \x3c/div\x3e\r\n      \x3cbr style\x3d"clear: both;"\x3e\r\n    \x3c/div\x3e\r\n  \x3c/form\x3e\r\n\x3c/div\x3e\r\n',
        'url:arcgisonline/sharing/dijit/templates/SaveItem.html': '\x3cdiv class\x3d"${baseClass}" data-dojo-attach-point\x3d"containerNode"\x3e\r\n\r\n  \x3clabel class\x3d"calcite-web-label trailer-half calcite-web-label-textbox"\x3e\r\n    ${i18n.titleLabel}\r\n    \x3cdiv data-dojo-attach-point\x3d"saveItemTitle"\r\n         data-dojo-type\x3d"dijit/form/TextBox"\r\n         placeHolder\x3d"${i18n.defaultTextTitle}" trim\x3d"true"\x3e\x3c/div\x3e\r\n\r\n  \x3c/label\x3e\r\n  \x3clabel class\x3d"calcite-web-label trailer-half clearfix"\x3e\r\n    ${i18n.tagsLabel}\r\n    \x3cdiv data-dojo-attach-point\x3d"saveItemTags"\r\n         data-dojo-type\x3d"esri/dijit/Tags"\r\n         data-dojo-props\x3d"minWidth:\'100%\',maxWidth:\'100%\'"\x3e\x3c/div\x3e\r\n\r\n  \x3c/label\x3e\r\n  \x3cdiv class\x3d"categories-container"\x3e\r\n    \x3clabel class\x3d"calcite-web-label trailer-0 clearfix categories-container"\r\n      data-dojo-attach-point\x3d"saveItemCategoriesContainer"\r\n      for\x3d"saveItemCategoryPicker"\x3e\r\n      ${i18n.categoriesLabel}\r\n    \x3c/label\x3e\r\n    \x3cdiv data-dojo-attach-point\x3d"saveItemCategories" id\x3d"saveItemCategoryPicker"\x3e\x3c/div\x3e\r\n  \x3c/div\x3e\r\n  \x3clabel class\x3d"calcite-web-label trailer-half calcite-web-label-textbox"\x3e\r\n    ${i18n.summaryLabel}\r\n    \x3cdiv data-dojo-attach-point\x3d"saveItemSummary"\r\n         data-dojo-type\x3d"dijit/form/TextBox"\r\n         placeHolder\x3d"${i18n.defaultTextSummary}" maxlength\x3d"250" trim\x3d"true"\x3e\x3c/div\x3e\r\n\r\n  \x3c/label\x3e\r\n  \x3clabel class\x3d"calcite-web-label trailer-half calcite-web-label-select" for\x3d"itemFolderComboBox"\x3e\r\n    ${i18n.saveInFolderLabel}\r\n    \x3cdiv data-dojo-attach-point\x3d"saveItemFolder"\r\n         data-dojo-type\x3d"arcgisonline.sharing.dijit.ComboBox"\r\n         data-dojo-attach-event\x3d"onChange:_onFolderChange"\r\n         id\x3d"itemFolderComboBox"\x3e\x3c/div\x3e\r\n  \x3c/label\x3e\r\n\r\n\x3c/div\x3e',
        'url:arcgisonline/sharing/dijit/dialog/templates/InvitationsDlg.html': '\x3cdiv\x3e\r\n  \t\x3cdiv data-dojo-type\x3d"dijit/Dialog" class\x3d"${baseClass} invitations-dialog" data-dojo-attach-point\x3d"_dialog" title\x3d"${i18n.invitationsDlgTitle}"\x3e\r\n      \x3cdiv class\x3d"trailer-half"\x3e${i18n.invitationMsg}\x3c/div\x3e\r\n      \x3cdiv class\x3d"${baseClass} invitations-container padding-leader-quarter"\x3e\r\n        \x3cdiv data-dojo-attach-point\x3d"_invitationsGridContainer"\x3e\x3c/div\x3e\r\n      \x3c/div\x3e\r\n      \x3cdiv class\x3d"clearfix"\x3e\r\n        \x3cdiv class\x3d"esriFloatTrailing right" style\x3d"padding-top:1rem; padding-bottom:5px;"\x3e\r\n          \x3cbutton data-dojo-attach-point\x3d"_closeBtn" class\x3d"jevent primary" data-dojo-type\x3d"dijit/form/Button" tabIndex\x3d"1"\x3e${i18n.close}\x3c/button\x3e\r\n        \x3c/div\x3e\r\n      \x3c/div\x3e\r\n  \t\x3c/div\x3e\r\n\x3c/div\x3e\r\n',
        'url:arcgisonline/sharing/dijit/dialog/templates/InvitationsDlgGroup.html': '\x3cdiv class\x3d"avenir-regular"\x3e\r\n  \x3cdiv class\x3d"panel panel-white panel-no-padding padding-leader-half padding-trailer-quarter padding-left-1 padding-right-1 border-bottom-clear"\x3e\r\n    \x3cdiv class\x3d"left"\x3e\r\n      \x3cdiv class\x3d"inline-block  ${isPrivate:show}"\x3e\r\n        \x3ca href\x3d"group.html?id\x3d${id}" class\x3d"card-image-small display-block margin-right-1 margin-left-0 group-card-thumbnail" title\x3d"${i18n.GroupsWidget.viewGroupDetails}"\x3e\r\n          \x3cimg src\x3d"${thumbnailUrl}" alt\x3d"${title}" class\x3d"${thumbnail:hide}"\x3e\r\n          \x3csvg xmlns\x3d"http://www.w3.org/2000/svg" width\x3d"65" height\x3d"65" viewBox\x3d"0 0 65 65" class\x3d"${thumbnail:show}"\x3e\r\n            \x3cpath fill\x3d"${fillColor}" d\x3d"M0 0h65v65H0z"/\x3e\r\n            \x3cpath fill\x3d"#ccc" d\x3d"M0 0h65v65H0z" fill-opacity\x3d"0.8"/\x3e\r\n            \x3cpath class\x3d"${useLetter:show}" fill\x3d"#FFF" d\x3d"M24.25 15.625a6.875 6.875 0 1 0-.008 13.75 6.875 6.875 0 0 0 .008-13.75zm0 11c-2.272 0-4.125-1.851-4.125-4.125s1.848-4.125 4.125-4.125c2.279 0 4.125 1.846 4.125 4.125s-1.846 4.125-4.125 4.125zm3.118 16.5H14.774c.596-4.641 4.647-8.25 9.473-8.25 2.855 0 5.426 1.283 7.188 3.316a15.168 15.168 0 0 1 2.311-1.518 12.22 12.22 0 0 0-9.496-4.549c-6.369 0-11.551 4.82-12.238 11l-.137 2.75h14.424a15.49 15.49 0 0 1 1.066-2.75h.003zm25.62 5.5c-.693-6.18-5.873-11-12.238-11s-11.545 4.82-12.238 11l-.137 2.75h24.75l-.137-2.75zm-21.711 0c.596-4.641 4.647-8.25 9.473-8.25a9.578 9.578 0 0 1 9.464 8.25H31.277zm9.473-27.5a6.875 6.875 0 1 0-.008 13.75c3.797.003 6.877-3.072 6.88-6.87s-3.072-6.877-6.869-6.88h-.003zm0 11c-2.271 0-4.125-1.851-4.125-4.125s1.848-4.125 4.125-4.125a4.125 4.125 0 0 1 0 8.25z"/\x3e\r\n            \x3ctext class\x3d"${useLetter:hide} font-size-4" x\x3d"50%" y\x3d"50%" fill\x3d"white" dominant-baseline\x3d"central" text-anchor\x3d"middle"\x3e\r\n              \x3ctspan class\x3d"group-thumbnail-default-text" dominant-baseline\x3d"central" text-anchor\x3d"middle"\x3e${title:firstChar}\x3c/tspan\x3e\r\n              \x3ctspan class\x3d"group-thumbnail-ie-text" y\x3d"70%" x\x3d"55%" dominant-baseline\x3d"central" text-anchor\x3d"middle"\x3e${title:firstChar}\x3c/tspan\x3e\r\n            \x3c/text\x3e\r\n          \x3c/svg\x3e\r\n        \x3c/a\x3e\r\n      \x3c/div\x3e\r\n      \x3cdiv class\x3d"inline-block  ${isPrivate:hide}"\x3e\r\n        \x3cdiv class\x3d"card-image-small display-block margin-right-1 margin-left-0 group-card-thumbnail"\x3e\r\n          \x3csvg xmlns\x3d"http://www.w3.org/2000/svg" width\x3d"65" height\x3d"65" viewBox\x3d"0 0 65 65" class\x3d"${thumbnail:show}"\x3e\r\n            \x3cpath fill\x3d"#AAA" d\x3d"M0 0h65v65H0z"/\x3e\r\n            \x3cpath fill\x3d"#ccc" d\x3d"M0 0h65v65H0z" fill-opacity\x3d"0.8"/\x3e\r\n            \x3cpath fill\x3d"#FFF" d\x3d"M42.5 30.5h-20c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h20c1.1 0 2-.9 2-2v-14c0-1.1-.9-2-2-2zm0 16h-20v-14h20v14zm-14-20c0-2.205 1.794-4 4-4s4 1.795 4 4v4h2v-4c0-3.309-2.691-6-6-6s-6 2.691-6 6v4h2v-4zm-4 0c0-4.4 3.6-8 8-8s8 3.6 8 8v4h2v-4c0-5.514-4.486-10-10-10s-10 4.486-10 10v4h2v-4zm10 12v-2h-2v-2h-2v10h2v-2h2v-2h-2v-2h2z"/\x3e\r\n          \x3c/svg\x3e\r\n        \x3c/div\x3e\r\n      \x3c/div\x3e\r\n    \x3c/div\x3e\r\n    \x3cdiv class\x3d"group-card-content border-box right"\x3e\r\n      \x3ch4 class\x3d"trailer-0 leader-quarter font-size-1 full-width text-ellipsis margin-right-1 text-left"\x3e\r\n        \x3ca href\x3d"group.html?id\x3d${id}" title\x3d"${title}" class\x3d"text-ellipsis ${isPrivate:show}"\x3e${title:stripHTML}\x3c/a\x3e\r\n        \x3cspan class\x3d"text-ellipsis ${isPrivate:hide}" title\x3d"${title}"\x3e${title:stripHTML}\x3c/span\x3e\r\n      \x3c/h4\x3e\r\n      \x3cp class\x3d"trailer-0 text-left"\x3e${notificationSummary}\x3c/p\x3e\r\n    \x3c/div\x3e\r\n  \x3c/div\x3e\r\n  \x3cdiv class\x3d"panel panel-no-padding padding-leader-quarter padding-trailer-quarter padding-left-quarter padding-right-quarter clearfix"\x3e\r\n    \x3cdiv class\x3d"right"\x3e\r\n      \x3cbutton class\x3d"js-accept-invitation btn btn-link btn-link-off-black margin-right-1 margin-left-0 inline-block"\x3e\x3cspan class\x3d"text-green"\x3e${icons.inline.check.16}\x3c/span\x3e${i18n.invitationsGrid.joinThisGroup}\x3c/button\x3e\r\n      \x3cbutton class\x3d"js-decline-invitation btn btn-link btn-link-off-black margin-right-1 margin-left-0 inline-block"\x3e\x3cspan class\x3d"text-red"\x3e${icons.inline.minus-circle.16}\x3c/span\x3e${i18n.invitationsGrid.decline}\x3c/button\x3e\r\n    \x3c/div\x3e\r\n  \x3c/div\x3e\r\n\x3c/div\x3e\r\n',
        'url:arcgisonline/sharing/dijit/dialog/templates/JoinGroupDlg.html': '\x3cdiv class\x3d"widgetContent"\x3e\r\n  \x3cdiv data-dojo-type\x3d"dijit/Dialog" data-dojo-attach-point\x3d"_dialog" id\x3d"join_group-dialog" class\x3d"join-group-dialog" title\x3d"${i18n.joinGroupTitle}"\x3e\r\n    \x3cdiv data-dojo-attach-point\x3d"_joinGroupContent"\x3e\r\n      ${i18n.yourRequestForReview}\r\n      \x3cbr\x3e\r\n      ${i18n.youCanCheckStatus}\r\n    \x3c/div\x3e\r\n    \x3cdiv class\x3d"hide leader-half" data-dojo-attach-point\x3d"_administrativeGroup"\x3e\r\n      ${i18n.leavingDisabled}\r\n    \x3c/div\x3e\r\n    \x3cbr\x3e\r\n      \x3cdiv class\x3d"esriFloatTrailing right leader-1"\x3e\r\n        \x3cbutton data-dojo-attach-point\x3d"_okBtn" class\x3d"btn btn-blue"\x3e${i18n.submitRequest}\x3c/button\x3e\r\n        \x3cbutton data-dojo-attach-point\x3d"_cancelBtn" class\x3d"btn btn-clear"\x3e${i18n.cancel}\x3c/button\x3e\r\n    \x3c/div\x3e\r\n  \x3c/div\x3e\r\n\x3c/div\x3e',
        'url:arcgisonline/sharing/dijit/dialog/templates/ManageTilesDlg.html': '\x3cdiv\x3e\r\n  \x3cdiv class\x3d"${baseClass} manage-tiles-dialog js-tab-group" data-dojo-type\x3d"dijit/Dialog"\r\n       data-dojo-attach-point\x3d"dialog" title\x3d"${i18n.dialogTitle}"\x3e\r\n    \x3cnav class\x3d"tab-nav" data-dojo-attach-point\x3d"_tabNav"\x3e\r\n      \x3ca class\x3d"tab-title js-tab is-active" data-dojo-attach-point\x3d"_levelsTab"\x3e${i18n.levelsTab}\x3c/a\x3e\r\n      \x3ca class\x3d"tab-title js-tab" data-dojo-attach-point\x3d"_extentTab"\x3e${i18n.extentTab}\x3c/a\x3e\r\n    \x3c/nav\x3e\r\n\r\n    \x3csection class\x3d"tab-contents"\x3e\r\n      \x3carticle class\x3d"tab-section js-tab-section is-active" data-dojo-attach-point\x3d"_levelsSection"\x3e\r\n        \x3cspan data-dojo-attach-point\x3d"_dialogDescription"\x3e\x3c/span\x3e\r\n        \x3cbr\x3e\r\n        \x3cdiv class\x3d"selected-scales-container"\x3e\x3cspan data-dojo-attach-point\x3d"_scalesSelectedSpan"\x3e\x3c/span\x3e\x3cbr\x3e\x3c/div\x3e\r\n\r\n        \x3cdiv class\x3d"scaleContainer" data-dojo-attach-point\x3d"_gridContainer"\x3e\x3c/div\x3e\r\n      \x3c/article\x3e\r\n      \x3carticle class\x3d"tab-section js-tab-section" data-dojo-attach-point\x3d"_extentSection"\x3e\r\n        \x3c!-- Add Extent UI here --\x3e\r\n        \x3cdiv class\x3d"extentContainer hide" data-dojo-attach-point\x3d"_extentContainer"\x3e\x3c/div\x3e\r\n      \x3c/article\x3e\r\n    \x3c/section\x3e\r\n\r\n    \x3cdiv class\x3d"controlDiv clearfix" data-dojo-attach-point\x3d"_controlDiv"\x3e\r\n      \x3cdiv class\x3d"left messageContainer"\x3e\r\n        \x3cdiv class\x3d"message" data-dojo-attach-point\x3d"_messageDiv"\x3e\x3c/div\x3e\r\n      \x3c/div\x3e\r\n      \x3cdiv class\x3d"right buildContainer"\x3e\r\n        \x3cbutton data-dojo-attach-point\x3d"_buildButton" class\x3d"calcite secondary btn btn-blue"\x3e${i18n.buildButton}\x3c/button\x3e\r\n        \x3cbutton data-dojo-attach-point\x3d"_cancelButton" class\x3d"calcite secondary btn btn-blue hide"\x3e${i18n.cancelButton}\x3c/button\x3e\r\n        \x3cbutton data-dojo-attach-point\x3d"_closeButton" class\x3d"calcite transparent btn btn-clear"\x3e${i18n.close}\x3c/button\x3e\r\n      \x3c/div\x3e\r\n    \x3c/div\x3e\r\n  \x3c/div\x3e\r\n\x3c/div\x3e\r\n',
        'url:arcgisonline/sharing/dijit/dialog/templates/MembershipRequestsDlg.html': '\x3cdiv\x3e\r\n  \x3cdiv data-dojo-type\x3d"dijit/Dialog" class\x3d"${baseClass} membership-requests-dialog" data-dojo-attach-point\x3d"_dialog" title\x3d"${i18n.membershipRequests}"\x3e\r\n    \x3cdiv class\x3d"membership-requests-label"\x3e${i18n.requestedMemberShip}\x3c/div\x3e\r\n    \x3cdiv class\x3d"${baseClass} requests-container"\x3e\r\n      \x3cdiv data-dojo-attach-point\x3d"_requestsGridContainer"\x3e\x3c/div\x3e\r\n    \x3c/div\x3e\r\n    \x3cbr style\x3d"clear:both;"\x3e\r\n    \x3cdiv class\x3d"esriFloatTrailing right" style\x3d"padding-top:1rem;padding-bottom:5px;"\x3e\r\n      \x3cbutton data-dojo-attach-point\x3d"_closeBtn" class\x3d"jevent primary" data-dojo-type\x3d"dijit/form/Button"\x3e${i18n.close}\x3c/button\x3e\r\n    \x3c/div\x3e\r\n    \x3cbr/\x3e\x26nbsp;\x3cbr/\x3e\r\n  \x3c/div\x3e\r\n\x3c/div\x3e\r\n',
        'url:arcgisonline/sharing/dijit/dialog/templates/SetIdentityProviderDlg.html': '\x3cdiv class\x3d"widgetContent" \x3e\r\n  \x3cdiv class\x3d"${baseClass}" data-dojo-type\x3d"dijit/Dialog" data-dojo-attach-point\x3d"_dialog" id\x3d"set-identity-provider-dialog" title\x3d"${i18n.setIdentityProviderTitle}" execute\x3d""\x3e\r\n    \x3cform data-dojo-attach-point\x3d"_form" enctype\x3d"multipart/form-data" method\x3d"post" onsubmit\x3d"return false;"\x3e\r\n      \x3cinput data-dojo-attach-point\x3d"_signUpMode" name\x3d"signUpMode" type\x3d"hidden" value\x3d""\x3e\r\n      \x3cinput data-dojo-attach-point\x3d"_bindingType" name\x3d"bindingType" type\x3d"hidden" value\x3d""\x3e\r\n      \x3cinput data-dojo-attach-point\x3d"_supportEncryption" name\x3d"encryptionSupported" type\x3d"hidden" value\x3d""\x3e\r\n      \x3cinput data-dojo-attach-point\x3d"_supportSignedRequest" name\x3d"supportSignedRequest" type\x3d"hidden" value\x3d""\x3e\r\n      \x3cinput data-dojo-attach-point\x3d"_useSHA256" name\x3d"useSHA256" type\x3d"hidden" value\x3d""\x3e\r\n      \x3cinput data-dojo-attach-point\x3d"_supportsLogoutRequest" name\x3d"supportsLogoutRequest" type\x3d"hidden" value\x3d""\x3e\r\n      \x3cinput data-dojo-attach-point\x3d"_updateProfileAtSignIn" name\x3d"updateProfileAtSignin" type\x3d"hidden" value\x3d""\x3e\r\n      \x3cinput data-dojo-attach-point\x3d"_updateGroupsAtSignIn" name\x3d"updateGroupsAtSignin" type\x3d"hidden" value\x3d""\x3e\r\n      \x3cinput data-dojo-attach-point\x3d"_clearEmptyFields" name\x3d"clearEmptyFields" type\x3d"hidden" value\x3d"false"\x3e\r\n\r\n      \x3cdiv data-dojo-attach-point\x3d"_description"\x3e\x3c/div\x3e\r\n      \x3cbr\x3e\r\n      \x3cspan\x3e${i18n.nameLabel}\x3c/span\x3e\x3cbr\x3e\r\n      \x3cdiv name\x3d"name" data-dojo-attach-point\x3d"_nameInput" type\x3d"text" data-dojo-type\x3d"dijit/form/TextBox" data-dojo-props\x3d"trim:true"\x3e\x3c/div\x3e\r\n      \x3cbr\x3e\x3cbr\x3e\r\n\r\n      \x3cspan\x3e${i18n.signUpLabel}\x3c/span\x3e\x3cbr\x3e\r\n      \x3cdiv data-dojo-attach-point\x3d"_signUpModeOptions"\x3e\r\n        \x3cdiv id\x3d"automatic-option" name\x3d"signUpModeOption" type\x3d"radio"\r\n             data-dojo-attach-point\x3d"_automaticOption" data-dojo-type\x3d"dijit/form/RadioButton"\r\n             data-dojo-attach-event\x3d"onClick:onAutomaticClicked"\x3e\x3c/div\x3e \x3clabel data-dojo-attach-point\x3d"_automaticOptionLabel" for\x3d"automatic-option"\x3e${i18n.automaticOption}\x3c/label\x3e\r\n        \x3cdiv id\x3d"invite-option" name\x3d"signUpModeOption" type\x3d"radio"\r\n             data-dojo-attach-point\x3d"_inviteOption" data-dojo-type\x3d"dijit/form/RadioButton"\r\n             data-dojo-attach-event\x3d"onClick:onInvitationClicked" data-dojo-props\x3d"checked:true"\x3e\x3c/div\x3e \x3clabel data-dojo-attach-point\x3d"_inviteOptionLabel" for\x3d"invite-option"\x3e${i18n.onInviteOption}\x3c/label\x3e\r\n      \x3c/div\x3e\r\n      \x3cdiv class\x3d"leader-half" data-dojo-attach-point\x3d"_automaticDefaults"\x3e\r\n        ${i18n.membersGetValues}\r\n        \x3cdiv class\x3d"margin-left-1"\x3e\r\n          \x3cdiv data-dojo-attach-point\x3d"_levelOptions"\x3e${i18n.defaultLevel} \x3cspan data-dojo-attach-point\x3d"_userTypeDefault"\x3e\x3c/span\x3e\x3c/div\x3e\r\n          \x3cdiv data-dojo-attach-point\x3d"_roleOptions"\x3e${i18n.roleAssigned} \x3cspan data-dojo-attach-point\x3d"_roleDefault"\x3e\x3c/span\x3e\x3c/div\x3e\r\n          \x3cdiv data-dojo-attach-point\x3d"_creditOptions"\x3e${i18n.defaultCredits} \x3cspan data-dojo-attach-point\x3d"_creditsDefault"\x3e\x3c/span\x3e\x3c/div\x3e\r\n          \x3cdiv data-dojo-attach-point\x3d"_esriAccessOptions"\x3e${i18n.defaultEsriAccess} \x3cspan data-dojo-attach-point\x3d"_esriAccessDefault"\x3e\x3c/span\x3e\x3c/div\x3e\r\n          \x3cdiv data-dojo-attach-point\x3d"_groupOptions"\x3e\r\n            \x3cspan data-dojo-attach-point\x3d"_hasGroupDefaults"\x3e${i18n.groupsSelected}\r\n                \x3cdiv class\x3d"inline-block specified-group-list hide" data-dojo-attach-point\x3d"_groupListContainer"\x3e\x3c/div\x3e\r\n                \x3cspan class\x3d"esriItemLinks hide" data-dojo-attach-point\x3d"_otherLinkContainer"\x3e\x3ca id\x3d"${id}-other-link" data-dojo-attach-point\x3d"_otherLink"\x3e${i18n.otherLink}\x3c/a\x3e\x3c/span\x3e\r\n            \x3c/span\x3e\r\n            \x3cspan data-dojo-attach-point\x3d"_noGroupDefaults"\x3e${i18n.noGroupsSelected}\x3c/span\x3e\r\n          \x3c/div\x3e\r\n        \x3c/div\x3e\r\n      \x3c/div\x3e\r\n      \x3cdiv class\x3d"leader-half" data-dojo-attach-point\x3d"_toConfigureDefaults"\x3e${i18n.toConfigureDefaults}\x3c/div\x3e\r\n      \x3cbr\x3e\r\n      \x3c!-- start federation of identity provider fields --\x3e\r\n      \x3cdiv data-dojo-attach-point\x3d"_federationDiscoveryServiceContainer"\x3e\r\n        \x3cspan\x3e${i18n.federationDiscoveryServiceUrlLabel}\x3c/span\x3e\r\n        \x3cbr\x3e\r\n        \x3cdiv data-dojo-attach-point\x3d"_federationDiscoveryServiceUrl" name\x3d"discoveryServiceUrl" type\x3d"text" data-dojo-type\x3d"dijit/form/TextBox" data-dojo-props\x3d"trim:true"\x3e\x3c/div\x3e\r\n        \x3cbr\x3e\r\n        \x3cbr\x3e\r\n      \x3c/div\x3e\r\n      \x3cdiv data-dojo-attach-point\x3d"_metadataAggregateUrlContainer"\x3e\r\n        \x3cspan\x3e${i18n.metadataAggregateUrlLabel}\x3c/span\x3e\r\n        \x3cbr\x3e\r\n        \x3cdiv data-dojo-attach-point\x3d"_metadataAggregateUrl" name\x3d"metadataServiceUrl" type\x3d"text" data-dojo-type\x3d"dijit/form/TextBox" data-dojo-props\x3d"trim:true"\x3e\x3c/div\x3e\r\n        \x3cbr\x3e\r\n        \x3cbr\x3e\r\n      \x3c/div\x3e\r\n      \x3cdiv data-dojo-attach-point\x3d"_aggregatedMetadataCertificateContainer"\x3e\r\n        \x3cspan\x3e${i18n.aggregatedMetadataCertificateLabel}\x3c/span\x3e\r\n        \x3cbr\x3e\r\n        \x3ctextarea data-dojo-attach-point\x3d"_aggregatedMetadataCertificate" name\x3d"certificate" data-dojo-type\x3d"dijit/form/SimpleTextarea" data-dojo-props\x3d"rows:3"\r\n          title\x3d"${i18n.aggregatedMetadataCertificatePlaceholder}"\x3e\x3c/textarea\x3e\r\n        \x3cbr\x3e\r\n        \x3cbr\x3e\r\n      \x3c/div\x3e\r\n      \x3c!-- end federation of identity provider fields --\x3e\r\n      \x3cdiv data-dojo-attach-point\x3d"_metadataSourceContainer"\x3e\r\n        \x3cspan\x3e${i18n.sourceLabel}\x3c/span\x3e\r\n        \x3cbr\x3e\r\n        \x3cspan data-dojo-attach-point\x3d"_sourceOptions"\x3e\r\n          \x3cdiv id\x3d"metadata-url-option" name\x3d"providerOptions" type\x3d"radio" data-dojo-attach-point\x3d"_metadataUrlOption" data-dojo-type\x3d"dijit/form/RadioButton"\r\n            checked\x3d"true"\x3e\x3c/div\x3e\r\n          \x3clabel for\x3d"metadata-url-option"\x3e${i18n.metadataUrlOption}\x3c/label\x3e\r\n          \x3cdiv id\x3d"metadata-file-option" name\x3d"providerOptions" type\x3d"radio" data-dojo-attach-point\x3d"_metadataFileOption" data-dojo-type\x3d"dijit/form/RadioButton"\x3e\x3c/div\x3e\r\n          \x3clabel for\x3d"metadata-file-option"\x3e${i18n.metadataFileOption}\x3c/label\x3e\r\n          \x3cdiv id\x3d"parameters-option" name\x3d"providerOptions" type\x3d"radio" data-dojo-attach-point\x3d"_parametersOption" data-dojo-type\x3d"dijit/form/RadioButton"\x3e\x3c/div\x3e\r\n          \x3clabel for\x3d"parameters-option"\x3e${i18n.parametersOption}\x3c/label\x3e\r\n        \x3c/span\x3e\r\n        \x3cbr\x3e\r\n        \x3cdiv data-dojo-attach-point\x3d"_sourceInputs"\x3e\r\n          \x3cbr\x3e\r\n          \x3cdiv data-dojo-attach-point\x3d"_metadataUrlInputs"\x3e\r\n            \x3cspan\x3e${i18n.metadataUrlLabel}\x3c/span\x3e\r\n            \x3cbr\x3e\r\n            \x3cdiv data-dojo-attach-point\x3d"_bindingUrlInput" name\x3d"idpMetadataUrl" type\x3d"text" data-dojo-type\x3d"dijit/form/TextBox" data-dojo-props\x3d"trim:true"\x3e\x3c/div\x3e\r\n          \x3c/div\x3e\r\n          \x3cdiv data-dojo-attach-point\x3d"_metadataFileInputs"\x3e\r\n            \x3cspan\x3e${i18n.metadataFileLabel}\x3c/span\x3e\r\n            \x3cbr\x3e\r\n            \x3cinput data-dojo-attach-point\x3d"_metadataFileInput" name\x3d"idpMetadataFile" type\x3d"file" title\x3d"${i18n.metadataFilePlaceHolder}"\r\n            /\x3e\r\n          \x3c/div\x3e\r\n          \x3cdiv data-dojo-attach-point\x3d"_parametersInputs"\x3e\r\n            \x3cspan\x3e${i18n.parametersUrlLabel}\x3c/span\x3e\r\n            \x3cbr\x3e\r\n            \x3cdiv data-dojo-attach-point\x3d"_loginUrlInput" name\x3d"bindingUrl" data-dojo-type\x3d"dijit/form/TextBox" data-dojo-props\x3d"trim:true"\x3e\x3c/div\x3e\r\n            \x3cbr\x3e\r\n            \x3cbr\x3e\r\n            \x3cspan\x3e${i18n.parametersPostUrlLabel}\x3c/span\x3e\r\n            \x3cbr\x3e\r\n            \x3cdiv data-dojo-attach-point\x3d"_loginUrlPostInput" name\x3d"postBindingUrl" type\x3d"text" data-dojo-type\x3d"dijit/form/TextBox" data-dojo-props\x3d"trim:true"\x3e\x3c/div\x3e\r\n            \x3cbr\x3e\r\n            \x3cbr\x3e\r\n            \x3c!--\x3cspan"\x3e${i18n.parametersBindingTypeLabel}\x3c/span\x3e--\x3e\r\n            \x3c!--\x3cdiv id\x3d"binding-type-redirect-option" name\x3d"bindingTypeOptions" data-dojo-attach-point\x3d"_bindingTypeRedirect" type\x3d"radio" data-dojo-type\x3d"dijit/form/RadioButton" data-dojo-attach-point\x3d"_bindingTypeRedirectOption" checked\x3d"true"\x3e\x3c/div\x3e \x3clabel\x3e${i18n.parametersBindingTypeRedirect}\x3c/label\x3e--\x3e\r\n            \x3c!--\x3cdiv id\x3d"binding-type-post-option" name\x3d"bindingTypeOptions" data-dojo-attach-point\x3d"_bindingTypePost" type\x3d"radio" data-dojo-type\x3d"dijit/form/RadioButton" data-dojo-attach-point\x3d"_bindingTypePostOption"\x3e\x3c/div\x3e \x3clabel\x3e${i18n.parametersBindingTypePost}\x3c/label\x3e--\x3e\r\n            \x3c!--\x3cbr\x3e\x3cbr\x3e--\x3e\r\n            \x3cspan\x3e${i18n.parametersCertificateLabel}\x3c/span\x3e\r\n            \x3cbr\x3e\r\n            \x3ctextarea data-dojo-attach-point\x3d"_certificateInput" name\x3d"certificate" data-dojo-type\x3d"dijit/form/SimpleTextarea" data-dojo-props\x3d"rows:3"\r\n              title\x3d"${i18n.parametersCertificatePlaceHolder}"\x3e\x3c/textarea\x3e\r\n            \x3cdiv style\x3d"display:none;"\x3e\r\n              \x3cbr\x3e\r\n              \x3cspan\x3e${i18n.orLabel}\x3c/span\x3e\r\n              \x3cbr\x3e\r\n              \x3cbr\x3e\r\n              \x3cspan\x3e${i18n.parametersCertificateFileLabel}\x3c/span\x3e\r\n              \x3cbr\x3e\r\n              \x3cinput type\x3d"file" data-dojo-attach-point\x3d"_certificateFileInput" name\x3d"certificateFile" title\x3d"${i18n.parametersCertificateFilePlaceHolder}"\r\n              /\x3e\r\n            \x3c/div\x3e\r\n          \x3c/div\x3e\r\n        \x3c/div\x3e\r\n        \x3cbr\x3e\r\n      \x3c/div\x3e\r\n      \x3c!--\x3cdiv\x3e--\x3e\r\n        \x3c!--\x3cbr\x3e--\x3e\r\n        \x3c!--\x3cspan\x3e--\x3e\r\n          \x3c!--\x3cinput type\x3d"checkbox" id\x3d"encryptionSupported" data-dojo-attach-point\x3d"_encryptionSupported" data-dojo-type\x3d"dijit/form/CheckBox"\x3e--\x3e\r\n          \x3c!--\x3clabel for\x3d"encryptionSupported"\x3e${i18n.encryptionSupported}\x3c/label\x3e--\x3e\r\n        \x3c!--\x3c/span\x3e--\x3e\r\n        \x3c!--\x3cbr\x3e--\x3e\r\n        \x3c!--\x3cspan\x3e--\x3e\r\n          \x3c!--\x3cinput type\x3d"checkbox" id\x3d"supportSignedRequest" data-dojo-attach-point\x3d"_signedRequestSupported" data-dojo-type\x3d"dijit/form/CheckBox"\x3e--\x3e\r\n          \x3c!--\x3clabel for\x3d"supportSignedRequest"\x3e${i18n.supportSignedRequest}\x3c/label\x3e--\x3e\r\n        \x3c!--\x3c/span\x3e--\x3e\r\n        \x3c!--\x3cbr\x3e--\x3e\r\n      \x3c!--\x3c/div\x3e\x3cbr\x3e--\x3e\r\n\r\n      \x3cspan class\x3d"esriItemLinks"\x3e\x3ca data-dojo-attach-point\x3d"_toggleAdvancedSettings" data-dojo-attach-event\x3d"onclick:onToggleAdvancedSettings"\x3e${i18n.showAdvancedSettings}\x3c/a\x3e\x3c/span\x3e\x3cbr\x3e\r\n      \x3cdiv id\x3d"advancedSettings" data-dojo-attach-point\x3d"_advancedSettings"\x3e\r\n        \x3cbr\x3e\r\n        \x3cspan\x3e\r\n          \x3cinput type\x3d"checkbox" id\x3d"encryptionSupported" data-dojo-attach-point\x3d"_encryptionSupported" data-dojo-type\x3d"dijit/form/CheckBox"\x3e\r\n          \x3clabel for\x3d"encryptionSupported"\x3e${i18n.encryptionSupported}\x3c/label\x3e\r\n        \x3c/span\x3e\r\n        \x3cbr\x3e\x3cbr\x3e\r\n        \x3cspan\x3e\r\n          \x3cinput type\x3d"checkbox" id\x3d"supportSignedRequest" data-dojo-attach-point\x3d"_signedRequestSupported" data-dojo-type\x3d"dijit/form/CheckBox"\x3e\r\n          \x3clabel for\x3d"supportSignedRequest"\x3e${i18n.supportSignedRequest}\x3c/label\x3e\x3cbr\x3e\r\n          \x3cspan class\x3d"esriLeadingMargin15" data-dojo-attach-point\x3d"_sha256Container"\x3e\r\n            \x3cinput type\x3d"checkbox" id\x3d"signUsingSHA256" data-dojo-attach-point\x3d"_signUsingSHA256" data-dojo-type\x3d"dijit/form/CheckBox"\x3e\r\n            \x3clabel for\x3d"signUsingSHA256"\x3e${i18n.signUsingSHA256}\x3c/label\x3e\x3cbr\x3e\r\n          \x3c/span\x3e\r\n        \x3c/span\x3e\r\n        \x3cbr\x3e\r\n        \x3cspan\x3e\r\n          \x3cinput type\x3d"checkbox" id\x3d"supportsLogoutRequest" data-dojo-attach-point\x3d"_logoutRequestSupported" data-dojo-type\x3d"dijit/form/CheckBox"\x3e\r\n          \x3clabel for\x3d"supportsLogoutRequest"\x3e${i18n.propagateLogout}\x3c/label\x3e\r\n        \x3c/span\x3e\r\n        \x3cbr\x3e\x3cbr\x3e\r\n        \x3cspan\x3e\r\n          \x3clabel\x3e\r\n            \x3cinput type\x3d"checkbox" data-dojo-attach-point\x3d"_updateProfile" data-dojo-type\x3d"dijit/form/CheckBox"\x3e\r\n            ${i18n.updateProfileAtSignIn}\r\n          \x3c/label\x3e\r\n        \x3c/span\x3e\r\n        \x3cbr\x3e\x3cbr\x3e\r\n        \x3cdiv data-dojo-attach-point\x3d"_updateGroupsContainer"\x3e\r\n          \x3cspan\x3e\r\n            \x3clabel\x3e\r\n              \x3cinput type\x3d"checkbox" data-dojo-attach-point\x3d"_updateGroups" data-dojo-type\x3d"dijit/form/CheckBox"\x3e\r\n              ${i18n.updateGroupsAtSignIn}\r\n            \x3c/label\x3e\r\n          \x3c/span\x3e\r\n          \x3cbr\x3e\x3cbr\x3e\r\n        \x3c/div\x3e\r\n        \x3cdiv data-dojo-attach-point\x3d"_logoutUrlContainer"\x3e\r\n          \x3cspan\x3e${i18n.logoutUrlLabel}\x3c/span\x3e\r\n          \x3cbr\x3e\r\n          \x3cdiv data-dojo-attach-point\x3d"_logoutUrlInput" name\x3d"logoutUrl" type\x3d"text" data-dojo-type\x3d"dijit/form/TextBox" data-dojo-props\x3d"trim:true"\x3e\x3c/div\x3e\r\n          \x3clabel\x3e${i18n.optionalLabel}\x3c/label\x3e\r\n          \x3cbr\x3e\r\n          \x3cbr\x3e\r\n        \x3c/div\x3e\r\n        \x3cspan\x3e${i18n.entityIDLabel}\x3c/span\x3e\x3cbr\x3e\r\n        \x3cdiv data-dojo-attach-point\x3d"_entityIDInput" name\x3d"entityId" type\x3d"text" data-dojo-type\x3d"dijit/form/TextBox" data-dojo-props\x3d"trim:true"\x3e\x3c/div\x3e\r\n        \x3c!--\x3cspan\x3e${i18n.userIdAttrLabel}\x3c/span\x3e\x3cbr\x3e--\x3e\r\n        \x3c!--\x3cdiv data-dojo-attach-point\x3d"_userIdAttrInput" name\x3d"userIdAttribute" type\x3d"text" data-dojo-type\x3d"dijit/form/TextBox" data-dojo-props\x3d"trim:true" title\x3d"${i18n.userIdAttrTooltip}"\x3e\x3c/div\x3e \x3clabel\x3e${i18n.optionalLabel}\x3c/label\x3e--\x3e\r\n      \x3c/div\x3e\r\n\r\n      \x3cdiv data-dojo-attach-point\x3d"_providerMetadataDownloadContainer"\x3e\r\n        \x3cbr\x3e\r\n        \x3cspan\x3e${i18n.downloadProviderMetadata}\x3c/span\x3e\r\n        \x3cbr\x3e\r\n        \x3cdiv class\x3d"esriItemLinks signedMetadataUrl"\x3e\x3ca href\x3d"#" data-dojo-attach-point\x3d"_signedProviderMetadataUrl" target\x3d"_blank"\x3e\x3c/a\x3e\x3c/div\x3e\r\n      \x3c/div\x3e\r\n\r\n      \x3cbr\x3e\x3cbr\x3e\r\n      \x3cdiv class\x3d"esriAlignTrailing" data-dojo-attach-point\x3d"_buttons"\x3e\r\n        \x3cbutton data-dojo-attach-point\x3d"_setBtn" class\x3d"primary" data-dojo-type\x3d"dijit/form/Button"\x3e${i18n.setIdentityProviderLabel}\x3c/button\x3e\r\n        \x3cbutton data-dojo-attach-point\x3d"_cancelBtn" class\x3d"cancel" data-dojo-type\x3d"dijit/form/Button"\x3e${i18n.cancel}\x3c/button\x3e\r\n      \x3c/div\x3e\r\n    \x3c/form\x3e\r\n  \x3c/div\x3e\r\n\x3c/div\x3e\r\n',
        'url:arcgisonline/pages/dijit/UploadProgressBar/UploadProgressBar.html': '\x3cdiv class\x3d"upload-progress-bar flex-1 flex-column-justify-center margin-right-1 margin-left-half position-relative"\x3e\r\n  \x3cdiv class\x3d"progress-bar"\x3e\r\n    \x3cdiv class\x3d"progress-bar-fill" data-dojo-attach-point\x3d"_uploadProgressFill"\x3e\x3c/div\x3e\r\n  \x3c/div\x3e\r\n  \x3cdiv class\x3d"font-size--3 upload-percent-label" data-dojo-attach-point\x3d"_uploadPercentLabel"\x3e0%\x3c/div\x3e\r\n\x3c/div\x3e\r\n',
        '*now': function(c) {
            c([
                'dojo/i18n!*preload*arcgisonline/nls/arcgisonline*["ar","bs","ca","cs","da","de","de-ch","el","en-au","en-ca","en-gb","en-us","es","es-mx","et","fi","fr","fr-ch","he","hr","hu","id","it","it-ch","ja","ko","lt","lv","nl","nb","pl","pt","pt-br","pt-pt","ro","ru","sl","sr","sv","th","tr","uk","vi","zh-cn","zh-hk","zh-tw","ROOT"]',
            ]);
        },
        '*noref': 1,
    },
});
define(
    'arcgisonline/arcgisonline', [
        'dojo',
        'dijit',
        'dojox',
        'dojo/require!esri/main,dijit/_base,dijit/form/DropDownButton,dijit/form/ComboButton,dijit/form/ToggleButton,dijit/form/HorizontalSlider,dijit/form/VerticalSlider,dijit/form/HorizontalRule,dijit/form/VerticalRule,dijit/form/HorizontalRuleLabels,dijit/form/VerticalRuleLabels,esri/map,esri/dijit/editing/Editor,esri/dijit/editing/TemplatePicker,esri/dijit/InfoWindow,esri/dijit/OverviewMap,esri/dijit/Attribution,esri/dijit/Scalebar,esri/dijit/Legend,esri/dijit/TimeSlider,esri/dijit/MultidimensionalSlider,esri/dijit/BasemapGallery,esri/dijit/HomeButton,esri/dijit/LocateButton,esri/dijit/Popup,esri/layers/graphics,esri/layers/agstiled,esri/layers/agsdynamic,esri/layers/agsimageservice,esri/layers/CSVLayer,esri/layers/StreamLayer,esri/layers/KMLLayer,esri/layers/FeatureLayer,esri/layers/VectorTileLayer,esri/layers/osm,esri/SnappingManager,esri/tasks/geometry,esri/tasks/identify,esri/tasks/locator,esri/toolbars/draw,esri/virtualearth/VETiledLayer,esri/virtualearth/VEGeocoder,esri/dijit/Geocoder,dojo/dnd/Moveable,dojo/parser,arcgisonline/map/classBreaks,arcgisonline/map/dynLayer,arcgisonline/map/edit,arcgisonline/map/featColl,arcgisonline/map/fileImport,arcgisonline/map/geocode,arcgisonline/map/geocodeReview,arcgisonline/map/geoRSS,arcgisonline/map/itemData,arcgisonline/map/layer,arcgisonline/map/kml,arcgisonline/map/mapNotes,arcgisonline/map/mapUtil,arcgisonline/map/role,arcgisonline/map/print,arcgisonline/map/popup,arcgisonline/map/save_open,arcgisonline/map/symbol,arcgisonline/map/table,arcgisonline/map/thumbnail,arcgisonline/map/time,arcgisonline/map/multiDimensions,arcgisonline/map/vectorTile,arcgisonline/map/webTile,arcgisonline/map/wms,arcgisonline/map/dijit/About,arcgisonline/map/dijit/AddContent,arcgisonline/map/dijit/Directions,arcgisonline/map/dijit/Edit,arcgisonline/map/dijit/Geocode,arcgisonline/map/dijit/LeftPanel,arcgisonline/map/dijit/Legend,arcgisonline/map/dijit/ManageTemplates,arcgisonline/map/dijit/MosaicRule,arcgisonline/map/dijit/PopupBuilder,arcgisonline/map/dijit/RendererLabels,arcgisonline/map/dijit/DefineAOI,arcgisonline/map/dijit/RenderingRule,arcgisonline/map/dijit/StructuredPopupWidget,arcgisonline/map/dijit/TOC,arcgisonline/map/dijit/MultidimensionalFilter,arcgisonline/map/dijit/renderer/AttributeTransparency,arcgisonline/map/dijit/renderer/AttributeTransparencyDlg,arcgisonline/map/dijit/renderer/Color,arcgisonline/map/dijit/renderer/ColorGrid,arcgisonline/map/dijit/renderer/Gallery,arcgisonline/map/dijit/renderer/HeatMap,arcgisonline/map/dijit/renderer/MultiAttributes,arcgisonline/map/dijit/renderer/Simple,arcgisonline/map/dijit/renderer/Size,arcgisonline/map/dijit/renderer/SizeGrid,arcgisonline/map/dijit/renderer/SymbolStylerDlg,arcgisonline/map/dijit/renderer/UniqueValues,arcgisonline/map/dijit/renderer/UniqueValuesGrid,esri/tasks/RelationshipQuery,esri/tasks/StatisticDefinition,esri/tasks/PrintParameters,esri/tasks/LegendLayer,esri/tasks/GenerateRendererParameters,esri/tasks/ClassificationDefinition,esri/tasks/ClassBreaksDefinition,esri/tasks/UniqueValueDefinition,esri/tasks/ColorRamp,esri/tasks/AlgorithmicColorRamp,esri/tasks/MultipartColorRamp,esri/tasks/RouteTask,esri/tasks/RouteParameters,esri/tasks/RouteResult,esri/tasks/NAMessage,esri/tasks/NATypes,esri/tasks/DirectionsFeatureSet,esri/layers/wmts,esri/layers/WMTSLayer,esri/layers/WMTSLayerInfo,esri/dijit/Directions,dijit/layout/AccordionPane,dojox/data/QueryReadStore,arcgisonline/sharing/util,arcgisonline/sharing/utilShare,arcgisonline/sharing/geow/Account,arcgisonline/sharing/geow/Community,arcgisonline/sharing/geow/Geow,arcgisonline/sharing/geow/MemberReadStore,arcgisonline/sharing/geow/QueryReadStore,arcgisonline/sharing/geow/TooltipQueryReadStore,dijit/Dialog,dijit/form/ComboBox,dijit/layout/TabContainer,arcgisonline/sharing/dijit/ArcGISOnlineServicesGrid,arcgisonline/sharing/dijit/ArcGISServerServicesGrid,arcgisonline/sharing/dijit/BasemapGallery,arcgisonline/sharing/dijit/BasemapGalleryGrid,arcgisonline/sharing/dijit/Button,arcgisonline/sharing/dijit/ComboBox,arcgisonline/sharing/dijit/DataGrid,arcgisonline/sharing/dijit/DropDownButton,arcgisonline/sharing/dijit/Error,arcgisonline/sharing/dijit/FeatureLayerQueryResult,arcgisonline/sharing/dijit/FeatureLayerQueryStore,arcgisonline/sharing/dijit/GoogleServicesGrid,arcgisonline/sharing/dijit/GroupMembershipRequestsGrid,arcgisonline/sharing/dijit/HelpManager,arcgisonline/sharing/dijit/OrganizationSetup,arcgisonline/sharing/dijit/OrganizationStatus,arcgisonline/sharing/dijit/Troubleshoot,arcgisonline/sharing/dijit/SingleFilter,arcgisonline/sharing/dijit/SingleInteractiveFilter,arcgisonline/sharing/dijit/UserProfile,arcgisonline/sharing/dijit/dialog/AddLayerFromFileDlg,arcgisonline/sharing/dijit/dialog/AddLayerFromUrlDlg,arcgisonline/sharing/dijit/dialog/BrowseLayersDlg,arcgisonline/sharing/dijit/dialog/CsvLocationDlg,arcgisonline/sharing/dijit/dialog/DeleteWarningDlg,arcgisonline/sharing/dijit/dialog/ExportDlg,arcgisonline/sharing/dijit/dialog/ExtentDlg,arcgisonline/sharing/dijit/dialog/FeatureTemplateDlg,arcgisonline/sharing/dijit/dialog/FieldsDlg,arcgisonline/sharing/dijit/dialog/FilterDlg,arcgisonline/sharing/dijit/dialog/FeatureTypeDlg,arcgisonline/sharing/dijit/dialog/GeneralDlg,arcgisonline/sharing/dijit/dialog/InvitationsDlg,arcgisonline/sharing/dijit/dialog/InviteAccountUsersDlg,arcgisonline/sharing/dijit/dialog/JoinGroupDlg,arcgisonline/sharing/dijit/dialog/ManageSubscriptionDlg,arcgisonline/sharing/dijit/dialog/ManageTilesDlg,arcgisonline/sharing/dijit/dialog/MapSettingsDlg,arcgisonline/sharing/dijit/dialog/MapNotesDlg,arcgisonline/sharing/dijit/dialog/MembershipRequestsDlg,arcgisonline/sharing/dijit/dialog/MdSliderSettingsDlg,arcgisonline/sharing/dijit/dialog/OpenMapDlg,arcgisonline/sharing/dijit/dialog/OpenPresentationDlg,arcgisonline/sharing/dijit/dialog/QueryLayerDlg,arcgisonline/sharing/dijit/dialog/RenameDlg,arcgisonline/sharing/dijit/dialog/RendererDlg,arcgisonline/sharing/dijit/dialog/SaveWebMapDlg,arcgisonline/sharing/dijit/dialog/SetIdentityProviderDlg,arcgisonline/sharing/dijit/dialog/ShareCheckDlg,arcgisonline/sharing/dijit/dialog/SharingDlg,arcgisonline/sharing/dijit/dialog/ShareMapDlg,arcgisonline/sharing/dijit/dialog/SubscriptionStatusDlg,arcgisonline/sharing/dijit/dialog/SymbolDlg,arcgisonline/sharing/dijit/dialog/TagsDlg,arcgisonline/sharing/dijit/dialog/TermsOfUseDlg,arcgisonline/sharing/dijit/dialog/TimeSettingsDlg,arcgisonline/sharing/dijit/dialog/UpdateItemDlg,arcgisonline/sharing/dijit/dialog/WaitingDlg,arcgisonline/sharing/dijit/_GalleryFiltersMixin,arcgisonline/sharing/dijit/Grid,arcgisonline/sharing/dijit/dialog/ItemPropertiesDlg,arcgisonline/sharing/dijit/dialog/BrowseItemsDlg,arcgisonline/sharing/dijit/dialog/_CreateItemUtilMixin,arcgisonline/sharing/dijit/dialog/ConfirmDialog,arcgisonline/sharing/dijit/dialog/AdvancedOfflineOptionsDlg,arcgisonline/sharing/dijit/dialog/getWFSConfig,arcgisonline/sharing/dijit/dialog/getWMTSConfig',
    ],
    function(c, g, f) {
        c.provide('arcgisonline.main');
        c.require('esri.main');
        c.require('dijit._base');
        c.require('dijit.form.DropDownButton');
        c.require('dijit.form.ComboButton');
        c.require('dijit.form.ToggleButton');
        c.require('dijit.form.HorizontalSlider');
        c.require('dijit.form.VerticalSlider');
        c.require('dijit.form.HorizontalRule');
        c.require('dijit.form.VerticalRule');
        c.require('dijit.form.HorizontalRuleLabels');
        c.require('dijit.form.VerticalRuleLabels');
        c.require('esri.map');
        c.require('esri.dijit.editing.Editor');
        c.require('esri.dijit.editing.TemplatePicker');
        c.require('esri.dijit.InfoWindow');
        c.require('esri.dijit.OverviewMap');
        c.require('esri.dijit.Attribution');
        c.require('esri.dijit.Scalebar');
        c.require('esri.dijit.Legend');
        c.require('esri.dijit.TimeSlider');
        c.require('esri.dijit.MultidimensionalSlider');
        c.require('esri.dijit.BasemapGallery');
        c.require('esri.dijit.HomeButton');
        c.require('esri.dijit.LocateButton');
        c.require('esri.dijit.Popup');
        c.require('esri.layers.graphics');
        c.require('esri.layers.agstiled');
        c.require('esri.layers.agsdynamic');
        c.require('esri.layers.agsimageservice');
        c.require('esri.layers.CSVLayer');
        c.require('esri.layers.StreamLayer');
        c.require('esri.layers.KMLLayer');
        c.require('esri.layers.FeatureLayer');
        c.require('esri.layers.VectorTileLayer');
        c.require('esri.layers.osm');
        c.require('esri.SnappingManager');
        c.require('esri.tasks.geometry');
        c.require('esri.tasks.identify');
        c.require('esri.tasks.locator');
        c.require('esri.toolbars.draw');
        c.require('esri.virtualearth.VETiledLayer');
        c.require('esri.virtualearth.VEGeocoder');
        c.require('esri.dijit.Geocoder');
        c.require('dojo.dnd.Moveable');
        c.require('dojo.parser');
        c.require('arcgisonline.map.classBreaks');
        c.require('arcgisonline.map.dynLayer');
        c.require('arcgisonline.map.edit');
        c.require('arcgisonline.map.featColl');
        c.require('arcgisonline.map.fileImport');
        c.require('arcgisonline.map.geocode');
        c.require('arcgisonline.map.geocodeReview');
        c.require('arcgisonline.map.geoRSS');
        c.require('arcgisonline.map.itemData');
        c.require('arcgisonline.map.layer');
        c.require('arcgisonline.map.kml');
        c.require('arcgisonline.map.mapNotes');
        c.require('arcgisonline.map.mapUtil');
        c.require('arcgisonline.map.role');
        c.require('arcgisonline.map.print');
        c.require('arcgisonline.map.popup');
        c.require('arcgisonline.map.save_open');
        c.require('arcgisonline.map.symbol');
        c.require('arcgisonline.map.table');
        c.require('arcgisonline.map.thumbnail');
        c.require('arcgisonline.map.time');
        c.require('arcgisonline.map.multiDimensions');
        c.require('arcgisonline.map.vectorTile');
        c.require('arcgisonline.map.webTile');
        c.require('arcgisonline.map.wms');
        c.require('arcgisonline.map.dijit.About');
        c.require('arcgisonline.map.dijit.AddContent');
        c.require('arcgisonline.map.dijit.Directions');
        c.require('arcgisonline.map.dijit.Edit');
        c.require('arcgisonline.map.dijit.Geocode');
        c.require('arcgisonline.map.dijit.LeftPanel');
        c.require('arcgisonline.map.dijit.Legend');
        c.require('arcgisonline.map.dijit.ManageTemplates');
        c.require('arcgisonline.map.dijit.MosaicRule');
        c.require('arcgisonline.map.dijit.PopupBuilder');
        c.require('arcgisonline.map.dijit.RendererLabels');
        c.require('arcgisonline.map.dijit.DefineAOI');
        c.require('arcgisonline.map.dijit.RenderingRule');
        c.require('arcgisonline.map.dijit.StructuredPopupWidget');
        c.require('arcgisonline.map.dijit.TOC');
        c.require('arcgisonline.map.dijit.MultidimensionalFilter');
        c.require('arcgisonline.map.dijit.renderer.AttributeTransparency');
        c.require('arcgisonline.map.dijit.renderer.AttributeTransparencyDlg');
        c.require('arcgisonline.map.dijit.renderer.Color');
        c.require('arcgisonline.map.dijit.renderer.ColorGrid');
        c.require('arcgisonline.map.dijit.renderer.Gallery');
        c.require('arcgisonline.map.dijit.renderer.HeatMap');
        c.require('arcgisonline.map.dijit.renderer.MultiAttributes');
        c.require('arcgisonline.map.dijit.renderer.Simple');
        c.require('arcgisonline.map.dijit.renderer.Size');
        c.require('arcgisonline.map.dijit.renderer.SizeGrid');
        c.require('arcgisonline.map.dijit.renderer.SymbolStylerDlg');
        c.require('arcgisonline.map.dijit.renderer.UniqueValues');
        c.require('arcgisonline.map.dijit.renderer.UniqueValuesGrid');
        c.require('esri.tasks.RelationshipQuery');
        c.require('esri.tasks.StatisticDefinition');
        c.require('esri.tasks.PrintParameters');
        c.require('esri.tasks.LegendLayer');
        c.require('esri.tasks.GenerateRendererParameters');
        c.require('esri.tasks.ClassificationDefinition');
        c.require('esri.tasks.ClassBreaksDefinition');
        c.require('esri.tasks.UniqueValueDefinition');
        c.require('esri.tasks.ColorRamp');
        c.require('esri.tasks.AlgorithmicColorRamp');
        c.require('esri.tasks.MultipartColorRamp');
        c.require('esri.tasks.RouteTask');
        c.require('esri.tasks.RouteParameters');
        c.require('esri.tasks.RouteResult');
        c.require('esri.tasks.NAMessage');
        c.require('esri.tasks.NATypes');
        c.require('esri.tasks.DirectionsFeatureSet');
        c.require('esri.layers.wmts');
        c.require('esri.layers.WMTSLayer');
        c.require('esri.layers.WMTSLayerInfo');
        c.require('esri.dijit.Directions');
        c.require('dijit.layout.AccordionPane');
        c.require('dojox.data.QueryReadStore');
        c.require('arcgisonline.sharing.util');
        c.require('arcgisonline.sharing.utilShare');
        c.require('arcgisonline.sharing.geow.Account');
        c.require('arcgisonline.sharing.geow.Community');
        c.require('arcgisonline.sharing.geow.Geow');
        c.require('arcgisonline.sharing.geow.MemberReadStore');
        c.require('arcgisonline.sharing.geow.QueryReadStore');
        c.require('arcgisonline.sharing.geow.TooltipQueryReadStore');
        c.require('dijit.Dialog');
        c.require('dijit.form.ComboBox');
        c.require('dijit.layout.TabContainer');
        c.require('arcgisonline.sharing.dijit.ArcGISOnlineServicesGrid');
        c.require('arcgisonline.sharing.dijit.ArcGISServerServicesGrid');
        c.require('arcgisonline.sharing.dijit.BasemapGallery');
        c.require('arcgisonline.sharing.dijit.BasemapGalleryGrid');
        c.require('arcgisonline.sharing.dijit.Button');
        c.require('arcgisonline.sharing.dijit.ComboBox');
        c.require('arcgisonline.sharing.dijit.DataGrid');
        c.require('arcgisonline.sharing.dijit.DropDownButton');
        c.require('arcgisonline.sharing.dijit.Error');
        c.require('arcgisonline.sharing.dijit.FeatureLayerQueryResult');
        c.require('arcgisonline.sharing.dijit.FeatureLayerQueryStore');
        c.require('arcgisonline.sharing.dijit.GoogleServicesGrid');
        c.require('arcgisonline.sharing.dijit.GroupMembershipRequestsGrid');
        c.require('arcgisonline.sharing.dijit.HelpManager');
        c.require('arcgisonline.sharing.dijit.OrganizationSetup');
        c.require('arcgisonline.sharing.dijit.OrganizationStatus');
        c.require('arcgisonline.sharing.dijit.Troubleshoot');
        c.require('arcgisonline.sharing.dijit.SingleFilter');
        c.require('arcgisonline.sharing.dijit.SingleInteractiveFilter');
        c.require('arcgisonline.sharing.dijit.UserProfile');
        c.require('arcgisonline.sharing.dijit.dialog.AddLayerFromFileDlg');
        c.require('arcgisonline.sharing.dijit.dialog.AddLayerFromUrlDlg');
        c.require('arcgisonline.sharing.dijit.dialog.BrowseLayersDlg');
        c.require('arcgisonline.sharing.dijit.dialog.CsvLocationDlg');
        c.require('arcgisonline.sharing.dijit.dialog.DeleteWarningDlg');
        c.require('arcgisonline.sharing.dijit.dialog.ExportDlg');
        c.require('arcgisonline.sharing.dijit.dialog.ExtentDlg');
        c.require('arcgisonline.sharing.dijit.dialog.FeatureTemplateDlg');
        c.require('arcgisonline.sharing.dijit.dialog.FieldsDlg');
        c.require('arcgisonline.sharing.dijit.dialog.FilterDlg');
        c.require('arcgisonline.sharing.dijit.dialog.FeatureTypeDlg');
        c.require('arcgisonline.sharing.dijit.dialog.GeneralDlg');
        c.require('arcgisonline.sharing.dijit.dialog.InvitationsDlg');
        c.require('arcgisonline.sharing.dijit.dialog.InviteAccountUsersDlg');
        c.require('arcgisonline.sharing.dijit.dialog.JoinGroupDlg');
        c.require('arcgisonline.sharing.dijit.dialog.ManageSubscriptionDlg');
        c.require('arcgisonline.sharing.dijit.dialog.ManageTilesDlg');
        c.require('arcgisonline.sharing.dijit.dialog.MapSettingsDlg');
        c.require('arcgisonline.sharing.dijit.dialog.MapNotesDlg');
        c.require('arcgisonline.sharing.dijit.dialog.MembershipRequestsDlg');
        c.require('arcgisonline.sharing.dijit.dialog.MdSliderSettingsDlg');
        c.require('arcgisonline.sharing.dijit.dialog.OpenMapDlg');
        c.require('arcgisonline.sharing.dijit.dialog.OpenPresentationDlg');
        c.require('arcgisonline.sharing.dijit.dialog.QueryLayerDlg');
        c.require('arcgisonline.sharing.dijit.dialog.RenameDlg');
        c.require('arcgisonline.sharing.dijit.dialog.RendererDlg');
        c.require('arcgisonline.sharing.dijit.dialog.SaveWebMapDlg');
        c.require('arcgisonline.sharing.dijit.dialog.SetIdentityProviderDlg');
        c.require('arcgisonline.sharing.dijit.dialog.ShareCheckDlg');
        c.require('arcgisonline.sharing.dijit.dialog.SharingDlg');
        c.require('arcgisonline.sharing.dijit.dialog.ShareMapDlg');
        c.require('arcgisonline.sharing.dijit.dialog.SubscriptionStatusDlg');
        c.require('arcgisonline.sharing.dijit.dialog.SymbolDlg');
        c.require('arcgisonline.sharing.dijit.dialog.TagsDlg');
        c.require('arcgisonline.sharing.dijit.dialog.TermsOfUseDlg');
        c.require('arcgisonline.sharing.dijit.dialog.TimeSettingsDlg');
        c.require('arcgisonline.sharing.dijit.dialog.UpdateItemDlg');
        c.require('arcgisonline.sharing.dijit.dialog.WaitingDlg');
        c.require('arcgisonline.sharing.dijit._GalleryFiltersMixin');
        c.require('arcgisonline.sharing.dijit.Grid');
        c.require('arcgisonline.sharing.dijit.dialog.ItemPropertiesDlg');
        c.require('arcgisonline.sharing.dijit.dialog.BrowseItemsDlg');
        c.require('arcgisonline.sharing.dijit.dialog._CreateItemUtilMixin');
        c.require('arcgisonline.sharing.dijit.dialog.ConfirmDialog');
        c.require('arcgisonline.sharing.dijit.dialog.AdvancedOfflineOptionsDlg');
        c.require('arcgisonline.sharing.dijit.dialog.getWFSConfig');
        c.require('arcgisonline.sharing.dijit.dialog.getWMTSConfig');
    }
);